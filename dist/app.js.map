{"version":3,"file":"app.js","mappings":"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AA+B,6BAC/BgB,cAAe,eACfC,cAAe,eACf4M,cAAe,eACftM,iBAAkB,iBAClBC,qBAAsB,qBACtBI,sBAAuB,sBACvBO,YAAa,aACb1B,gBAAiB,iBACjB63C,oBAAqB,oBACrB51C,mBAAoB,mBACpBV,aAAc,cACdW,gBAAiB,gBACjBzD,mBAAoB,oBACpBguB,MAAO,QACPnrB,KAAM,OACNzhB,MAAO,QACPsiB,iBAAkB,kBAClBsF,YAAa,aACb/C,mBAAoB,oBACpBJ,YAAa,aACbqI,aAAc,cACd3H,YAAa,cACb0C,IAAK,MACLzH,sBAAuB,sBACvBI,sBAAuB,sBACvBH,sBAAuB,sBACvB/C,qBAAsB,gBACtBC,qBAAsB,gBACtBC,qBAAsB,iBAGxB34D,EAAQg+D,YAAc,CACpB8B,MAAO,QACPM,UAAW,YACXD,gBAAiB,iBACjB7P,MAAO,QACP8N,QAAS,UACTsB,UAAW,YAcb1/D,EAAQ2zD,aAAe++C,EAAU,CAAC,OAAQ,UAAW,eAAgB,UAAW,aAyDhF1yG,EAAQk+D,SAAWw0C,EAAU,CAC3B,QACA,UACA,6BACA,6BACA,6BACA,eACA,eACA,eACA,gBACA,gBACA,mBACA,sBACA,sBACA,sBACA,4BACA,oBACA,oBACA,oBACA,gBACA,mBACA,sBACA,iBACA,iBACA,iBACA,sBACA,iBACA,iBACA,iBACA,sBACA,uBACA,0BACA,8BACA,gCACA,gBACA,gBACA,gBACA,mBACA,uBACA,wBACA,cACA,kBACA,eACA,qBACA,sBACA,kBACA,qBACA,wBACA,wBACA,wBACA,0BAqBF1yG,EAAQiyD,aAAe,CACrB,2BACA,wBACA,4BACA,4BACA,MACA,cACA,QACA,WACA,SACA,cACA,WACA,oBA8BFjyD,EAAQu/F,aAAe,CACrB,UACA,gBACA,mBACA,OACA,sBACA,sBACA,yBACA,oBACA,kCACA,yCACA,yCACA,yCACA,qBACA,KACA,+BACA,8BACA,+CACA,6CACA,iBACA,QACA,sBACA,yBACA,yBAUFv/F,EAAQw/F,mBAAqBx/F,EAAQu/F,aAAal8E,QAChDrgB,GAAQA,IAAS,CAA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","sources":["webpack://mooncord/./clients/discordClient.js","webpack://mooncord/./clients/moonrakerClient.js","webpack://mooncord/./discord/buttons/index.js","webpack://mooncord/./discord/buttons/klipperRestart.js","webpack://mooncord/./discord/buttons/listFiles.js","webpack://mooncord/./discord/buttons/printJob.js","webpack://mooncord/./discord/buttons/printJobStart.js","webpack://mooncord/./discord/buttons/toPrintList.js","webpack://mooncord/./discord/buttons/updateSystem.js","webpack://mooncord/./discord/commands/admin.js","webpack://mooncord/./discord/commands/editChannel.js","webpack://mooncord/./discord/commands/emergencyStop.js","webpack://mooncord/./discord/commands/execute.js","webpack://mooncord/./discord/commands/fileInfo.js","webpack://mooncord/./discord/commands/getLog.js","webpack://mooncord/./discord/commands/getUserId.js","webpack://mooncord/./discord/commands/index.js","webpack://mooncord/./discord/commands/info.js","webpack://mooncord/./discord/commands/listFiles.js","webpack://mooncord/./discord/commands/loadInfo.js","webpack://mooncord/./discord/commands/notify.js","webpack://mooncord/./discord/commands/printJob.js","webpack://mooncord/./discord/commands/status.js","webpack://mooncord/./discord/commands/temp.js","webpack://mooncord/./discord/commands/timelapse.js","webpack://mooncord/./discord/commands|sync|/^.*/mooncord/.json$","webpack://mooncord/./discord/events/buttonClick.js","webpack://mooncord/./discord/events/index.js","webpack://mooncord/./discord/events/selectClick.js","webpack://mooncord/./discord/events/upload.js","webpack://mooncord/./discord/events|sync|/^.*/mooncord/.json$","webpack://mooncord/./discord/selection/index.js","webpack://mooncord/./discord/selection/viewPrintJob.js","webpack://mooncord/./locales|sync|/^/.*/.json$","webpack://mooncord/./node_modules/@discordjs/builders/dist/index.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/Assertions.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/SlashCommandBuilder.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/SlashCommandSubcommands.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionBase.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptionWithChoices.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/CommandOptions.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/mixins/NameAndDescription.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/boolean.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/channel.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/integer.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/mentionable.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/role.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/string.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/interactions/slashCommands/options/user.js","webpack://mooncord/./node_modules/@discordjs/builders/dist/messages/formatters.js","webpack://mooncord/./node_modules/@discordjs/collection/dist/index.js","webpack://mooncord/./node_modules/@discordjs/form-data/lib/form_data.js","webpack://mooncord/./node_modules/@discordjs/form-data/lib/populate.js","webpack://mooncord/./node_modules/@sapphire/async-queue/dist/index.js","webpack://mooncord/./node_modules/@sindresorhus/is/dist/index.js","webpack://mooncord/./node_modules/ansi-styles/index.js","webpack://mooncord/./node_modules/async-wait-until/dist/index.esm.js","webpack://mooncord/./node_modules/asynckit/index.js","webpack://mooncord/./node_modules/asynckit/lib/abort.js","webpack://mooncord/./node_modules/asynckit/lib/async.js","webpack://mooncord/./node_modules/asynckit/lib/defer.js","webpack://mooncord/./node_modules/asynckit/lib/iterate.js","webpack://mooncord/./node_modules/asynckit/lib/state.js","webpack://mooncord/./node_modules/asynckit/lib/terminator.js","webpack://mooncord/./node_modules/asynckit/parallel.js","webpack://mooncord/./node_modules/asynckit/serial.js","webpack://mooncord/./node_modules/asynckit/serialOrdered.js","webpack://mooncord/./node_modules/axios/index.js","webpack://mooncord/./node_modules/axios/lib/adapters/http.js","webpack://mooncord/./node_modules/axios/lib/adapters/xhr.js","webpack://mooncord/./node_modules/axios/lib/axios.js","webpack://mooncord/./node_modules/axios/lib/cancel/Cancel.js","webpack://mooncord/./node_modules/axios/lib/cancel/CancelToken.js","webpack://mooncord/./node_modules/axios/lib/cancel/isCancel.js","webpack://mooncord/./node_modules/axios/lib/core/Axios.js","webpack://mooncord/./node_modules/axios/lib/core/InterceptorManager.js","webpack://mooncord/./node_modules/axios/lib/core/buildFullPath.js","webpack://mooncord/./node_modules/axios/lib/core/createError.js","webpack://mooncord/./node_modules/axios/lib/core/dispatchRequest.js","webpack://mooncord/./node_modules/axios/lib/core/enhanceError.js","webpack://mooncord/./node_modules/axios/lib/core/mergeConfig.js","webpack://mooncord/./node_modules/axios/lib/core/settle.js","webpack://mooncord/./node_modules/axios/lib/core/transformData.js","webpack://mooncord/./node_modules/axios/lib/defaults.js","webpack://mooncord/./node_modules/axios/lib/helpers/bind.js","webpack://mooncord/./node_modules/axios/lib/helpers/buildURL.js","webpack://mooncord/./node_modules/axios/lib/helpers/combineURLs.js","webpack://mooncord/./node_modules/axios/lib/helpers/cookies.js","webpack://mooncord/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://mooncord/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://mooncord/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://mooncord/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://mooncord/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://mooncord/./node_modules/axios/lib/helpers/spread.js","webpack://mooncord/./node_modules/axios/lib/helpers/validator.js","webpack://mooncord/./node_modules/axios/lib/utils.js","webpack://mooncord/./node_modules/bufferutil/fallback.js","webpack://mooncord/./node_modules/bufferutil/index.js","webpack://mooncord/./node_modules/callsites/index.js","webpack://mooncord/./node_modules/chalk/source/index.js","webpack://mooncord/./node_modules/chalk/source/templates.js","webpack://mooncord/./node_modules/chalk/source/util.js","webpack://mooncord/./node_modules/color-convert/conversions.js","webpack://mooncord/./node_modules/color-convert/index.js","webpack://mooncord/./node_modules/color-convert/route.js","webpack://mooncord/./node_modules/color-name/index.js","webpack://mooncord/./node_modules/colors/lib/colors.js","webpack://mooncord/./node_modules/colors/lib/custom/trap.js","webpack://mooncord/./node_modules/colors/lib/custom/zalgo.js","webpack://mooncord/./node_modules/colors/lib/extendStringPrototype.js","webpack://mooncord/./node_modules/colors/lib/index.js","webpack://mooncord/./node_modules/colors/lib/maps/america.js","webpack://mooncord/./node_modules/colors/lib/maps/rainbow.js","webpack://mooncord/./node_modules/colors/lib/maps/random.js","webpack://mooncord/./node_modules/colors/lib/maps/zebra.js","webpack://mooncord/./node_modules/colors/lib/styles.js","webpack://mooncord/./node_modules/colors/lib/system/has-flag.js","webpack://mooncord/./node_modules/colors/lib/system/supports-colors.js","webpack://mooncord/./node_modules/combined-stream/lib/combined_stream.js","webpack://mooncord/./node_modules/debug/src/browser.js","webpack://mooncord/./node_modules/debug/src/common.js","webpack://mooncord/./node_modules/debug/src/index.js","webpack://mooncord/./node_modules/debug/src/node.js","webpack://mooncord/./node_modules/delayed-stream/lib/delayed_stream.js","webpack://mooncord/./node_modules/discord-api-types/gateway/common.js","webpack://mooncord/./node_modules/discord-api-types/gateway/v9.js","webpack://mooncord/./node_modules/discord-api-types/globals.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/_interactions/base.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/_interactions/messageComponents.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/_interactions/ping.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/_interactions/responses.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/_interactions/slashCommands.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/application.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/auditLog.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/channel.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/emoji.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/gateway.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/guild.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/index.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/interactions.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/invite.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/oauth2.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/permissions.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/stageInstance.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/sticker.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/teams.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/template.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/user.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/voice.js","webpack://mooncord/./node_modules/discord-api-types/payloads/v9/webhook.js","webpack://mooncord/./node_modules/discord-api-types/rest/common.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/auditLog.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/channel.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/emoji.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/gateway.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/guild.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/index.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/interactions.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/invite.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/oauth2.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/stageInstance.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/sticker.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/template.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/user.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/voice.js","webpack://mooncord/./node_modules/discord-api-types/rest/v9/webhook.js","webpack://mooncord/./node_modules/discord-api-types/rpc/v9.js","webpack://mooncord/./node_modules/discord-api-types/utils/v9.js","webpack://mooncord/./node_modules/discord-api-types/v9.js","webpack://mooncord/./node_modules/discord.js/src/WebSocket.js","webpack://mooncord/./node_modules/discord.js/src/client/BaseClient.js","webpack://mooncord/./node_modules/discord.js/src/client/Client.js","webpack://mooncord/./node_modules/discord.js/src/client/WebhookClient.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/Action.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/ActionsManager.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/ChannelCreate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/ChannelDelete.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/ChannelUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildBanAdd.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildBanRemove.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildChannelsPositionUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildDelete.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildEmojiCreate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildEmojiDelete.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildEmojiUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildEmojisUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildIntegrationsUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildMemberRemove.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildMemberUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildRoleCreate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildRoleDelete.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildRoleUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildRolesPositionUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildStickerCreate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildStickerDelete.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildStickerUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildStickersUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/GuildUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/InteractionCreate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/InviteCreate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/InviteDelete.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/MessageCreate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/MessageDelete.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/MessageDeleteBulk.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/MessageReactionAdd.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/MessageReactionRemove.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/MessageReactionRemoveAll.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/MessageReactionRemoveEmoji.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/MessageUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/PresenceUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/StageInstanceCreate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/StageInstanceDelete.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/StageInstanceUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/ThreadCreate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/ThreadDelete.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/ThreadListSync.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/ThreadMemberUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/ThreadMembersUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/TypingStart.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/UserUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/VoiceStateUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions/WebhooksUpdate.js","webpack://mooncord/./node_modules/discord.js/src/client/actions|sync|/^/.*$","webpack://mooncord/./node_modules/discord.js/src/client/voice/ClientVoiceManager.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/WebSocketManager.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/WebSocketShard.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_CREATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_DELETE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_CREATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_DELETE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_PINS_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/CHANNEL_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_ADD.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_REMOVE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_CREATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_DELETE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_EMOJIS_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_INTEGRATIONS_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBERS_CHUNK.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_ADD.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_REMOVE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_CREATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_DELETE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_STICKERS_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/GUILD_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/INTERACTION_CREATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/INVITE_CREATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/INVITE_DELETE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_CREATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE_BULK.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_ADD.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_ALL.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_EMOJI.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/MESSAGE_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/PRESENCE_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/READY.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/RESUMED.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_CREATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_DELETE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/THREAD_CREATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/THREAD_DELETE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/THREAD_LIST_SYNC.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBERS_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBER_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/THREAD_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/TYPING_START.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/USER_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/VOICE_SERVER_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/VOICE_STATE_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/WEBHOOKS_UPDATE.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers/index.js","webpack://mooncord/./node_modules/discord.js/src/client/websocket/handlers|sync|/^/.*/.js$","webpack://mooncord/./node_modules/discord.js/src/errors/DJSError.js","webpack://mooncord/./node_modules/discord.js/src/errors/Messages.js","webpack://mooncord/./node_modules/discord.js/src/errors/index.js","webpack://mooncord/./node_modules/discord.js/src/index.js","webpack://mooncord/./node_modules/discord.js/src/managers/ApplicationCommandManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/ApplicationCommandPermissionsManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/BaseGuildEmojiManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/BaseManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/CachedManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/ChannelManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/DataManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/GuildApplicationCommandManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/GuildBanManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/GuildChannelManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/GuildEmojiManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/GuildEmojiRoleManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/GuildInviteManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/GuildManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/GuildMemberManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/GuildMemberRoleManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/GuildStickerManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/MessageManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/PermissionOverwriteManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/PresenceManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/ReactionManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/ReactionUserManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/RoleManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/StageInstanceManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/ThreadManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/ThreadMemberManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/UserManager.js","webpack://mooncord/./node_modules/discord.js/src/managers/VoiceStateManager.js","webpack://mooncord/./node_modules/discord.js/src/rest/APIRequest.js","webpack://mooncord/./node_modules/discord.js/src/rest/APIRouter.js","webpack://mooncord/./node_modules/discord.js/src/rest/DiscordAPIError.js","webpack://mooncord/./node_modules/discord.js/src/rest/HTTPError.js","webpack://mooncord/./node_modules/discord.js/src/rest/RESTManager.js","webpack://mooncord/./node_modules/discord.js/src/rest/RateLimitError.js","webpack://mooncord/./node_modules/discord.js/src/rest/RequestHandler.js","webpack://mooncord/./node_modules/discord.js/src/sharding/Shard.js","webpack://mooncord/./node_modules/discord.js/src/sharding/ShardClientUtil.js","webpack://mooncord/./node_modules/discord.js/src/sharding/ShardingManager.js","webpack://mooncord/./node_modules/discord.js/src/structures/AnonymousGuild.js","webpack://mooncord/./node_modules/discord.js/src/structures/ApplicationCommand.js","webpack://mooncord/./node_modules/discord.js/src/structures/Base.js","webpack://mooncord/./node_modules/discord.js/src/structures/BaseCommandInteraction.js","webpack://mooncord/./node_modules/discord.js/src/structures/BaseGuild.js","webpack://mooncord/./node_modules/discord.js/src/structures/BaseGuildEmoji.js","webpack://mooncord/./node_modules/discord.js/src/structures/BaseGuildTextChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/BaseGuildVoiceChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/BaseMessageComponent.js","webpack://mooncord/./node_modules/discord.js/src/structures/ButtonInteraction.js","webpack://mooncord/./node_modules/discord.js/src/structures/CategoryChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/Channel.js","webpack://mooncord/./node_modules/discord.js/src/structures/ClientApplication.js","webpack://mooncord/./node_modules/discord.js/src/structures/ClientPresence.js","webpack://mooncord/./node_modules/discord.js/src/structures/ClientUser.js","webpack://mooncord/./node_modules/discord.js/src/structures/CommandInteraction.js","webpack://mooncord/./node_modules/discord.js/src/structures/CommandInteractionOptionResolver.js","webpack://mooncord/./node_modules/discord.js/src/structures/ContextMenuInteraction.js","webpack://mooncord/./node_modules/discord.js/src/structures/DMChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/Emoji.js","webpack://mooncord/./node_modules/discord.js/src/structures/Guild.js","webpack://mooncord/./node_modules/discord.js/src/structures/GuildAuditLogs.js","webpack://mooncord/./node_modules/discord.js/src/structures/GuildBan.js","webpack://mooncord/./node_modules/discord.js/src/structures/GuildChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/GuildEmoji.js","webpack://mooncord/./node_modules/discord.js/src/structures/GuildMember.js","webpack://mooncord/./node_modules/discord.js/src/structures/GuildPreview.js","webpack://mooncord/./node_modules/discord.js/src/structures/GuildPreviewEmoji.js","webpack://mooncord/./node_modules/discord.js/src/structures/GuildTemplate.js","webpack://mooncord/./node_modules/discord.js/src/structures/Integration.js","webpack://mooncord/./node_modules/discord.js/src/structures/IntegrationApplication.js","webpack://mooncord/./node_modules/discord.js/src/structures/Interaction.js","webpack://mooncord/./node_modules/discord.js/src/structures/InteractionCollector.js","webpack://mooncord/./node_modules/discord.js/src/structures/InteractionWebhook.js","webpack://mooncord/./node_modules/discord.js/src/structures/Invite.js","webpack://mooncord/./node_modules/discord.js/src/structures/InviteGuild.js","webpack://mooncord/./node_modules/discord.js/src/structures/InviteStageInstance.js","webpack://mooncord/./node_modules/discord.js/src/structures/Message.js","webpack://mooncord/./node_modules/discord.js/src/structures/MessageActionRow.js","webpack://mooncord/./node_modules/discord.js/src/structures/MessageAttachment.js","webpack://mooncord/./node_modules/discord.js/src/structures/MessageButton.js","webpack://mooncord/./node_modules/discord.js/src/structures/MessageCollector.js","webpack://mooncord/./node_modules/discord.js/src/structures/MessageComponentInteraction.js","webpack://mooncord/./node_modules/discord.js/src/structures/MessageEmbed.js","webpack://mooncord/./node_modules/discord.js/src/structures/MessageMentions.js","webpack://mooncord/./node_modules/discord.js/src/structures/MessagePayload.js","webpack://mooncord/./node_modules/discord.js/src/structures/MessageReaction.js","webpack://mooncord/./node_modules/discord.js/src/structures/MessageSelectMenu.js","webpack://mooncord/./node_modules/discord.js/src/structures/NewsChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/OAuth2Guild.js","webpack://mooncord/./node_modules/discord.js/src/structures/PartialGroupDMChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/PermissionOverwrites.js","webpack://mooncord/./node_modules/discord.js/src/structures/Presence.js","webpack://mooncord/./node_modules/discord.js/src/structures/ReactionCollector.js","webpack://mooncord/./node_modules/discord.js/src/structures/ReactionEmoji.js","webpack://mooncord/./node_modules/discord.js/src/structures/Role.js","webpack://mooncord/./node_modules/discord.js/src/structures/SelectMenuInteraction.js","webpack://mooncord/./node_modules/discord.js/src/structures/StageChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/StageInstance.js","webpack://mooncord/./node_modules/discord.js/src/structures/Sticker.js","webpack://mooncord/./node_modules/discord.js/src/structures/StickerPack.js","webpack://mooncord/./node_modules/discord.js/src/structures/StoreChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/Team.js","webpack://mooncord/./node_modules/discord.js/src/structures/TeamMember.js","webpack://mooncord/./node_modules/discord.js/src/structures/TextChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/ThreadChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/ThreadMember.js","webpack://mooncord/./node_modules/discord.js/src/structures/Typing.js","webpack://mooncord/./node_modules/discord.js/src/structures/User.js","webpack://mooncord/./node_modules/discord.js/src/structures/VoiceChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/VoiceRegion.js","webpack://mooncord/./node_modules/discord.js/src/structures/VoiceState.js","webpack://mooncord/./node_modules/discord.js/src/structures/Webhook.js","webpack://mooncord/./node_modules/discord.js/src/structures/WelcomeChannel.js","webpack://mooncord/./node_modules/discord.js/src/structures/WelcomeScreen.js","webpack://mooncord/./node_modules/discord.js/src/structures/Widget.js","webpack://mooncord/./node_modules/discord.js/src/structures/WidgetMember.js","webpack://mooncord/./node_modules/discord.js/src/structures/interfaces/Application.js","webpack://mooncord/./node_modules/discord.js/src/structures/interfaces/Collector.js","webpack://mooncord/./node_modules/discord.js/src/structures/interfaces/InteractionResponses.js","webpack://mooncord/./node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js","webpack://mooncord/./node_modules/discord.js/src/util/ActivityFlags.js","webpack://mooncord/./node_modules/discord.js/src/util/ApplicationFlags.js","webpack://mooncord/./node_modules/discord.js/src/util/BitField.js","webpack://mooncord/./node_modules/discord.js/src/util/Constants.js","webpack://mooncord/./node_modules/discord.js/src/util/DataResolver.js","webpack://mooncord/./node_modules/discord.js/src/util/Formatters.js","webpack://mooncord/./node_modules/discord.js/src/util/Intents.js","webpack://mooncord/./node_modules/discord.js/src/util/LimitedCollection.js","webpack://mooncord/./node_modules/discord.js/src/util/MessageFlags.js","webpack://mooncord/./node_modules/discord.js/src/util/Options.js","webpack://mooncord/./node_modules/discord.js/src/util/Permissions.js","webpack://mooncord/./node_modules/discord.js/src/util/SnowflakeUtil.js","webpack://mooncord/./node_modules/discord.js/src/util/SystemChannelFlags.js","webpack://mooncord/./node_modules/discord.js/src/util/ThreadMemberFlags.js","webpack://mooncord/./node_modules/discord.js/src/util/UserFlags.js","webpack://mooncord/./node_modules/discord.js/src/util/Util.js","webpack://mooncord/./node_modules/dot-prop/index.js","webpack://mooncord/./node_modules/follow-redirects/debug.js","webpack://mooncord/./node_modules/follow-redirects/index.js","webpack://mooncord/./node_modules/form-data/lib/form_data.js","webpack://mooncord/./node_modules/form-data/lib/populate.js","webpack://mooncord/./node_modules/has-flag/index.js","webpack://mooncord/./node_modules/is-obj/index.js","webpack://mooncord/./node_modules/is-typedarray/index.js","webpack://mooncord/./node_modules/is-unicode-supported/index.js","webpack://mooncord/./node_modules/lodash.isequal/index.js","webpack://mooncord/./node_modules/log-symbols/index.js","webpack://mooncord/./node_modules/mime-db/index.js","webpack://mooncord/./node_modules/mime-types/index.js","webpack://mooncord/./node_modules/ms/index.js","webpack://mooncord/./node_modules/node-gyp-build/index.js","webpack://mooncord/./node_modules/ow/dist/argument-error.js","webpack://mooncord/./node_modules/ow/dist/index.js","webpack://mooncord/./node_modules/ow/dist/modifiers.js","webpack://mooncord/./node_modules/ow/dist/operators/not.js","webpack://mooncord/./node_modules/ow/dist/predicates.js","webpack://mooncord/./node_modules/ow/dist/predicates/any.js","webpack://mooncord/./node_modules/ow/dist/predicates/array-buffer.js","webpack://mooncord/./node_modules/ow/dist/predicates/array.js","webpack://mooncord/./node_modules/ow/dist/predicates/base-predicate.js","webpack://mooncord/./node_modules/ow/dist/predicates/bigint.js","webpack://mooncord/./node_modules/ow/dist/predicates/boolean.js","webpack://mooncord/./node_modules/ow/dist/predicates/data-view.js","webpack://mooncord/./node_modules/ow/dist/predicates/date.js","webpack://mooncord/./node_modules/ow/dist/predicates/error.js","webpack://mooncord/./node_modules/ow/dist/predicates/map.js","webpack://mooncord/./node_modules/ow/dist/predicates/number.js","webpack://mooncord/./node_modules/ow/dist/predicates/object.js","webpack://mooncord/./node_modules/ow/dist/predicates/predicate.js","webpack://mooncord/./node_modules/ow/dist/predicates/set.js","webpack://mooncord/./node_modules/ow/dist/predicates/string.js","webpack://mooncord/./node_modules/ow/dist/predicates/typed-array.js","webpack://mooncord/./node_modules/ow/dist/predicates/weak-map.js","webpack://mooncord/./node_modules/ow/dist/predicates/weak-set.js","webpack://mooncord/./node_modules/ow/dist/test.js","webpack://mooncord/./node_modules/ow/dist/utils/generate-argument-error-message.js","webpack://mooncord/./node_modules/ow/dist/utils/generate-stack.js","webpack://mooncord/./node_modules/ow/dist/utils/has-items.js","webpack://mooncord/./node_modules/ow/dist/utils/infer-label.js","webpack://mooncord/./node_modules/ow/dist/utils/is-valid-identifier.js","webpack://mooncord/./node_modules/ow/dist/utils/match-shape.js","webpack://mooncord/./node_modules/ow/dist/utils/node/is-node.js","webpack://mooncord/./node_modules/ow/dist/utils/of-type-deep.js","webpack://mooncord/./node_modules/ow/dist/utils/of-type.js","webpack://mooncord/./node_modules/ow/dist/utils/random-id.js","webpack://mooncord/./node_modules/supports-color/index.js","webpack://mooncord/./node_modules/systeminformation/lib/audio.js","webpack://mooncord/./node_modules/systeminformation/lib/battery.js","webpack://mooncord/./node_modules/systeminformation/lib/bluetooth.js","webpack://mooncord/./node_modules/systeminformation/lib/cpu.js","webpack://mooncord/./node_modules/systeminformation/lib/docker.js","webpack://mooncord/./node_modules/systeminformation/lib/dockerSocket.js","webpack://mooncord/./node_modules/systeminformation/lib/filesystem.js","webpack://mooncord/./node_modules/systeminformation/lib/graphics.js","webpack://mooncord/./node_modules/systeminformation/lib/index.js","webpack://mooncord/./node_modules/systeminformation/lib/internet.js","webpack://mooncord/./node_modules/systeminformation/lib/memory.js","webpack://mooncord/./node_modules/systeminformation/lib/network.js","webpack://mooncord/./node_modules/systeminformation/lib/osinfo.js","webpack://mooncord/./node_modules/systeminformation/lib/printer.js","webpack://mooncord/./node_modules/systeminformation/lib/processes.js","webpack://mooncord/./node_modules/systeminformation/lib/system.js","webpack://mooncord/./node_modules/systeminformation/lib/usb.js","webpack://mooncord/./node_modules/systeminformation/lib/users.js","webpack://mooncord/./node_modules/systeminformation/lib/util.js","webpack://mooncord/./node_modules/systeminformation/lib/virtualbox.js","webpack://mooncord/./node_modules/systeminformation/lib/wifi.js","webpack://mooncord/./node_modules/ts-mixer/dist/esm/index.js","webpack://mooncord/./node_modules/tslib/tslib.es6.js","webpack://mooncord/./node_modules/typedarray-to-buffer/index.js","webpack://mooncord/./node_modules/utf-8-validate/fallback.js","webpack://mooncord/./node_modules/utf-8-validate/index.js","webpack://mooncord/./node_modules/vali-date/index.js","webpack://mooncord/./node_modules/websocket/index.js","webpack://mooncord/./node_modules/websocket/lib/Deprecation.js","webpack://mooncord/./node_modules/websocket/lib/W3CWebSocket.js","webpack://mooncord/./node_modules/websocket/lib/WebSocketClient.js","webpack://mooncord/./node_modules/websocket/lib/WebSocketConnection.js","webpack://mooncord/./node_modules/websocket/lib/WebSocketFrame.js","webpack://mooncord/./node_modules/websocket/lib/WebSocketRequest.js","webpack://mooncord/./node_modules/websocket/lib/WebSocketRouter.js","webpack://mooncord/./node_modules/websocket/lib/WebSocketRouterRequest.js","webpack://mooncord/./node_modules/websocket/lib/WebSocketServer.js","webpack://mooncord/./node_modules/websocket/lib/utils.js","webpack://mooncord/./node_modules/websocket/lib/version.js","webpack://mooncord/./node_modules/websocket/lib/websocket.js","webpack://mooncord/./node_modules/websocket/node_modules/debug/src/browser.js","webpack://mooncord/./node_modules/websocket/node_modules/debug/src/debug.js","webpack://mooncord/./node_modules/websocket/node_modules/debug/src/index.js","webpack://mooncord/./node_modules/websocket/node_modules/debug/src/node.js","webpack://mooncord/./node_modules/websocket/node_modules/ms/index.js","webpack://mooncord/./node_modules/websocket/vendor/FastBufferList.js","webpack://mooncord/./node_modules/ws/index.js","webpack://mooncord/./node_modules/ws/lib/buffer-util.js","webpack://mooncord/./node_modules/ws/lib/constants.js","webpack://mooncord/./node_modules/ws/lib/event-target.js","webpack://mooncord/./node_modules/ws/lib/extension.js","webpack://mooncord/./node_modules/ws/lib/limiter.js","webpack://mooncord/./node_modules/ws/lib/permessage-deflate.js","webpack://mooncord/./node_modules/ws/lib/receiver.js","webpack://mooncord/./node_modules/ws/lib/sender.js","webpack://mooncord/./node_modules/ws/lib/stream.js","webpack://mooncord/./node_modules/ws/lib/validation.js","webpack://mooncord/./node_modules/ws/lib/websocket-server.js","webpack://mooncord/./node_modules/ws/lib/websocket.js","webpack://mooncord/./node_modules/yaeti/index.js","webpack://mooncord/./node_modules/yaeti/lib/Event.js","webpack://mooncord/./node_modules/yaeti/lib/EventTarget.js","webpack://mooncord/./utils/chatUtil.js","webpack://mooncord/./utils/databaseUtil.js","webpack://mooncord/./utils/handlerUtil.js","webpack://mooncord/./utils/hsComponents/cpu.js","webpack://mooncord/./utils/hsComponents/disk.js","webpack://mooncord/./utils/hsComponents/index.js","webpack://mooncord/./utils/hsComponents/os.js","webpack://mooncord/./utils/hsComponents/partitions.js","webpack://mooncord/./utils/hsComponents/ram.js","webpack://mooncord/./utils/loadUtil.js","webpack://mooncord/./utils/localeUtil.js","webpack://mooncord/./utils/migrationUtil.js","webpack://mooncord/./utils/miscUtil.js","webpack://mooncord/./utils/permissionUtil.js","webpack://mooncord/./utils/statusUtil.js","webpack://mooncord/./utils/thumbnailUtil.js","webpack://mooncord/./utils/timelapseUtil.js","webpack://mooncord/./utils/variablesUtil.js","webpack://mooncord/./utils/webcamUtil.js","webpack://mooncord/./utils|sync","webpack://mooncord/./utils|sync|/^.*/mooncord/.json$","webpack://mooncord/./websocket-events/gcodeCommands.js","webpack://mooncord/./websocket-events/gcodeMetaData.js","webpack://mooncord/./websocket-events/gcodeResponse.js","webpack://mooncord/./websocket-events/index.js","webpack://mooncord/./websocket-events/klipperState.js","webpack://mooncord/./websocket-events/klipperStates.js","webpack://mooncord/./websocket-events/moonrakerThrottle.js","webpack://mooncord/./websocket-events/moonrakerUpdate.js","webpack://mooncord/./websocket-events/objectHandlers/displayStatus.js","webpack://mooncord/./websocket-events/objectHandlers/gcodeMove.js","webpack://mooncord/./websocket-events/objectHandlers/index.js","webpack://mooncord/./websocket-events/objectHandlers/mcu.js","webpack://mooncord/./websocket-events/objectHandlers/printStats.js","webpack://mooncord/./websocket-events/objectHandlers/temp.js","webpack://mooncord/./websocket-events/objectHandlers|sync|/^.*/mooncord/.json$","webpack://mooncord/./websocket-events/subscribeNotification.js","webpack://mooncord/./websocket-events/subscribeRespond.js","webpack://mooncord/./websocket-events/versions.js","webpack://mooncord/./websocket-events|sync|/^.*/mooncord/.json$","webpack://mooncord/../mooncord|sync|/^.*/mooncord/.json$","webpack://mooncord/external commonjs \"sharp\"","webpack://mooncord/external node-commonjs \"assert\"","webpack://mooncord/external node-commonjs \"buffer\"","webpack://mooncord/external node-commonjs \"child_process\"","webpack://mooncord/external node-commonjs \"crypto\"","webpack://mooncord/external node-commonjs \"events\"","webpack://mooncord/external node-commonjs \"fs\"","webpack://mooncord/external node-commonjs \"http\"","webpack://mooncord/external node-commonjs \"https\"","webpack://mooncord/external node-commonjs \"net\"","webpack://mooncord/external node-commonjs \"os\"","webpack://mooncord/external node-commonjs \"path\"","webpack://mooncord/external node-commonjs \"stream\"","webpack://mooncord/external node-commonjs \"tls\"","webpack://mooncord/external node-commonjs \"tty\"","webpack://mooncord/external node-commonjs \"url\"","webpack://mooncord/external node-commonjs \"util\"","webpack://mooncord/external node-commonjs \"worker_threads\"","webpack://mooncord/external node-commonjs \"zlib\"","webpack://mooncord/./node_modules/node-fetch/lib/index.mjs","webpack://mooncord/webpack/bootstrap","webpack://mooncord/webpack/runtime/define property getters","webpack://mooncord/webpack/runtime/hasOwnProperty shorthand","webpack://mooncord/webpack/runtime/make namespace object","webpack://mooncord/webpack/runtime/node module decorator","webpack://mooncord/./mooncord.js"],"sourcesContent":["const { waitUntil } = require('async-wait-until')\r\nconst Discord = require('discord.js')\r\n\r\nconst commands = require('../discord/commands')\r\nconst events = require('../discord/events')\r\nconst variables = require('../utils/variablesUtil')\r\n\r\nconst discordClient = new Discord.Client({\r\n  intents: [\r\n    Discord.Intents.FLAGS.DIRECT_MESSAGES,\r\n    Discord.Intents.FLAGS.DIRECT_MESSAGE_REACTIONS,\r\n    Discord.Intents.FLAGS.GUILDS,\r\n    Discord.Intents.FLAGS.GUILD_MESSAGES,\r\n    Discord.Intents.FLAGS.GUILD_MESSAGE_REACTIONS,\r\n    Discord.Intents.FLAGS.GUILD_INTEGRATIONS\r\n  ]\r\n})\r\n\r\nlet connected = false\r\nlet token\r\n\r\nfunction enableEvents() {\r\n  console.log('  Enable Discord Events'.statusmessage)\r\n\r\n  events(discordClient)\r\n  commands.addCommandEvents(discordClient)\r\n}\r\n\r\nfunction loginBot() {\r\n  console.log('  Connect Discord Bot'.statusmessage)\r\n\r\n  discordClient.login(token)\r\n\r\n  discordClient.on('ready', () => {\r\n    connected = true\r\n    variables.setInviteUrl(`https://discord.com/oauth2/authorize?client_id=${discordClient.user.id}&permissions=3422944320&scope=bot%20applications.commands`)\r\n    console.log(`  ${'Discordbot Connected'.success}\r\n    ${'Name:'.successname} ${(discordClient.user.tag).successvalue}\r\n    ${'Invite:'.successname} ${variables.getInviteUrl()}`.successvalue)\r\n  })\r\n}\r\n\r\nfunction enableCommands(useconsole) {\r\n  if (useconsole) {\r\n    console.log('  Sync Slash Commands'.statusmessage)\r\n  }\r\n  commands.loadSlashCommands(discordClient)\r\n}\r\n\r\nmodule.exports = {}\r\nmodule.exports.init = async (discordToken) => {\r\n  token = discordToken\r\n\r\n  await waitUntil(() => variables.dump !== variables.dumpRaw, { timeout: Number.POSITIVE_INFINITY, intervalBetweenAttempts: 1500 })\r\n  await waitUntil(() => Object.keys(variables.getMCUList()).length > 0, { timeout: Number.POSITIVE_INFINITY, intervalBetweenAttempts: 1500 })\r\n  \r\n  console.log(`\\n\r\n  ${\r\n  ` ___  _                   _\r\n  |   \\\\(_)___ __ ___ _ _ __| |\r\n  | |) | (_-</ _/ _ \\\\ '_/ _\\` |\r\n  |___/|_/__/\\\\__\\\\___/_| \\\\__,_|`.statustitle}\r\n                              `)\r\n  loginBot()\r\n  await waitUntil(() => connected === true, { timeout: Number.POSITIVE_INFINITY })\r\n  enableCommands( true )\r\n  enableEvents()\r\n}\r\nmodule.exports.isConnected = connected \r\nmodule.exports.getClient = discordClient\r\n","const WebSocketClient = require('websocket').client\r\nconst { waitUntil } = require('async-wait-until')\r\nconst axios = require('axios')\r\nconst logSymbols = require('log-symbols')\r\n\r\nconst database = require('../utils/databaseUtil')\r\nconst status = require('../utils/statusUtil')\r\nconst variables = require('../utils/variablesUtil')\r\nconst events = require('../websocket-events')\r\n\r\nconst client = new WebSocketClient()\r\n\r\nlet wsUrl\r\nlet url\r\nlet token\r\nlet oneShotToken\r\n\r\nlet WSconnection\r\n\r\nfunction enableEvents(discordClient) {\r\n  console.log('  Enable Moonraker Events'.statusmessage)\r\n\r\n  client.on('connect', (connection) => {\r\n    const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n    console.log('  Moonraker Client Connected'.success)\r\n\r\n    WSconnection = connection\r\n\r\n    connection.on('message', handleSubscription)\r\n\r\n    connection.on('message', (message) => {\r\n      for (const event in events) {\r\n        events[event](message, connection, discordClient.getClient, database)\r\n      }\r\n    })\r\n\r\n    console.log('  Sent initial Moonraker commands'.statusmessage)\r\n\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"machine.update.status\", \"params\":{\"refresh\": \"true\"}, \"id\": ${id}}`)\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"printer.info\", \"id\": ${id}}`)\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"server.info\", \"id\": ${id}}`)\r\n\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"printer.objects.list\", \"id\": ${id}}`)\r\n\r\n    console.log('  Initial Automatic Moonraker commands'.statusmessage)\r\n\r\n    setInterval(() => {\r\n      if (variables.getCurrentPrintJob() !== '') { connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"server.files.metadata\", \"params\": {\"filename\": \"${variables.getCurrentPrintJob()}\"}, \"id\": ${id}}`) }\r\n    }, 10 * 1000)\r\n\r\n    connection.on('close', () => {\r\n      console.log('  WebSocket Connection Closed'.error)\r\n      console.log('  Reconnect in 5 sec'.error)\r\n      status.changeStatus(discordClient.getClient, 'offline')\r\n      setTimeout(() => {\r\n        client.connect(`${wsUrl}?token=${oneShotToken}`)\r\n      }, 5000)\r\n    })\r\n  })\r\n}\r\n\r\nfunction connect(discordClient) {\r\n  console.log('  Connect to Moonraker'.statusmessage)\r\n\r\n  client.connect(`${wsUrl}?token=${oneShotToken}`)\r\n\r\n  client.on('connectFailed', (error) => {\r\n    console.log(logSymbols.error, `Moonrakerclient: ${error}`.error)\r\n    status.changeStatus(discordClient.getClient, 'offline')\r\n    console.log('  Please check your Config!'.error)\r\n    setTimeout(() => {\r\n      process.exit(5)\r\n    }, 2000)\r\n  })\r\n}\r\n\r\nasync function getOneShotToken() {\r\n  if (token === '') { return '' }\r\n  console.log('  Get Oneshot Token'.statusmessage)\r\n\r\n  const tempToken = await axios\r\n    .get(`${url}/access/oneshot_token`, {\r\n      headers: {\r\n        'X-Api-Key': token\r\n      }\r\n    })\r\n\r\n  return tempToken.data.result\r\n}\r\n\r\nfunction handleSubscription(message) {\r\n  if (message.type !== 'utf8') { return }\r\n\r\n  const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n\r\n  const messageJson = JSON.parse(message.utf8Data)\r\n\r\n  if (typeof (messageJson.result) === 'undefined') { return }\r\n  if (typeof (messageJson.result.objects) === 'undefined') { return }\r\n\r\n  const objects = {}\r\n\r\n  for (const index in messageJson.result.objects) {\r\n    const object = messageJson.result.objects[index]\r\n    objects[object] = null\r\n  }\r\n\r\n  WSconnection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"printer.objects.subscribe\", \"params\": { \"objects\":${JSON.stringify(objects)}}, \"id\": ${id}}`)\r\n  WSconnection.removeListener('message', handleSubscription)\r\n}\r\n\r\nmodule.exports = {}\r\nmodule.exports.init = async (discordClient, moonrakerWSUrl, moonrakerUrl, moonrakerToken) => {\r\n  token = moonrakerToken\r\n  wsUrl = moonrakerWSUrl\r\n  url = moonrakerUrl\r\n  console.log(`\\n\r\n  ${` __  __                        _           \r\n  |  \\\\/  |___  ___ _ _  _ _ __ _| |_____ _ _ \r\n  | |\\\\/| / _ \\\\/ _ \\\\ ' \\\\| '_/ _\\` | / / -_) '_|\r\n  |_|  |_\\\\___/\\\\___/_||_|_| \\\\__,_|_\\\\_\\\\___|_|`.statustitle}\r\n                              `)\r\n  oneShotToken = await getOneShotToken()\r\n  connect(discordClient)\r\n  enableEvents(discordClient)\r\n  await waitUntil(() => typeof (WSconnection) !== 'undefined', { timeout: Number.POSITIVE_INFINITY })\r\n  await waitUntil(() => WSconnection.connected === true, { timeout: Number.POSITIVE_INFINITY })\r\n}\r\nmodule.exports.getConnection = () => { return WSconnection }\r\nmodule.exports.getClient = () => { return client }\r\nmodule.exports.getOneShotToken = async () => { return await getOneShotToken() }\r\n","const klipperRestart = require('./klipperRestart')\r\nconst listFiles = require('./listFiles')\r\nconst printJob = require('./printJob')\r\nconst printJobStart = require('./printJobStart')\r\nconst toPrintList = require('./toPrintList')\r\nconst updateSystem = require('./updateSystem')\r\n\r\nmodule.exports = (button) => {\r\n  printJob(button)\r\n  printJobStart(button)\r\n  klipperRestart(button)\r\n  updateSystem(button)\r\n  listFiles(button)\r\n  toPrintList(button)\r\n}","const moonrakerClient = require('../../clients/moonrakerClient')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\n\r\nmodule.exports = async (button) => {\r\n    const {message, user, customId, guildId, client} = button\r\n\r\n    if (customId !== 'klipper_restart') { return }\r\n\r\n    if (!await permission.hasAdmin(user, guildId, client)) {\r\n        await button.reply(message.channel.send(locale.getAdminOnlyError(user.username)))\r\n        return\r\n    }\r\n\r\n    const connection = moonrakerClient.getConnection()\r\n    const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"printer.firmware_restart\", \"id\": ${id}}`)\r\n\r\n    await button.update({components: []})\r\n}","const moonrakerClient = require('../../clients/moonrakerClient')\r\nconst chatUtil = require('../../utils/chatUtil')\r\nconst locale = require('../../utils/localeUtil')\r\nconst metaData = require('../buttons-metadata/list_files.json')\r\n\r\nconst commandlocale = locale.commands.listfiles\r\n\r\nlet commandFeedback\r\nlet pageUp\r\nlet page\r\nlet connection\r\n\r\nmodule.exports = async (button) => {\r\n    const {message, customId, user} = button\r\n\r\n    if (!Object.keys(metaData).includes(customId)) { return }\r\n\r\n    if (typeof (commandFeedback) !== 'undefined') {\r\n        await button.reply(locale.getCommandNotReadyError(user.username))\r\n        return\r\n    }\r\n    const [embed] = message.embeds\r\n\r\n    if(embed.title !== commandlocale.embed.title) { return }\r\n\r\n    connection = moonrakerClient.getConnection()\r\n\r\n    pageUp = metaData[customId].page_up\r\n    page = chatUtil.retrieveCurrentPage(embed)\r\n\r\n    await executeMessage(button)\r\n}\r\n\r\nasync function executeMessage(button) {\r\n    const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n\r\n    let timeout = 0\r\n\r\n    await button.message.removeAttachments()\r\n    \r\n    await button.update(chatUtil.getWaitEmbed(button.user, commandlocale.embed.title, 'printlist.png'))\r\n\r\n    connection.on('message', handler)\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"server.files.list\", \"params\": {\"root\": \"gcodes\"}, \"id\": ${id}}`)\r\n\r\n    const feedbackInterval = setInterval(async () => {\r\n        if (typeof (commandFeedback) !== 'undefined') {\r\n            await button.message.edit(commandFeedback)\r\n            connection.removeListener('message', handler)\r\n            commandFeedback = undefined\r\n            clearInterval(feedbackInterval)\r\n        }\r\n        if (timeout === 10) {\r\n            await button.message.edit({\r\n                content: locale.errors.no_files_found,\r\n                components: []\r\n            })\r\n            commandFeedback = undefined\r\n            connection.removeListener('message', handler)\r\n            clearInterval(feedbackInterval)\r\n        }\r\n        timeout++\r\n    }, 500)\r\n}\r\n\r\nfunction handler (message) {\r\n    const messageJson = JSON.parse(message.utf8Data)\r\n    if (/(modified)/g.test(JSON.stringify(messageJson))) {\r\n        connection.removeListener('message', handler)\r\n        commandFeedback = chatUtil.generatePageEmbed(\r\n            pageUp,\r\n            page,\r\n            messageJson.result,\r\n            commandlocale.embed.title,\r\n            'printlist.png',\r\n            false)\r\n    }\r\n}","const moonrakerClient = require('../../clients/moonrakerClient')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\nconst statusUtil = require('../../utils/statusUtil')\r\nconst metaData = require('../buttons-metadata/print_job.json')\r\n\r\nconst messageLocale = locale.commands.printjob\r\n\r\nmodule.exports = async (button) => {\r\n    const {message, user, customId, guildId, client, channel} = button\r\n\r\n    if (!Object.keys(metaData).includes(customId)) { return }\r\n\r\n    if (!await permission.hasAdmin(user, guildId, client)) {\r\n        await button.reply(message.channel.send(locale.getAdminOnlyError(user.username)))\r\n        return\r\n    }\r\n\r\n    const currentStatus = statusUtil.getStatus()\r\n    const buttonMeta = metaData[customId]\r\n    const langButtonMeta = messageLocale.answer[customId.replace('printjob_','')]\r\n\r\n    if (customId === 'printjob_refresh') {\r\n        await button.update({components: []})\r\n\r\n        const updateMessage = await statusUtil.getManualStatusEmbed(channel, client)\r\n        channel.send(updateMessage)\r\n        return\r\n    }\r\n\r\n    if (customId === `printjob_${currentStatus}`) {\r\n        await button.reply(langButtonMeta.status_same.replace(/(\\${username})/g, user.username))\r\n        return\r\n    }\r\n\r\n    if (!buttonMeta.required_status.includes(currentStatus)) {\r\n        await button.reply(langButtonMeta.status_not_valid.replace(/(\\${username})/g, user.username))\r\n        return\r\n    }\r\n\r\n    const connection = moonrakerClient.getConnection()\r\n    const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"printer.gcode.script\", \"params\": {\"script\": \"${buttonMeta.macro}\"}, \"id\": ${id}}`)\r\n\r\n    await button.update({components: []})\r\n}","const Discord = require('discord.js')\r\n\r\nconst moonrakerClient = require('../../clients/moonrakerClient')\r\nconst chatUtil = require('../../utils/chatUtil')\r\nconst handlers = require('../../utils/handlerUtil')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\nconst metaData = require('../commands-metadata/print_job.json')\r\n\r\nlet commandFeedback\r\nlet connection\r\n\r\nlet timeout = 0\r\n\r\nconst commandlocale = locale.commands.printjob\r\n\r\nmodule.exports = async (button) => {\r\n    const {message, user, guildId, client, customId} = button\r\n\r\n    if (!await permission.hasAdmin(user, guildId, client)) {\r\n        await button.reply(message.channel.send(locale.getAdminOnlyError(user.username)))\r\n        return\r\n    }\r\n    switch (customId) {\r\n        case (\"printjob_start\"): {\r\n            await button.update({ components: [] })\r\n            await message.removeAttachments()\r\n            startPrintJob(button)\r\n            break\r\n        }\r\n        case (\"printjob_start_no\"): {\r\n            await message.edit({ embeds: [getAbortEmbed(message, user)], components: [] })\r\n            break\r\n        }\r\n        case (\"printjob_start_yes\"): {\r\n            await message.edit({ embeds: [getStartEmbed(message, user)], components: [] })\r\n            startPrint(message)\r\n            break\r\n        }\r\n        default: break\r\n    }\r\n}\r\n\r\nasync function postStart(message, button) {\r\n    commandFeedback = undefined\r\n\r\n    if (typeof (message.embeds) === 'undefined') {\r\n        await button.message.edit(message)\r\n        return\r\n    }\r\n    const buttons = chatUtil.getButtons(metaData)\r\n\r\n    message.components = [buttons]\r\n\r\n    await button.message.edit(message)\r\n}\r\n\r\nfunction startPrint(currentMessage) {\r\n    const [currentEmbed] = currentMessage.embeds\r\n    const gcodeFile = currentEmbed.author.name\r\n    const connection = moonrakerClient.getConnection()\r\n    const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"printer.print.start\", \"params\": {\"filename\": \"${gcodeFile}\"}, \"id\": ${id}}`)\r\n}\r\n\r\nfunction getAbortEmbed(currentMessage, user) {\r\n    const [currentEmbed] = currentMessage.embeds\r\n    const abortMessage = commandlocale.answer.abort.replace(/(\\${username})/g, user.username)\r\n    return new Discord.MessageEmbed()\r\n        .setColor('#c90000')\r\n        .setAuthor(currentEmbed.author.name)\r\n        .setThumbnail('attachment://thumbnail.png')\r\n        .setDescription(abortMessage)\r\n}\r\n\r\nfunction getStartEmbed(currentMessage, user) {\r\n    const [currentEmbed] = currentMessage.embeds\r\n    const startMessage = commandlocale.answer.executed.replace(/(\\${username})/g, user.username)\r\n    return new Discord.MessageEmbed()\r\n        .setColor('#25db00')\r\n        .setAuthor(currentEmbed.author.name)\r\n        .setThumbnail('attachment://thumbnail.png')\r\n        .setDescription(startMessage)\r\n}\r\n\r\nfunction startPrintJob(button) {\r\n    const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n    const gcodefile = button.message.embeds[0].author.name\r\n\r\n    timeout = 0\r\n    \r\n    connection = moonrakerClient.getConnection()\r\n    connection.on('message', handler)\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"server.files.metadata\", \"params\": {\"filename\": \"${gcodefile}\"}, \"id\": ${id}}`)\r\n\r\n    const feedbackHandler = setInterval(() => {\r\n        if (timeout === 6) {\r\n            clearInterval(feedbackHandler)\r\n            connection.removeListener('message', handler)\r\n\r\n            const timeoutEmbed = new Discord.MessageEmbed()\r\n                .setColor('#c90000')\r\n                .setAuthor(gcodefile)\r\n                .setThumbnail('attachment://thumbnail.png')\r\n                .setDescription(locale.errors.command_timeout)\r\n\r\n            postStart(\r\n                { embeds: [timeoutEmbed] },\r\n                button)\r\n            return\r\n        }\r\n\r\n        timeout++\r\n\r\n        if (typeof (commandFeedback) === 'undefined') {\r\n            return\r\n        }\r\n\r\n        if (commandFeedback === 'Not Found!') {\r\n            clearInterval(feedbackHandler)\r\n\r\n            const notFoundEmbed = new Discord.MessageEmbed()\r\n                .setColor('#c90000')\r\n                .setAuthor(gcodefile)\r\n                .setThumbnail('attachment://thumbnail.png')\r\n                .setDescription(locale.errors.file_not_found)\r\n\r\n            postStart(\r\n                { embeds: [notFoundEmbed] },\r\n                button)\r\n            return\r\n        }\r\n        if (commandFeedback.files.length === 0) {\r\n            return\r\n        }\r\n        clearInterval(feedbackHandler)\r\n        postStart(\r\n            commandFeedback,\r\n            button)\r\n    }, 500)\r\n}\r\n\r\nasync function handler(message) {\r\n    if (message.type !== 'utf8') { return }\r\n    \r\n    const messageJson = JSON.parse(message.utf8Data)\r\n\r\n    if (typeof (messageJson.result) === 'undefined') { return }\r\n    if (typeof (messageJson.result.filename) === 'undefined') { return }\r\n    \r\n    commandFeedback = await handlers.printFileHandler(message, commandlocale.embed.title, '#0099ff')\r\n    connection.removeListener('message', handler)\r\n}","const Discord = require('discord.js')\r\n\r\nconst moonrakerClient = require('../../clients/moonrakerClient')\r\nconst chatUtil = require('../../utils/chatUtil')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\n\r\nconst messageLocale = locale.commands.listfiles\r\n\r\nlet commandFeedback\r\nlet connection\r\n\r\nlet lastid = 0\r\nlet timeout = 0\r\n\r\nmodule.exports = async (button) => {\r\n    const {message, user, guildId, client, customId} = button\r\n\r\n    if (customId !== 'to_printlist') { return }\r\n\r\n    if (!await permission.hasAdmin(user, guildId, client)) {\r\n        await button.reply(locale.getAdminOnlyError(user.username))\r\n        return\r\n    }\r\n    if (typeof (commandFeedback) !== 'undefined') {\r\n        await button.reply(locale.getCommandNotReadyError(user.username))\r\n        return\r\n    }\r\n\r\n    await message.removeAttachments()\r\n    \r\n    await button.update(chatUtil.getWaitEmbed(user, messageLocale.embed.title, 'printlist.png'))\r\n\r\n    const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n    connection = moonrakerClient.getConnection()\r\n\r\n    connection.on('message', handler)\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"server.files.list\", \"params\": {\"root\": \"gcodes\"}, \"id\": ${id}}`)\r\n\r\n    commandFeedback = undefined\r\n\r\n    const feedbackInterval = setInterval(async () => {\r\n        if (typeof (commandFeedback) !== 'undefined') {\r\n            if(lastid === id) { return }\r\n            lastid = id\r\n            \r\n            await message.edit(commandFeedback)\r\n            \r\n            commandFeedback = undefined\r\n            lastid = 0\r\n            clearInterval(feedbackInterval)\r\n        }\r\n        if (timeout === 10) {\r\n            commandFeedback = undefined\r\n            connection.removeListener('message', handler)\r\n            clearInterval(feedbackInterval)\r\n\r\n            const timeoutEmbed = new Discord.MessageEmbed()\r\n                .setColor('#c90000')\r\n                .setDescription(locale.errors.no_files_found)\r\n\r\n            await message.edit(timeoutEmbed)\r\n        }\r\n        timeout++\r\n    }, 500)\r\n}\r\n\r\nfunction handler (message) {\r\n    const messageJson = JSON.parse(message.utf8Data)\r\n    if(/(modified)/g.test(JSON.stringify(messageJson))) {\r\n        connection.removeListener('message', handler)\r\n        commandFeedback = chatUtil.generatePageEmbed(\r\n            false,\r\n            1,\r\n            messageJson.result,\r\n            messageLocale.embed.title,\r\n            'printlist.png',\r\n            true)\r\n    }\r\n}","const moonrakerClient = require('../../clients/moonrakerClient')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\n\r\nmodule.exports = async (button) => {\r\n    const {message, user, customId, guildId, client} = button\r\n\r\n    if (customId !== 'update_system') { return }\r\n\r\n    if (!await permission.hasAdmin(user, guildId, client)) {\r\n        await button.reply(message.channel.send(locale.getAdminOnlyError(user.username)))\r\n        return\r\n    }\r\n\r\n    const connection = moonrakerClient.getConnection()\r\n    const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"machine.update.full\", \"id\": ${id}}`)\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"machine.update.status\", \"params\":{\"refresh\": \"false\"}, \"id\": ${id}}`)\r\n\r\n    await button.update({components: []})\r\n}","const logSymbols = require('log-symbols')\r\n\r\nconst database = require('../../utils/databaseUtil')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\n\r\nconst messageLocale = locale.commands.admin\r\nconst syntaxLocale = locale.syntaxlocale.commands.admin\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        if (interaction.guildId === null) {\r\n            await interaction.reply(locale.getGuildOnlyError(interaction.user.username))\r\n            return\r\n        }\r\n        \r\n        if (!permission.hasController(interaction.user)) {\r\n            await interaction.reply(locale.getControllerOnlyError(interaction.user.username))\r\n            return\r\n        }\r\n\r\n        let isRole\r\n        let adminid\r\n\r\n        if (interaction.options.getSubcommand() === syntaxLocale.options.role.name) {\r\n            isRole = true\r\n            adminid = interaction.options.getRole(syntaxLocale.options.role.options.role.name).id\r\n        }\r\n\r\n        if (interaction.options.getSubcommand() === syntaxLocale.options.user.name) {\r\n            isRole = false\r\n            adminid = interaction.options.getUser(syntaxLocale.options.user.options.user.name).id\r\n        }\r\n\r\n        const result = await editAdmin(isRole, adminid, interaction.guildId, interaction.client)\r\n\r\n        let answermention = `<@${adminid}>`\r\n\r\n        if (isRole) {\r\n            answermention = answermention.replace(/<@/g,'<@&')\r\n        }\r\n\r\n        if (result) {\r\n            await interaction.reply(messageLocale.answer.added\r\n                .replace(/(\\${username})/g, interaction.user.username)\r\n                .replace(/(\\${mention})/g, answermention))\r\n            return\r\n        } \r\n\r\n        await interaction.reply(messageLocale.answer.removed\r\n            .replace(/(\\${username})/g, interaction.user.username)\r\n            .replace(/(\\${mention})/g, answermention))\r\n        \r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Admin Command: ${error}`.error)\r\n        await interaction.reply(locale.errors.command_failed)\r\n    }\r\n}\r\n\r\nasync function editAdmin(isRole, adminid, guildid, discordClient) {\r\n    const guild = await discordClient.guilds.fetch(guildid)\r\n    const guilddatabase = database.getGuildDatabase(guild)\r\n    let adminarray = 'adminusers'\r\n\r\n    if (isRole) {\r\n        adminarray = 'adminroles'\r\n    }\r\n\r\n    if (guilddatabase[adminarray].includes(adminid)) {\r\n        const index = guilddatabase[adminarray].indexOf(adminid)\r\n        if (index > -1) {\r\n            guilddatabase[adminarray].splice(index, 1)\r\n        }\r\n        database.updateDatabase(guilddatabase, guild)\r\n        return false\r\n    }\r\n\r\n    guilddatabase[adminarray].push(adminid)\r\n    database.updateDatabase(guilddatabase, guild)\r\n\r\n    return true\r\n}","const logSymbols = require('log-symbols')\r\n\r\nconst database = require('../../utils/databaseUtil')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\n\r\nconst messageLocale = locale.commands.editchannel\r\nconst syntaxLocale = locale.syntaxlocale.commands.editchannel\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        if (interaction.guildId === null) {\r\n            await interaction.reply(locale.getGuildOnlyError(interaction.user.username))\r\n            return\r\n        }\r\n        if (!await permission.hasAdmin(interaction.user, interaction.guildId, interaction.client)) {\r\n            await interaction.reply(locale.getAdminOnlyError(interaction.user.username))\r\n            return\r\n        }\r\n\r\n        let channel\r\n        let channelresult\r\n\r\n        if (interaction.options.getChannel(syntaxLocale.options.channel.name) === null) {\r\n            channelresult = await editChannel(interaction.channelId,\r\n                interaction.guildId,\r\n                interaction.client)\r\n            channel = `<#${interaction.channelId}>`\r\n        } else {\r\n            channelresult = await editChannel(\r\n                interaction.options.getChannel(syntaxLocale.options.channel.name).id,\r\n                interaction.guildId,\r\n                interaction.client)\r\n            channel = `<#${interaction.options.getChannel(syntaxLocale.options.channel.name).id}>`\r\n        }\r\n\r\n        if (typeof (channelresult) === 'undefined') {\r\n            await interaction.reply(messageLocale.answer.not_textchannel\r\n                .replace(/(\\${username})/g, interaction.user.username)\r\n                .replace(/(\\${channel})/g, channel))\r\n                return\r\n        }\r\n\r\n        if (channelresult) {\r\n            await interaction.reply(messageLocale.answer.activated\r\n                .replace(/(\\${username})/g, interaction.user.username)\r\n                .replace(/(\\${channel})/g, channel))\r\n                return\r\n        } \r\n        await interaction.reply(messageLocale.answer.deactivated\r\n            .replace(/(\\${username})/g, interaction.user.username)\r\n            .replace(/(\\${channel})/g, channel))\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Edit Channel Command: ${error}`.error)\r\n        await interaction.reply(locale.errors.command_failed)\r\n    }\r\n}\r\nasync function editChannel(channelid, guildid, discordClient) {\r\n    const guild = await discordClient.guilds.fetch(guildid)\r\n    const channel = await discordClient.channels.fetch(channelid)\r\n    const guilddatabase = database.getGuildDatabase(guild)\r\n\r\n    if (channel.type !== 'GUILD_TEXT') {\r\n        return\r\n    }\r\n    if (guilddatabase.broadcastchannels.includes(channelid)) {\r\n        const index = guilddatabase.broadcastchannels.indexOf(channelid)\r\n        if (index > -1) {\r\n            guilddatabase.broadcastchannels.splice(index, 1)\r\n        }\r\n        database.updateDatabase(guilddatabase, guild)\r\n        return false\r\n    }\r\n\r\n    guilddatabase.broadcastchannels.push(channelid)\r\n    database.updateDatabase(guilddatabase, guild)\r\n\r\n    return true\r\n}","const logSymbols = require('log-symbols')\r\n\r\nconst moonrakerClient = require('../../clients/moonrakerClient')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\n\r\nconst messageLocale = locale.commands.emergency_stop\r\n\r\nlet connection\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        if (!await permission.hasAdmin(interaction.user, interaction.guildId, interaction.client)) {\r\n            await interaction.reply(locale.getAdminOnlyError(interaction.user.username))\r\n            return\r\n        }\r\n        \r\n        connection = moonrakerClient.getConnection()\r\n        const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n    \r\n        await interaction.deferReply()\r\n    \r\n        connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"printer.emergency_stop\", \"id\": ${id}}`)\r\n            \r\n        await interaction.editReply(messageLocale.answer.executed\r\n            .replace(/(\\${username})/g, interaction.user.username))\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Emergency Stop Command: ${error}`.error)\r\n        await interaction.editReply(locale.errors.command_failed)\r\n    }\r\n}","const logSymbols = require('log-symbols')\r\n\r\nconst moonrakerClient = require('../../clients/moonrakerClient')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\n\r\nconst messageLocale = locale.commands.execute\r\nconst syntaxLocale = locale.syntaxlocale.commands.execute\r\n\r\nlet commandFeedback\r\nlet connection\r\n\r\nlet lastid = 0\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        if (!await permission.hasAdmin(interaction.user, interaction.guildId, interaction.client)) {\r\n            await interaction.reply(locale.getAdminOnlyError(interaction.user.username))\r\n            return\r\n        }\r\n        if (typeof (commandFeedback) !== 'undefined') {\r\n            await interaction.reply(locale.getCommandNotReadyError(interaction.user.username))\r\n            return\r\n        }\r\n\r\n        const gcode = interaction.options.getString(syntaxLocale.options.gcode.name)\r\n        const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n        connection = moonrakerClient.getConnection()\r\n\r\n        let timeout = 0\r\n\r\n        commandFeedback = undefined\r\n\r\n        await interaction.deferReply()\r\n\r\n        connection.on('message', handler)\r\n        connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"printer.gcode.script\", \"params\": {\"script\": \"${gcode}\"}, \"id\": ${id}}`)\r\n\r\n        const feedbackInterval = setInterval(async () => {\r\n            if (typeof (commandFeedback) !== 'undefined') {\r\n                if( lastid === id ) { return }\r\n                lastid = id\r\n                connection.removeListener('message', handler)\r\n                clearInterval(feedbackInterval)\r\n                await interaction.editReply(\r\n                    commandFeedback)\r\n                commandFeedback = undefined\r\n                lastid = 0\r\n            }\r\n            if (timeout === 4) {\r\n                commandFeedback = undefined\r\n                clearInterval(feedbackInterval)\r\n                connection.removeListener('message', handler)\r\n                await interaction.editReply(\r\n                    locale.errors.command_timeout)\r\n            }\r\n            timeout++\r\n        }, 500)\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Execute Command: ${error}`.error)\r\n        connection.removeListener('message', handler)\r\n        commandFeedback = undefined\r\n        await interaction.editReply(locale.errors.command_failed)\r\n    }\r\n}\r\n\r\nfunction handler (message) {\r\n  const messageJson = JSON.parse(message.utf8Data)\r\n    if (messageJson.method === 'notify_gcode_response') {\r\n        let command = ''\r\n        if (messageJson.params[0].includes('Unknown command')) {\r\n            command = messageJson.params[0].replace('// Unknown command:', '').replace(/\"/g, '')\r\n            commandFeedback = messageLocale.answer.unknown.replace(/(\\${gcode_feedback})/g, command)\r\n        } else if (messageJson.params[0].includes('Error')) {\r\n            command = messageJson.params[0].replace('!! Error on ', '').replace(/\\\\/g, '')\r\n            commandFeedback = messageLocale.answer.error.replace(/(\\${gcode_feedback})/g, command)\r\n        } else {\r\n            commandFeedback = messageLocale.answer.success\r\n        }\r\n    }\r\n}","const { waitUntil } = require(\"async-wait-until\");\r\nconst logSymbols = require('log-symbols')\r\n\r\nconst moonrakerClient = require('../../clients/moonrakerClient')\r\nconst handlers = require('../../utils/handlerUtil')\r\nconst locale = require('../../utils/localeUtil')\r\n\r\nconst syntaxLocale = locale.syntaxlocale.commands.fileinfo\r\n\r\nlet commandFeedback\r\nlet connection\r\n\r\nlet lastid = 0\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        if (typeof (commandFeedback) !== 'undefined') {\r\n            await interaction.reply(locale.getCommandNotReadyError(interaction.user.username))\r\n            return\r\n        }\r\n        let gcodefile = interaction.options.getString(syntaxLocale.options.file.name)\r\n        if (!gcodefile.endsWith('.gcode')) {\r\n            gcodefile += '.gcode'\r\n        }\r\n\r\n        const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n        connection = moonrakerClient.getConnection()\r\n\r\n        let timeout = 0\r\n\r\n        commandFeedback = undefined\r\n\r\n        await interaction.deferReply()\r\n\r\n        connection.on('message', handler)\r\n        connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"server.files.metadata\", \"params\": {\"filename\": \"${gcodefile}\"}, \"id\": ${id}}`)\r\n        const feedbackInterval = setInterval(async () => {\r\n            if (typeof (commandFeedback) !== 'undefined') {\r\n                if( lastid === id ) { return }\r\n                lastid = id\r\n                if (commandFeedback === 'Not Found!') {\r\n                    await interaction.editReply({\r\n                        content: locale.errors.file_not_found\r\n                    })\r\n                } else {\r\n                    await interaction.editReply(commandFeedback)\r\n                }\r\n                lastid = 0\r\n                commandFeedback = undefined\r\n                connection.removeListener('message', handler)\r\n                clearInterval(feedbackInterval)\r\n            }\r\n            if (timeout === 4) {\r\n                await interaction.editReply({\r\n                    content: locale.errors.command_timeout\r\n                })\r\n                commandFeedback = undefined\r\n                clearInterval(feedbackInterval)\r\n                connection.removeListener('message', handler)\r\n            }\r\n            timeout++\r\n        }, 500)\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Fileinfo Command: ${error}`.error)\r\n        connection.removeListener('message', handler)\r\n        commandFeedback = undefined\r\n        await interaction.editReply(locale.errors.command_failed)\r\n    }\r\n}\r\n\r\nasync function handler (message) {\r\n    commandFeedback = await handlers.printFileHandler(message, locale.fileinfo.title, '#0099ff')\r\n    await waitUntil(() => typeof(commandFeedback) !== 'undefined', { timeout: Number.POSITIVE_INFINITY })\r\n    connection.removeListener('message', handler)\r\n}","const args = process.argv.slice(2)\r\n\r\nconst axios = require('axios')\r\nconst Discord = require('discord.js')\r\nconst logSymbols = require('log-symbols')\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\nconst metadata = require('../commands-metadata/get_log.json')\r\n\r\nconst messageLocale = locale.commands.get_log\r\nconst syntaxLocale = locale.syntaxlocale.commands.get_log\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    if (!permission.hasController(interaction.user)) {\r\n        await interaction.reply(locale.getControllerOnlyError(interaction.user.username))\r\n        return\r\n    }\r\n\r\n    const service = interaction.options.getString(syntaxLocale.options.log_file.name)\r\n\r\n    await interaction.deferReply()\r\n\r\n    try {\r\n        const result = await axios.request({\r\n            responseType: 'arraybuffer',\r\n            url: `${config.connection.moonraker_url}${metadata.files[service]}`,\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'text/plain',\r\n                'X-Api-Key': config.connection.moonraker_token,\r\n            },\r\n        })\r\n\r\n        const bufferSize = Buffer.byteLength(result.data)\r\n\r\n        if (bufferSize > Number.parseInt('8000000')) {\r\n            await interaction.editReply({\r\n                content: messageLocale.answer.too_large\r\n                    .replace(/(\\${service})/g, `\\`${service}\\``)\r\n            })\r\n            return\r\n        }\r\n\r\n        const file = new Discord.MessageAttachment(result.data, `${service}.log`)\r\n        await interaction.editReply({\r\n            content: messageLocale.answer.retrieved\r\n                .replace(/(\\${service})/g, `\\`${service}\\``),\r\n            files: [file]\r\n        })\r\n    } catch {\r\n        await interaction.editReply(\r\n                messageLocale.answer.not_found\r\n            .replace(/(\\${service})/g, `\\`${service}\\``))\r\n    }\r\n}","const locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\nconst metadata = require('../commands-metadata/get_log.json')\r\n\r\nconst messageLocale = locale.commands.get_user_id\r\nconst syntaxLocale = locale.syntaxlocale.commands.get_user_id\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    if (interaction.options.getUser(syntaxLocale.options.user.name) === null) {\r\n        await interaction.reply(messageLocale.answer.own_id\r\n            .replace(/(\\${id})/g, interaction.user.id))\r\n        return\r\n    }\r\n\r\n    const user = interaction.options.getUser(syntaxLocale.options.user.name)\r\n    await interaction.reply(messageLocale.answer.other_id\r\n        .replace(/(\\${id})/g, user.id)\r\n        .replace(/(\\${username})/g, user.tag))\r\n}","const locale = require('../../utils/localeUtil')\r\nconst loadUtil = require('../../utils/loadUtil')\r\n\r\nconst commandOptions = require('../commands-metadata/commands_structure.json')\r\nconst optionTypes = require('../commands-metadata/option_types.json')\r\n\r\nmodule.exports.addCommandEvents = (discordClient) => { commandEvent(discordClient) }\r\nmodule.exports.loadSlashCommands = async (discordClient) => { await loadSlashCommands(discordClient) }\r\n\r\nasync function loadSlashCommands(discordClient) {\r\n    const commandList = []\r\n    for (const commandIndex in commands) {\r\n        \r\n        const command = buildSlashCommand(commandIndex)\r\n        commandList.push(command)\r\n    }\r\n    await discordClient.application?.commands.set(commandList)\r\n}\r\n\r\nfunction buildSlashCommand(command) {\r\n    const messageLocale = locale.commands[command]\r\n    const syntaxLocale = locale.syntaxlocale.commands[command]\r\n\r\n    const builder = {\r\n        name: syntaxLocale.command,\r\n        description: messageLocale.description,\r\n        options: []\r\n    }\r\n    \r\n    for(const index in commandOptions[command]) {\r\n        buildCommandOption(\r\n            builder,\r\n            commandOptions[command],\r\n            index,\r\n            syntaxLocale,\r\n            messageLocale)\r\n    }\r\n    \r\n    return builder\r\n}\r\n\r\nfunction buildCommandOption(builder, meta, option, syntaxMeta, messageMeta) {\r\n    if (typeof(meta) === 'undefined') { return }\r\n\r\n    const optionMeta = meta[option]\r\n\r\n    if (typeof(optionMeta) === 'undefined') { return }\r\n    if (Object.keys(optionMeta).length == 0) { return }\r\n\r\n    const optionBuilder = {\r\n        type: optionTypes[optionMeta.type],\r\n        name: syntaxMeta.options[option].name,\r\n        description: messageMeta.options[option].description,\r\n        options: []\r\n    }\r\n\r\n    optionBuilder.required = optionMeta.required\r\n\r\n    if (typeof (optionMeta.choices) !== 'undefined') {\r\n        if (optionMeta.choices === '${loadInfoChoices}') {\r\n            optionBuilder.choices = loadUtil.getComponents()\r\n        } else {\r\n            optionBuilder.choices = optionMeta.choices\r\n        }\r\n    }\r\n    \r\n    for(const index in meta[option].options) {\r\n        buildCommandOption(\r\n            optionBuilder,\r\n            meta[option].options,\r\n            index,\r\n            syntaxMeta.options[option],\r\n            messageMeta.options[option])\r\n    }\r\n\r\n    builder.options.push(optionBuilder)\r\n}\r\n\r\nfunction commandEvent(discordClient) {\r\n    discordClient.on('interactionCreate', interaction => {\r\n        if (!interaction.isCommand()) { return }\r\n        for (const commandIndex in commands) {\r\n            const command = commands[commandIndex]\r\n            const syntaxLocale = locale.syntaxlocale.commands[commandIndex]\r\n            if (syntaxLocale.command === interaction.commandName) {\r\n                command.reply(interaction)\r\n                return\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nconst commands = {\r\n    admin: require('./admin'),\r\n    editchannel: require('./editChannel'),\r\n    emergency_stop: require('./emergencyStop'),\r\n    execute: require('./execute'),\r\n    fileinfo: require('./fileInfo'),\r\n    get_log: require('./getLog'),\r\n    get_user_id: require('./getUserId'),\r\n    info: require('./info'),\r\n    listfiles: require('./listFiles'),\r\n    loadinfo: require('./loadInfo'),\r\n    notify: require('./notify'),\r\n    printjob: require('./printJob'),\r\n    status: require('./status'),\r\n    temp: require('./temp'),\r\n    timelapse: require('./timelapse')\r\n}","const Discord = require('discord.js')\r\nconst logSymbols = require('log-symbols')\r\nconst path = require('path')\r\n\r\nconst locale = require('../../utils/localeUtil')\r\n\r\nconst messageLocale = locale.commands.info\r\n\r\nconst pjson = require('../../package.json')\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        const description = messageLocale.embed.description\r\n            .replace(/(\\${version})/g, pjson.version)\r\n            .replace(/(\\${author})/g, pjson.author)\r\n            .replace(/(\\${homepage})/g, pjson.homepage)\r\n    \r\n        const logopath = path.resolve(__dirname, '../../assets/images/logo.png')\r\n        \r\n        const icon = new Discord.MessageAttachment(logopath, 'logo.png')\r\n\r\n        const infoEmbed = new Discord.MessageEmbed()\r\n            .setColor('#0099ff')\r\n            .setTitle(messageLocale.embed.title)\r\n            .setDescription(description)\r\n            .setThumbnail('attachment://logo.png')\r\n\r\n        await interaction.reply({\r\n            embeds:[infoEmbed], \r\n            files:[icon] })\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Info Command: ${error}`.error)\r\n        await interaction.reply(locale.errors.command_failed)\r\n    }\r\n}","const logSymbols = require('log-symbols')\r\n\r\nconst moonrakerClient = require('../../clients/moonrakerClient')\r\nconst chatUtil = require('../../utils/chatUtil')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\n\r\nconst messageLocale = locale.commands.listfiles\r\n\r\nlet commandFeedback\r\nlet connection\r\n\r\nlet lastid = 0\r\nlet timeout = 0\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        if (!await permission.hasAdmin(interaction.user, interaction.guildId, interaction.client)) {\r\n            await interaction.reply(locale.getAdminOnlyError(interaction.user.username))\r\n            return\r\n        }\r\n        if (typeof (commandFeedback) !== 'undefined') {\r\n            await interaction.reply(locale.getCommandNotReadyError(interaction.user.username))\r\n            return\r\n        }\r\n        const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n        connection = moonrakerClient.getConnection()\r\n\r\n        connection.on('message', handler)\r\n        connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"server.files.list\", \"params\": {\"root\": \"gcodes\"}, \"id\": ${id}}`)\r\n\r\n        commandFeedback = undefined\r\n        \r\n        await interaction.deferReply()\r\n\r\n        const feedbackInterval = setInterval(async () => {\r\n            if (typeof (commandFeedback) !== 'undefined') {\r\n                if(lastid === id) { return }\r\n                lastid = id\r\n                \r\n                await interaction.editReply(commandFeedback)\r\n                \r\n                commandFeedback = undefined\r\n                lastid = 0\r\n                clearInterval(feedbackInterval)\r\n            }\r\n            if (timeout === 10) {\r\n                await interaction.editReply(locale.errors.no_files_found)\r\n\r\n                commandFeedback = undefined\r\n                connection.removeListener('message', handler)\r\n                clearInterval(feedbackInterval)\r\n            }\r\n            timeout++\r\n        }, 500)\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `List Files Command: ${error}`.error)\r\n        connection.removeListener('message', handler)\r\n        commandFeedback = undefined\r\n        await interaction.editReply(locale.errors.command_failed)\r\n    }\r\n}\r\n\r\nfunction handler (message) {\r\n    const messageJson = JSON.parse(message.utf8Data)\r\n    if(/(modified)/g.test(JSON.stringify(messageJson))) {\r\n        connection.removeListener('message', handler)\r\n        commandFeedback = chatUtil.generatePageEmbed(\r\n            false,\r\n            1,\r\n            messageJson.result,\r\n            messageLocale.embed.title,\r\n            'printlist.png',\r\n            true)\r\n    }\r\n}","const logSymbols = require('log-symbols')\r\n\r\nconst loadUtil = require('../../utils/loadUtil')\r\nconst locale = require('../../utils/localeUtil')\r\nconst variablesUtil = require('../../utils/variablesUtil')\r\n\r\nconst syntaxLocale = locale.syntaxlocale.commands.loadinfo\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        await interaction.deferReply()\r\n\r\n        const component = interaction.options.getString(syntaxLocale.options.component.name)\r\n\r\n        let answer\r\n\r\n        if (component.startsWith('mcu')) {\r\n            answer = await retrieveMCUComponent(component)\r\n        } else {\r\n            answer = await loadUtil.getInformation(component)\r\n        }\r\n\r\n        await interaction.editReply(answer)\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Load Info Command: ${error}`.error)\r\n        await interaction.editReply(locale.errors.command_failed)\r\n    }\r\n}\r\nfunction generateMCUNoData(mcu, embed) {\r\n    const description = locale.errors.no_data\r\n        .replace(/(\\${component})/g, `\\`${mcu}\\``)\r\n    embed.setDescription(description)\r\n    embed.setColor('#c90000')\r\n    return embed\r\n\r\n}\r\nfunction retrieveMCUComponent(mcu) {\r\n    const template = loadUtil.getDefaultEmbed('mcu', mcu)\r\n    const [embed] = template.embeds\r\n\r\n    const mcudata = variablesUtil.getMCUList()[mcu]\r\n\r\n    if ( typeof(mcudata) === 'undefined' ) { return [template[0], generateMCUNoData(mcu, embed)] }\r\n    if (JSON.stringify(mcudata) === '{}') { return [template[0], generateMCUNoData(mcu, embed)] }\r\n\r\n    const mcuload = (mcudata.last_stats.mcu_task_avg + 3 * mcudata.last_stats.mcu_task_stddev) / 0.0025\r\n    const mcuawake = mcudata.last_stats.mcu_awake / 5\r\n    const mcufreq = mcudata.last_stats.freq / Number.parseInt('1000000')\r\n\r\n    embed.addField(locale.loadinfo.mcu.load, mcuload.toFixed(1), true)\r\n    embed.addField(locale.loadinfo.mcu.awake, mcuawake.toFixed(1), true)\r\n    embed.addField(locale.loadinfo.mcu.frequency, `${mcufreq.toFixed(1)} MHz`, true)\r\n    embed.addField(locale.loadinfo.mcu.chipset, mcudata.mcu_constants.MCU, true)\r\n    embed.addField(locale.loadinfo.mcu.version, mcudata.mcu_version, true)\r\n\r\n    return { embeds: [embed], files: template.files }\r\n}\r\n","const logSymbols = require('log-symbols')\r\n\r\nconst database = require('../../utils/databaseUtil')\r\nconst locale = require('../../utils/localeUtil')\r\n\r\nconst messageLocale = locale.commands.notify\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        const notifyStatus = database.updateNotify(interaction.user)\r\n        if (notifyStatus) {\r\n            await interaction.reply(messageLocale.answer.activated\r\n                .replace(/(\\${username})/g, interaction.user.username))\r\n            return\r\n        }\r\n        await interaction.reply(messageLocale.answer.deactivated\r\n            .replace(/(\\${username})/g, interaction.user.username))\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Notify Command: ${error}`.error)\r\n        await interaction.reply(locale.errors.command_failed)\r\n    }\r\n}","const logSymbols = require('log-symbols')\r\n\r\nconst moonrakerClient = require('../../clients/moonrakerClient')\r\nconst chatUtil = require('../../utils/chatUtil')\r\nconst handlers = require('../../utils/handlerUtil')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\nconst statusUtil = require('../../utils/statusUtil')\r\nconst metaData = require('../commands-metadata/print_job.json')\r\n\r\nconst messageLocale = locale.commands.printjob\r\nconst syntaxLocale = locale.syntaxlocale.commands.printjob\r\n\r\nlet commandFeedback\r\nlet connection\r\n\r\nlet timeout = 0\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        if (!await permission.hasAdmin(interaction.user, interaction.guildId, interaction.client)) {\r\n            await interaction.reply(locale.getAdminOnlyError(interaction.user.username))\r\n            return\r\n        }\r\n        \r\n        const subcommand = interaction.options.getSubcommand()\r\n        const currentStatus = statusUtil.getStatus()\r\n        const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n\r\n        connection = moonrakerClient.getConnection()\r\n\r\n        if (typeof (commandFeedback) !== 'undefined') {\r\n            await interaction.reply(locale.getCommandNotReadyError(interaction.user.username))\r\n            return\r\n        }\r\n\r\n        const key = getKeyByValue(syntaxLocale.options, subcommand)\r\n\r\n        if (Object.keys(metaData).includes(key)) {\r\n            const subcommandmeta = metaData[key]\r\n            const lang_command_meta = messageLocale.answer[key]\r\n\r\n            if (subcommand === currentStatus) {\r\n                await interaction.reply(lang_command_meta.status_same.replace(/(\\${username})/g, interaction.user.username))\r\n                return\r\n            }\r\n\r\n            if (!subcommandmeta.requiredStatus.includes(currentStatus)) {\r\n                await interaction.reply(lang_command_meta.status_not_valid.replace(/(\\${username})/g, interaction.user.username))\r\n                return\r\n            }\r\n            connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"printer.gcode.script\", \"params\": {\"script\": \"${subcommandmeta.macro}\"}, \"id\": ${id}}`)\r\n            await interaction.reply(lang_command_meta.status_valid.replace(/(\\${username})/g, interaction.user.username))\r\n            return\r\n        }\r\n        \r\n        if (subcommand === 'start') {\r\n            await interaction.deferReply()\r\n\r\n            startPrintJob(interaction)\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Printjob Command: ${error}`.error)\r\n        connection.removeListener('message', handler)\r\n        commandFeedback = undefined\r\n        await interaction.reply(locale.errors.command_failed)\r\n    }\r\n}\r\n\r\nasync function postStart(message, commandContext) {\r\n    commandFeedback = undefined\r\n\r\n    if (typeof (message.embeds) === 'undefined') {\r\n        await commandContext.editReply(message)\r\n        return\r\n    }\r\n    const buttons = chatUtil.getButtons(metaData)\r\n\r\n    message.components = [buttons]\r\n\r\n    await commandContext.editReply(message)\r\n}\r\n\r\nfunction startPrintJob(commandContext) {\r\n    const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n    const gcodefile = commandContext.options.getString(syntaxLocale.options.start.options.file.name)\r\n    timeout = 0\r\n    connection.on('message', handler)\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"server.files.metadata\", \"params\": {\"filename\": \"${gcodefile}\"}, \"id\": ${id}}`)\r\n\r\n    const feedbackHandler = setInterval(() => {\r\n        if (timeout === 6) {\r\n            clearInterval(feedbackHandler)\r\n            connection.removeListener('message', handler)\r\n            postStart(\r\n                locale.errors.command_timeout,\r\n                commandContext)\r\n            return\r\n        }\r\n\r\n        timeout++\r\n\r\n        if (typeof (commandFeedback) === 'undefined') {\r\n            return\r\n        }\r\n\r\n        if (commandFeedback === 'Not Found!') {\r\n            clearInterval(feedbackHandler)\r\n            postStart(\r\n                locale.errors.file_not_found,\r\n                commandContext)\r\n            return\r\n        }\r\n        if (commandFeedback.files.length === 0) {\r\n            return\r\n        }\r\n        clearInterval(feedbackHandler)\r\n        postStart(\r\n            commandFeedback,\r\n            commandContext)\r\n    }, 500)\r\n}\r\n\r\nasync function handler(message) {\r\n    if (message.type !== 'utf8') { return }\r\n    \r\n    const messageJson = JSON.parse(message.utf8Data)\r\n\r\n    if (typeof (messageJson.result) === 'undefined') { return }\r\n    if (typeof (messageJson.result.filename) === 'undefined') { return }\r\n    \r\n    commandFeedback = await handlers.printFileHandler(message, messageLocale.embed.title, '#0099ff')\r\n    connection.removeListener('message', handler)\r\n}\r\n\r\nfunction getKeyByValue(object, value) {\r\n    return Object.keys(object).find(key => object[key].name === value);\r\n}\r\n","const logSymbols = require('log-symbols')\r\n\r\nconst locale = require('../../utils/localeUtil')\r\nconst statusUtil = require('../../utils/statusUtil')\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        await interaction.deferReply()\r\n\r\n        const status = await statusUtil.getManualStatusEmbed(interaction.user, interaction.client)\r\n\r\n        await interaction.editReply(status)\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Emergency Stop Command: ${error}`.error)\r\n        await interaction.editReply(locale.errors.command_failed)\r\n    }\r\n}","const Discord = require('discord.js')\r\nconst logSymbols = require('log-symbols')\r\nconst path = require('path')\r\n\r\nconst locale = require('../../utils/localeUtil')\r\nconst variablesUtil = require('../../utils/variablesUtil')\r\n\r\nconst messageLocale = locale.commands.temp\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        await interaction.deferReply()\r\n\r\n        const message = buildEmbed()\r\n\r\n        await interaction.editReply(message)\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Temp Command: ${error}`.error)\r\n        await interaction.reply(locale.errors.command_failed)\r\n    }\r\n}\r\n\r\nfunction buildEmbed() {\r\n    const temps = variablesUtil.getTemperatures()\r\n\r\n    const iconAttachment = new Discord.MessageAttachment(path.resolve(__dirname, '../../assets/images/temps.png'))\r\n\r\n    const tempEmbed = new Discord.MessageEmbed()\r\n        .setColor('#0099ff')\r\n        .setTitle(messageLocale.embed.title)\r\n        .setThumbnail('attachment://temps.png')\r\n    \r\n    for (const temp in temps) {\r\n        const currentTemp = temps[temp].temperature.toFixed(2)\r\n\r\n        if (temp.includes('temperature_sensor')) {\r\n            tempEmbed.addField(`🌡${temp.replace('temperature_sensor ', '')}`,`\\`${currentTemp}°C\\``, true)\r\n        } else if (temp.includes('extruder') || temp.includes('heater_bed') || temp.includes('heater_generic')) {\r\n            const targetTemp = temps[temp].target\r\n            const power = calculatePercent(temps[temp].power)\r\n\r\n            tempEmbed.addField(`♨${temp.replace('heater_generic ', '')}`, `${messageLocale.embed.fields.current_temp}: \\`${currentTemp}°C\\`\r\n             ${messageLocale.embed.fields.target_temp}:\\`${targetTemp}°C\\`\r\n             ${messageLocale.embed.fields.current_power}:\\`${power}%\\``, true)\r\n        } else if (temp.includes('temperature_fan')) {\r\n            const targetTemp = temps[temp].target\r\n\r\n            let data = `${messageLocale.embed.fields.current_temp}: \\`${currentTemp}°C\\`\r\n                ${messageLocale.embed.fields.target_temp}:\\`${targetTemp}°C\\``\r\n\r\n            if(typeof(temps[temp].power) !== 'undefined') {\r\n                const power = calculatePercent(temps[temp].power)\r\n                data = `${data}\r\n                ${messageLocale.embed.fields.current_power}:\\`${power}%\\``\r\n            }\r\n\r\n            if(typeof(temps[temp].speed) !== 'undefined') {\r\n                const {speed} = temps[temp]\r\n                data = `${data}\r\n                ${messageLocale.embed.fields.current_speed}:\\`${speed}rpm\\``\r\n            }\r\n\r\n            tempEmbed.addField(`❄${temp}`, data)\r\n        }\r\n    }\r\n    return {embeds: [tempEmbed], files: [iconAttachment]}\r\n}\r\n\r\nfunction calculatePercent (input) {\r\n  const percent = 100 * input\r\n  return percent.toFixed(0)\r\n}","const args = process.argv.slice(2)\r\n\r\nconst logSymbols = require('log-symbols')\r\n\r\nconst locale = require('../../utils/localeUtil')\r\nconst timelapseUtil = require('../../utils/timelapseUtil')\r\nconst variablesUtil = require('../../utils/variablesUtil')\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\n\r\nmodule.exports.reply = async (interaction) => {\r\n    try {\r\n        if (!config.timelapse.enable) {\r\n            await interaction.reply(locale.errors.command_disabled)\r\n            return\r\n        }\r\n\r\n        if (variablesUtil.getLastPrintJob() === '') {\r\n            await interaction.reply(locale.errors.no_timelapse)\r\n            return\r\n        }\r\n\r\n        await interaction.deferReply()\r\n\r\n        const timelapseEmbed = timelapseUtil.getEmbed()\r\n\r\n        await interaction.editReply(timelapseEmbed)\r\n\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Timelapse Command: ${error}`.error)\r\n        await interaction.reply(locale.errors.command_failed)\r\n    }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 25326;\nmodule.exports = webpackEmptyContext;","const handlers = require('../buttons')\r\n\r\nconst enableEvent = (discordClient) => {\r\n  discordClient.on('interactionCreate', (interaction) => {\r\n    if (!interaction.isButton()) {return}\r\n\r\n    const { message, client } = interaction\r\n\r\n    if (message.author.id !== client.user.id) { return }\r\n\r\n    handlers(interaction)\r\n  })\r\n}\r\nmodule.exports = enableEvent","const buttonClick = require('./buttonClick')\r\nconst selectClick = require('./selectClick')\r\nconst upload = require('./upload')\r\n\r\nconst enableEvent = (discordClient) => {\r\n  upload(discordClient)\r\n  buttonClick(discordClient)\r\n  selectClick(discordClient)\r\n}\r\nmodule.exports = enableEvent","const handlers = require('../selection')\r\n\r\nconst enableEvent = (discordClient) => {\r\n  discordClient.on('interactionCreate', (interaction) => {\r\n    if (!interaction.isSelectMenu()) {return}\r\n    handlers(interaction)\r\n  })\r\n}\r\nmodule.exports = enableEvent","const args = process.argv.slice(2)\r\n\r\nconst axios = require('axios')\r\nconst FormData = require('form-data')\r\nconst fs = require('fs')\r\nconst https = require('https')\r\nconst logSymbols = require('log-symbols')\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\nconst database = require('../../utils/databaseUtil')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\n\r\nconst uploadList = []\r\nlet uploadWaitTimer = 0\r\nlet uploadInProgress = false\r\nlet discordClient\r\n\r\nconst enableEvent = function (dcClient) {\r\n  discordClient = dcClient\r\n  discordClient.on('messageCreate', async (msg) => {\r\n    if (msg.channel.type !== 'text' && msg.channel.type !== 'dm') {\r\n      return\r\n    }\r\n    if (msg.attachments.array().length === 0) {\r\n      return\r\n    }\r\n    if (!msg.attachments.array()[0].name.endsWith('.gcode')) {\r\n      return\r\n    }\r\n\r\n    let guildid\r\n\r\n    if (msg.guild !== null) {\r\n      guildid = msg.guild.id\r\n\r\n      const guilddatabase = database.getGuildDatabase(msg.guild)\r\n      const {broadcastchannels} = guilddatabase\r\n      \r\n      if (!broadcastchannels.includes(msg.channel.id)) {\r\n        return\r\n      }\r\n    }\r\n    if (!await permission.hasAdmin(msg.author, guildid, discordClient)) {\r\n      return\r\n    }\r\n    upload(msg)\r\n  })\r\n}\r\nmodule.exports = enableEvent\r\n\r\nfunction upload(message) {\r\n  uploadList.push(message)\r\n  if (uploadWaitTimer === 0) {\r\n    uploadWaitTimer = 5\r\n    const timer = setInterval(() => {\r\n      if (uploadWaitTimer === 0) {\r\n        uploadNext()\r\n        clearInterval(timer)\r\n      } else {\r\n        uploadWaitTimer --\r\n      }\r\n    }, 1000)\r\n  }\r\n  uploadWaitTimer = 5\r\n}\r\n\r\nfunction uploadNext() {\r\n  if (uploadList.length === 0) {\r\n    return\r\n  }\r\n  if (uploadWaitTimer !== 0) {\r\n    return\r\n  }\r\n  if (uploadInProgress) {\r\n    return\r\n  }\r\n  uploadFile(uploadList[0])\r\n  uploadList.splice(0, 1)\r\n}\r\n\r\nasync function uploadFile(message) {\r\n  const [file] = message.attachments.array()\r\n  const formData = new FormData()\r\n  const tempFile = fs.createWriteStream(`temp/${file.name.replace(' ', '_')}`)\r\n  const loadingReaction = await message.react('🔄')\r\n  uploadInProgress = true\r\n  tempFile.on('finish', () => {\r\n    console.log(logSymbols.info, `upload ${file.name.replace(' ', '_')}`.upload)\r\n    formData.append('file', fs.createReadStream(`temp/${file.name.replace(' ', '_')}`), file.name)\r\n    axios\r\n      .post(`${config.connection.moonraker_url}/server/files/upload`, formData, {\r\n        headers: {\r\n          'X-Api-Key': config.connection.moonraker_token,\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      })\r\n      .then(async res => {\r\n        console.log(logSymbols.success, `uploaded ${file.name.replace(' ', '_')}`.uploadsuccess)\r\n        loadingReaction.users.remove(discordClient.user)\r\n        message.react('✅')\r\n        fs.unlink(`temp/${file.name.replace(' ', '_')}`, (error) => {\r\n          if (error) {\r\n            console.log(logSymbols.error, `Upload Event: ${error}`.error)\r\n          }\r\n        })\r\n        uploadInProgress = false\r\n        setTimeout(uploadNext, 250)\r\n      })\r\n      .catch(error => {\r\n        if (error) {\r\n            console.log(logSymbols.error, `Upload Event: ${error}`.error)\r\n          message.channel.send(locale.errors.check_console)\r\n          console.log(logSymbols.error, 'Upload Failed! Check your config!'.error)\r\n          fs.unlink(`temp/${file.name.replace(' ', '_')}`, (error2) => {\r\n            if (error2) {\r\n            console.log(logSymbols.error, `Upload Event: ${error2}`.error)\r\n            }\r\n          })\r\n          uploadInProgress = false\r\n        setTimeout(uploadNext, 250)\r\n        }\r\n      })\r\n  })\r\n  https.get(file.url, (response) => {\r\n    response.pipe(tempFile)\r\n  })\r\n}\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 41386;\nmodule.exports = webpackEmptyContext;","const viewPrintJob = require('./viewPrintJob')\r\n\r\nmodule.exports = (selection) => {\r\n  viewPrintJob(selection)\r\n}","const { waitUntil } = require('async-wait-until')\r\nconst Discord = require('discord.js')\r\n\r\nconst moonrakerClient = require('../../clients/moonrakerClient')\r\nconst chatUtil = require('../../utils/chatUtil')\r\nconst handlers = require('../../utils/handlerUtil')\r\nconst locale = require('../../utils/localeUtil')\r\nconst permission = require('../../utils/permissionUtil')\r\n\r\nlet commandFeedback\r\nlet connection\r\n\r\nlet lastid = 0\r\n\r\nmodule.exports = async (selection) => {\r\n    const {message, user, guildId, client, customId, values} = selection\r\n\r\n    if (message.author.id !== client.user.id) { return }\r\n    if (customId !== 'view_printjob') { return }\r\n\r\n    if (!await permission.hasAdmin(user, guildId, client)) {\r\n        await selection.reply(message.channel.send(locale.getAdminOnlyError(user.username)))\r\n        return\r\n    }\r\n\r\n    if (typeof (commandFeedback) !== 'undefined') {\r\n        await selection.reply(locale.getCommandNotReadyError(user.username))\r\n        return\r\n    }\r\n\r\n    const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n    connection = moonrakerClient.getConnection()\r\n\r\n    let timeout = 0\r\n\r\n    await message.removeAttachments()\r\n\r\n    await selection.update(chatUtil.getWaitEmbed(user, locale.fileinfo.title, 'thumbnail_not_found.png'))\r\n\r\n    const [gcodeFile] = values\r\n\r\n    connection.on('message', handler)\r\n    connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"server.files.metadata\", \"params\": {\"filename\": \"${gcodeFile}\"}, \"id\": ${id}}`)\r\n\r\n    const feedbackInterval = setInterval(async () => {\r\n        if (typeof (commandFeedback) !== 'undefined') {\r\n            if( lastid === id ) { return }\r\n            lastid = id\r\n\r\n            await message.removeAttachments()\r\n\r\n            if (commandFeedback === 'Not Found!') {\r\n                const fileNotFoundEmbed = new Discord.MessageEmbed()\r\n                    .setColor('#c90000')\r\n                    .setAuthor(gcodeFile)\r\n                    .setDescription(locale.errors.file_not_found)\r\n                await message.edit({\r\n                    embeds: [fileNotFoundEmbed]\r\n                })\r\n            } else {\r\n                await message.edit(commandFeedback)\r\n            }\r\n            lastid = 0\r\n            commandFeedback = undefined\r\n            connection.removeListener('message', handler)\r\n            clearInterval(feedbackInterval)\r\n        }\r\n        if (timeout === 4) {\r\n            await message.removeAttachments()\r\n\r\n            const timeoutEmbed = new Discord.MessageEmbed()\r\n                .setColor('#c90000')\r\n                .setAuthor(gcodeFile)\r\n                .setDescription(locale.errors.command_timeout)\r\n            await selection.message.edit({\r\n                embeds: [timeoutEmbed]\r\n            })\r\n            commandFeedback = undefined\r\n            clearInterval(feedbackInterval)\r\n            connection.removeListener('message', handler)\r\n        }\r\n        timeout++\r\n    }, 500)\r\n}\r\n\r\nasync function handler (message) {\r\n    commandFeedback = await handlers.printFileHandler(message, locale.fileinfo.title, '#0099ff')\r\n    await waitUntil(() => typeof(commandFeedback) !== 'undefined', { timeout: Number.POSITIVE_INFINITY })\r\n    connection.removeListener('message', handler)\r\n}","var map = {\n\t\"./de.json\": 16494,\n\t\"./en.json\": 59748,\n\t\"./fr.json\": 43851,\n\t\"./nl.json\": 5706,\n\t\"./ro.json\": 51640,\n\t\"./zf.json\": 70078\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 56848;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlashCommandAssertions = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./messages/formatters\"), exports);\nexports.SlashCommandAssertions = tslib_1.__importStar(require(\"./interactions/slashCommands/Assertions\"));\ntslib_1.__exportStar(require(\"./interactions/slashCommands/SlashCommandBuilder\"), exports);\ntslib_1.__exportStar(require(\"./interactions/slashCommands/SlashCommandSubcommands\"), exports);\ntslib_1.__exportStar(require(\"./interactions/slashCommands/options/boolean\"), exports);\ntslib_1.__exportStar(require(\"./interactions/slashCommands/options/channel\"), exports);\ntslib_1.__exportStar(require(\"./interactions/slashCommands/options/integer\"), exports);\ntslib_1.__exportStar(require(\"./interactions/slashCommands/options/mentionable\"), exports);\ntslib_1.__exportStar(require(\"./interactions/slashCommands/options/role\"), exports);\ntslib_1.__exportStar(require(\"./interactions/slashCommands/options/string\"), exports);\ntslib_1.__exportStar(require(\"./interactions/slashCommands/options/user\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertReturnOfBuilder = exports.validateMaxChoicesLength = exports.validateMaxOptionsLength = exports.validateDescription = exports.validateName = exports.validateRequiredParameters = void 0;\nconst tslib_1 = require(\"tslib\");\nconst is_1 = tslib_1.__importDefault(require(\"@sindresorhus/is\"));\nconst ow_1 = tslib_1.__importDefault(require(\"ow\"));\nfunction validateRequiredParameters(name, description, options) {\n    // Assert name matches all conditions\n    validateName(name);\n    // Assert description conditions\n    validateDescription(description);\n    // Assert options conditions\n    validateMaxOptionsLength(options);\n}\nexports.validateRequiredParameters = validateRequiredParameters;\nconst namePredicate = ow_1.default.string.lowercase\n    .minLength(1)\n    .maxLength(32)\n    .addValidator({\n    message: (value, label) => `Expected ${label} to match \"^[\\\\p{L}\\\\p{N}_-]+$\", got ${value} instead`,\n    validator: (value) => /^[\\p{L}\\p{N}_-]+$/u.test(value),\n});\nfunction validateName(name) {\n    ow_1.default(name, 'name', namePredicate);\n}\nexports.validateName = validateName;\nconst descriptionPredicate = ow_1.default.string.minLength(1).maxLength(100);\nfunction validateDescription(description) {\n    ow_1.default(description, 'description', descriptionPredicate);\n}\nexports.validateDescription = validateDescription;\nconst maxArrayLengthPredicate = ow_1.default.array.maxLength(25);\nfunction validateMaxOptionsLength(options) {\n    ow_1.default(options, 'options', maxArrayLengthPredicate);\n}\nexports.validateMaxOptionsLength = validateMaxOptionsLength;\nfunction validateMaxChoicesLength(choices) {\n    ow_1.default(choices, 'choices', maxArrayLengthPredicate);\n}\nexports.validateMaxChoicesLength = validateMaxChoicesLength;\nfunction assertReturnOfBuilder(input, ExpectedInstanceOf) {\n    const instanceName = ExpectedInstanceOf.name;\n    if (is_1.default.nullOrUndefined(input)) {\n        throw new TypeError(`Expected to receive a ${instanceName} builder, got ${input === null ? 'null' : 'undefined'} instead.`);\n    }\n    if (is_1.default.primitive(input)) {\n        throw new TypeError(`Expected to receive a ${instanceName} builder, got a primitive (${typeof input}) instead.`);\n    }\n    if (!(input instanceof ExpectedInstanceOf)) {\n        const casted = input;\n        const constructorName = is_1.default.function_(input) ? input.name : casted.constructor.name;\n        const stringTag = Reflect.get(casted, Symbol.toStringTag);\n        const fullResultName = stringTag ? `${constructorName} [${stringTag}]` : constructorName;\n        throw new TypeError(`Expected to receive a ${instanceName} builder, got ${fullResultName} instead.`);\n    }\n}\nexports.assertReturnOfBuilder = assertReturnOfBuilder;\n//# sourceMappingURL=Assertions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlashCommandBuilder = void 0;\nconst tslib_1 = require(\"tslib\");\nconst ts_mixer_1 = require(\"ts-mixer\");\nconst Assertions_1 = require(\"./Assertions\");\nconst NameAndDescription_1 = require(\"./mixins/NameAndDescription\");\nconst CommandOptions_1 = require(\"./mixins/CommandOptions\");\nconst SlashCommandSubcommands_1 = require(\"./SlashCommandSubcommands\");\nlet SlashCommandBuilder = class SlashCommandBuilder {\n    constructor() {\n        /**\n         * The name of this slash command\n         */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The description of this slash command\n         */\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The options of this slash command\n         */\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    /**\n     * Returns the final data that should be sent to Discord.\n     *\n     * **Note:** Calling this function will validate required properties based on their conditions.\n     */\n    toJSON() {\n        Assertions_1.validateRequiredParameters(this.name, this.description, this.options);\n        return {\n            name: this.name,\n            description: this.description,\n            options: this.options.map((option) => option.toJSON()),\n        };\n    }\n    /**\n     * Adds a new subcommand group to this command\n     * @param input A function that returns a subcommand group builder, or an already built builder\n     */\n    addSubcommandGroup(input) {\n        const { options } = this;\n        // First, assert options conditions - we cannot have more than 25 options\n        Assertions_1.validateMaxOptionsLength(options);\n        // Make sure there is no subcommand at the root level - if there is, throw\n        const hasSubcommands = options.some((item) => item instanceof SlashCommandSubcommands_1.SlashCommandSubcommandBuilder);\n        if (hasSubcommands)\n            throw new RangeError(`You cannot mix subcommands and subcommand groups at the root level.`);\n        // Get the final result\n        const result = typeof input === 'function' ? input(new SlashCommandSubcommands_1.SlashCommandSubcommandGroupBuilder()) : input;\n        Assertions_1.assertReturnOfBuilder(result, SlashCommandSubcommands_1.SlashCommandSubcommandGroupBuilder);\n        // Push it\n        options.push(result);\n        return this;\n    }\n    /**\n     * Adds a new subcommand to this command\n     * @param input A function that returns a subcommand builder, or an already built builder\n     */\n    addSubcommand(input) {\n        const { options } = this;\n        // First, assert options conditions - we cannot have more than 25 options\n        Assertions_1.validateMaxOptionsLength(options);\n        // Make sure there is no subcommand at the root level - if there is, throw\n        const hasSubcommandGroups = options.some((item) => item instanceof SlashCommandSubcommands_1.SlashCommandSubcommandGroupBuilder);\n        if (hasSubcommandGroups)\n            throw new RangeError(`You cannot mix subcommands and subcommand groups at the root level.`);\n        // Get the final result\n        const result = typeof input === 'function' ? input(new SlashCommandSubcommands_1.SlashCommandSubcommandBuilder()) : input;\n        Assertions_1.assertReturnOfBuilder(result, SlashCommandSubcommands_1.SlashCommandSubcommandBuilder);\n        // Push it\n        options.push(result);\n        return this;\n    }\n};\nSlashCommandBuilder = tslib_1.__decorate([\n    ts_mixer_1.mix(CommandOptions_1.SharedSlashCommandOptions, NameAndDescription_1.SharedNameAndDescription)\n], SlashCommandBuilder);\nexports.SlashCommandBuilder = SlashCommandBuilder;\n//# sourceMappingURL=SlashCommandBuilder.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlashCommandSubcommandBuilder = exports.SlashCommandSubcommandGroupBuilder = void 0;\nconst tslib_1 = require(\"tslib\");\nrequire(\"discord-api-types/v9\");\nconst ts_mixer_1 = require(\"ts-mixer\");\nconst Assertions_1 = require(\"./Assertions\");\nconst CommandOptions_1 = require(\"./mixins/CommandOptions\");\nconst NameAndDescription_1 = require(\"./mixins/NameAndDescription\");\n/**\n * Represents a folder for subcommands\n *\n * For more information, go to https://discord.com/developers/docs/interactions/slash-commands#subcommands-and-subcommand-groups\n */\nlet SlashCommandSubcommandGroupBuilder = class SlashCommandSubcommandGroupBuilder {\n    constructor() {\n        /**\n         * The name of this subcommand group\n         */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The description of this subcommand group\n         */\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The subcommands part of this subcommand group\n         */\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    /**\n     * Adds a new subcommand to this group\n     * @param input A function that returns a subcommand builder, or an already built builder\n     */\n    addSubcommand(input) {\n        const { options } = this;\n        // First, assert options conditions - we cannot have more than 25 options\n        Assertions_1.validateMaxOptionsLength(options);\n        // Get the final result\n        const result = typeof input === 'function' ? input(new SlashCommandSubcommandBuilder()) : input;\n        Assertions_1.assertReturnOfBuilder(result, SlashCommandSubcommandBuilder);\n        // Push it\n        options.push(result);\n        return this;\n    }\n    toJSON() {\n        Assertions_1.validateRequiredParameters(this.name, this.description, this.options);\n        return {\n            type: 2 /* SubcommandGroup */,\n            name: this.name,\n            description: this.description,\n            options: this.options.map((option) => option.toJSON()),\n        };\n    }\n};\nSlashCommandSubcommandGroupBuilder = tslib_1.__decorate([\n    ts_mixer_1.mix(NameAndDescription_1.SharedNameAndDescription)\n], SlashCommandSubcommandGroupBuilder);\nexports.SlashCommandSubcommandGroupBuilder = SlashCommandSubcommandGroupBuilder;\n/**\n * Represents a subcommand\n *\n * For more information, go to https://discord.com/developers/docs/interactions/slash-commands#subcommands-and-subcommand-groups\n */\nlet SlashCommandSubcommandBuilder = class SlashCommandSubcommandBuilder {\n    constructor() {\n        /**\n         * The name of this subcommand\n         */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The description of this subcommand\n         */\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        /**\n         * The options of this subcommand\n         */\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    toJSON() {\n        Assertions_1.validateRequiredParameters(this.name, this.description, this.options);\n        return {\n            type: 1 /* Subcommand */,\n            name: this.name,\n            description: this.description,\n            options: this.options.map((option) => option.toJSON()),\n        };\n    }\n};\nSlashCommandSubcommandBuilder = tslib_1.__decorate([\n    ts_mixer_1.mix(NameAndDescription_1.SharedNameAndDescription, CommandOptions_1.SharedSlashCommandOptions)\n], SlashCommandSubcommandBuilder);\nexports.SlashCommandSubcommandBuilder = SlashCommandSubcommandBuilder;\n//# sourceMappingURL=SlashCommandSubcommands.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlashCommandOptionBase = void 0;\nconst tslib_1 = require(\"tslib\");\nconst ow_1 = tslib_1.__importDefault(require(\"ow\"));\nconst Assertions_1 = require(\"../Assertions\");\nconst NameAndDescription_1 = require(\"./NameAndDescription\");\nclass SlashCommandOptionBase extends NameAndDescription_1.SharedNameAndDescription {\n    constructor(type) {\n        super();\n        Object.defineProperty(this, \"required\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.type = type;\n    }\n    /**\n     * Marks the option as required\n     * @param required If this option should be required\n     */\n    setRequired(required) {\n        // Assert that you actually passed a boolean\n        ow_1.default(required, 'required', ow_1.default.boolean);\n        this.required = required;\n        return this;\n    }\n    toJSON() {\n        Assertions_1.validateRequiredParameters(this.name, this.description, []);\n        // Assert that you actually passed a boolean\n        ow_1.default(this.required, 'required', ow_1.default.boolean);\n        return {\n            type: this.type,\n            name: this.name,\n            description: this.description,\n            required: this.required,\n        };\n    }\n}\nexports.SlashCommandOptionBase = SlashCommandOptionBase;\n//# sourceMappingURL=CommandOptionBase.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApplicationCommandOptionWithChoicesBase = void 0;\nconst tslib_1 = require(\"tslib\");\nrequire(\"discord-api-types/v9\");\nconst ow_1 = tslib_1.__importDefault(require(\"ow\"));\nconst Assertions_1 = require(\"../Assertions\");\nconst CommandOptionBase_1 = require(\"./CommandOptionBase\");\nconst stringPredicate = ow_1.default.string.minLength(1).maxLength(100);\nconst integerPredicate = ow_1.default.number.finite;\n// TODO: See resolution for sindresorhus/ow#217 in relation to this cast\nconst choicesPredicate = ow_1.default.array.ofType(ow_1.default.array.exactShape([stringPredicate, ow_1.default.any(ow_1.default.string, integerPredicate)]));\nclass ApplicationCommandOptionWithChoicesBase extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"choices\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    /**\n     * Adds a choice for this option\n     * @param name The name of the choice\n     * @param value The value of the choice\n     */\n    addChoice(name, value) {\n        this.choices ?? (this.choices = []);\n        Assertions_1.validateMaxChoicesLength(this.choices);\n        // Validate name\n        ow_1.default(name, `${this.type === 3 /* String */ ? 'string' : 'integer'} choice name`, stringPredicate);\n        // Validate the value\n        if (this.type === 3 /* String */)\n            ow_1.default(value, 'string choice value', stringPredicate);\n        else\n            ow_1.default(value, 'integer choice value', integerPredicate);\n        this.choices.push({ name, value });\n        return this;\n    }\n    /**\n     * Adds multiple choices for this option\n     * @param choices The choices to add\n     */\n    addChoices(choices) {\n        ow_1.default(choices, `${this.type === 3 /* String */ ? 'string' : 'integer'} choices`, choicesPredicate);\n        for (const [label, value] of choices)\n            this.addChoice(label, value);\n        return this;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            choices: this.choices,\n        };\n    }\n}\nexports.ApplicationCommandOptionWithChoicesBase = ApplicationCommandOptionWithChoicesBase;\n//# sourceMappingURL=CommandOptionWithChoices.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SharedSlashCommandOptions = void 0;\nconst Assertions_1 = require(\"../Assertions\");\nconst boolean_1 = require(\"../options/boolean\");\nconst channel_1 = require(\"../options/channel\");\nconst integer_1 = require(\"../options/integer\");\nconst mentionable_1 = require(\"../options/mentionable\");\nconst role_1 = require(\"../options/role\");\nconst string_1 = require(\"../options/string\");\nconst user_1 = require(\"../options/user\");\nclass SharedSlashCommandOptions {\n    constructor() {\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    /**\n     * Adds a boolean option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addBooleanOption(input) {\n        return this._sharedAddOptionMethod(input, boolean_1.SlashCommandBooleanOption);\n    }\n    /**\n     * Adds a user option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addUserOption(input) {\n        return this._sharedAddOptionMethod(input, user_1.SlashCommandUserOption);\n    }\n    /**\n     * Adds a channel option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addChannelOption(input) {\n        return this._sharedAddOptionMethod(input, channel_1.SlashCommandChannelOption);\n    }\n    /**\n     * Adds a role option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addRoleOption(input) {\n        return this._sharedAddOptionMethod(input, role_1.SlashCommandRoleOption);\n    }\n    /**\n     * Adds a mentionable option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addMentionableOption(input) {\n        return this._sharedAddOptionMethod(input, mentionable_1.SlashCommandMentionableOption);\n    }\n    /**\n     * Adds a string option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addStringOption(input) {\n        return this._sharedAddOptionMethod(input, string_1.SlashCommandStringOption);\n    }\n    /**\n     * Adds an integer option\n     * @param input A function that returns an option builder, or an already built builder\n     */\n    addIntegerOption(input) {\n        return this._sharedAddOptionMethod(input, integer_1.SlashCommandIntegerOption);\n    }\n    _sharedAddOptionMethod(input, Instance) {\n        const { options } = this;\n        // First, assert options conditions - we cannot have more than 25 options\n        Assertions_1.validateMaxOptionsLength(options);\n        // Get the final result\n        const result = typeof input === 'function' ? input(new Instance()) : input;\n        Assertions_1.assertReturnOfBuilder(result, Instance);\n        // Push it\n        options.push(result);\n        return this;\n    }\n}\nexports.SharedSlashCommandOptions = SharedSlashCommandOptions;\n//# sourceMappingURL=CommandOptions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SharedNameAndDescription = void 0;\nconst Assertions_1 = require(\"../Assertions\");\nclass SharedNameAndDescription {\n    constructor() {\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    /**\n     * Sets the name\n     * @param name The name\n     */\n    setName(name) {\n        // Assert the name matches the conditions\n        Assertions_1.validateName(name);\n        Reflect.set(this, 'name', name);\n        return this;\n    }\n    /**\n     * Sets the description\n     * @param description The description\n     */\n    setDescription(description) {\n        // Assert the description matches the conditions\n        Assertions_1.validateDescription(description);\n        Reflect.set(this, 'description', description);\n        return this;\n    }\n}\nexports.SharedNameAndDescription = SharedNameAndDescription;\n//# sourceMappingURL=NameAndDescription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlashCommandBooleanOption = void 0;\nrequire(\"discord-api-types/v9\");\nconst CommandOptionBase_1 = require(\"../mixins/CommandOptionBase\");\nclass SlashCommandBooleanOption extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(5 /* Boolean */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 5 /* Boolean */\n        });\n    }\n}\nexports.SlashCommandBooleanOption = SlashCommandBooleanOption;\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlashCommandChannelOption = void 0;\nrequire(\"discord-api-types/v9\");\nconst CommandOptionBase_1 = require(\"../mixins/CommandOptionBase\");\nclass SlashCommandChannelOption extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(7 /* Channel */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 7 /* Channel */\n        });\n    }\n}\nexports.SlashCommandChannelOption = SlashCommandChannelOption;\n//# sourceMappingURL=channel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlashCommandIntegerOption = void 0;\nrequire(\"discord-api-types/v9\");\nconst CommandOptionWithChoices_1 = require(\"../mixins/CommandOptionWithChoices\");\nclass SlashCommandIntegerOption extends CommandOptionWithChoices_1.ApplicationCommandOptionWithChoicesBase {\n    constructor() {\n        super(4 /* Integer */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4 /* Integer */\n        });\n    }\n}\nexports.SlashCommandIntegerOption = SlashCommandIntegerOption;\n//# sourceMappingURL=integer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlashCommandMentionableOption = void 0;\nrequire(\"discord-api-types/v9\");\nconst CommandOptionBase_1 = require(\"../mixins/CommandOptionBase\");\nclass SlashCommandMentionableOption extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(9 /* Mentionable */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 9 /* Mentionable */\n        });\n    }\n}\nexports.SlashCommandMentionableOption = SlashCommandMentionableOption;\n//# sourceMappingURL=mentionable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlashCommandRoleOption = void 0;\nrequire(\"discord-api-types/v9\");\nconst CommandOptionBase_1 = require(\"../mixins/CommandOptionBase\");\nclass SlashCommandRoleOption extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(8 /* Role */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 8 /* Role */\n        });\n    }\n}\nexports.SlashCommandRoleOption = SlashCommandRoleOption;\n//# sourceMappingURL=role.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlashCommandStringOption = void 0;\nrequire(\"discord-api-types/v9\");\nconst CommandOptionWithChoices_1 = require(\"../mixins/CommandOptionWithChoices\");\nclass SlashCommandStringOption extends CommandOptionWithChoices_1.ApplicationCommandOptionWithChoicesBase {\n    constructor() {\n        super(3 /* String */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3 /* String */\n        });\n    }\n}\nexports.SlashCommandStringOption = SlashCommandStringOption;\n//# sourceMappingURL=string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlashCommandUserOption = void 0;\nrequire(\"discord-api-types/v9\");\nconst CommandOptionBase_1 = require(\"../mixins/CommandOptionBase\");\nclass SlashCommandUserOption extends CommandOptionBase_1.SlashCommandOptionBase {\n    constructor() {\n        super(6 /* User */);\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 6 /* User */\n        });\n    }\n}\nexports.SlashCommandUserOption = SlashCommandUserOption;\n//# sourceMappingURL=user.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Faces = exports.TimestampStyles = exports.time = exports.formatEmoji = exports.roleMention = exports.channelMention = exports.memberNicknameMention = exports.userMention = exports.spoiler = exports.hyperlink = exports.hideLinkEmbed = exports.blockQuote = exports.quote = exports.strikethrough = exports.underscore = exports.bold = exports.italic = exports.inlineCode = exports.codeBlock = void 0;\nfunction codeBlock(language, content) {\n    return typeof content === 'undefined' ? `\\`\\`\\`\\n${language}\\`\\`\\`` : `\\`\\`\\`${language}\\n${content}\\`\\`\\``;\n}\nexports.codeBlock = codeBlock;\n/**\n * Wraps the content inside \\`backticks\\`, which formats it as inline code.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction inlineCode(content) {\n    return `\\`${content}\\``;\n}\nexports.inlineCode = inlineCode;\n/**\n * Formats the content into italic text.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction italic(content) {\n    return `_${content}_`;\n}\nexports.italic = italic;\n/**\n * Formats the content into bold text.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction bold(content) {\n    return `**${content}**`;\n}\nexports.bold = bold;\n/**\n * Formats the content into underscored text.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction underscore(content) {\n    return `__${content}__`;\n}\nexports.underscore = underscore;\n/**\n * Formats the content into strike-through text.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction strikethrough(content) {\n    return `~~${content}~~`;\n}\nexports.strikethrough = strikethrough;\n/**\n * Formats the content into a quote. This needs to be at the start of the line for Discord to format it.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction quote(content) {\n    return `> ${content}`;\n}\nexports.quote = quote;\n/**\n * Formats the content into a block quote. This needs to be at the start of the line for Discord to format it.\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction blockQuote(content) {\n    return `>>> ${content}`;\n}\nexports.blockQuote = blockQuote;\nfunction hideLinkEmbed(url) {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return `<${url}>`;\n}\nexports.hideLinkEmbed = hideLinkEmbed;\nfunction hyperlink(content, url, title) {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return title ? `[${content}](${url} \"${title}\")` : `[${content}](${url})`;\n}\nexports.hyperlink = hyperlink;\n/**\n * Wraps the content inside spoiler (hidden text).\n * @param content The content to wrap.\n * @returns The formatted content.\n */\nfunction spoiler(content) {\n    return `||${content}||`;\n}\nexports.spoiler = spoiler;\n/**\n * Formats a user ID into a user mention.\n * @param userId The user ID to format.\n * @returns The formatted user mention.\n */\nfunction userMention(userId) {\n    return `<@${userId}>`;\n}\nexports.userMention = userMention;\n/**\n * Formats a user ID into a member-nickname mention.\n * @param memberId The user ID to format.\n * @returns The formatted member-nickname mention.\n */\nfunction memberNicknameMention(memberId) {\n    return `<@!${memberId}>`;\n}\nexports.memberNicknameMention = memberNicknameMention;\n/**\n * Formats a channel ID into a channel mention.\n * @param channelId The channel ID to format.\n * @returns The formatted channel mention.\n */\nfunction channelMention(channelId) {\n    return `<#${channelId}>`;\n}\nexports.channelMention = channelMention;\n/**\n * Formats a role ID into a role mention.\n * @param roleId The role ID to format.\n * @returns The formatted role mention.\n */\nfunction roleMention(roleId) {\n    return `<@&${roleId}>`;\n}\nexports.roleMention = roleMention;\n/**\n * Formats an emoji ID into a fully qualified emoji identifier\n * @param emojiId The emoji ID to format.\n * @param animated Whether the emoji is animated or not. Defaults to `false`\n * @returns The formatted emoji.\n */\nfunction formatEmoji(emojiId, animated = false) {\n    return `<${animated ? 'a' : ''}:_:${emojiId}>`;\n}\nexports.formatEmoji = formatEmoji;\nfunction time(timeOrSeconds, style) {\n    if (typeof timeOrSeconds !== 'number') {\n        timeOrSeconds = Math.floor((timeOrSeconds?.getTime() ?? Date.now()) / 1000);\n    }\n    return typeof style === 'string' ? `<t:${timeOrSeconds}:${style}>` : `<t:${timeOrSeconds}>`;\n}\nexports.time = time;\n/**\n * The [message formatting timestamp styles](https://discord.com/developers/docs/reference#message-formatting-timestamp-styles) supported by Discord.\n */\nexports.TimestampStyles = {\n    /**\n     * Short time format, consisting of hours and minutes, e.g. 16:20.\n     */\n    ShortTime: 't',\n    /**\n     * Long time format, consisting of hours, minutes, and seconds, e.g. 16:20:30.\n     */\n    LongTime: 'T',\n    /**\n     * Short date format, consisting of day, month, and year, e.g. 20/04/2021.\n     */\n    ShortDate: 'd',\n    /**\n     * Long date format, consisting of day, month, and year, e.g. 20 April 2021.\n     */\n    LongDate: 'D',\n    /**\n     * Short date-time format, consisting of short date and short time formats, e.g. 20 April 2021 16:20.\n     */\n    ShortDateTime: 'f',\n    /**\n     * Long date-time format, consisting of long date and short time formats, e.g. Tuesday, 20 April 2021 16:20.\n     */\n    LongDateTime: 'F',\n    /**\n     * Relative time format, consisting of a relative duration format, e.g. 2 months ago.\n     */\n    RelativeTime: 'R',\n};\n/**\n * An enum with all the available faces from Discord's native slash commands\n */\nvar Faces;\n(function (Faces) {\n    /**\n     * ¯\\\\_(ツ)\\\\_/¯\n     */\n    Faces[\"Shrug\"] = \"\\u00AF\\\\_(\\u30C4)\\\\_/\\u00AF\";\n    /**\n     * (╯°□°）╯︵ ┻━┻\n     */\n    Faces[\"Tableflip\"] = \"(\\u256F\\u00B0\\u25A1\\u00B0\\uFF09\\u256F\\uFE35 \\u253B\\u2501\\u253B\";\n    /**\n     * ┬─┬ ノ( ゜-゜ノ)\n     */\n    Faces[\"Unflip\"] = \"\\u252C\\u2500\\u252C \\u30CE( \\u309C-\\u309C\\u30CE)\";\n})(Faces = exports.Faces || (exports.Faces = {}));\n//# sourceMappingURL=formatters.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collection = void 0;\n/**\n * A Map with additional utility methods. This is used throughout discord.js rather than Arrays for anything that has\n * an ID, for significantly improved performance and ease-of-use.\n * @extends {Map}\n * @property {number} size - The amount of elements in this collection.\n */\nclass Collection extends Map {\n    /**\n     * Identical to [Map.get()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get).\n     * Gets an element with the specified key, and returns its value, or `undefined` if the element does not exist.\n     * @param {*} key - The key to get from this collection\n     * @returns {* | undefined}\n     */\n    get(key) {\n        return super.get(key);\n    }\n    /**\n     * Identical to [Map.set()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set).\n     * Sets a new element in the collection with the specified key and value.\n     * @param {*} key - The key of the element to add\n     * @param {*} value - The value of the element to add\n     * @returns {Collection}\n     */\n    set(key, value) {\n        return super.set(key, value);\n    }\n    /**\n     * Identical to [Map.has()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has).\n     * Checks if an element exists in the collection.\n     * @param {*} key - The key of the element to check for\n     * @returns {boolean} `true` if the element exists, `false` if it does not exist.\n     */\n    has(key) {\n        return super.has(key);\n    }\n    /**\n     * Identical to [Map.delete()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete).\n     * Deletes an element from the collection.\n     * @param {*} key - The key to delete from the collection\n     * @returns {boolean} `true` if the element was removed, `false` if the element does not exist.\n     */\n    delete(key) {\n        return super.delete(key);\n    }\n    /**\n     * Identical to [Map.clear()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear).\n     * Removes all elements from the collection.\n     * @returns {undefined}\n     */\n    clear() {\n        return super.clear();\n    }\n    /**\n     * Checks if all of the elements exist in the collection.\n     * @param {...*} keys - The keys of the elements to check for\n     * @returns {boolean} `true` if all of the elements exist, `false` if at least one does not exist.\n     */\n    hasAll(...keys) {\n        return keys.every((k) => super.has(k));\n    }\n    /**\n     * Checks if any of the elements exist in the collection.\n     * @param {...*} keys - The keys of the elements to check for\n     * @returns {boolean} `true` if any of the elements exist, `false` if none exist.\n     */\n    hasAny(...keys) {\n        return keys.some((k) => super.has(k));\n    }\n    first(amount) {\n        if (typeof amount === 'undefined')\n            return this.values().next().value;\n        if (amount < 0)\n            return this.last(amount * -1);\n        amount = Math.min(this.size, amount);\n        const iter = this.values();\n        return Array.from({ length: amount }, () => iter.next().value);\n    }\n    firstKey(amount) {\n        if (typeof amount === 'undefined')\n            return this.keys().next().value;\n        if (amount < 0)\n            return this.lastKey(amount * -1);\n        amount = Math.min(this.size, amount);\n        const iter = this.keys();\n        return Array.from({ length: amount }, () => iter.next().value);\n    }\n    last(amount) {\n        const arr = [...this.values()];\n        if (typeof amount === 'undefined')\n            return arr[arr.length - 1];\n        if (amount < 0)\n            return this.first(amount * -1);\n        if (!amount)\n            return [];\n        return arr.slice(-amount);\n    }\n    lastKey(amount) {\n        const arr = [...this.keys()];\n        if (typeof amount === 'undefined')\n            return arr[arr.length - 1];\n        if (amount < 0)\n            return this.firstKey(amount * -1);\n        if (!amount)\n            return [];\n        return arr.slice(-amount);\n    }\n    random(amount) {\n        const arr = [...this.values()];\n        if (typeof amount === 'undefined')\n            return arr[Math.floor(Math.random() * arr.length)];\n        if (!arr.length || !amount)\n            return [];\n        return Array.from({ length: Math.min(amount, arr.length) }, () => arr.splice(Math.floor(Math.random() * arr.length), 1)[0]);\n    }\n    randomKey(amount) {\n        const arr = [...this.keys()];\n        if (typeof amount === 'undefined')\n            return arr[Math.floor(Math.random() * arr.length)];\n        if (!arr.length || !amount)\n            return [];\n        return Array.from({ length: Math.min(amount, arr.length) }, () => arr.splice(Math.floor(Math.random() * arr.length), 1)[0]);\n    }\n    find(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        for (const [key, val] of this) {\n            if (fn(val, key, this))\n                return val;\n        }\n        return undefined;\n    }\n    findKey(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        for (const [key, val] of this) {\n            if (fn(val, key, this))\n                return key;\n        }\n        return undefined;\n    }\n    sweep(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        const previousSize = this.size;\n        for (const [key, val] of this) {\n            if (fn(val, key, this))\n                this.delete(key);\n        }\n        return previousSize - this.size;\n    }\n    filter(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        const results = new this.constructor[Symbol.species]();\n        for (const [key, val] of this) {\n            if (fn(val, key, this))\n                results.set(key, val);\n        }\n        return results;\n    }\n    partition(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        const results = [\n            new this.constructor[Symbol.species](),\n            new this.constructor[Symbol.species](),\n        ];\n        for (const [key, val] of this) {\n            if (fn(val, key, this)) {\n                results[0].set(key, val);\n            }\n            else {\n                results[1].set(key, val);\n            }\n        }\n        return results;\n    }\n    flatMap(fn, thisArg) {\n        const collections = this.map(fn, thisArg);\n        return new this.constructor[Symbol.species]().concat(...collections);\n    }\n    map(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        const iter = this.entries();\n        return Array.from({ length: this.size }, () => {\n            const [key, value] = iter.next().value;\n            return fn(value, key, this);\n        });\n    }\n    mapValues(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        const coll = new this.constructor[Symbol.species]();\n        for (const [key, val] of this)\n            coll.set(key, fn(val, key, this));\n        return coll;\n    }\n    some(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        for (const [key, val] of this) {\n            if (fn(val, key, this))\n                return true;\n        }\n        return false;\n    }\n    every(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        for (const [key, val] of this) {\n            if (!fn(val, key, this))\n                return false;\n        }\n        return true;\n    }\n    /**\n     * Applies a function to produce a single value. Identical in behavior to\n     * [Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).\n     * @param {Function} fn Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\n     * and `collection`\n     * @param {*} [initialValue] Starting value for the accumulator\n     * @returns {*}\n     * @example collection.reduce((acc, guild) => acc + guild.memberCount, 0);\n     */\n    reduce(fn, initialValue) {\n        let accumulator;\n        if (typeof initialValue !== 'undefined') {\n            accumulator = initialValue;\n            for (const [key, val] of this)\n                accumulator = fn(accumulator, val, key, this);\n            return accumulator;\n        }\n        let first = true;\n        for (const [key, val] of this) {\n            if (first) {\n                accumulator = val;\n                first = false;\n                continue;\n            }\n            accumulator = fn(accumulator, val, key, this);\n        }\n        // No items iterated.\n        if (first) {\n            throw new TypeError('Reduce of empty collection with no initial value');\n        }\n        return accumulator;\n    }\n    each(fn, thisArg) {\n        this.forEach(fn, thisArg);\n        return this;\n    }\n    tap(fn, thisArg) {\n        if (typeof thisArg !== 'undefined')\n            fn = fn.bind(thisArg);\n        fn(this);\n        return this;\n    }\n    /**\n     * Creates an identical shallow copy of this collection.\n     * @returns {Collection}\n     * @example const newColl = someColl.clone();\n     */\n    clone() {\n        return new this.constructor[Symbol.species](this);\n    }\n    /**\n     * Combines this collection with others into a new collection. None of the source collections are modified.\n     * @param {...Collection} collections Collections to merge\n     * @returns {Collection}\n     * @example const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n     */\n    concat(...collections) {\n        const newColl = this.clone();\n        for (const coll of collections) {\n            for (const [key, val] of coll)\n                newColl.set(key, val);\n        }\n        return newColl;\n    }\n    /**\n     * Checks if this collection shares identical items with another.\n     * This is different to checking for equality using equal-signs, because\n     * the collections may be different objects, but contain the same data.\n     * @param {Collection} collection Collection to compare with\n     * @returns {boolean} Whether the collections have identical contents\n     */\n    equals(collection) {\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (!collection)\n            return false; // runtime check\n        if (this === collection)\n            return true;\n        if (this.size !== collection.size)\n            return false;\n        for (const [key, value] of this) {\n            if (!collection.has(key) || value !== collection.get(key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * The sort method sorts the items of a collection in place and returns it.\n     * The sort is not necessarily stable in Node 10 or older.\n     * The default sort order is according to string Unicode code points.\n     * @param {Function} [compareFunction] Specifies a function that defines the sort order.\n     * If omitted, the collection is sorted according to each character's Unicode code point value,\n     * according to the string conversion of each element.\n     * @returns {Collection}\n     * @example collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n     */\n    sort(compareFunction = Collection.defaultSort) {\n        const entries = [...this.entries()];\n        entries.sort((a, b) => compareFunction(a[1], b[1], a[0], b[0]));\n        // Perform clean-up\n        super.clear();\n        // Set the new entries\n        for (const [k, v] of entries) {\n            super.set(k, v);\n        }\n        return this;\n    }\n    /**\n     * The intersect method returns a new structure containing items where the keys are present in both original structures.\n     * @param {Collection} other The other Collection to filter against\n     * @returns {Collection}\n     */\n    intersect(other) {\n        const coll = new this.constructor[Symbol.species]();\n        for (const [k, v] of other) {\n            if (this.has(k))\n                coll.set(k, v);\n        }\n        return coll;\n    }\n    /**\n     * The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.\n     * @param {Collection} other The other Collection to filter against\n     * @returns {Collection}\n     */\n    difference(other) {\n        const coll = new this.constructor[Symbol.species]();\n        for (const [k, v] of other) {\n            if (!this.has(k))\n                coll.set(k, v);\n        }\n        for (const [k, v] of this) {\n            if (!other.has(k))\n                coll.set(k, v);\n        }\n        return coll;\n    }\n    /**\n     * The sorted method sorts the items of a collection and returns it.\n     * The sort is not necessarily stable in Node 10 or older.\n     * The default sort order is according to string Unicode code points.\n     * @param {Function} [compareFunction] Specifies a function that defines the sort order.\n     * If omitted, the collection is sorted according to each character's Unicode code point value,\n     * according to the string conversion of each element.\n     * @returns {Collection}\n     * @example collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n     */\n    sorted(compareFunction = Collection.defaultSort) {\n        return new this.constructor[Symbol.species](this).sort((av, bv, ak, bk) => compareFunction(av, bv, ak, bk));\n    }\n    toJSON() {\n        // toJSON is called recursively by JSON.stringify.\n        return [...this.values()];\n    }\n    static defaultSort(firstValue, secondValue) {\n        return Number(firstValue > secondValue) || Number(firstValue === secondValue) - 1;\n    }\n}\nexports.Collection = Collection;\nCollection.default = Collection;\nexports.default = Collection;\n//# sourceMappingURL=data:application/json;base64,","var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar Stream = require('stream').Stream;\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response or not a stream\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) && !(value instanceof Stream))) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity –> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err && err !== 'Unknown stream') {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    if (length) {\n      request.setHeader('Content-Length', length);\n    }\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n","// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * The AsyncQueue class used to sequentialize burst requests\n */\nclass AsyncQueue {\n    constructor() {\n        /**\n         * The promises array\n         */\n        Object.defineProperty(this, \"promises\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    /**\n     * The remaining amount of queued promises\n     */\n    get remaining() {\n        return this.promises.length;\n    }\n    /**\n     * Waits for last promise and queues a new one\n     * @example\n     * ```\n     * const queue = new AsyncQueue();\n     * async function request(url, options) {\n     *     await queue.wait();\n     *     try {\n     *         const result = await fetch(url, options);\n     *         // Do some operations with 'result'\n     *     } finally {\n     *         // Remove first entry from the queue and resolve for the next entry\n     *         queue.shift();\n     *     }\n     * }\n     *\n     * request(someUrl1, someOptions1); // Will call fetch() immediately\n     * request(someUrl2, someOptions2); // Will call fetch() after the first finished\n     * request(someUrl3, someOptions3); // Will call fetch() after the second finished\n     * ```\n     */\n    wait() {\n        const next = this.promises.length ? this.promises[this.promises.length - 1].promise : Promise.resolve();\n        let resolve;\n        const promise = new Promise((res) => {\n            resolve = res;\n        });\n        this.promises.push({\n            resolve: resolve,\n            promise\n        });\n        return next;\n    }\n    /**\n     * Frees the queue's lock for the next item to process\n     */\n    shift() {\n        const deferred = this.promises.shift();\n        if (typeof deferred !== 'undefined')\n            deferred.resolve();\n    }\n}\n\nexports.AsyncQueue = AsyncQueue;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n/// <reference lib=\"es2018\"/>\n/// <reference lib=\"dom\"/>\n/// <reference types=\"node\"/>\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst typedArrayTypeNames = [\n    'Int8Array',\n    'Uint8Array',\n    'Uint8ClampedArray',\n    'Int16Array',\n    'Uint16Array',\n    'Int32Array',\n    'Uint32Array',\n    'Float32Array',\n    'Float64Array',\n    'BigInt64Array',\n    'BigUint64Array'\n];\nfunction isTypedArrayName(name) {\n    return typedArrayTypeNames.includes(name);\n}\nconst objectTypeNames = [\n    'Function',\n    'Generator',\n    'AsyncGenerator',\n    'GeneratorFunction',\n    'AsyncGeneratorFunction',\n    'AsyncFunction',\n    'Observable',\n    'Array',\n    'Buffer',\n    'Object',\n    'RegExp',\n    'Date',\n    'Error',\n    'Map',\n    'Set',\n    'WeakMap',\n    'WeakSet',\n    'ArrayBuffer',\n    'SharedArrayBuffer',\n    'DataView',\n    'Promise',\n    'URL',\n    'FormData',\n    'URLSearchParams',\n    'HTMLElement',\n    ...typedArrayTypeNames\n];\nfunction isObjectTypeName(name) {\n    return objectTypeNames.includes(name);\n}\nconst primitiveTypeNames = [\n    'null',\n    'undefined',\n    'string',\n    'number',\n    'bigint',\n    'boolean',\n    'symbol'\n];\nfunction isPrimitiveTypeName(name) {\n    return primitiveTypeNames.includes(name);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isOfType(type) {\n    return (value) => typeof value === type;\n}\nconst { toString } = Object.prototype;\nconst getObjectType = (value) => {\n    const objectTypeName = toString.call(value).slice(8, -1);\n    if (/HTML\\w+Element/.test(objectTypeName) && is.domElement(value)) {\n        return 'HTMLElement';\n    }\n    if (isObjectTypeName(objectTypeName)) {\n        return objectTypeName;\n    }\n    return undefined;\n};\nconst isObjectOfType = (type) => (value) => getObjectType(value) === type;\nfunction is(value) {\n    if (value === null) {\n        return 'null';\n    }\n    switch (typeof value) {\n        case 'undefined':\n            return 'undefined';\n        case 'string':\n            return 'string';\n        case 'number':\n            return 'number';\n        case 'boolean':\n            return 'boolean';\n        case 'function':\n            return 'Function';\n        case 'bigint':\n            return 'bigint';\n        case 'symbol':\n            return 'symbol';\n        default:\n    }\n    if (is.observable(value)) {\n        return 'Observable';\n    }\n    if (is.array(value)) {\n        return 'Array';\n    }\n    if (is.buffer(value)) {\n        return 'Buffer';\n    }\n    const tagType = getObjectType(value);\n    if (tagType) {\n        return tagType;\n    }\n    if (value instanceof String || value instanceof Boolean || value instanceof Number) {\n        throw new TypeError('Please don\\'t use object wrappers for primitive types');\n    }\n    return 'Object';\n}\nis.undefined = isOfType('undefined');\nis.string = isOfType('string');\nconst isNumberType = isOfType('number');\nis.number = (value) => isNumberType(value) && !is.nan(value);\nis.bigint = isOfType('bigint');\n// eslint-disable-next-line @typescript-eslint/ban-types\nis.function_ = isOfType('function');\nis.null_ = (value) => value === null;\nis.class_ = (value) => is.function_(value) && value.toString().startsWith('class ');\nis.boolean = (value) => value === true || value === false;\nis.symbol = isOfType('symbol');\nis.numericString = (value) => is.string(value) && !is.emptyStringOrWhitespace(value) && !Number.isNaN(Number(value));\nis.array = (value, assertion) => {\n    if (!Array.isArray(value)) {\n        return false;\n    }\n    if (!is.function_(assertion)) {\n        return true;\n    }\n    return value.every(assertion);\n};\nis.buffer = (value) => { var _a, _b, _c, _d; return (_d = (_c = (_b = (_a = value) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.isBuffer) === null || _c === void 0 ? void 0 : _c.call(_b, value)) !== null && _d !== void 0 ? _d : false; };\nis.nullOrUndefined = (value) => is.null_(value) || is.undefined(value);\nis.object = (value) => !is.null_(value) && (typeof value === 'object' || is.function_(value));\nis.iterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.iterator]); };\nis.asyncIterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.asyncIterator]); };\nis.generator = (value) => is.iterable(value) && is.function_(value.next) && is.function_(value.throw);\nis.asyncGenerator = (value) => is.asyncIterable(value) && is.function_(value.next) && is.function_(value.throw);\nis.nativePromise = (value) => isObjectOfType('Promise')(value);\nconst hasPromiseAPI = (value) => {\n    var _a, _b;\n    return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a.then) &&\n        is.function_((_b = value) === null || _b === void 0 ? void 0 : _b.catch);\n};\nis.promise = (value) => is.nativePromise(value) || hasPromiseAPI(value);\nis.generatorFunction = isObjectOfType('GeneratorFunction');\nis.asyncGeneratorFunction = (value) => getObjectType(value) === 'AsyncGeneratorFunction';\nis.asyncFunction = (value) => getObjectType(value) === 'AsyncFunction';\n// eslint-disable-next-line no-prototype-builtins, @typescript-eslint/ban-types\nis.boundFunction = (value) => is.function_(value) && !value.hasOwnProperty('prototype');\nis.regExp = isObjectOfType('RegExp');\nis.date = isObjectOfType('Date');\nis.error = isObjectOfType('Error');\nis.map = (value) => isObjectOfType('Map')(value);\nis.set = (value) => isObjectOfType('Set')(value);\nis.weakMap = (value) => isObjectOfType('WeakMap')(value);\nis.weakSet = (value) => isObjectOfType('WeakSet')(value);\nis.int8Array = isObjectOfType('Int8Array');\nis.uint8Array = isObjectOfType('Uint8Array');\nis.uint8ClampedArray = isObjectOfType('Uint8ClampedArray');\nis.int16Array = isObjectOfType('Int16Array');\nis.uint16Array = isObjectOfType('Uint16Array');\nis.int32Array = isObjectOfType('Int32Array');\nis.uint32Array = isObjectOfType('Uint32Array');\nis.float32Array = isObjectOfType('Float32Array');\nis.float64Array = isObjectOfType('Float64Array');\nis.bigInt64Array = isObjectOfType('BigInt64Array');\nis.bigUint64Array = isObjectOfType('BigUint64Array');\nis.arrayBuffer = isObjectOfType('ArrayBuffer');\nis.sharedArrayBuffer = isObjectOfType('SharedArrayBuffer');\nis.dataView = isObjectOfType('DataView');\nis.directInstanceOf = (instance, class_) => Object.getPrototypeOf(instance) === class_.prototype;\nis.urlInstance = (value) => isObjectOfType('URL')(value);\nis.urlString = (value) => {\n    if (!is.string(value)) {\n        return false;\n    }\n    try {\n        new URL(value); // eslint-disable-line no-new\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n};\n// TODO: Use the `not` operator with a type guard here when it's available.\n// Example: `is.truthy = (value: unknown): value is (not false | not 0 | not '' | not undefined | not null) => Boolean(value);`\nis.truthy = (value) => Boolean(value);\n// Example: `is.falsy = (value: unknown): value is (not true | 0 | '' | undefined | null) => Boolean(value);`\nis.falsy = (value) => !value;\nis.nan = (value) => Number.isNaN(value);\nis.primitive = (value) => is.null_(value) || isPrimitiveTypeName(typeof value);\nis.integer = (value) => Number.isInteger(value);\nis.safeInteger = (value) => Number.isSafeInteger(value);\nis.plainObject = (value) => {\n    // From: https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\n    if (toString.call(value) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.getPrototypeOf({});\n};\nis.typedArray = (value) => isTypedArrayName(getObjectType(value));\nconst isValidLength = (value) => is.safeInteger(value) && value >= 0;\nis.arrayLike = (value) => !is.nullOrUndefined(value) && !is.function_(value) && isValidLength(value.length);\nis.inRange = (value, range) => {\n    if (is.number(range)) {\n        return value >= Math.min(0, range) && value <= Math.max(range, 0);\n    }\n    if (is.array(range) && range.length === 2) {\n        return value >= Math.min(...range) && value <= Math.max(...range);\n    }\n    throw new TypeError(`Invalid range: ${JSON.stringify(range)}`);\n};\nconst NODE_TYPE_ELEMENT = 1;\nconst DOM_PROPERTIES_TO_CHECK = [\n    'innerHTML',\n    'ownerDocument',\n    'style',\n    'attributes',\n    'nodeValue'\n];\nis.domElement = (value) => {\n    return is.object(value) &&\n        value.nodeType === NODE_TYPE_ELEMENT &&\n        is.string(value.nodeName) &&\n        !is.plainObject(value) &&\n        DOM_PROPERTIES_TO_CHECK.every(property => property in value);\n};\nis.observable = (value) => {\n    var _a, _b, _c, _d;\n    if (!value) {\n        return false;\n    }\n    // eslint-disable-next-line no-use-extend-native/no-use-extend-native\n    if (value === ((_b = (_a = value)[Symbol.observable]) === null || _b === void 0 ? void 0 : _b.call(_a))) {\n        return true;\n    }\n    if (value === ((_d = (_c = value)['@@observable']) === null || _d === void 0 ? void 0 : _d.call(_c))) {\n        return true;\n    }\n    return false;\n};\nis.nodeStream = (value) => is.object(value) && is.function_(value.pipe) && !is.observable(value);\nis.infinite = (value) => value === Infinity || value === -Infinity;\nconst isAbsoluteMod2 = (remainder) => (value) => is.integer(value) && Math.abs(value % 2) === remainder;\nis.evenInteger = isAbsoluteMod2(0);\nis.oddInteger = isAbsoluteMod2(1);\nis.emptyArray = (value) => is.array(value) && value.length === 0;\nis.nonEmptyArray = (value) => is.array(value) && value.length > 0;\nis.emptyString = (value) => is.string(value) && value.length === 0;\n// TODO: Use `not ''` when the `not` operator is available.\nis.nonEmptyString = (value) => is.string(value) && value.length > 0;\nconst isWhiteSpaceString = (value) => is.string(value) && !/\\S/.test(value);\nis.emptyStringOrWhitespace = (value) => is.emptyString(value) || isWhiteSpaceString(value);\nis.emptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0;\n// TODO: Use `not` operator here to remove `Map` and `Set` from type guard:\n// - https://github.com/Microsoft/TypeScript/pull/29317\nis.nonEmptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length > 0;\nis.emptySet = (value) => is.set(value) && value.size === 0;\nis.nonEmptySet = (value) => is.set(value) && value.size > 0;\nis.emptyMap = (value) => is.map(value) && value.size === 0;\nis.nonEmptyMap = (value) => is.map(value) && value.size > 0;\n// `PropertyKey` is any value that can be used as an object key (string, number, or symbol)\nis.propertyKey = (value) => is.any([is.string, is.number, is.symbol], value);\nis.formData = (value) => isObjectOfType('FormData')(value);\nis.urlSearchParams = (value) => isObjectOfType('URLSearchParams')(value);\nconst predicateOnArray = (method, predicate, values) => {\n    if (!is.function_(predicate)) {\n        throw new TypeError(`Invalid predicate: ${JSON.stringify(predicate)}`);\n    }\n    if (values.length === 0) {\n        throw new TypeError('Invalid number of values');\n    }\n    return method.call(values, predicate);\n};\nis.any = (predicate, ...values) => {\n    const predicates = is.array(predicate) ? predicate : [predicate];\n    return predicates.some(singlePredicate => predicateOnArray(Array.prototype.some, singlePredicate, values));\n};\nis.all = (predicate, ...values) => predicateOnArray(Array.prototype.every, predicate, values);\nconst assertType = (condition, description, value, options = {}) => {\n    if (!condition) {\n        const { multipleValues } = options;\n        const valuesMessage = multipleValues ?\n            `received values of types ${[\n                ...new Set(value.map(singleValue => `\\`${is(singleValue)}\\``))\n            ].join(', ')}` :\n            `received value of type \\`${is(value)}\\``;\n        throw new TypeError(`Expected value which is \\`${description}\\`, ${valuesMessage}.`);\n    }\n};\nexports.assert = {\n    // Unknowns.\n    undefined: (value) => assertType(is.undefined(value), 'undefined', value),\n    string: (value) => assertType(is.string(value), 'string', value),\n    number: (value) => assertType(is.number(value), 'number', value),\n    bigint: (value) => assertType(is.bigint(value), 'bigint', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function_: (value) => assertType(is.function_(value), 'Function', value),\n    null_: (value) => assertType(is.null_(value), 'null', value),\n    class_: (value) => assertType(is.class_(value), \"Class\" /* class_ */, value),\n    boolean: (value) => assertType(is.boolean(value), 'boolean', value),\n    symbol: (value) => assertType(is.symbol(value), 'symbol', value),\n    numericString: (value) => assertType(is.numericString(value), \"string with a number\" /* numericString */, value),\n    array: (value, assertion) => {\n        const assert = assertType;\n        assert(is.array(value), 'Array', value);\n        if (assertion) {\n            value.forEach(assertion);\n        }\n    },\n    buffer: (value) => assertType(is.buffer(value), 'Buffer', value),\n    nullOrUndefined: (value) => assertType(is.nullOrUndefined(value), \"null or undefined\" /* nullOrUndefined */, value),\n    object: (value) => assertType(is.object(value), 'Object', value),\n    iterable: (value) => assertType(is.iterable(value), \"Iterable\" /* iterable */, value),\n    asyncIterable: (value) => assertType(is.asyncIterable(value), \"AsyncIterable\" /* asyncIterable */, value),\n    generator: (value) => assertType(is.generator(value), 'Generator', value),\n    asyncGenerator: (value) => assertType(is.asyncGenerator(value), 'AsyncGenerator', value),\n    nativePromise: (value) => assertType(is.nativePromise(value), \"native Promise\" /* nativePromise */, value),\n    promise: (value) => assertType(is.promise(value), 'Promise', value),\n    generatorFunction: (value) => assertType(is.generatorFunction(value), 'GeneratorFunction', value),\n    asyncGeneratorFunction: (value) => assertType(is.asyncGeneratorFunction(value), 'AsyncGeneratorFunction', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    asyncFunction: (value) => assertType(is.asyncFunction(value), 'AsyncFunction', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    boundFunction: (value) => assertType(is.boundFunction(value), 'Function', value),\n    regExp: (value) => assertType(is.regExp(value), 'RegExp', value),\n    date: (value) => assertType(is.date(value), 'Date', value),\n    error: (value) => assertType(is.error(value), 'Error', value),\n    map: (value) => assertType(is.map(value), 'Map', value),\n    set: (value) => assertType(is.set(value), 'Set', value),\n    weakMap: (value) => assertType(is.weakMap(value), 'WeakMap', value),\n    weakSet: (value) => assertType(is.weakSet(value), 'WeakSet', value),\n    int8Array: (value) => assertType(is.int8Array(value), 'Int8Array', value),\n    uint8Array: (value) => assertType(is.uint8Array(value), 'Uint8Array', value),\n    uint8ClampedArray: (value) => assertType(is.uint8ClampedArray(value), 'Uint8ClampedArray', value),\n    int16Array: (value) => assertType(is.int16Array(value), 'Int16Array', value),\n    uint16Array: (value) => assertType(is.uint16Array(value), 'Uint16Array', value),\n    int32Array: (value) => assertType(is.int32Array(value), 'Int32Array', value),\n    uint32Array: (value) => assertType(is.uint32Array(value), 'Uint32Array', value),\n    float32Array: (value) => assertType(is.float32Array(value), 'Float32Array', value),\n    float64Array: (value) => assertType(is.float64Array(value), 'Float64Array', value),\n    bigInt64Array: (value) => assertType(is.bigInt64Array(value), 'BigInt64Array', value),\n    bigUint64Array: (value) => assertType(is.bigUint64Array(value), 'BigUint64Array', value),\n    arrayBuffer: (value) => assertType(is.arrayBuffer(value), 'ArrayBuffer', value),\n    sharedArrayBuffer: (value) => assertType(is.sharedArrayBuffer(value), 'SharedArrayBuffer', value),\n    dataView: (value) => assertType(is.dataView(value), 'DataView', value),\n    urlInstance: (value) => assertType(is.urlInstance(value), 'URL', value),\n    urlString: (value) => assertType(is.urlString(value), \"string with a URL\" /* urlString */, value),\n    truthy: (value) => assertType(is.truthy(value), \"truthy\" /* truthy */, value),\n    falsy: (value) => assertType(is.falsy(value), \"falsy\" /* falsy */, value),\n    nan: (value) => assertType(is.nan(value), \"NaN\" /* nan */, value),\n    primitive: (value) => assertType(is.primitive(value), \"primitive\" /* primitive */, value),\n    integer: (value) => assertType(is.integer(value), \"integer\" /* integer */, value),\n    safeInteger: (value) => assertType(is.safeInteger(value), \"integer\" /* safeInteger */, value),\n    plainObject: (value) => assertType(is.plainObject(value), \"plain object\" /* plainObject */, value),\n    typedArray: (value) => assertType(is.typedArray(value), \"TypedArray\" /* typedArray */, value),\n    arrayLike: (value) => assertType(is.arrayLike(value), \"array-like\" /* arrayLike */, value),\n    domElement: (value) => assertType(is.domElement(value), \"HTMLElement\" /* domElement */, value),\n    observable: (value) => assertType(is.observable(value), 'Observable', value),\n    nodeStream: (value) => assertType(is.nodeStream(value), \"Node.js Stream\" /* nodeStream */, value),\n    infinite: (value) => assertType(is.infinite(value), \"infinite number\" /* infinite */, value),\n    emptyArray: (value) => assertType(is.emptyArray(value), \"empty array\" /* emptyArray */, value),\n    nonEmptyArray: (value) => assertType(is.nonEmptyArray(value), \"non-empty array\" /* nonEmptyArray */, value),\n    emptyString: (value) => assertType(is.emptyString(value), \"empty string\" /* emptyString */, value),\n    nonEmptyString: (value) => assertType(is.nonEmptyString(value), \"non-empty string\" /* nonEmptyString */, value),\n    emptyStringOrWhitespace: (value) => assertType(is.emptyStringOrWhitespace(value), \"empty string or whitespace\" /* emptyStringOrWhitespace */, value),\n    emptyObject: (value) => assertType(is.emptyObject(value), \"empty object\" /* emptyObject */, value),\n    nonEmptyObject: (value) => assertType(is.nonEmptyObject(value), \"non-empty object\" /* nonEmptyObject */, value),\n    emptySet: (value) => assertType(is.emptySet(value), \"empty set\" /* emptySet */, value),\n    nonEmptySet: (value) => assertType(is.nonEmptySet(value), \"non-empty set\" /* nonEmptySet */, value),\n    emptyMap: (value) => assertType(is.emptyMap(value), \"empty map\" /* emptyMap */, value),\n    nonEmptyMap: (value) => assertType(is.nonEmptyMap(value), \"non-empty map\" /* nonEmptyMap */, value),\n    propertyKey: (value) => assertType(is.propertyKey(value), 'PropertyKey', value),\n    formData: (value) => assertType(is.formData(value), 'FormData', value),\n    urlSearchParams: (value) => assertType(is.urlSearchParams(value), 'URLSearchParams', value),\n    // Numbers.\n    evenInteger: (value) => assertType(is.evenInteger(value), \"even integer\" /* evenInteger */, value),\n    oddInteger: (value) => assertType(is.oddInteger(value), \"odd integer\" /* oddInteger */, value),\n    // Two arguments.\n    directInstanceOf: (instance, class_) => assertType(is.directInstanceOf(instance, class_), \"T\" /* directInstanceOf */, instance),\n    inRange: (value, range) => assertType(is.inRange(value, range), \"in range\" /* inRange */, value),\n    // Variadic functions.\n    any: (predicate, ...values) => {\n        return assertType(is.any(predicate, ...values), \"predicate returns truthy for any value\" /* any */, values, { multipleValues: true });\n    },\n    all: (predicate, ...values) => assertType(is.all(predicate, ...values), \"predicate returns truthy for all values\" /* all */, values, { multipleValues: true })\n};\n// Some few keywords are reserved, but we'll populate them for Node.js users\n// See https://github.com/Microsoft/TypeScript/issues/2536\nObject.defineProperties(is, {\n    class: {\n        value: is.class_\n    },\n    function: {\n        value: is.function_\n    },\n    null: {\n        value: is.null_\n    }\n});\nObject.defineProperties(exports.assert, {\n    class: {\n        value: exports.assert.class_\n    },\n    function: {\n        value: exports.assert.function_\n    },\n    null: {\n        value: exports.assert.null_\n    }\n});\nexports.default = is;\n// For CommonJS default export support\nmodule.exports = is;\nmodule.exports.default = is;\nmodule.exports.assert = exports.assert;\n","'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","class e extends Error{constructor(t){super(null!=t?`Timed out after waiting for ${t} ms`:\"Timed out\"),Object.setPrototypeOf(this,e.prototype)}}const t=(e,t)=>new Promise(((o,r)=>{try{e.schedule(o,t)}catch(e){r(e)}})),o={schedule:(e,t)=>{let o;const r=e=>{null!=e&&clearTimeout(e),o=void 0};return o=setTimeout((()=>{r(o),e()}),t),{cancel:()=>r(o)}}},r=50,n=5e3,c=Number.POSITIVE_INFINITY,l=(r,n,l)=>{var u,s;const i=null!==(u=\"number\"==typeof n?n:null==n?void 0:n.timeout)&&void 0!==u?u:5e3,m=null!==(s=\"number\"==typeof n?l:null==n?void 0:n.intervalBetweenAttempts)&&void 0!==s?s:50;let a=!1;const d=()=>new Promise(((e,n)=>{const c=()=>{a||new Promise(((e,t)=>{try{e(r())}catch(e){t(e)}})).then((r=>{r?e(r):t(o,m).then(c).catch(n)})).catch(n)};c()})),h=i!==c?()=>t(o,i).then((()=>{throw a=!0,new e(i)})):void 0;return null!=h?Promise.race([d(),h()]):d()};export default l;export{r as DEFAULT_INTERVAL_BETWEEN_ATTEMPTS_IN_MS,n as DEFAULT_TIMEOUT_IN_MS,e as TimeoutError,c as WAIT_FOREVER,l as waitUntil};//# sourceMappingURL=index.esm.js.map\n","module.exports =\n{\n  parallel      : require('./parallel.js'),\n  serial        : require('./serial.js'),\n  serialOrdered : require('./serialOrdered.js')\n};\n","// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n","var defer = require('./defer.js');\n\n// API\nmodule.exports = async;\n\n/**\n * Runs provided callback asynchronously\n * even if callback itself is not\n *\n * @param   {function} callback - callback to invoke\n * @returns {function} - augmented callback\n */\nfunction async(callback)\n{\n  var isAsync = false;\n\n  // check if async happened\n  defer(function() { isAsync = true; });\n\n  return function async_callback(err, result)\n  {\n    if (isAsync)\n    {\n      callback(err, result);\n    }\n    else\n    {\n      defer(function nextTick_callback()\n      {\n        callback(err, result);\n      });\n    }\n  };\n}\n","module.exports = defer;\n\n/**\n * Runs provided function on next iteration of the event loop\n *\n * @param {function} fn - function to run\n */\nfunction defer(fn)\n{\n  var nextTick = typeof setImmediate == 'function'\n    ? setImmediate\n    : (\n      typeof process == 'object' && typeof process.nextTick == 'function'\n      ? process.nextTick\n      : null\n    );\n\n  if (nextTick)\n  {\n    nextTick(fn);\n  }\n  else\n  {\n    setTimeout(fn, 0);\n  }\n}\n","var async = require('./async.js')\n  , abort = require('./abort.js')\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list, iterator, state, callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error, state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator, key, item, callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item, async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item, key, async(callback));\n  }\n\n  return aborter;\n}\n","// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n","var abort = require('./abort.js')\n  , async = require('./async.js')\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null, this.results);\n}\n","var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list, iterator, state, function(error, result)\n    {\n      if (error)\n      {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null, state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state, callback);\n}\n","var serialOrdered = require('./serialOrdered.js');\n\n// Public API\nmodule.exports = serial;\n\n/**\n * Runs iterator over provided array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serial(list, iterator, callback)\n{\n  return serialOrdered(list, iterator, null, callback);\n}\n","var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildFullPath = require('../core/buildFullPath');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\nvar isHttps = /https:?/;\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var resolve = function resolve(value) {\n      resolvePromise(value);\n    };\n    var reject = function reject(value) {\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    if ('User-Agent' in headers || 'user-agent' in headers) {\n      // User-Agent is specified; handle case where no UA header is desired\n      if (!headers['User-Agent'] && !headers['user-agent']) {\n        delete headers['User-Agent'];\n        delete headers['user-agent'];\n      }\n      // Otherwise, use specified value\n    } else {\n      // Only set header if it hasn't been set in config\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' &&\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'compress':\n        case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n          stream = stream.pipe(zlib.createUnzip());\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        }\n      }\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        var totalResponseBytes = 0;\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            stream.destroy();\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString(config.responseEncoding);\n            if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n              responseData = utils.stripBOM(responseData);\n            }\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      var timeout = parseInt(config.timeout, 10);\n\n      if (isNaN(timeout)) {\n        reject(createError(\n          'error trying to parse `config.timeout` to int',\n          config,\n          'ERR_PARSE_TIMEOUT',\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        req.abort();\n        reject(createError(\n          'timeout of ' + timeout + 'ms exceeded',\n          config,\n          config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n          req\n        ));\n      });\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(enhanceError(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar pkg = require('./../../package.json');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\nvar currentVerArr = pkg.version.split('.');\n\n/**\n * Compare package versions\n * @param {string} version\n * @param {string?} thanVersion\n * @returns {boolean}\n */\nfunction isOlderVersion(version, thanVersion) {\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\n  var destVer = version.split('.');\n  for (var i = 0; i < 3; i++) {\n    if (pkgVersionArr[i] > destVer[i]) {\n      return true;\n    } else if (pkgVersionArr[i] < destVer[i]) {\n      return false;\n    }\n  }\n  return false;\n}\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator\n * @param {string?} version\n * @param {string} message\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  var isDeprecated = version && isOlderVersion(version);\n\n  function formatMessage(opt, desc) {\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\n    }\n\n    if (isDeprecated && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  isOlderVersion: isOlderVersion,\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nconst mask = (source, mask, output, offset, length) => {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n};\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nconst unmask = (buffer, mask) => {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n};\n\nmodule.exports = { mask, unmask };\n","'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","'use strict';\n\nconst callsites = () => {\n\tconst _prepareStackTrace = Error.prepareStackTrace;\n\tError.prepareStackTrace = (_, stack) => stack;\n\tconst stack = new Error().stack.slice(1);\n\tError.prepareStackTrace = _prepareStackTrace;\n\treturn stack;\n};\n\nmodule.exports = callsites;\n// TODO: Remove this for the next major release\nmodule.exports.default = callsites;\n","'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor, stderr: stderrColor} = require('supports-color');\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = require('./templates');\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n","'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/*\n\nThe MIT License (MIT)\n\nOriginal Library\n  - Copyright (c) Marak Squires\n\nAdditional functionality\n - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nvar colors = {};\nmodule['exports'] = colors;\n\ncolors.themes = {};\n\nvar util = require('util');\nvar ansiStyles = colors.styles = require('./styles');\nvar defineProps = Object.defineProperties;\nvar newLineRegex = new RegExp(/[\\r\\n]+/g);\n\ncolors.supportsColor = require('./system/supports-colors').supportsColor;\n\nif (typeof colors.enabled === 'undefined') {\n  colors.enabled = colors.supportsColor() !== false;\n}\n\ncolors.enable = function() {\n  colors.enabled = true;\n};\n\ncolors.disable = function() {\n  colors.enabled = false;\n};\n\ncolors.stripColors = colors.strip = function(str) {\n  return ('' + str).replace(/\\x1B\\[\\d+m/g, '');\n};\n\n// eslint-disable-next-line no-unused-vars\nvar stylize = colors.stylize = function stylize(str, style) {\n  if (!colors.enabled) {\n    return str+'';\n  }\n\n  var styleMap = ansiStyles[style];\n\n  // Stylize should work for non-ANSI styles, too\n  if(!styleMap && style in colors){\n    // Style maps like trap operate as functions on strings;\n    // they don't have properties like open or close.\n    return colors[style](str);\n  }\n\n  return styleMap.open + str + styleMap.close;\n};\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\nvar escapeStringRegexp = function(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return str.replace(matchOperatorsRe, '\\\\$&');\n};\n\nfunction build(_styles) {\n  var builder = function builder() {\n    return applyStyle.apply(builder, arguments);\n  };\n  builder._styles = _styles;\n  // __proto__ is used because we must return a function, but there is\n  // no way to create a function with a different prototype.\n  builder.__proto__ = proto;\n  return builder;\n}\n\nvar styles = (function() {\n  var ret = {};\n  ansiStyles.grey = ansiStyles.gray;\n  Object.keys(ansiStyles).forEach(function(key) {\n    ansiStyles[key].closeRe =\n      new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n    ret[key] = {\n      get: function() {\n        return build(this._styles.concat(key));\n      },\n    };\n  });\n  return ret;\n})();\n\nvar proto = defineProps(function colors() {}, styles);\n\nfunction applyStyle() {\n  var args = Array.prototype.slice.call(arguments);\n\n  var str = args.map(function(arg) {\n    // Use weak equality check so we can colorize null/undefined in safe mode\n    if (arg != null && arg.constructor === String) {\n      return arg;\n    } else {\n      return util.inspect(arg);\n    }\n  }).join(' ');\n\n  if (!colors.enabled || !str) {\n    return str;\n  }\n\n  var newLinesPresent = str.indexOf('\\n') != -1;\n\n  var nestedStyles = this._styles;\n\n  var i = nestedStyles.length;\n  while (i--) {\n    var code = ansiStyles[nestedStyles[i]];\n    str = code.open + str.replace(code.closeRe, code.open) + code.close;\n    if (newLinesPresent) {\n      str = str.replace(newLineRegex, function(match) {\n        return code.close + match + code.open;\n      });\n    }\n  }\n\n  return str;\n}\n\ncolors.setTheme = function(theme) {\n  if (typeof theme === 'string') {\n    console.log('colors.setTheme now only accepts an object, not a string.  ' +\n      'If you are trying to set a theme from a file, it is now your (the ' +\n      'caller\\'s) responsibility to require the file.  The old syntax ' +\n      'looked like colors.setTheme(__dirname + ' +\n      '\\'/../themes/generic-logging.js\\'); The new syntax looks like '+\n      'colors.setTheme(require(__dirname + ' +\n      '\\'/../themes/generic-logging.js\\'));');\n    return;\n  }\n  for (var style in theme) {\n    (function(style) {\n      colors[style] = function(str) {\n        if (typeof theme[style] === 'object') {\n          var out = str;\n          for (var i in theme[style]) {\n            out = colors[theme[style][i]](out);\n          }\n          return out;\n        }\n        return colors[theme[style]](str);\n      };\n    })(style);\n  }\n};\n\nfunction init() {\n  var ret = {};\n  Object.keys(styles).forEach(function(name) {\n    ret[name] = {\n      get: function() {\n        return build([name]);\n      },\n    };\n  });\n  return ret;\n}\n\nvar sequencer = function sequencer(map, str) {\n  var exploded = str.split('');\n  exploded = exploded.map(map);\n  return exploded.join('');\n};\n\n// custom formatter methods\ncolors.trap = require('./custom/trap');\ncolors.zalgo = require('./custom/zalgo');\n\n// maps\ncolors.maps = {};\ncolors.maps.america = require('./maps/america')(colors);\ncolors.maps.zebra = require('./maps/zebra')(colors);\ncolors.maps.rainbow = require('./maps/rainbow')(colors);\ncolors.maps.random = require('./maps/random')(colors);\n\nfor (var map in colors.maps) {\n  (function(map) {\n    colors[map] = function(str) {\n      return sequencer(colors.maps[map], str);\n    };\n  })(map);\n}\n\ndefineProps(colors, init());\n","module['exports'] = function runTheTrap(text, options) {\n  var result = '';\n  text = text || 'Run the trap, drop the bass';\n  text = text.split('');\n  var trap = {\n    a: ['\\u0040', '\\u0104', '\\u023a', '\\u0245', '\\u0394', '\\u039b', '\\u0414'],\n    b: ['\\u00df', '\\u0181', '\\u0243', '\\u026e', '\\u03b2', '\\u0e3f'],\n    c: ['\\u00a9', '\\u023b', '\\u03fe'],\n    d: ['\\u00d0', '\\u018a', '\\u0500', '\\u0501', '\\u0502', '\\u0503'],\n    e: ['\\u00cb', '\\u0115', '\\u018e', '\\u0258', '\\u03a3', '\\u03be', '\\u04bc',\n      '\\u0a6c'],\n    f: ['\\u04fa'],\n    g: ['\\u0262'],\n    h: ['\\u0126', '\\u0195', '\\u04a2', '\\u04ba', '\\u04c7', '\\u050a'],\n    i: ['\\u0f0f'],\n    j: ['\\u0134'],\n    k: ['\\u0138', '\\u04a0', '\\u04c3', '\\u051e'],\n    l: ['\\u0139'],\n    m: ['\\u028d', '\\u04cd', '\\u04ce', '\\u0520', '\\u0521', '\\u0d69'],\n    n: ['\\u00d1', '\\u014b', '\\u019d', '\\u0376', '\\u03a0', '\\u048a'],\n    o: ['\\u00d8', '\\u00f5', '\\u00f8', '\\u01fe', '\\u0298', '\\u047a', '\\u05dd',\n      '\\u06dd', '\\u0e4f'],\n    p: ['\\u01f7', '\\u048e'],\n    q: ['\\u09cd'],\n    r: ['\\u00ae', '\\u01a6', '\\u0210', '\\u024c', '\\u0280', '\\u042f'],\n    s: ['\\u00a7', '\\u03de', '\\u03df', '\\u03e8'],\n    t: ['\\u0141', '\\u0166', '\\u0373'],\n    u: ['\\u01b1', '\\u054d'],\n    v: ['\\u05d8'],\n    w: ['\\u0428', '\\u0460', '\\u047c', '\\u0d70'],\n    x: ['\\u04b2', '\\u04fe', '\\u04fc', '\\u04fd'],\n    y: ['\\u00a5', '\\u04b0', '\\u04cb'],\n    z: ['\\u01b5', '\\u0240'],\n  };\n  text.forEach(function(c) {\n    c = c.toLowerCase();\n    var chars = trap[c] || [' '];\n    var rand = Math.floor(Math.random() * chars.length);\n    if (typeof trap[c] !== 'undefined') {\n      result += trap[c][rand];\n    } else {\n      result += c;\n    }\n  });\n  return result;\n};\n","// please no\nmodule['exports'] = function zalgo(text, options) {\n  text = text || '   he is here   ';\n  var soul = {\n    'up': [\n      '̍', '̎', '̄', '̅',\n      '̿', '̑', '̆', '̐',\n      '͒', '͗', '͑', '̇',\n      '̈', '̊', '͂', '̓',\n      '̈', '͊', '͋', '͌',\n      '̃', '̂', '̌', '͐',\n      '̀', '́', '̋', '̏',\n      '̒', '̓', '̔', '̽',\n      '̉', 'ͣ', 'ͤ', 'ͥ',\n      'ͦ', 'ͧ', 'ͨ', 'ͩ',\n      'ͪ', 'ͫ', 'ͬ', 'ͭ',\n      'ͮ', 'ͯ', '̾', '͛',\n      '͆', '̚',\n    ],\n    'down': [\n      '̖', '̗', '̘', '̙',\n      '̜', '̝', '̞', '̟',\n      '̠', '̤', '̥', '̦',\n      '̩', '̪', '̫', '̬',\n      '̭', '̮', '̯', '̰',\n      '̱', '̲', '̳', '̹',\n      '̺', '̻', '̼', 'ͅ',\n      '͇', '͈', '͉', '͍',\n      '͎', '͓', '͔', '͕',\n      '͖', '͙', '͚', '̣',\n    ],\n    'mid': [\n      '̕', '̛', '̀', '́',\n      '͘', '̡', '̢', '̧',\n      '̨', '̴', '̵', '̶',\n      '͜', '͝', '͞',\n      '͟', '͠', '͢', '̸',\n      '̷', '͡', ' ҉',\n    ],\n  };\n  var all = [].concat(soul.up, soul.down, soul.mid);\n\n  function randomNumber(range) {\n    var r = Math.floor(Math.random() * range);\n    return r;\n  }\n\n  function isChar(character) {\n    var bool = false;\n    all.filter(function(i) {\n      bool = (i === character);\n    });\n    return bool;\n  }\n\n\n  function heComes(text, options) {\n    var result = '';\n    var counts;\n    var l;\n    options = options || {};\n    options['up'] =\n      typeof options['up'] !== 'undefined' ? options['up'] : true;\n    options['mid'] =\n      typeof options['mid'] !== 'undefined' ? options['mid'] : true;\n    options['down'] =\n      typeof options['down'] !== 'undefined' ? options['down'] : true;\n    options['size'] =\n      typeof options['size'] !== 'undefined' ? options['size'] : 'maxi';\n    text = text.split('');\n    for (l in text) {\n      if (isChar(l)) {\n        continue;\n      }\n      result = result + text[l];\n      counts = {'up': 0, 'down': 0, 'mid': 0};\n      switch (options.size) {\n        case 'mini':\n          counts.up = randomNumber(8);\n          counts.mid = randomNumber(2);\n          counts.down = randomNumber(8);\n          break;\n        case 'maxi':\n          counts.up = randomNumber(16) + 3;\n          counts.mid = randomNumber(4) + 1;\n          counts.down = randomNumber(64) + 3;\n          break;\n        default:\n          counts.up = randomNumber(8) + 1;\n          counts.mid = randomNumber(6) / 2;\n          counts.down = randomNumber(8) + 1;\n          break;\n      }\n\n      var arr = ['up', 'mid', 'down'];\n      for (var d in arr) {\n        var index = arr[d];\n        for (var i = 0; i <= counts[index]; i++) {\n          if (options[index]) {\n            result = result + soul[index][randomNumber(soul[index].length)];\n          }\n        }\n      }\n    }\n    return result;\n  }\n  // don't summon him\n  return heComes(text, options);\n};\n\n","var colors = require('./colors');\n\nmodule['exports'] = function() {\n  //\n  // Extends prototype of native string object to allow for \"foo\".red syntax\n  //\n  var addProperty = function(color, func) {\n    String.prototype.__defineGetter__(color, func);\n  };\n\n  addProperty('strip', function() {\n    return colors.strip(this);\n  });\n\n  addProperty('stripColors', function() {\n    return colors.strip(this);\n  });\n\n  addProperty('trap', function() {\n    return colors.trap(this);\n  });\n\n  addProperty('zalgo', function() {\n    return colors.zalgo(this);\n  });\n\n  addProperty('zebra', function() {\n    return colors.zebra(this);\n  });\n\n  addProperty('rainbow', function() {\n    return colors.rainbow(this);\n  });\n\n  addProperty('random', function() {\n    return colors.random(this);\n  });\n\n  addProperty('america', function() {\n    return colors.america(this);\n  });\n\n  //\n  // Iterate through all default styles and colors\n  //\n  var x = Object.keys(colors.styles);\n  x.forEach(function(style) {\n    addProperty(style, function() {\n      return colors.stylize(this, style);\n    });\n  });\n\n  function applyTheme(theme) {\n    //\n    // Remark: This is a list of methods that exist\n    // on String that you should not overwrite.\n    //\n    var stringPrototypeBlacklist = [\n      '__defineGetter__', '__defineSetter__', '__lookupGetter__',\n      '__lookupSetter__', 'charAt', 'constructor', 'hasOwnProperty',\n      'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString',\n      'valueOf', 'charCodeAt', 'indexOf', 'lastIndexOf', 'length',\n      'localeCompare', 'match', 'repeat', 'replace', 'search', 'slice',\n      'split', 'substring', 'toLocaleLowerCase', 'toLocaleUpperCase',\n      'toLowerCase', 'toUpperCase', 'trim', 'trimLeft', 'trimRight',\n    ];\n\n    Object.keys(theme).forEach(function(prop) {\n      if (stringPrototypeBlacklist.indexOf(prop) !== -1) {\n        console.log('warn: '.red + ('String.prototype' + prop).magenta +\n          ' is probably something you don\\'t want to override.  ' +\n          'Ignoring style name');\n      } else {\n        if (typeof(theme[prop]) === 'string') {\n          colors[prop] = colors[theme[prop]];\n          addProperty(prop, function() {\n            return colors[prop](this);\n          });\n        } else {\n          var themePropApplicator = function(str) {\n            var ret = str || this;\n            for (var t = 0; t < theme[prop].length; t++) {\n              ret = colors[theme[prop][t]](ret);\n            }\n            return ret;\n          };\n          addProperty(prop, themePropApplicator);\n          colors[prop] = function(str) {\n            return themePropApplicator(str);\n          };\n        }\n      }\n    });\n  }\n\n  colors.setTheme = function(theme) {\n    if (typeof theme === 'string') {\n      console.log('colors.setTheme now only accepts an object, not a string. ' +\n        'If you are trying to set a theme from a file, it is now your (the ' +\n        'caller\\'s) responsibility to require the file.  The old syntax ' +\n        'looked like colors.setTheme(__dirname + ' +\n        '\\'/../themes/generic-logging.js\\'); The new syntax looks like '+\n        'colors.setTheme(require(__dirname + ' +\n        '\\'/../themes/generic-logging.js\\'));');\n      return;\n    } else {\n      applyTheme(theme);\n    }\n  };\n};\n","var colors = require('./colors');\nmodule['exports'] = colors;\n\n// Remark: By default, colors will add style properties to String.prototype.\n//\n// If you don't wish to extend String.prototype, you can do this instead and\n// native String will not be touched:\n//\n//   var colors = require('colors/safe);\n//   colors.red(\"foo\")\n//\n//\nrequire('./extendStringPrototype')();\n","module['exports'] = function(colors) {\n  return function(letter, i, exploded) {\n    if (letter === ' ') return letter;\n    switch (i%3) {\n      case 0: return colors.red(letter);\n      case 1: return colors.white(letter);\n      case 2: return colors.blue(letter);\n    }\n  };\n};\n","module['exports'] = function(colors) {\n  // RoY G BiV\n  var rainbowColors = ['red', 'yellow', 'green', 'blue', 'magenta'];\n  return function(letter, i, exploded) {\n    if (letter === ' ') {\n      return letter;\n    } else {\n      return colors[rainbowColors[i++ % rainbowColors.length]](letter);\n    }\n  };\n};\n\n","module['exports'] = function(colors) {\n  var available = ['underline', 'inverse', 'grey', 'yellow', 'red', 'green',\n    'blue', 'white', 'cyan', 'magenta', 'brightYellow', 'brightRed',\n    'brightGreen', 'brightBlue', 'brightWhite', 'brightCyan', 'brightMagenta'];\n  return function(letter, i, exploded) {\n    return letter === ' ' ? letter :\n      colors[\n          available[Math.round(Math.random() * (available.length - 2))]\n      ](letter);\n  };\n};\n","module['exports'] = function(colors) {\n  return function(letter, i, exploded) {\n    return i % 2 === 0 ? letter : colors.inverse(letter);\n  };\n};\n","/*\nThe MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nvar styles = {};\nmodule['exports'] = styles;\n\nvar codes = {\n  reset: [0, 0],\n\n  bold: [1, 22],\n  dim: [2, 22],\n  italic: [3, 23],\n  underline: [4, 24],\n  inverse: [7, 27],\n  hidden: [8, 28],\n  strikethrough: [9, 29],\n\n  black: [30, 39],\n  red: [31, 39],\n  green: [32, 39],\n  yellow: [33, 39],\n  blue: [34, 39],\n  magenta: [35, 39],\n  cyan: [36, 39],\n  white: [37, 39],\n  gray: [90, 39],\n  grey: [90, 39],\n\n  brightRed: [91, 39],\n  brightGreen: [92, 39],\n  brightYellow: [93, 39],\n  brightBlue: [94, 39],\n  brightMagenta: [95, 39],\n  brightCyan: [96, 39],\n  brightWhite: [97, 39],\n\n  bgBlack: [40, 49],\n  bgRed: [41, 49],\n  bgGreen: [42, 49],\n  bgYellow: [43, 49],\n  bgBlue: [44, 49],\n  bgMagenta: [45, 49],\n  bgCyan: [46, 49],\n  bgWhite: [47, 49],\n  bgGray: [100, 49],\n  bgGrey: [100, 49],\n\n  bgBrightRed: [101, 49],\n  bgBrightGreen: [102, 49],\n  bgBrightYellow: [103, 49],\n  bgBrightBlue: [104, 49],\n  bgBrightMagenta: [105, 49],\n  bgBrightCyan: [106, 49],\n  bgBrightWhite: [107, 49],\n\n  // legacy styles for colors pre v1.0.0\n  blackBG: [40, 49],\n  redBG: [41, 49],\n  greenBG: [42, 49],\n  yellowBG: [43, 49],\n  blueBG: [44, 49],\n  magentaBG: [45, 49],\n  cyanBG: [46, 49],\n  whiteBG: [47, 49],\n\n};\n\nObject.keys(codes).forEach(function(key) {\n  var val = codes[key];\n  var style = styles[key] = [];\n  style.open = '\\u001b[' + val[0] + 'm';\n  style.close = '\\u001b[' + val[1] + 'm';\n});\n","/*\nMIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n'use strict';\n\nmodule.exports = function(flag, argv) {\n  argv = argv || process.argv;\n\n  var terminatorPos = argv.indexOf('--');\n  var prefix = /^-{1,2}/.test(flag) ? '' : '--';\n  var pos = argv.indexOf(prefix + flag);\n\n  return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","/*\nThe MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\n'use strict';\n\nvar os = require('os');\nvar hasFlag = require('./has-flag.js');\n\nvar env = process.env;\n\nvar forceColor = void 0;\nif (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {\n  forceColor = false;\n} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true')\n           || hasFlag('color=always')) {\n  forceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n  forceColor = env.FORCE_COLOR.length === 0\n    || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n  if (level === 0) {\n    return false;\n  }\n\n  return {\n    level: level,\n    hasBasic: true,\n    has256: level >= 2,\n    has16m: level >= 3,\n  };\n}\n\nfunction supportsColor(stream) {\n  if (forceColor === false) {\n    return 0;\n  }\n\n  if (hasFlag('color=16m') || hasFlag('color=full')\n      || hasFlag('color=truecolor')) {\n    return 3;\n  }\n\n  if (hasFlag('color=256')) {\n    return 2;\n  }\n\n  if (stream && !stream.isTTY && forceColor !== true) {\n    return 0;\n  }\n\n  var min = forceColor ? 1 : 0;\n\n  if (process.platform === 'win32') {\n    // Node.js 7.5.0 is the first version of Node.js to include a patch to\n    // libuv that enables 256 color output on Windows. Anything earlier and it\n    // won't work. However, here we target Node.js 8 at minimum as it is an LTS\n    // release, and Node.js 7 is not. Windows 10 build 10586 is the first\n    // Windows release that supports 256 colors. Windows 10 build 14931 is the\n    // first release that supports 16m/TrueColor.\n    var osRelease = os.release().split('.');\n    if (Number(process.versions.node.split('.')[0]) >= 8\n        && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\n    }\n\n    return 1;\n  }\n\n  if ('CI' in env) {\n    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(function(sign) {\n      return sign in env;\n    }) || env.CI_NAME === 'codeship') {\n      return 1;\n    }\n\n    return min;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return (/^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0\n    );\n  }\n\n  if ('TERM_PROGRAM' in env) {\n    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n    switch (env.TERM_PROGRAM) {\n      case 'iTerm.app':\n        return version >= 3 ? 3 : 2;\n      case 'Hyper':\n        return 3;\n      case 'Apple_Terminal':\n        return 2;\n      // No default\n    }\n  }\n\n  if (/-256(color)?$/i.test(env.TERM)) {\n    return 2;\n  }\n\n  if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n    return 1;\n  }\n\n  if ('COLORTERM' in env) {\n    return 1;\n  }\n\n  if (env.TERM === 'dumb') {\n    return min;\n  }\n\n  return min;\n}\n\nfunction getSupportLevel(stream) {\n  var level = supportsColor(stream);\n  return translateLevel(level);\n}\n\nmodule.exports = {\n  supportsColor: getSupportLevel,\n  stdout: getSupportLevel(process.stdout),\n  stderr: getSupportLevel(process.stderr),\n};\n","var util = require('util');\nvar Stream = require('stream').Stream;\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n  this._insideLoop = false;\n  this._pendingNext = false;\n}\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams,\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n\n  if (this._insideLoop) {\n    this._pendingNext = true;\n    return; // defer call\n  }\n\n  this._insideLoop = true;\n  try {\n    do {\n      this._pendingNext = false;\n      this._realGetNext();\n    } while (this._pendingNext);\n  } finally {\n    this._insideLoop = false;\n  }\n};\n\nCombinedStream.prototype._realGetNext = function() {\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error', function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error', err);\n};\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","var Stream = require('stream').Stream;\nvar util = require('util');\n\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n  this.source = null;\n  this.dataSize = 0;\n  this.maxDataSize = 1024 * 1024;\n  this.pauseStream = true;\n\n  this._maxDataSizeExceeded = false;\n  this._released = false;\n  this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream, Stream);\n\nDelayedStream.create = function(source, options) {\n  var delayedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    delayedStream[option] = options[option];\n  }\n\n  delayedStream.source = source;\n\n  var realEmit = source.emit;\n  source.emit = function() {\n    delayedStream._handleEmit(arguments);\n    return realEmit.apply(source, arguments);\n  };\n\n  source.on('error', function() {});\n  if (delayedStream.pauseStream) {\n    source.pause();\n  }\n\n  return delayedStream;\n};\n\nObject.defineProperty(DelayedStream.prototype, 'readable', {\n  configurable: true,\n  enumerable: true,\n  get: function() {\n    return this.source.readable;\n  }\n});\n\nDelayedStream.prototype.setEncoding = function() {\n  return this.source.setEncoding.apply(this.source, arguments);\n};\n\nDelayedStream.prototype.resume = function() {\n  if (!this._released) {\n    this.release();\n  }\n\n  this.source.resume();\n};\n\nDelayedStream.prototype.pause = function() {\n  this.source.pause();\n};\n\nDelayedStream.prototype.release = function() {\n  this._released = true;\n\n  this._bufferedEvents.forEach(function(args) {\n    this.emit.apply(this, args);\n  }.bind(this));\n  this._bufferedEvents = [];\n};\n\nDelayedStream.prototype.pipe = function() {\n  var r = Stream.prototype.pipe.apply(this, arguments);\n  this.resume();\n  return r;\n};\n\nDelayedStream.prototype._handleEmit = function(args) {\n  if (this._released) {\n    this.emit.apply(this, args);\n    return;\n  }\n\n  if (args[0] === 'data') {\n    this.dataSize += args[1].length;\n    this._checkIfMaxDataSizeExceeded();\n  }\n\n  this._bufferedEvents.push(args);\n};\n\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n  if (this._maxDataSizeExceeded) {\n    return;\n  }\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  this._maxDataSizeExceeded = true;\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\n  this.emit('error', new Error(message));\n};\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=common.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/topics/gateway\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GatewayDispatchEvents = exports.GatewayIntentBits = exports.GatewayCloseCodes = exports.GatewayOpcodes = exports.GatewayVersion = void 0;\r\n__exportStar(require(\"./common\"), exports);\r\nexports.GatewayVersion = '9';\r\n/**\r\n * https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-opcodes\r\n */\r\nvar GatewayOpcodes;\r\n(function (GatewayOpcodes) {\r\n    /**\r\n     * An event was dispatched\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Dispatch\"] = 0] = \"Dispatch\";\r\n    /**\r\n     * A bidirectional opcode to maintain an active gateway connection.\r\n     * Fired periodically by the client, or fired by the gateway to request an immediate heartbeat from the client.\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Heartbeat\"] = 1] = \"Heartbeat\";\r\n    /**\r\n     * Starts a new session during the initial handshake\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Identify\"] = 2] = \"Identify\";\r\n    /**\r\n     * Update the client's presence\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"PresenceUpdate\"] = 3] = \"PresenceUpdate\";\r\n    /**\r\n     * Used to join/leave or move between voice channels\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"VoiceStateUpdate\"] = 4] = \"VoiceStateUpdate\";\r\n    /**\r\n     * Resume a previous session that was disconnected\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Resume\"] = 6] = \"Resume\";\r\n    /**\r\n     * You should attempt to reconnect and resume immediately\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Reconnect\"] = 7] = \"Reconnect\";\r\n    /**\r\n     * Request information about offline guild members in a large guild\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"RequestGuildMembers\"] = 8] = \"RequestGuildMembers\";\r\n    /**\r\n     * The session has been invalidated. You should reconnect and identify/resume accordingly\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"InvalidSession\"] = 9] = \"InvalidSession\";\r\n    /**\r\n     * Sent immediately after connecting, contains the `heartbeat_interval` to use\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"Hello\"] = 10] = \"Hello\";\r\n    /**\r\n     * Sent in response to receiving a heartbeat to acknowledge that it has been received\r\n     */\r\n    GatewayOpcodes[GatewayOpcodes[\"HeartbeatAck\"] = 11] = \"HeartbeatAck\";\r\n})(GatewayOpcodes = exports.GatewayOpcodes || (exports.GatewayOpcodes = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-close-event-codes\r\n */\r\nvar GatewayCloseCodes;\r\n(function (GatewayCloseCodes) {\r\n    /**\r\n     * We're not sure what went wrong. Try reconnecting?\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"UnknownError\"] = 4000] = \"UnknownError\";\r\n    /**\r\n     * You sent an invalid Gateway opcode or an invalid payload for an opcode. Don't do that!\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#payloads-and-opcodes\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"UnknownOpcode\"] = 4001] = \"UnknownOpcode\";\r\n    /**\r\n     * You sent an invalid payload to us. Don't do that!\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#sending-payloads\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"DecodeError\"] = 4002] = \"DecodeError\";\r\n    /**\r\n     * You sent us a payload prior to identifying\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#identify\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"NotAuthenticated\"] = 4003] = \"NotAuthenticated\";\r\n    /**\r\n     * The account token sent with your identify payload is incorrect\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#identify\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"AuthenticationFailed\"] = 4004] = \"AuthenticationFailed\";\r\n    /**\r\n     * You sent more than one identify payload. Don't do that!\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"AlreadyAuthenticated\"] = 4005] = \"AlreadyAuthenticated\";\r\n    /**\r\n     * The sequence sent when resuming the session was invalid. Reconnect and start a new session\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#resume\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"InvalidSeq\"] = 4007] = \"InvalidSeq\";\r\n    /**\r\n     * Woah nelly! You're sending payloads to us too quickly. Slow it down! You will be disconnected on receiving this\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"RateLimited\"] = 4008] = \"RateLimited\";\r\n    /**\r\n     * Your session timed out. Reconnect and start a new one\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"SessionTimedOut\"] = 4009] = \"SessionTimedOut\";\r\n    /**\r\n     * You sent us an invalid shard when identifying\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#sharding\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"InvalidShard\"] = 4010] = \"InvalidShard\";\r\n    /**\r\n     * The session would have handled too many guilds - you are required to shard your connection in order to connect\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#sharding\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"ShardingRequired\"] = 4011] = \"ShardingRequired\";\r\n    /**\r\n     * You sent an invalid version for the gateway\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"InvalidAPIVersion\"] = 4012] = \"InvalidAPIVersion\";\r\n    /**\r\n     * You sent an invalid intent for a Gateway Intent. You may have incorrectly calculated the bitwise value\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#gateway-intents\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"InvalidIntents\"] = 4013] = \"InvalidIntents\";\r\n    /**\r\n     * You sent a disallowed intent for a Gateway Intent. You may have tried to specify an intent that you have not\r\n     * enabled or are not whitelisted for\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#gateway-intents\r\n     *\r\n     * See https://discord.com/developers/docs/topics/gateway#privileged-intents\r\n     */\r\n    GatewayCloseCodes[GatewayCloseCodes[\"DisallowedIntents\"] = 4014] = \"DisallowedIntents\";\r\n})(GatewayCloseCodes = exports.GatewayCloseCodes || (exports.GatewayCloseCodes = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/gateway#list-of-intents\r\n */\r\nvar GatewayIntentBits;\r\n(function (GatewayIntentBits) {\r\n    GatewayIntentBits[GatewayIntentBits[\"Guilds\"] = 1] = \"Guilds\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildMembers\"] = 2] = \"GuildMembers\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildBans\"] = 4] = \"GuildBans\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildEmojisAndStickers\"] = 8] = \"GuildEmojisAndStickers\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildIntegrations\"] = 16] = \"GuildIntegrations\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildWebhooks\"] = 32] = \"GuildWebhooks\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildInvites\"] = 64] = \"GuildInvites\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildVoiceStates\"] = 128] = \"GuildVoiceStates\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildPresences\"] = 256] = \"GuildPresences\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildMessages\"] = 512] = \"GuildMessages\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildMessageReactions\"] = 1024] = \"GuildMessageReactions\";\r\n    GatewayIntentBits[GatewayIntentBits[\"GuildMessageTyping\"] = 2048] = \"GuildMessageTyping\";\r\n    GatewayIntentBits[GatewayIntentBits[\"DirectMessages\"] = 4096] = \"DirectMessages\";\r\n    GatewayIntentBits[GatewayIntentBits[\"DirectMessageReactions\"] = 8192] = \"DirectMessageReactions\";\r\n    GatewayIntentBits[GatewayIntentBits[\"DirectMessageTyping\"] = 16384] = \"DirectMessageTyping\";\r\n})(GatewayIntentBits = exports.GatewayIntentBits || (exports.GatewayIntentBits = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-events\r\n */\r\nvar GatewayDispatchEvents;\r\n(function (GatewayDispatchEvents) {\r\n    GatewayDispatchEvents[\"ApplicationCommandCreate\"] = \"APPLICATION_COMMAND_CREATE\";\r\n    GatewayDispatchEvents[\"ApplicationCommandDelete\"] = \"APPLICATION_COMMAND_DELETE\";\r\n    GatewayDispatchEvents[\"ApplicationCommandUpdate\"] = \"APPLICATION_COMMAND_UPDATE\";\r\n    GatewayDispatchEvents[\"ChannelCreate\"] = \"CHANNEL_CREATE\";\r\n    GatewayDispatchEvents[\"ChannelDelete\"] = \"CHANNEL_DELETE\";\r\n    GatewayDispatchEvents[\"ChannelPinsUpdate\"] = \"CHANNEL_PINS_UPDATE\";\r\n    GatewayDispatchEvents[\"ChannelUpdate\"] = \"CHANNEL_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildBanAdd\"] = \"GUILD_BAN_ADD\";\r\n    GatewayDispatchEvents[\"GuildBanRemove\"] = \"GUILD_BAN_REMOVE\";\r\n    GatewayDispatchEvents[\"GuildCreate\"] = \"GUILD_CREATE\";\r\n    GatewayDispatchEvents[\"GuildDelete\"] = \"GUILD_DELETE\";\r\n    GatewayDispatchEvents[\"GuildEmojisUpdate\"] = \"GUILD_EMOJIS_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildIntegrationsUpdate\"] = \"GUILD_INTEGRATIONS_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildMemberAdd\"] = \"GUILD_MEMBER_ADD\";\r\n    GatewayDispatchEvents[\"GuildMemberRemove\"] = \"GUILD_MEMBER_REMOVE\";\r\n    GatewayDispatchEvents[\"GuildMembersChunk\"] = \"GUILD_MEMBERS_CHUNK\";\r\n    GatewayDispatchEvents[\"GuildMemberUpdate\"] = \"GUILD_MEMBER_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildRoleCreate\"] = \"GUILD_ROLE_CREATE\";\r\n    GatewayDispatchEvents[\"GuildRoleDelete\"] = \"GUILD_ROLE_DELETE\";\r\n    GatewayDispatchEvents[\"GuildRoleUpdate\"] = \"GUILD_ROLE_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildStickersUpdate\"] = \"GUILD_STICKERS_UPDATE\";\r\n    GatewayDispatchEvents[\"GuildUpdate\"] = \"GUILD_UPDATE\";\r\n    GatewayDispatchEvents[\"IntegrationCreate\"] = \"INTEGRATION_CREATE\";\r\n    GatewayDispatchEvents[\"IntegrationDelete\"] = \"INTEGRATION_DELETE\";\r\n    GatewayDispatchEvents[\"IntegrationUpdate\"] = \"INTEGRATION_UPDATE\";\r\n    GatewayDispatchEvents[\"InteractionCreate\"] = \"INTERACTION_CREATE\";\r\n    GatewayDispatchEvents[\"InviteCreate\"] = \"INVITE_CREATE\";\r\n    GatewayDispatchEvents[\"InviteDelete\"] = \"INVITE_DELETE\";\r\n    GatewayDispatchEvents[\"MessageCreate\"] = \"MESSAGE_CREATE\";\r\n    GatewayDispatchEvents[\"MessageDelete\"] = \"MESSAGE_DELETE\";\r\n    GatewayDispatchEvents[\"MessageDeleteBulk\"] = \"MESSAGE_DELETE_BULK\";\r\n    GatewayDispatchEvents[\"MessageReactionAdd\"] = \"MESSAGE_REACTION_ADD\";\r\n    GatewayDispatchEvents[\"MessageReactionRemove\"] = \"MESSAGE_REACTION_REMOVE\";\r\n    GatewayDispatchEvents[\"MessageReactionRemoveAll\"] = \"MESSAGE_REACTION_REMOVE_ALL\";\r\n    GatewayDispatchEvents[\"MessageReactionRemoveEmoji\"] = \"MESSAGE_REACTION_REMOVE_EMOJI\";\r\n    GatewayDispatchEvents[\"MessageUpdate\"] = \"MESSAGE_UPDATE\";\r\n    GatewayDispatchEvents[\"PresenceUpdate\"] = \"PRESENCE_UPDATE\";\r\n    GatewayDispatchEvents[\"StageInstanceCreate\"] = \"STAGE_INSTANCE_CREATE\";\r\n    GatewayDispatchEvents[\"StageInstanceDelete\"] = \"STAGE_INSTANCE_DELETE\";\r\n    GatewayDispatchEvents[\"StageInstanceUpdate\"] = \"STAGE_INSTANCE_UPDATE\";\r\n    GatewayDispatchEvents[\"Ready\"] = \"READY\";\r\n    GatewayDispatchEvents[\"Resumed\"] = \"RESUMED\";\r\n    GatewayDispatchEvents[\"ThreadCreate\"] = \"THREAD_CREATE\";\r\n    GatewayDispatchEvents[\"ThreadDelete\"] = \"THREAD_DELETE\";\r\n    GatewayDispatchEvents[\"ThreadListSync\"] = \"THREAD_LIST_SYNC\";\r\n    GatewayDispatchEvents[\"ThreadMembersUpdate\"] = \"THREAD_MEMBERS_UPDATE\";\r\n    GatewayDispatchEvents[\"ThreadMemberUpdate\"] = \"THREAD_MEMBER_UPDATE\";\r\n    GatewayDispatchEvents[\"ThreadUpdate\"] = \"THREAD_UPDATE\";\r\n    GatewayDispatchEvents[\"TypingStart\"] = \"TYPING_START\";\r\n    GatewayDispatchEvents[\"UserUpdate\"] = \"USER_UPDATE\";\r\n    GatewayDispatchEvents[\"VoiceServerUpdate\"] = \"VOICE_SERVER_UPDATE\";\r\n    GatewayDispatchEvents[\"VoiceStateUpdate\"] = \"VOICE_STATE_UPDATE\";\r\n    GatewayDispatchEvents[\"WebhooksUpdate\"] = \"WEBHOOKS_UPDATE\";\r\n})(GatewayDispatchEvents = exports.GatewayDispatchEvents || (exports.GatewayDispatchEvents = {}));\r\n// #endregion Shared\r\n//# sourceMappingURL=v9.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FormattingPatterns = void 0;\r\n/**\r\n * https://discord.com/developers/docs/reference#message-formatting-formats\r\n */\r\nexports.FormattingPatterns = {\r\n    /**\r\n     * Regular expression for matching a user mention, strictly without a nickname\r\n     *\r\n     * The `id` group property is present on the `exec` result of this expression\r\n     */\r\n    User: /<@(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a user mention, strictly with a nickname\r\n     *\r\n     * The `id` group property is present on the `exec` result of this expression\r\n     */\r\n    UserWithNickname: /<@!(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a user mention, with or without a nickname\r\n     *\r\n     * The `id` group property is present on the `exec` result of this expression\r\n     */\r\n    UserWithOptionalNickname: /<@!?(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a channel mention\r\n     *\r\n     * The `id` group property is present on the `exec` result of this expression\r\n     */\r\n    Channel: /<#(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a role mention\r\n     *\r\n     * The `id` group property is present on the `exec` result of this expression\r\n     */\r\n    Role: /<@&(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a custom emoji, either static or animated\r\n     *\r\n     * The `animated`, `name` and `id` group properties are present on the `exec` result of this expression\r\n     */\r\n    Emoji: /<(?<animated>a)?:(?<name>\\w{2,32}):(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching strictly an animated custom emoji\r\n     *\r\n     * The `animated`, `name` and `id` group properties are present on the `exec` result of this expression\r\n     */\r\n    AnimatedEmoji: /<(?<animated>a):(?<name>\\w{2,32}):(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching strictly a static custom emoji\r\n     *\r\n     * The `name` and `id` group properties are present on the `exec` result of this expression\r\n     */\r\n    StaticEmoji: /<:(?<name>\\w{2,32}):(?<id>\\d{17,20})>/,\r\n    /**\r\n     * Regular expression for matching a timestamp, either default or custom styled\r\n     *\r\n     * The `timestamp` and `style` group properties are present on the `exec` result of this expression\r\n     */\r\n    Timestamp: /<t:(?<timestamp>-?\\d{1,13})(:(?<style>[tTdDfFR]))?>/,\r\n    /**\r\n     * Regular expression for matching strictly default styled timestamps\r\n     *\r\n     * The `timestamp` group property is present on the `exec` result of this expression\r\n     */\r\n    DefaultStyledTimestamp: /<t:(?<timestamp>-?\\d{1,13})>/,\r\n    /**\r\n     * Regular expression for matching strictly custom styled timestamps\r\n     *\r\n     * The `timestamp` and `style` group properties are present on the `exec` result of this expression\r\n     */\r\n    StyledTimestamp: /<t:(?<timestamp>-?\\d{1,13}):(?<style>[tTdDfFR])>/,\r\n};\r\n/**\r\n * Freezes the formatting patterns\r\n * @internal\r\n */\r\nObject.freeze(exports.FormattingPatterns);\r\n//# sourceMappingURL=globals.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=base.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=messageComponents.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=ping.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InteractionResponseType = exports.InteractionType = void 0;\r\n/**\r\n * https://discord.com/developers/docs/interactions/slash-commands#interaction-object-interaction-request-type\r\n */\r\nvar InteractionType;\r\n(function (InteractionType) {\r\n    InteractionType[InteractionType[\"Ping\"] = 1] = \"Ping\";\r\n    InteractionType[InteractionType[\"ApplicationCommand\"] = 2] = \"ApplicationCommand\";\r\n    InteractionType[InteractionType[\"MessageComponent\"] = 3] = \"MessageComponent\";\r\n})(InteractionType = exports.InteractionType || (exports.InteractionType = {}));\r\n/**\r\n * https://discord.com/developers/docs/interactions/slash-commands#interaction-response-object-interaction-callback-type\r\n */\r\nvar InteractionResponseType;\r\n(function (InteractionResponseType) {\r\n    /**\r\n     * ACK a `Ping`\r\n     */\r\n    InteractionResponseType[InteractionResponseType[\"Pong\"] = 1] = \"Pong\";\r\n    /**\r\n     * Respond to an interaction with a message\r\n     */\r\n    InteractionResponseType[InteractionResponseType[\"ChannelMessageWithSource\"] = 4] = \"ChannelMessageWithSource\";\r\n    /**\r\n     * ACK an interaction and edit to a response later, the user sees a loading state\r\n     */\r\n    InteractionResponseType[InteractionResponseType[\"DeferredChannelMessageWithSource\"] = 5] = \"DeferredChannelMessageWithSource\";\r\n    /**\r\n     * ACK a button interaction and update it to a loading state\r\n     */\r\n    InteractionResponseType[InteractionResponseType[\"DeferredMessageUpdate\"] = 6] = \"DeferredMessageUpdate\";\r\n    /**\r\n     * ACK a button interaction and edit the message to which the button was attached\r\n     */\r\n    InteractionResponseType[InteractionResponseType[\"UpdateMessage\"] = 7] = \"UpdateMessage\";\r\n})(InteractionResponseType = exports.InteractionResponseType || (exports.InteractionResponseType = {}));\r\n//# sourceMappingURL=responses.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ApplicationCommandPermissionType = exports.ApplicationCommandOptionType = void 0;\r\n/**\r\n * https://discord.com/developers/docs/interactions/slash-commands#application-command-object-application-command-option-type\r\n */\r\nvar ApplicationCommandOptionType;\r\n(function (ApplicationCommandOptionType) {\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Subcommand\"] = 1] = \"Subcommand\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"SubcommandGroup\"] = 2] = \"SubcommandGroup\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"String\"] = 3] = \"String\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Integer\"] = 4] = \"Integer\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Boolean\"] = 5] = \"Boolean\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"User\"] = 6] = \"User\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Channel\"] = 7] = \"Channel\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Role\"] = 8] = \"Role\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Mentionable\"] = 9] = \"Mentionable\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"Number\"] = 10] = \"Number\";\r\n})(ApplicationCommandOptionType = exports.ApplicationCommandOptionType || (exports.ApplicationCommandOptionType = {}));\r\n/**\r\n * https://discord.com/developers/docs/interactions/slash-commands#applicationcommandpermissiontype\r\n */\r\nvar ApplicationCommandPermissionType;\r\n(function (ApplicationCommandPermissionType) {\r\n    ApplicationCommandPermissionType[ApplicationCommandPermissionType[\"Role\"] = 1] = \"Role\";\r\n    ApplicationCommandPermissionType[ApplicationCommandPermissionType[\"User\"] = 2] = \"User\";\r\n})(ApplicationCommandPermissionType = exports.ApplicationCommandPermissionType || (exports.ApplicationCommandPermissionType = {}));\r\n//# sourceMappingURL=slashCommands.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/application\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ApplicationFlags = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/application#application-object-application-flags\r\n */\r\nvar ApplicationFlags;\r\n(function (ApplicationFlags) {\r\n    ApplicationFlags[ApplicationFlags[\"ManagedEmoji\"] = 4] = \"ManagedEmoji\";\r\n    ApplicationFlags[ApplicationFlags[\"GroupDMCreate\"] = 16] = \"GroupDMCreate\";\r\n    ApplicationFlags[ApplicationFlags[\"RPCHasConnected\"] = 2048] = \"RPCHasConnected\";\r\n    ApplicationFlags[ApplicationFlags[\"GatewayPresence\"] = 4096] = \"GatewayPresence\";\r\n    ApplicationFlags[ApplicationFlags[\"GatewayPresenceLimited\"] = 8192] = \"GatewayPresenceLimited\";\r\n    ApplicationFlags[ApplicationFlags[\"GatewayGuildMembers\"] = 16384] = \"GatewayGuildMembers\";\r\n    ApplicationFlags[ApplicationFlags[\"GatewayGuildMembersLimited\"] = 32768] = \"GatewayGuildMembersLimited\";\r\n    ApplicationFlags[ApplicationFlags[\"VerificationPendingGuildLimit\"] = 65536] = \"VerificationPendingGuildLimit\";\r\n    ApplicationFlags[ApplicationFlags[\"Embedded\"] = 131072] = \"Embedded\";\r\n})(ApplicationFlags = exports.ApplicationFlags || (exports.ApplicationFlags = {}));\r\n//# sourceMappingURL=application.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/audit-log\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AuditLogOptionsType = exports.AuditLogEvent = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events\r\n */\r\nvar AuditLogEvent;\r\n(function (AuditLogEvent) {\r\n    AuditLogEvent[AuditLogEvent[\"GuildUpdate\"] = 1] = \"GuildUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelCreate\"] = 10] = \"ChannelCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelUpdate\"] = 11] = \"ChannelUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelDelete\"] = 12] = \"ChannelDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelOverwriteCreate\"] = 13] = \"ChannelOverwriteCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelOverwriteUpdate\"] = 14] = \"ChannelOverwriteUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"ChannelOverwriteDelete\"] = 15] = \"ChannelOverwriteDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberKick\"] = 20] = \"MemberKick\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberPrune\"] = 21] = \"MemberPrune\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberBanAdd\"] = 22] = \"MemberBanAdd\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberBanRemove\"] = 23] = \"MemberBanRemove\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberUpdate\"] = 24] = \"MemberUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberRoleUpdate\"] = 25] = \"MemberRoleUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberMove\"] = 26] = \"MemberMove\";\r\n    AuditLogEvent[AuditLogEvent[\"MemberDisconnect\"] = 27] = \"MemberDisconnect\";\r\n    AuditLogEvent[AuditLogEvent[\"BotAdd\"] = 28] = \"BotAdd\";\r\n    AuditLogEvent[AuditLogEvent[\"RoleCreate\"] = 30] = \"RoleCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"RoleUpdate\"] = 31] = \"RoleUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"RoleDelete\"] = 32] = \"RoleDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"InviteCreate\"] = 40] = \"InviteCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"InviteUpdate\"] = 41] = \"InviteUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"InviteDelete\"] = 42] = \"InviteDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"WebhookCreate\"] = 50] = \"WebhookCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"WebhookUpdate\"] = 51] = \"WebhookUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"WebhookDelete\"] = 52] = \"WebhookDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"EmojiCreate\"] = 60] = \"EmojiCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"EmojiUpdate\"] = 61] = \"EmojiUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"EmojiDelete\"] = 62] = \"EmojiDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"MessageDelete\"] = 72] = \"MessageDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"MessageBulkDelete\"] = 73] = \"MessageBulkDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"MessagePin\"] = 74] = \"MessagePin\";\r\n    AuditLogEvent[AuditLogEvent[\"MessageUnpin\"] = 75] = \"MessageUnpin\";\r\n    AuditLogEvent[AuditLogEvent[\"IntegrationCreate\"] = 80] = \"IntegrationCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"IntegrationUpdate\"] = 81] = \"IntegrationUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"IntegrationDelete\"] = 82] = \"IntegrationDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"StageInstanceCreate\"] = 83] = \"StageInstanceCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"StageInstanceUpdate\"] = 84] = \"StageInstanceUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"StageInstanceDelete\"] = 85] = \"StageInstanceDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"StickerCreate\"] = 90] = \"StickerCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"StickerUpdate\"] = 91] = \"StickerUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"StickerDelete\"] = 92] = \"StickerDelete\";\r\n    AuditLogEvent[AuditLogEvent[\"ThreadCreate\"] = 110] = \"ThreadCreate\";\r\n    AuditLogEvent[AuditLogEvent[\"ThreadUpdate\"] = 111] = \"ThreadUpdate\";\r\n    AuditLogEvent[AuditLogEvent[\"ThreadDelete\"] = 112] = \"ThreadDelete\";\r\n})(AuditLogEvent = exports.AuditLogEvent || (exports.AuditLogEvent = {}));\r\nvar AuditLogOptionsType;\r\n(function (AuditLogOptionsType) {\r\n    AuditLogOptionsType[\"Role\"] = \"0\";\r\n    AuditLogOptionsType[\"Member\"] = \"1\";\r\n})(AuditLogOptionsType = exports.AuditLogOptionsType || (exports.AuditLogOptionsType = {}));\r\n//# sourceMappingURL=auditLog.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/channel\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ButtonStyle = exports.ComponentType = exports.AllowedMentionsTypes = exports.EmbedType = exports.ThreadMemberFlags = exports.ThreadAutoArchiveDuration = exports.OverwriteType = exports.MessageFlags = exports.MessageActivityType = exports.MessageType = exports.VideoQualityMode = exports.ChannelType = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#channel-object-channel-types\r\n */\r\nvar ChannelType;\r\n(function (ChannelType) {\r\n    /**\r\n     * A text channel within a guild\r\n     */\r\n    ChannelType[ChannelType[\"GuildText\"] = 0] = \"GuildText\";\r\n    /**\r\n     * A direct message between users\r\n     */\r\n    ChannelType[ChannelType[\"DM\"] = 1] = \"DM\";\r\n    /**\r\n     * A voice channel within a guild\r\n     */\r\n    ChannelType[ChannelType[\"GuildVoice\"] = 2] = \"GuildVoice\";\r\n    /**\r\n     * A direct message between multiple users\r\n     */\r\n    ChannelType[ChannelType[\"GroupDM\"] = 3] = \"GroupDM\";\r\n    /**\r\n     * An organizational category that contains up to 50 channels\r\n     *\r\n     * See https://support.discord.com/hc/en-us/articles/115001580171-Channel-Categories-101\r\n     */\r\n    ChannelType[ChannelType[\"GuildCategory\"] = 4] = \"GuildCategory\";\r\n    /**\r\n     * A channel that users can follow and crosspost into their own guild\r\n     *\r\n     * See https://support.discord.com/hc/en-us/articles/360032008192\r\n     */\r\n    ChannelType[ChannelType[\"GuildNews\"] = 5] = \"GuildNews\";\r\n    /**\r\n     * A channel in which game developers can sell their game on Discord\r\n     *\r\n     * See https://discord.com/developers/docs/game-and-server-management/special-channels\r\n     */\r\n    ChannelType[ChannelType[\"GuildStore\"] = 6] = \"GuildStore\";\r\n    /**\r\n     * A thread channel (public) within a Guild News channel\r\n     */\r\n    ChannelType[ChannelType[\"GuildNewsThread\"] = 10] = \"GuildNewsThread\";\r\n    /**\r\n     * A public thread channel within a Guild Text channel\r\n     */\r\n    ChannelType[ChannelType[\"GuildPublicThread\"] = 11] = \"GuildPublicThread\";\r\n    /**\r\n     * A private thread channel within a Guild Text channel\r\n     */\r\n    ChannelType[ChannelType[\"GuildPrivateThread\"] = 12] = \"GuildPrivateThread\";\r\n    /**\r\n     * A voice channel for hosting events with an audience\r\n     *\r\n     * See https://support.discord.com/hc/en-us/articles/1500005513722\r\n     */\r\n    ChannelType[ChannelType[\"GuildStageVoice\"] = 13] = \"GuildStageVoice\";\r\n})(ChannelType = exports.ChannelType || (exports.ChannelType = {}));\r\nvar VideoQualityMode;\r\n(function (VideoQualityMode) {\r\n    /**\r\n     * Discord chooses the quality for optimal performance\r\n     */\r\n    VideoQualityMode[VideoQualityMode[\"Auto\"] = 1] = \"Auto\";\r\n    /**\r\n     * 720p\r\n     */\r\n    VideoQualityMode[VideoQualityMode[\"Full\"] = 2] = \"Full\";\r\n})(VideoQualityMode = exports.VideoQualityMode || (exports.VideoQualityMode = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#message-object-message-types\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"Default\"] = 0] = \"Default\";\r\n    MessageType[MessageType[\"RecipientAdd\"] = 1] = \"RecipientAdd\";\r\n    MessageType[MessageType[\"RecipientRemove\"] = 2] = \"RecipientRemove\";\r\n    MessageType[MessageType[\"Call\"] = 3] = \"Call\";\r\n    MessageType[MessageType[\"ChannelNameChange\"] = 4] = \"ChannelNameChange\";\r\n    MessageType[MessageType[\"ChannelIconChange\"] = 5] = \"ChannelIconChange\";\r\n    MessageType[MessageType[\"ChannelPinnedMessage\"] = 6] = \"ChannelPinnedMessage\";\r\n    MessageType[MessageType[\"GuildMemberJoin\"] = 7] = \"GuildMemberJoin\";\r\n    MessageType[MessageType[\"UserPremiumGuildSubscription\"] = 8] = \"UserPremiumGuildSubscription\";\r\n    MessageType[MessageType[\"UserPremiumGuildSubscriptionTier1\"] = 9] = \"UserPremiumGuildSubscriptionTier1\";\r\n    MessageType[MessageType[\"UserPremiumGuildSubscriptionTier2\"] = 10] = \"UserPremiumGuildSubscriptionTier2\";\r\n    MessageType[MessageType[\"UserPremiumGuildSubscriptionTier3\"] = 11] = \"UserPremiumGuildSubscriptionTier3\";\r\n    MessageType[MessageType[\"ChannelFollowAdd\"] = 12] = \"ChannelFollowAdd\";\r\n    MessageType[MessageType[\"GuildDiscoveryDisqualified\"] = 14] = \"GuildDiscoveryDisqualified\";\r\n    MessageType[MessageType[\"GuildDiscoveryRequalified\"] = 15] = \"GuildDiscoveryRequalified\";\r\n    MessageType[MessageType[\"GuildDiscoveryGracePeriodInitialWarning\"] = 16] = \"GuildDiscoveryGracePeriodInitialWarning\";\r\n    MessageType[MessageType[\"GuildDiscoveryGracePeriodFinalWarning\"] = 17] = \"GuildDiscoveryGracePeriodFinalWarning\";\r\n    MessageType[MessageType[\"ThreadCreated\"] = 18] = \"ThreadCreated\";\r\n    MessageType[MessageType[\"Reply\"] = 19] = \"Reply\";\r\n    MessageType[MessageType[\"ApplicationCommand\"] = 20] = \"ApplicationCommand\";\r\n    MessageType[MessageType[\"ThreadStarterMessage\"] = 21] = \"ThreadStarterMessage\";\r\n    MessageType[MessageType[\"GuildInviteReminder\"] = 22] = \"GuildInviteReminder\";\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#message-object-message-activity-types\r\n */\r\nvar MessageActivityType;\r\n(function (MessageActivityType) {\r\n    MessageActivityType[MessageActivityType[\"Join\"] = 1] = \"Join\";\r\n    MessageActivityType[MessageActivityType[\"Spectate\"] = 2] = \"Spectate\";\r\n    MessageActivityType[MessageActivityType[\"Listen\"] = 3] = \"Listen\";\r\n    MessageActivityType[MessageActivityType[\"JoinRequest\"] = 5] = \"JoinRequest\";\r\n})(MessageActivityType = exports.MessageActivityType || (exports.MessageActivityType = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#message-object-message-flags\r\n */\r\nvar MessageFlags;\r\n(function (MessageFlags) {\r\n    /**\r\n     * This message has been published to subscribed channels (via Channel Following)\r\n     */\r\n    MessageFlags[MessageFlags[\"Crossposted\"] = 1] = \"Crossposted\";\r\n    /**\r\n     * This message originated from a message in another channel (via Channel Following)\r\n     */\r\n    MessageFlags[MessageFlags[\"IsCrosspost\"] = 2] = \"IsCrosspost\";\r\n    /**\r\n     * Do not include any embeds when serializing this message\r\n     */\r\n    MessageFlags[MessageFlags[\"SuppressEmbeds\"] = 4] = \"SuppressEmbeds\";\r\n    /**\r\n     * The source message for this crosspost has been deleted (via Channel Following)\r\n     */\r\n    MessageFlags[MessageFlags[\"SourceMessageDeleted\"] = 8] = \"SourceMessageDeleted\";\r\n    /**\r\n     * This message came from the urgent message system\r\n     */\r\n    MessageFlags[MessageFlags[\"Urgent\"] = 16] = \"Urgent\";\r\n    /**\r\n     * This message has an associated thread, which shares its id\r\n     */\r\n    MessageFlags[MessageFlags[\"HasThread\"] = 32] = \"HasThread\";\r\n    /**\r\n     * This message is only visible to the user who invoked the Interaction\r\n     */\r\n    MessageFlags[MessageFlags[\"Ephemeral\"] = 64] = \"Ephemeral\";\r\n    /**\r\n     * This message is an Interaction Response and the bot is \"thinking\"\r\n     */\r\n    MessageFlags[MessageFlags[\"Loading\"] = 128] = \"Loading\";\r\n})(MessageFlags = exports.MessageFlags || (exports.MessageFlags = {}));\r\nvar OverwriteType;\r\n(function (OverwriteType) {\r\n    OverwriteType[OverwriteType[\"Role\"] = 0] = \"Role\";\r\n    OverwriteType[OverwriteType[\"Member\"] = 1] = \"Member\";\r\n})(OverwriteType = exports.OverwriteType || (exports.OverwriteType = {}));\r\nvar ThreadAutoArchiveDuration;\r\n(function (ThreadAutoArchiveDuration) {\r\n    ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"OneHour\"] = 60] = \"OneHour\";\r\n    ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"OneDay\"] = 1440] = \"OneDay\";\r\n    ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"ThreeDays\"] = 4320] = \"ThreeDays\";\r\n    ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"OneWeek\"] = 10080] = \"OneWeek\";\r\n})(ThreadAutoArchiveDuration = exports.ThreadAutoArchiveDuration || (exports.ThreadAutoArchiveDuration = {}));\r\nvar ThreadMemberFlags;\r\n(function (ThreadMemberFlags) {\r\n})(ThreadMemberFlags = exports.ThreadMemberFlags || (exports.ThreadMemberFlags = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#embed-object-embed-types\r\n * @deprecated *Embed types should be considered deprecated and might be removed in a future API version*\r\n */\r\nvar EmbedType;\r\n(function (EmbedType) {\r\n    /**\r\n     * Generic embed rendered from embed attributes\r\n     */\r\n    EmbedType[\"Rich\"] = \"rich\";\r\n    /**\r\n     * Image embed\r\n     */\r\n    EmbedType[\"Image\"] = \"image\";\r\n    /**\r\n     * Video embed\r\n     */\r\n    EmbedType[\"Video\"] = \"video\";\r\n    /**\r\n     * Animated gif image embed rendered as a video embed\r\n     */\r\n    EmbedType[\"GIFV\"] = \"gifv\";\r\n    /**\r\n     * Article embed\r\n     */\r\n    EmbedType[\"Article\"] = \"article\";\r\n    /**\r\n     * Link embed\r\n     */\r\n    EmbedType[\"Link\"] = \"link\";\r\n})(EmbedType = exports.EmbedType || (exports.EmbedType = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/channel#allowed-mentions-object-allowed-mention-types\r\n */\r\nvar AllowedMentionsTypes;\r\n(function (AllowedMentionsTypes) {\r\n    /**\r\n     * Controls @everyone and @here mentions\r\n     */\r\n    AllowedMentionsTypes[\"Everyone\"] = \"everyone\";\r\n    /**\r\n     * Controls role mentions\r\n     */\r\n    AllowedMentionsTypes[\"Role\"] = \"roles\";\r\n    /**\r\n     * Controls user mentions\r\n     */\r\n    AllowedMentionsTypes[\"User\"] = \"users\";\r\n})(AllowedMentionsTypes = exports.AllowedMentionsTypes || (exports.AllowedMentionsTypes = {}));\r\n/**\r\n * https://discord.com/developers/docs/interactions/message-components#component-types\r\n */\r\nvar ComponentType;\r\n(function (ComponentType) {\r\n    /**\r\n     * Action Row component\r\n     */\r\n    ComponentType[ComponentType[\"ActionRow\"] = 1] = \"ActionRow\";\r\n    /**\r\n     * Button component\r\n     */\r\n    ComponentType[ComponentType[\"Button\"] = 2] = \"Button\";\r\n    /**\r\n     * Select Menu component\r\n     */\r\n    ComponentType[ComponentType[\"SelectMenu\"] = 3] = \"SelectMenu\";\r\n})(ComponentType = exports.ComponentType || (exports.ComponentType = {}));\r\n/**\r\n * https://discord.com/developers/docs/interactions/message-components#button-object-button-styles\r\n */\r\nvar ButtonStyle;\r\n(function (ButtonStyle) {\r\n    ButtonStyle[ButtonStyle[\"Primary\"] = 1] = \"Primary\";\r\n    ButtonStyle[ButtonStyle[\"Secondary\"] = 2] = \"Secondary\";\r\n    ButtonStyle[ButtonStyle[\"Success\"] = 3] = \"Success\";\r\n    ButtonStyle[ButtonStyle[\"Danger\"] = 4] = \"Danger\";\r\n    ButtonStyle[ButtonStyle[\"Link\"] = 5] = \"Link\";\r\n})(ButtonStyle = exports.ButtonStyle || (exports.ButtonStyle = {}));\r\n//# sourceMappingURL=channel.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/emoji\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=emoji.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/topics/gateway\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ActivityFlags = exports.ActivityType = exports.ActivityPlatform = exports.PresenceUpdateStatus = void 0;\r\nvar PresenceUpdateStatus;\r\n(function (PresenceUpdateStatus) {\r\n    PresenceUpdateStatus[\"Online\"] = \"online\";\r\n    PresenceUpdateStatus[\"DoNotDisturb\"] = \"dnd\";\r\n    PresenceUpdateStatus[\"Idle\"] = \"idle\";\r\n    /**\r\n     * Invisible and shown as offline\r\n     */\r\n    PresenceUpdateStatus[\"Invisible\"] = \"invisible\";\r\n    PresenceUpdateStatus[\"Offline\"] = \"offline\";\r\n})(PresenceUpdateStatus = exports.PresenceUpdateStatus || (exports.PresenceUpdateStatus = {}));\r\nvar ActivityPlatform;\r\n(function (ActivityPlatform) {\r\n    ActivityPlatform[\"Desktop\"] = \"desktop\";\r\n    ActivityPlatform[\"Samsung\"] = \"samsung\";\r\n    ActivityPlatform[\"Xbox\"] = \"xbox\";\r\n})(ActivityPlatform = exports.ActivityPlatform || (exports.ActivityPlatform = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/gateway#activity-object-activity-types\r\n */\r\nvar ActivityType;\r\n(function (ActivityType) {\r\n    /**\r\n     * Playing {game}\r\n     */\r\n    ActivityType[ActivityType[\"Game\"] = 0] = \"Game\";\r\n    /**\r\n     * Streaming {details}\r\n     */\r\n    ActivityType[ActivityType[\"Streaming\"] = 1] = \"Streaming\";\r\n    /**\r\n     * Listening to {name}\r\n     */\r\n    ActivityType[ActivityType[\"Listening\"] = 2] = \"Listening\";\r\n    /**\r\n     * Watching {details}\r\n     */\r\n    ActivityType[ActivityType[\"Watching\"] = 3] = \"Watching\";\r\n    /**\r\n     * {emoji} {details}\r\n     */\r\n    ActivityType[ActivityType[\"Custom\"] = 4] = \"Custom\";\r\n    /**\r\n     * Competing in {name}\r\n     */\r\n    ActivityType[ActivityType[\"Competing\"] = 5] = \"Competing\";\r\n})(ActivityType = exports.ActivityType || (exports.ActivityType = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/gateway#activity-object-activity-flags\r\n */\r\nvar ActivityFlags;\r\n(function (ActivityFlags) {\r\n    ActivityFlags[ActivityFlags[\"Instance\"] = 1] = \"Instance\";\r\n    ActivityFlags[ActivityFlags[\"Join\"] = 2] = \"Join\";\r\n    ActivityFlags[ActivityFlags[\"Spectate\"] = 4] = \"Spectate\";\r\n    ActivityFlags[ActivityFlags[\"JoinRequest\"] = 8] = \"JoinRequest\";\r\n    ActivityFlags[ActivityFlags[\"Sync\"] = 16] = \"Sync\";\r\n    ActivityFlags[ActivityFlags[\"Play\"] = 32] = \"Play\";\r\n})(ActivityFlags = exports.ActivityFlags || (exports.ActivityFlags = {}));\r\n//# sourceMappingURL=gateway.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/guild\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MembershipScreeningFieldType = exports.GuildWidgetStyle = exports.IntegrationExpireBehavior = exports.GuildFeature = exports.GuildSystemChannelFlags = exports.GuildPremiumTier = exports.GuildVerificationLevel = exports.GuildNSFWLevel = exports.GuildMFALevel = exports.GuildExplicitContentFilter = exports.GuildDefaultMessageNotifications = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level\r\n */\r\nvar GuildDefaultMessageNotifications;\r\n(function (GuildDefaultMessageNotifications) {\r\n    GuildDefaultMessageNotifications[GuildDefaultMessageNotifications[\"AllMessages\"] = 0] = \"AllMessages\";\r\n    GuildDefaultMessageNotifications[GuildDefaultMessageNotifications[\"OnlyMentions\"] = 1] = \"OnlyMentions\";\r\n})(GuildDefaultMessageNotifications = exports.GuildDefaultMessageNotifications || (exports.GuildDefaultMessageNotifications = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level\r\n */\r\nvar GuildExplicitContentFilter;\r\n(function (GuildExplicitContentFilter) {\r\n    GuildExplicitContentFilter[GuildExplicitContentFilter[\"Disabled\"] = 0] = \"Disabled\";\r\n    GuildExplicitContentFilter[GuildExplicitContentFilter[\"MembersWithoutRoles\"] = 1] = \"MembersWithoutRoles\";\r\n    GuildExplicitContentFilter[GuildExplicitContentFilter[\"AllMembers\"] = 2] = \"AllMembers\";\r\n})(GuildExplicitContentFilter = exports.GuildExplicitContentFilter || (exports.GuildExplicitContentFilter = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-mfa-level\r\n */\r\nvar GuildMFALevel;\r\n(function (GuildMFALevel) {\r\n    GuildMFALevel[GuildMFALevel[\"None\"] = 0] = \"None\";\r\n    GuildMFALevel[GuildMFALevel[\"Elevated\"] = 1] = \"Elevated\";\r\n})(GuildMFALevel = exports.GuildMFALevel || (exports.GuildMFALevel = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-guild-nsfw-level\r\n */\r\nvar GuildNSFWLevel;\r\n(function (GuildNSFWLevel) {\r\n    GuildNSFWLevel[GuildNSFWLevel[\"Default\"] = 0] = \"Default\";\r\n    GuildNSFWLevel[GuildNSFWLevel[\"Explicit\"] = 1] = \"Explicit\";\r\n    GuildNSFWLevel[GuildNSFWLevel[\"Safe\"] = 2] = \"Safe\";\r\n    GuildNSFWLevel[GuildNSFWLevel[\"AgeRestricted\"] = 3] = \"AgeRestricted\";\r\n})(GuildNSFWLevel = exports.GuildNSFWLevel || (exports.GuildNSFWLevel = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-verification-level\r\n */\r\nvar GuildVerificationLevel;\r\n(function (GuildVerificationLevel) {\r\n    /**\r\n     * Unrestricted\r\n     */\r\n    GuildVerificationLevel[GuildVerificationLevel[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Must have verified email on account\r\n     */\r\n    GuildVerificationLevel[GuildVerificationLevel[\"Low\"] = 1] = \"Low\";\r\n    /**\r\n     * Must be registered on Discord for longer than 5 minutes\r\n     */\r\n    GuildVerificationLevel[GuildVerificationLevel[\"Medium\"] = 2] = \"Medium\";\r\n    /**\r\n     * Must be a member of the guild for longer than 10 minutes\r\n     */\r\n    GuildVerificationLevel[GuildVerificationLevel[\"High\"] = 3] = \"High\";\r\n    /**\r\n     * Must have a verified phone number\r\n     */\r\n    GuildVerificationLevel[GuildVerificationLevel[\"VeryHigh\"] = 4] = \"VeryHigh\";\r\n})(GuildVerificationLevel = exports.GuildVerificationLevel || (exports.GuildVerificationLevel = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-premium-tier\r\n */\r\nvar GuildPremiumTier;\r\n(function (GuildPremiumTier) {\r\n    GuildPremiumTier[GuildPremiumTier[\"None\"] = 0] = \"None\";\r\n    GuildPremiumTier[GuildPremiumTier[\"Tier1\"] = 1] = \"Tier1\";\r\n    GuildPremiumTier[GuildPremiumTier[\"Tier2\"] = 2] = \"Tier2\";\r\n    GuildPremiumTier[GuildPremiumTier[\"Tier3\"] = 3] = \"Tier3\";\r\n})(GuildPremiumTier = exports.GuildPremiumTier || (exports.GuildPremiumTier = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags\r\n */\r\nvar GuildSystemChannelFlags;\r\n(function (GuildSystemChannelFlags) {\r\n    /**\r\n     * Suppress member join notifications\r\n     */\r\n    GuildSystemChannelFlags[GuildSystemChannelFlags[\"SuppressJoinNotifications\"] = 1] = \"SuppressJoinNotifications\";\r\n    /**\r\n     * Suppress server boost notifications\r\n     */\r\n    GuildSystemChannelFlags[GuildSystemChannelFlags[\"SuppressPremiumSubscriptions\"] = 2] = \"SuppressPremiumSubscriptions\";\r\n    /**\r\n     * Suppress server setup tips\r\n     */\r\n    GuildSystemChannelFlags[GuildSystemChannelFlags[\"SuppressGuildReminderNotifications\"] = 4] = \"SuppressGuildReminderNotifications\";\r\n})(GuildSystemChannelFlags = exports.GuildSystemChannelFlags || (exports.GuildSystemChannelFlags = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#guild-object-guild-features\r\n */\r\nvar GuildFeature;\r\n(function (GuildFeature) {\r\n    /**\r\n     * Guild has access to set an animated guild icon\r\n     */\r\n    GuildFeature[\"AnimatedIcon\"] = \"ANIMATED_ICON\";\r\n    /**\r\n     * Guild has access to set a guild banner image\r\n     */\r\n    GuildFeature[\"Banner\"] = \"BANNER\";\r\n    /**\r\n     * Guild has access to use commerce features (i.e. create store channels)\r\n     */\r\n    GuildFeature[\"Commerce\"] = \"COMMERCE\";\r\n    /**\r\n     * Guild can enable welcome screen, Membership Screening and discovery, and receives community updates\r\n     */\r\n    GuildFeature[\"Community\"] = \"COMMUNITY\";\r\n    /**\r\n     * Guild is able to be discovered in the directory\r\n     */\r\n    GuildFeature[\"Discoverable\"] = \"DISCOVERABLE\";\r\n    /**\r\n     * Guild is able to be featured in the directory\r\n     */\r\n    GuildFeature[\"Featurable\"] = \"FEATURABLE\";\r\n    /**\r\n     * Guild has access to set an invite splash background\r\n     */\r\n    GuildFeature[\"InviteSplash\"] = \"INVITE_SPLASH\";\r\n    /**\r\n     * Guild has access to create news channels\r\n     */\r\n    GuildFeature[\"News\"] = \"NEWS\";\r\n    /**\r\n     * Guild is partnered\r\n     */\r\n    GuildFeature[\"Partnered\"] = \"PARTNERED\";\r\n    GuildFeature[\"RelayEnabled\"] = \"RELAY_ENABLED\";\r\n    /**\r\n     * Guild has access to set a vanity URL\r\n     */\r\n    GuildFeature[\"VanityURL\"] = \"VANITY_URL\";\r\n    /**\r\n     * Guild is verified\r\n     */\r\n    GuildFeature[\"Verified\"] = \"VERIFIED\";\r\n    /**\r\n     * Guild has access to set 384kbps bitrate in voice (previously VIP voice servers)\r\n     */\r\n    GuildFeature[\"VIPRegions\"] = \"VIP_REGIONS\";\r\n    /**\r\n     * Guild has enabled the welcome screen\r\n     */\r\n    GuildFeature[\"WelcomeScreenEnabled\"] = \"WELCOME_SCREEN_ENABLED\";\r\n    /**\r\n     * Guild has enabled Membership Screening\r\n     */\r\n    GuildFeature[\"MemberVerificationGateEnabled\"] = \"MEMBER_VERIFICATION_GATE_ENABLED\";\r\n    /**\r\n     * Guild can be previewed before joining via Membership Screening or the directory\r\n     */\r\n    GuildFeature[\"PreviewEnabled\"] = \"PREVIEW_ENABLED\";\r\n    /**\r\n     * Guild has enabled ticketed events\r\n     */\r\n    GuildFeature[\"TicketedEventsEnabled\"] = \"TICKETED_EVENTS_ENABLED\";\r\n    /**\r\n     * Guild has enabled monetization\r\n     */\r\n    GuildFeature[\"MonetizationEnabled\"] = \"MONETIZATION_ENABLED\";\r\n    /**\r\n     * Guild has increased custom sticker slots\r\n     */\r\n    GuildFeature[\"MoreStickers\"] = \"MORE_STICKERS\";\r\n    /**\r\n     * Guild has access to the three day archive time for threads\r\n     */\r\n    GuildFeature[\"ThreeDayThreadArchive\"] = \"THREE_DAY_THREAD_ARCHIVE\";\r\n    /**\r\n     * Guild has access to the seven day archive time for threads\r\n     */\r\n    GuildFeature[\"SevenDayThreadArchive\"] = \"SEVEN_DAY_THREAD_ARCHIVE\";\r\n    /**\r\n     * Guild has access to create private threads\r\n     */\r\n    GuildFeature[\"PrivateThreads\"] = \"PRIVATE_THREADS\";\r\n})(GuildFeature = exports.GuildFeature || (exports.GuildFeature = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#integration-object-integration-expire-behaviors\r\n */\r\nvar IntegrationExpireBehavior;\r\n(function (IntegrationExpireBehavior) {\r\n    IntegrationExpireBehavior[IntegrationExpireBehavior[\"RemoveRole\"] = 0] = \"RemoveRole\";\r\n    IntegrationExpireBehavior[IntegrationExpireBehavior[\"Kick\"] = 1] = \"Kick\";\r\n})(IntegrationExpireBehavior = exports.IntegrationExpireBehavior || (exports.IntegrationExpireBehavior = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/guild#get-guild-widget-image-widget-style-options\r\n */\r\nvar GuildWidgetStyle;\r\n(function (GuildWidgetStyle) {\r\n    /**\r\n     * Shield style widget with Discord icon and guild members online count\r\n     */\r\n    GuildWidgetStyle[\"Shield\"] = \"shield\";\r\n    /**\r\n     * Large image with guild icon, name and online count. \"POWERED BY DISCORD\" as the footer of the widget\r\n     */\r\n    GuildWidgetStyle[\"Banner1\"] = \"banner1\";\r\n    /**\r\n     * Smaller widget style with guild icon, name and online count. Split on the right with Discord logo\r\n     */\r\n    GuildWidgetStyle[\"Banner2\"] = \"banner2\";\r\n    /**\r\n     * Large image with guild icon, name and online count. In the footer, Discord logo on the left and \"Chat Now\" on the right\r\n     */\r\n    GuildWidgetStyle[\"Banner3\"] = \"banner3\";\r\n    /**\r\n     * Large Discord logo at the top of the widget. Guild icon, name and online count in the middle portion of the widget\r\n     * and a \"JOIN MY SERVER\" button at the bottom\r\n     */\r\n    GuildWidgetStyle[\"Banner4\"] = \"banner4\";\r\n})(GuildWidgetStyle = exports.GuildWidgetStyle || (exports.GuildWidgetStyle = {}));\r\nvar MembershipScreeningFieldType;\r\n(function (MembershipScreeningFieldType) {\r\n    /**\r\n     * Server Rules\r\n     */\r\n    MembershipScreeningFieldType[\"Terms\"] = \"TERMS\";\r\n})(MembershipScreeningFieldType = exports.MembershipScreeningFieldType || (exports.MembershipScreeningFieldType = {}));\r\n//# sourceMappingURL=guild.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./application\"), exports);\r\n__exportStar(require(\"./auditLog\"), exports);\r\n__exportStar(require(\"./channel\"), exports);\r\n__exportStar(require(\"./emoji\"), exports);\r\n__exportStar(require(\"./gateway\"), exports);\r\n__exportStar(require(\"./guild\"), exports);\r\n__exportStar(require(\"./interactions\"), exports);\r\n__exportStar(require(\"./invite\"), exports);\r\n__exportStar(require(\"./oauth2\"), exports);\r\n__exportStar(require(\"./permissions\"), exports);\r\n__exportStar(require(\"./stageInstance\"), exports);\r\n__exportStar(require(\"./sticker\"), exports);\r\n__exportStar(require(\"./teams\"), exports);\r\n__exportStar(require(\"./template\"), exports);\r\n__exportStar(require(\"./user\"), exports);\r\n__exportStar(require(\"./voice\"), exports);\r\n__exportStar(require(\"./webhook\"), exports);\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./_interactions/base\"), exports);\r\n__exportStar(require(\"./_interactions/messageComponents\"), exports);\r\n__exportStar(require(\"./_interactions/ping\"), exports);\r\n__exportStar(require(\"./_interactions/responses\"), exports);\r\n__exportStar(require(\"./_interactions/slashCommands\"), exports);\r\n//# sourceMappingURL=interactions.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/invite\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InviteTargetType = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/invite#invite-object-invite-target-types\r\n */\r\nvar InviteTargetType;\r\n(function (InviteTargetType) {\r\n    InviteTargetType[InviteTargetType[\"Stream\"] = 1] = \"Stream\";\r\n    InviteTargetType[InviteTargetType[\"EmbeddedApplication\"] = 2] = \"EmbeddedApplication\";\r\n})(InviteTargetType = exports.InviteTargetType || (exports.InviteTargetType = {}));\r\n//# sourceMappingURL=invite.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/topics/oauth2\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OAuth2Scopes = void 0;\r\nvar OAuth2Scopes;\r\n(function (OAuth2Scopes) {\r\n    /**\r\n     * For oauth2 bots, this puts the bot in the user's selected guild by default\r\n     */\r\n    OAuth2Scopes[\"Bot\"] = \"bot\";\r\n    /**\r\n     * Allows [/users/@me/connections](https://discord.com/developers/docs/resources/user#get-user-connections)\r\n     * to return linked third-party accounts\r\n     *\r\n     * See https://discord.com/developers/docs/resources/user#get-user-connections\r\n     */\r\n    OAuth2Scopes[\"Connections\"] = \"connections\";\r\n    /**\r\n     * Enables [/users/@me](https://discord.com/developers/docs/resources/user#get-current-user) to return an `email`\r\n     *\r\n     * See https://discord.com/developers/docs/resources/user#get-current-user\r\n     */\r\n    OAuth2Scopes[\"Email\"] = \"email\";\r\n    /**\r\n     * Allows [/users/@me](https://discord.com/developers/docs/resources/user#get-current-user) without `email`\r\n     *\r\n     * See https://discord.com/developers/docs/resources/user#get-current-user\r\n     */\r\n    OAuth2Scopes[\"Identify\"] = \"identify\";\r\n    /**\r\n     * Allows [/users/@me/guilds](https://discord.com/developers/docs/resources/user#get-current-user-guilds)\r\n     * to return basic information about all of a user's guilds\r\n     *\r\n     * See https://discord.com/developers/docs/resources/user#get-current-user-guilds\r\n     */\r\n    OAuth2Scopes[\"Guilds\"] = \"guilds\";\r\n    /**\r\n     * Allows [/guilds/{guild.id}/members/{user.id}](https://discord.com/developers/docs/resources/guild#add-guild-member)\r\n     * to be used for joining users to a guild\r\n     *\r\n     * See https://discord.com/developers/docs/resources/guild#add-guild-member\r\n     */\r\n    OAuth2Scopes[\"GuildsJoin\"] = \"guilds.join\";\r\n    /**\r\n     * Allows your app to join users to a group dm\r\n     *\r\n     * See https://discord.com/developers/docs/resources/channel#group-dm-add-recipient\r\n     */\r\n    OAuth2Scopes[\"GroupDMJoins\"] = \"gdm.join\";\r\n    /**\r\n     * For local rpc server api access, this allows you to read messages from all client channels\r\n     * (otherwise restricted to channels/guilds your app creates)\r\n     */\r\n    OAuth2Scopes[\"MessagesRead\"] = \"messages.read\";\r\n    /**\r\n     * For local rpc server access, this allows you to control a user's local Discord client - requires Discord approval\r\n     */\r\n    OAuth2Scopes[\"RPC\"] = \"rpc\";\r\n    /**\r\n     * For local rpc server api access, this allows you to receive notifications pushed out to the user - requires Discord approval\r\n     */\r\n    OAuth2Scopes[\"RPCNotificationsRead\"] = \"rpc.notifications.read\";\r\n    /**\r\n     * This generates a webhook that is returned in the oauth token response for authorization code grants\r\n     */\r\n    OAuth2Scopes[\"WebhookIncoming\"] = \"webhook.incoming\";\r\n    /**\r\n     * Allows your app to upload/update builds for a user's applications - requires Discord approval\r\n     */\r\n    OAuth2Scopes[\"ApplicationsBuildsUpload\"] = \"applications.builds.upload\";\r\n    /**\r\n     * Allows your app to read build data for a user's applications\r\n     */\r\n    OAuth2Scopes[\"ApplicationsBuildsRead\"] = \"applications.builds.read\";\r\n    /**\r\n     * Allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications\r\n     */\r\n    OAuth2Scopes[\"ApplicationsStoreUpdate\"] = \"applications.store.update\";\r\n    /**\r\n     * Allows your app to read entitlements for a user's applications\r\n     */\r\n    OAuth2Scopes[\"ApplicationsEntitlements\"] = \"applications.entitlements\";\r\n    /**\r\n     * Allows your app to know a user's friends and implicit relationships - requires Discord approval\r\n     */\r\n    OAuth2Scopes[\"RelationshipsRead\"] = \"relationships.read\";\r\n    /**\r\n     * Allows your app to fetch data from a user's \"Now Playing/Recently Played\" list - requires Discord approval\r\n     */\r\n    OAuth2Scopes[\"ActivitiesRead\"] = \"activities.read\";\r\n    /**\r\n     * Allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)\r\n     *\r\n     * See https://discord.com/developers/docs/game-sdk/activities\r\n     */\r\n    OAuth2Scopes[\"ActivitiesWrite\"] = \"activities.write\";\r\n    /**\r\n     * Allows your app to use Slash Commands in a guild\r\n     *\r\n     * See https://discord.com/developers/docs/interactions/slash-commands\r\n     */\r\n    OAuth2Scopes[\"ApplicationsCommands\"] = \"applications.commands\";\r\n    /**\r\n     * Allows your app to update its Slash Commands via this bearer token - client credentials grant only\r\n     *\r\n     * See https://discord.com/developers/docs/interactions/slash-commands\r\n     */\r\n    OAuth2Scopes[\"ApplicationsCommandsUpdate\"] = \"applications.commands.update\";\r\n})(OAuth2Scopes = exports.OAuth2Scopes || (exports.OAuth2Scopes = {}));\r\n//# sourceMappingURL=oauth2.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/topics/permissions\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PermissionFlagsBits = void 0;\r\n/**\r\n * https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags\r\n *\r\n * These flags are exported as `BigInt`s and NOT numbers. Wrapping them in `Number()`\r\n * may cause issues, try to use BigInts as much as possible or modules that can\r\n * replicate them in some way\r\n */\r\nexports.PermissionFlagsBits = {\r\n    CreateInstantInvite: 1n << 0n,\r\n    KickMembers: 1n << 1n,\r\n    BanMembers: 1n << 2n,\r\n    Administrator: 1n << 3n,\r\n    ManageChannels: 1n << 4n,\r\n    ManageGuild: 1n << 5n,\r\n    AddReactions: 1n << 6n,\r\n    ViewAuditLog: 1n << 7n,\r\n    PrioritySpeaker: 1n << 8n,\r\n    Stream: 1n << 9n,\r\n    ViewChannel: 1n << 10n,\r\n    SendMessages: 1n << 11n,\r\n    SendTTSMessages: 1n << 12n,\r\n    ManageMessages: 1n << 13n,\r\n    EmbedLinks: 1n << 14n,\r\n    AttachFiles: 1n << 15n,\r\n    ReadMessageHistory: 1n << 16n,\r\n    MentionEveryone: 1n << 17n,\r\n    UseExternalEmojis: 1n << 18n,\r\n    ViewGuildInsights: 1n << 19n,\r\n    Connect: 1n << 20n,\r\n    Speak: 1n << 21n,\r\n    MuteMembers: 1n << 22n,\r\n    DeafenMembers: 1n << 23n,\r\n    MoveMembers: 1n << 24n,\r\n    UseVAD: 1n << 25n,\r\n    ChangeNickname: 1n << 26n,\r\n    ManageNicknames: 1n << 27n,\r\n    ManageRoles: 1n << 28n,\r\n    ManageWebhooks: 1n << 29n,\r\n    ManageEmojisAndStickers: 1n << 30n,\r\n    UseSlashCommands: 1n << 31n,\r\n    RequestToSpeak: 1n << 32n,\r\n    ManageThreads: 1n << 34n,\r\n    UsePublicThreads: 1n << 35n,\r\n    UsePrivateThreads: 1n << 36n,\r\n    UseExternalStickers: 1n << 37n,\r\n};\r\n/**\r\n * Freeze the object of bits, preventing any modifications to it\r\n * @internal\r\n */\r\nObject.freeze(exports.PermissionFlagsBits);\r\n//# sourceMappingURL=permissions.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StageInstancePrivacyLevel = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/stage-instance#stage-instance-object-privacy-level\r\n */\r\nvar StageInstancePrivacyLevel;\r\n(function (StageInstancePrivacyLevel) {\r\n    /**\r\n     * The stage instance is visible publicly, such as on stage discovery\r\n     */\r\n    StageInstancePrivacyLevel[StageInstancePrivacyLevel[\"Public\"] = 1] = \"Public\";\r\n    /**\r\n     * The stage instance is visible to only guild members\r\n     */\r\n    StageInstancePrivacyLevel[StageInstancePrivacyLevel[\"GuildOnly\"] = 2] = \"GuildOnly\";\r\n})(StageInstancePrivacyLevel = exports.StageInstancePrivacyLevel || (exports.StageInstancePrivacyLevel = {}));\r\n//# sourceMappingURL=stageInstance.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/sticker\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StickerFormatType = exports.StickerType = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-types\r\n */\r\nvar StickerType;\r\n(function (StickerType) {\r\n    /**\r\n     * An official sticker in a pack, part of Nitro or in a removed purchasable pack\r\n     */\r\n    StickerType[StickerType[\"Standard\"] = 1] = \"Standard\";\r\n    /**\r\n     * A sticker uploaded to a Boosted guild for the guild's members\r\n     */\r\n    StickerType[StickerType[\"Guild\"] = 2] = \"Guild\";\r\n})(StickerType = exports.StickerType || (exports.StickerType = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types\r\n */\r\nvar StickerFormatType;\r\n(function (StickerFormatType) {\r\n    StickerFormatType[StickerFormatType[\"PNG\"] = 1] = \"PNG\";\r\n    StickerFormatType[StickerFormatType[\"APNG\"] = 2] = \"APNG\";\r\n    StickerFormatType[StickerFormatType[\"Lottie\"] = 3] = \"Lottie\";\r\n})(StickerFormatType = exports.StickerFormatType || (exports.StickerFormatType = {}));\r\n//# sourceMappingURL=sticker.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/topics/teams\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TeamMemberMembershipState = void 0;\r\n/**\r\n * https://discord.com/developers/docs/topics/teams#data-models-membership-state-enum\r\n */\r\nvar TeamMemberMembershipState;\r\n(function (TeamMemberMembershipState) {\r\n    TeamMemberMembershipState[TeamMemberMembershipState[\"Invited\"] = 1] = \"Invited\";\r\n    TeamMemberMembershipState[TeamMemberMembershipState[\"Accepted\"] = 2] = \"Accepted\";\r\n})(TeamMemberMembershipState = exports.TeamMemberMembershipState || (exports.TeamMemberMembershipState = {}));\r\n//# sourceMappingURL=teams.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/template\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=template.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/user\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ConnectionVisibility = exports.UserPremiumType = exports.UserFlags = void 0;\r\n/**\r\n * https://discord.com/developers/docs/resources/user#user-object-user-flags\r\n */\r\nvar UserFlags;\r\n(function (UserFlags) {\r\n    UserFlags[UserFlags[\"None\"] = 0] = \"None\";\r\n    UserFlags[UserFlags[\"DiscordEmployee\"] = 1] = \"DiscordEmployee\";\r\n    UserFlags[UserFlags[\"PartneredServerOwner\"] = 2] = \"PartneredServerOwner\";\r\n    UserFlags[UserFlags[\"DiscordHypeSquadEvents\"] = 4] = \"DiscordHypeSquadEvents\";\r\n    UserFlags[UserFlags[\"BugHunterLevel1\"] = 8] = \"BugHunterLevel1\";\r\n    UserFlags[UserFlags[\"HypeSquadHouseBravery\"] = 64] = \"HypeSquadHouseBravery\";\r\n    UserFlags[UserFlags[\"HypeSquadHouseBrilliance\"] = 128] = \"HypeSquadHouseBrilliance\";\r\n    UserFlags[UserFlags[\"HypeSquadHouseBalance\"] = 256] = \"HypeSquadHouseBalance\";\r\n    UserFlags[UserFlags[\"EarlySupporter\"] = 512] = \"EarlySupporter\";\r\n    UserFlags[UserFlags[\"TeamUser\"] = 1024] = \"TeamUser\";\r\n    UserFlags[UserFlags[\"BugHunterLevel2\"] = 16384] = \"BugHunterLevel2\";\r\n    UserFlags[UserFlags[\"VerifiedBot\"] = 65536] = \"VerifiedBot\";\r\n    UserFlags[UserFlags[\"EarlyVerifiedBotDeveloper\"] = 131072] = \"EarlyVerifiedBotDeveloper\";\r\n    UserFlags[UserFlags[\"DiscordCertifiedModerator\"] = 262144] = \"DiscordCertifiedModerator\";\r\n})(UserFlags = exports.UserFlags || (exports.UserFlags = {}));\r\n/**\r\n * https://discord.com/developers/docs/resources/user#user-object-premium-types\r\n */\r\nvar UserPremiumType;\r\n(function (UserPremiumType) {\r\n    UserPremiumType[UserPremiumType[\"None\"] = 0] = \"None\";\r\n    UserPremiumType[UserPremiumType[\"NitroClassic\"] = 1] = \"NitroClassic\";\r\n    UserPremiumType[UserPremiumType[\"Nitro\"] = 2] = \"Nitro\";\r\n})(UserPremiumType = exports.UserPremiumType || (exports.UserPremiumType = {}));\r\nvar ConnectionVisibility;\r\n(function (ConnectionVisibility) {\r\n    /**\r\n     * Invisible to everyone except the user themselves\r\n     */\r\n    ConnectionVisibility[ConnectionVisibility[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Visible to everyone\r\n     */\r\n    ConnectionVisibility[ConnectionVisibility[\"Everyone\"] = 1] = \"Everyone\";\r\n})(ConnectionVisibility = exports.ConnectionVisibility || (exports.ConnectionVisibility = {}));\r\n//# sourceMappingURL=user.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/voice\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=voice.js.map","\"use strict\";\r\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/webhook\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WebhookType = void 0;\r\nvar WebhookType;\r\n(function (WebhookType) {\r\n    /**\r\n     * Incoming Webhooks can post messages to channels with a generated token\r\n     */\r\n    WebhookType[WebhookType[\"Incoming\"] = 1] = \"Incoming\";\r\n    /**\r\n     * Channel Follower Webhooks are internal webhooks used with Channel Following to post new messages into channels\r\n     */\r\n    WebhookType[WebhookType[\"ChannelFollower\"] = 2] = \"ChannelFollower\";\r\n    /**\r\n     * Application webhooks are webhooks used with Interactions\r\n     */\r\n    WebhookType[WebhookType[\"Application\"] = 3] = \"Application\";\r\n})(WebhookType = exports.WebhookType || (exports.WebhookType = {}));\r\n//# sourceMappingURL=webhook.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RESTJSONErrorCodes = void 0;\r\n/**\r\n * https://discord.com/developers/docs/topics/opcodes-and-status-codes#json-json-error-codes\r\n */\r\nvar RESTJSONErrorCodes;\r\n(function (RESTJSONErrorCodes) {\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"GeneralError\"] = 0] = \"GeneralError\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownAccount\"] = 10001] = \"UnknownAccount\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownApplication\"] = 10002] = \"UnknownApplication\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownChannel\"] = 10003] = \"UnknownChannel\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownGuild\"] = 10004] = \"UnknownGuild\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownIntegration\"] = 10005] = \"UnknownIntegration\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownInvite\"] = 10006] = \"UnknownInvite\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownMember\"] = 10007] = \"UnknownMember\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownMessage\"] = 10008] = \"UnknownMessage\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownPermissionOverwrite\"] = 10009] = \"UnknownPermissionOverwrite\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownProvider\"] = 10010] = \"UnknownProvider\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownRole\"] = 10011] = \"UnknownRole\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownToken\"] = 10012] = \"UnknownToken\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownUser\"] = 10013] = \"UnknownUser\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownEmoji\"] = 10014] = \"UnknownEmoji\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownWebhook\"] = 10015] = \"UnknownWebhook\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownWebhookService\"] = 10016] = \"UnknownWebhookService\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownSession\"] = 10020] = \"UnknownSession\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownBan\"] = 10026] = \"UnknownBan\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownSKU\"] = 10027] = \"UnknownSKU\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownStoreListing\"] = 10028] = \"UnknownStoreListing\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownEntitlement\"] = 10029] = \"UnknownEntitlement\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownBuild\"] = 10030] = \"UnknownBuild\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownLobby\"] = 10031] = \"UnknownLobby\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownBranch\"] = 10032] = \"UnknownBranch\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownStoreDirectoryLayout\"] = 10033] = \"UnknownStoreDirectoryLayout\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownRedistributable\"] = 10036] = \"UnknownRedistributable\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownGiftCode\"] = 10038] = \"UnknownGiftCode\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownGuildTemplate\"] = 10057] = \"UnknownGuildTemplate\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownDiscoverableServerCategory\"] = 10059] = \"UnknownDiscoverableServerCategory\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownSticker\"] = 10060] = \"UnknownSticker\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownInteraction\"] = 10062] = \"UnknownInteraction\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownApplicationCommand\"] = 10063] = \"UnknownApplicationCommand\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownApplicationCommandPermissions\"] = 10066] = \"UnknownApplicationCommandPermissions\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownStageInstance\"] = 10067] = \"UnknownStageInstance\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownGuildMemberVerificationForm\"] = 10068] = \"UnknownGuildMemberVerificationForm\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UnknownGuildWelcomeScreen\"] = 10069] = \"UnknownGuildWelcomeScreen\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"BotsCannotUseThisEndpoint\"] = 20001] = \"BotsCannotUseThisEndpoint\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OnlyBotsCanUseThisEndpoint\"] = 20002] = \"OnlyBotsCanUseThisEndpoint\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ExplicitContentCannotBeSentToTheDesiredRecipient\"] = 20009] = \"ExplicitContentCannotBeSentToTheDesiredRecipient\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"NotAuthorizedToPerformThisActionOnThisApplication\"] = 20012] = \"NotAuthorizedToPerformThisActionOnThisApplication\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ActionCannotBePerformedDueToSlowmodeRateLimit\"] = 20016] = \"ActionCannotBePerformedDueToSlowmodeRateLimit\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OnlyTheOwnerOfThisAccountCanPerformThisAction\"] = 20018] = \"OnlyTheOwnerOfThisAccountCanPerformThisAction\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"AnnouncementEditLimitExceeded\"] = 20022] = \"AnnouncementEditLimitExceeded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ChannelSendRateLimit\"] = 20028] = \"ChannelSendRateLimit\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"StageTopicServerNameServerDescriptionOrChannelNamesContainDisallowedWords\"] = 20031] = \"StageTopicServerNameServerDescriptionOrChannelNamesContainDisallowedWords\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"GuildPremiumSubscriptionLevelTooLow\"] = 20035] = \"GuildPremiumSubscriptionLevelTooLow\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfGuildsReached\"] = 30001] = \"MaximumNumberOfGuildsReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfFriendsReached\"] = 30002] = \"MaximumNumberOfFriendsReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfPinsReachedForTheChannel\"] = 30003] = \"MaximumNumberOfPinsReachedForTheChannel\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfRecipientsReached\"] = 30004] = \"MaximumNumberOfRecipientsReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfGuildRolesReached\"] = 30005] = \"MaximumNumberOfGuildRolesReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfWebhooksReached\"] = 30007] = \"MaximumNumberOfWebhooksReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfEmojisReached\"] = 30008] = \"MaximumNumberOfEmojisReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfReactionsReached\"] = 30010] = \"MaximumNumberOfReactionsReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfGuildChannelsReached\"] = 30013] = \"MaximumNumberOfGuildChannelsReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfAttachmentsInAMessageReached\"] = 30015] = \"MaximumNumberOfAttachmentsInAMessageReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfInvitesReached\"] = 30016] = \"MaximumNumberOfInvitesReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfAnimatedEmojisReached\"] = 30018] = \"MaximumNumberOfAnimatedEmojisReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfServerMembersReached\"] = 30019] = \"MaximumNumberOfServerMembersReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfServerCategoriesReached\"] = 30030] = \"MaximumNumberOfServerCategoriesReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"GuildAlreadyHasTemplate\"] = 30031] = \"GuildAlreadyHasTemplate\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumThreadParticipants\"] = 30033] = \"MaximumThreadParticipants\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfNonGuildMemberBansHasBeenExceeded\"] = 30035] = \"MaximumNumberOfNonGuildMemberBansHasBeenExceeded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfBanFetchesHasBeenReached\"] = 30037] = \"MaximumNumberOfBanFetchesHasBeenReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumNumberOfStickersReached\"] = 30039] = \"MaximumNumberOfStickersReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"Unauthorized\"] = 40001] = \"Unauthorized\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"VerifyYourAccount\"] = 40002] = \"VerifyYourAccount\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OpeningDirectMessagesTooFast\"] = 40003] = \"OpeningDirectMessagesTooFast\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"RequestEntityTooLarge\"] = 40005] = \"RequestEntityTooLarge\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"FeatureTemporarilyDisabledServerSide\"] = 40006] = \"FeatureTemporarilyDisabledServerSide\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UserBannedFromThisGuild\"] = 40007] = \"UserBannedFromThisGuild\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"TargetUserIsNotConnectedToVoice\"] = 40032] = \"TargetUserIsNotConnectedToVoice\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ThisMessageWasAlreadyCrossposted\"] = 40033] = \"ThisMessageWasAlreadyCrossposted\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ApplicationCommandWithThatNameAlreadyExists\"] = 40041] = \"ApplicationCommandWithThatNameAlreadyExists\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MissingAccess\"] = 50001] = \"MissingAccess\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidAccountType\"] = 50002] = \"InvalidAccountType\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotExecuteActionOnDMChannel\"] = 50003] = \"CannotExecuteActionOnDMChannel\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"GuildWidgetDisabled\"] = 50004] = \"GuildWidgetDisabled\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotEditMessageAuthoredByAnotherUser\"] = 50005] = \"CannotEditMessageAuthoredByAnotherUser\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotSendAnEmptyMessage\"] = 50006] = \"CannotSendAnEmptyMessage\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotSendMessagesToThisUser\"] = 50007] = \"CannotSendMessagesToThisUser\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotSendMessagesInVoiceChannel\"] = 50008] = \"CannotSendMessagesInVoiceChannel\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ChannelVerificationLevelTooHighForYouToGainAccess\"] = 50009] = \"ChannelVerificationLevelTooHighForYouToGainAccess\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OAuth2ApplicationDoesNotHaveBot\"] = 50010] = \"OAuth2ApplicationDoesNotHaveBot\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OAuth2ApplicationLimitReached\"] = 50011] = \"OAuth2ApplicationLimitReached\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidOAuth2State\"] = 50012] = \"InvalidOAuth2State\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MissingPermissions\"] = 50013] = \"MissingPermissions\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidToken\"] = 50014] = \"InvalidToken\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"NoteWasTooLong\"] = 50015] = \"NoteWasTooLong\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ProvidedTooFewOrTooManyMessagesToDelete\"] = 50016] = \"ProvidedTooFewOrTooManyMessagesToDelete\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MessageCanOnlyBePinnedInTheChannelItWasSentIn\"] = 50019] = \"MessageCanOnlyBePinnedInTheChannelItWasSentIn\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InviteCodeInvalidOrTaken\"] = 50020] = \"InviteCodeInvalidOrTaken\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotExecuteActionOnSystemMessage\"] = 50021] = \"CannotExecuteActionOnSystemMessage\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotExecuteActionOnThisChannelType\"] = 50024] = \"CannotExecuteActionOnThisChannelType\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidOAuth2AccessToken\"] = 50025] = \"InvalidOAuth2AccessToken\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidWebhookToken\"] = 50027] = \"InvalidWebhookToken\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidRole\"] = 50028] = \"InvalidRole\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidRecipients\"] = 50033] = \"InvalidRecipients\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"OneOfTheMessagesProvidedWasTooOldForBulkDelete\"] = 50034] = \"OneOfTheMessagesProvidedWasTooOldForBulkDelete\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidFormBodyOrContentType\"] = 50035] = \"InvalidFormBodyOrContentType\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InviteAcceptedToGuildWithoutTheBotBeingIn\"] = 50036] = \"InviteAcceptedToGuildWithoutTheBotBeingIn\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidAPIVersion\"] = 50041] = \"InvalidAPIVersion\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"FileUploadedExceedsMaximumSize\"] = 50045] = \"FileUploadedExceedsMaximumSize\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidFileUploaded\"] = 50046] = \"InvalidFileUploaded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotSelfRedeemThisGift\"] = 50070] = \"CannotSelfRedeemThisGift\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"CannotDeleteChannelRequiredForCommunityGuilds\"] = 50074] = \"CannotDeleteChannelRequiredForCommunityGuilds\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidStickerSent\"] = 50081] = \"InvalidStickerSent\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidActionOnArchivedThread\"] = 50083] = \"InvalidActionOnArchivedThread\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidThreadNotificationSettings\"] = 50084] = \"InvalidThreadNotificationSettings\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ParameterEarlierThanCreation\"] = 50085] = \"ParameterEarlierThanCreation\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"TwoFactorAuthenticationIsRequired\"] = 60003] = \"TwoFactorAuthenticationIsRequired\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"NoUsersWithDiscordTagExist\"] = 80004] = \"NoUsersWithDiscordTagExist\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ReactionWasBlocked\"] = 90001] = \"ReactionWasBlocked\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"APIResourceOverloaded\"] = 130000] = \"APIResourceOverloaded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"TheStageIsAlreadyOpen\"] = 150006] = \"TheStageIsAlreadyOpen\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ThreadAlreadyCreatedForMessage\"] = 160004] = \"ThreadAlreadyCreatedForMessage\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"ThreadLocked\"] = 160005] = \"ThreadLocked\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumActiveThreads\"] = 160006] = \"MaximumActiveThreads\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"MaximumActiveAnnouncementThreads\"] = 160007] = \"MaximumActiveAnnouncementThreads\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"InvalidJSONForUploadedLottieFile\"] = 170001] = \"InvalidJSONForUploadedLottieFile\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"UploadedLottiesCannotContainRasterizedImages\"] = 170002] = \"UploadedLottiesCannotContainRasterizedImages\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"StickerMaximumFramerateExceeded\"] = 170003] = \"StickerMaximumFramerateExceeded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"StickerFrameCountExceedsMaximumOf1000Frames\"] = 170004] = \"StickerFrameCountExceedsMaximumOf1000Frames\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"LottieAnimationMaximumDimensionsExceeded\"] = 170005] = \"LottieAnimationMaximumDimensionsExceeded\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"StickerFramerateIsTooSmallOrTooLarge\"] = 170006] = \"StickerFramerateIsTooSmallOrTooLarge\";\r\n    RESTJSONErrorCodes[RESTJSONErrorCodes[\"StickerAnimationDurationExceedsMaximumOf5Seconds\"] = 170007] = \"StickerAnimationDurationExceedsMaximumOf5Seconds\";\r\n})(RESTJSONErrorCodes = exports.RESTJSONErrorCodes || (exports.RESTJSONErrorCodes = {}));\r\n//# sourceMappingURL=common.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=auditLog.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=channel.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=emoji.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=gateway.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=guild.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OAuth2Routes = exports.RouteBases = exports.Routes = exports.APIVersion = void 0;\r\n__exportStar(require(\"../common\"), exports);\r\n__exportStar(require(\"./auditLog\"), exports);\r\n__exportStar(require(\"./channel\"), exports);\r\n__exportStar(require(\"./emoji\"), exports);\r\n__exportStar(require(\"./gateway\"), exports);\r\n__exportStar(require(\"./guild\"), exports);\r\n__exportStar(require(\"./interactions\"), exports);\r\n__exportStar(require(\"./invite\"), exports);\r\n__exportStar(require(\"./oauth2\"), exports);\r\n__exportStar(require(\"./stageInstance\"), exports);\r\n__exportStar(require(\"./sticker\"), exports);\r\n__exportStar(require(\"./template\"), exports);\r\n__exportStar(require(\"./user\"), exports);\r\n__exportStar(require(\"./voice\"), exports);\r\n__exportStar(require(\"./webhook\"), exports);\r\nexports.APIVersion = '9';\r\nexports.Routes = {\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/audit-logs`\r\n     */\r\n    guildAuditLog(guildId) {\r\n        return `/guilds/${guildId}/audit-logs`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/channels/{channel.id}`\r\n     * - PATCH  `/channels/{channel.id}`\r\n     * - DELETE `/channels/{channel.id}`\r\n     */\r\n    channel(channelId) {\r\n        return `/channels/${channelId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/channels/{channel.id}/messages`\r\n     * - POST `/channels/{channel.id}/messages`\r\n     */\r\n    channelMessages(channelId) {\r\n        return `/channels/${channelId}/messages`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/channels/{channel.id}/messages/{message.id}`\r\n     * - PATCH  `/channels/{channel.id}/messages/{message.id}`\r\n     * - DELETE `/channels/{channel.id}/messages/{message.id}`\r\n     */\r\n    channelMessage(channelId, messageId) {\r\n        return `/channels/${channelId}/messages/${messageId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/channels/{channel.id}/messages/{message.id}/crosspost`\r\n     */\r\n    channelMessageCrosspost(channelId, messageId) {\r\n        return `/channels/${channelId}/messages/${messageId}/crosspost`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/channels/{channel.id}/messages/{message.id}/reactions/{emoji}/@me`\r\n     * - DELETE `/channels/{channel.id}/messages/{message.id}/reactions/{emoji}/@me`\r\n     *\r\n     * **Note**: You need to URL encode the emoji yourself\r\n     */\r\n    channelMessageOwnReaction(channelId, messageId, emoji) {\r\n        return `/channels/${channelId}/messages/${messageId}/reactions/${emoji}/@me`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - DELETE `/channels/{channel.id}/messages/{message.id}/reactions/{emoji}/{user.id}`\r\n     *\r\n     * **Note**: You need to URL encode the emoji yourself\r\n     */\r\n    channelMessageUserReaction(channelId, messageId, emoji, userId) {\r\n        return `/channels/${channelId}/messages/${messageId}/reactions/${emoji}/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/channels/{channel.id}/messages/{message.id}/reactions/{emoji}`\r\n     * - DELETE `/channels/{channel.id}/messages/{message.id}/reactions/{emoji}`\r\n     *\r\n     * **Note**: You need to URL encode the emoji yourself\r\n     */\r\n    channelMessageReaction(channelId, messageId, emoji) {\r\n        return `/channels/${channelId}/messages/${messageId}/reactions/${emoji}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - DELETE `/channels/{channel.id}/messages/{message.id}/reactions`\r\n     */\r\n    channelMessageAllReactions(channelId, messageId) {\r\n        return `/channels/${channelId}/messages/${messageId}/reactions`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/channels/{channel.id}/messages/bulk-delete`\r\n     */\r\n    channelBulkDelete(channelId) {\r\n        return `/channels/${channelId}/messages/bulk-delete`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/channels/{channel.id}/permissions/{overwrite.id}`\r\n     * - DELETE `/channels/{channel.id}/permissions/{overwrite.id}`\r\n     */\r\n    channelPermission(channelId, overwriteId) {\r\n        return `/channels/${channelId}/permissions/${overwriteId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/channels/{channel.id}/invites`\r\n     * - POST `/channels/{channel.id}/invites`\r\n     */\r\n    channelInvites(channelId) {\r\n        return `/channels/${channelId}/invites`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/channels/{channel.id}/followers`\r\n     */\r\n    channelFollowers(channelId) {\r\n        return `/channels/${channelId}/followers`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/channels/{channel.id}/typing`\r\n     */\r\n    channelTyping(channelId) {\r\n        return `/channels/${channelId}/typing`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/channels/{channel.id}/pins`\r\n     */\r\n    channelPins(channelId) {\r\n        return `/channels/${channelId}/pins`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/channels/{channel.id}/pins/{message.id}`\r\n     * - DELETE `/channels/{channel.id}/pins/{message.id}`\r\n     */\r\n    channelPin(channelId, messageId) {\r\n        return `/channels/${channelId}/pins/${messageId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/channels/{channel.id}/recipients/{user.id}`\r\n     * - DELETE `/channels/{channel.id}/recipients/{user.id}`\r\n     */\r\n    channelRecipient(channelId, userId) {\r\n        return `/channels/${channelId}/recipients/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/{guild.id}/emojis`\r\n     * - POST `/guilds/{guild.id}/emojis`\r\n     */\r\n    guildEmojis(guildId) {\r\n        return `/guilds/${guildId}/emojis`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/guilds/{guild.id}/emojis/{emoji.id}`\r\n     * - PATCH  `/guilds/{guild.id}/emojis/{emoji.id}`\r\n     * - DELETE `/guilds/{guild.id}/emojis/{emoji.id}`\r\n     */\r\n    guildEmoji(guildId, emojiId) {\r\n        return `/guilds/${guildId}/emojis/${emojiId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/guilds`\r\n     */\r\n    guilds() {\r\n        return '/guilds';\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/guilds/{guild.id}`\r\n     * - PATCH  `/guilds/{guild.id}`\r\n     * - DELETE `/guilds/{guild.id}`\r\n     */\r\n    guild(guildId) {\r\n        return `/guilds/${guildId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/preview`\r\n     */\r\n    guildPreview(guildId) {\r\n        return `/guilds/${guildId}/preview`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/guilds/{guild.id}/channels`\r\n     * - POST  `/guilds/{guild.id}/channels`\r\n     * - PATCH `/guilds/{guild.id}/channels`\r\n     */\r\n    guildChannels(guildId) {\r\n        return `/guilds/${guildId}/channels`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/guilds/{guild.id}/members/{user.id}`\r\n     * - PUT    `/guilds/{guild.id}/members/{user.id}`\r\n     * - PATCH  `/guilds/{guild.id}/members/{user.id}`\r\n     * - DELETE `/guilds/{guild.id}/members/{user.id}`\r\n     */\r\n    guildMember(guildId, userId) {\r\n        return `/guilds/${guildId}/members/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/members`\r\n     */\r\n    guildMembers(guildId) {\r\n        return `/guilds/${guildId}/members`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/members/search`\r\n     */\r\n    guildMembersSearch(guildId) {\r\n        return `/guilds/${guildId}/members/search`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PATCH `/guilds/{guild.id}/members/@me/nick`\r\n     */\r\n    guildCurrentMemberNickname(guildId) {\r\n        return `/guilds/${guildId}/members/@me/nick`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/guilds/{guild.id}/members/{user.id}/roles/{role.id}`\r\n     * - DELETE `/guilds/{guild.id}/members/{user.id}/roles/{role.id}`\r\n     */\r\n    guildMemberRole(guildId, memberId, roleId) {\r\n        return `/guilds/${guildId}/members/${memberId}/roles/${roleId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/bans`\r\n     */\r\n    guildBans(guildId) {\r\n        return `/guilds/${guildId}/bans`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/guilds/{guild.id}/bans/{user.id}`\r\n     * - PUT    `/guilds/{guild.id}/bans/{user.id}`\r\n     * - DELETE `/guilds/{guild.id}/bans/{user.id}`\r\n     */\r\n    guildBan(guildId, userId) {\r\n        return `/guilds/${guildId}/bans/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/guilds/{guild.id}/roles`\r\n     * - POST  `/guilds/{guild.id}/roles`\r\n     * - PATCH `/guilds/{guild.id}/roles`\r\n     */\r\n    guildRoles(guildId) {\r\n        return `/guilds/${guildId}/roles`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PATCH  `/guilds/{guild.id}/roles/{role.id}`\r\n     * - DELETE `/guilds/{guild.id}/roles/{role.id}`\r\n     */\r\n    guildRole(guildId, roleId) {\r\n        return `/guilds/${guildId}/roles/${roleId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/{guild.id}/prune`\r\n     * - POST `/guilds/{guild.id}/prune`\r\n     */\r\n    guildPrune(guildId) {\r\n        return `/guilds/${guildId}/prune`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/regions`\r\n     */\r\n    guildVoiceRegions(guildId) {\r\n        return `/guilds/${guildId}/regions`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/invites`\r\n     */\r\n    guildInvites(guildId) {\r\n        return `/guilds/${guildId}/invites`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/{guild.id}/integrations`\r\n     */\r\n    guildIntegrations(guildId) {\r\n        return `/guilds/${guildId}/integrations`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - DELETE `/guilds/{guild.id}/integrations/{integration.id}`\r\n     */\r\n    guildIntegration(guildId, integrationId) {\r\n        return `/guilds/${guildId}/integrations/${integrationId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/guilds/{guild.id}/widget`\r\n     * - PATCH `/guilds/{guild.id}/widget`\r\n     */\r\n    guildWidgetSettings(guildId) {\r\n        return `/guilds/${guildId}/widget`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/widget.json`\r\n     */\r\n    guildWidgetJSON(guildId) {\r\n        return `/guilds/${guildId}/widget.json`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/vanity-url`\r\n     */\r\n    guildVanityUrl(guildId) {\r\n        return `/guilds/${guildId}/vanity-url`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/widget.png`\r\n     */\r\n    guildWidgetImage(guildId) {\r\n        return `/guilds/${guildId}/widget.png`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/invites/{invite.code}`\r\n     * - DELETE `/invites/{invite.code}`\r\n     */\r\n    invite(code) {\r\n        return `/invites/${code}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/templates/{template.code}`\r\n     * - POST `/guilds/templates/{template.code}`\r\n     */\r\n    template(code) {\r\n        return `/guilds/templates/${code}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/{guild.id}/templates`\r\n     * - POST `/guilds/{guild.id}/templates`\r\n     */\r\n    guildTemplates(guildId) {\r\n        return `/guilds/${guildId}/templates`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PUT    `/guilds/{guild.id}/templates/{template.code}`\r\n     * - PATCH  `/guilds/{guild.id}/templates/{template.code}`\r\n     * - DELETE `/guilds/{guild.id}/templates/{template.code}`\r\n     */\r\n    guildTemplate(guildId, code) {\r\n        return `/guilds/${guildId}/templates/${code}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/channels/{channel.id}/threads`\r\n     * - POST `/channels/{channel.id}/messages/{message.id}/threads`\r\n     */\r\n    threads(parentId, messageId) {\r\n        const parts = ['', 'channels', parentId];\r\n        if (messageId)\r\n            parts.push('messages', messageId);\r\n        parts.push('threads');\r\n        return parts.join('/');\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/threads/active`\r\n     */\r\n    guildActiveThreads(guildId) {\r\n        return `/guilds/${guildId}/threads/active`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/channels/{channel.id}/threads/active`\r\n     * \t (deprecated, use [List Active Guild Threads](https://discord.com/developers/docs/resources/guild#list-active-threads) instead.\r\n     * \t Will be removed in v10.)\r\n     * - GET `/channels/{channel.id}/threads/archived/public`\r\n     * - GET `/channels/{channel.id}/threads/archived/private`\r\n     */\r\n    channelThreads(channelId, archived) {\r\n        const parts = ['', 'channels', channelId, 'threads'];\r\n        if (archived)\r\n            parts.push('archived', archived);\r\n        else\r\n            parts.push('active');\r\n        return parts.join('/');\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/channels/{channel.id}/users/@me/threads/archived/prviate`\r\n     */\r\n    channelJoinedArchivedThreads(channelId) {\r\n        return `/channels/${channelId}/users/@me/threads/archived/private`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/channels/{thread.id}/thread-members`\r\n     * - PUT    `/channels/{thread.id}/thread-members/@me`\r\n     * - PUT    `/channels/{thread.id}/thread-members/{user.id}`\r\n     * - DELETE `/channels/{thread.id}/thread-members/@me`\r\n     * - DELETE `/channels/{thread.id}/thread-members/{user.id}`\r\n     */\r\n    threadMembers(threadId, userId) {\r\n        const parts = ['', 'channels', threadId, 'thread-members'];\r\n        if (userId)\r\n            parts.push(userId);\r\n        return parts.join('/');\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/users/@me`\r\n     * - GET   `/users/{user.id}`\r\n     * - PATCH `/users/@me`\r\n     *\r\n     * @param [userId='@me'] The user ID, defaulted to `@me`\r\n     */\r\n    user(userId = '@me') {\r\n        return `/users/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/users/@me/guilds`\r\n     */\r\n    userGuilds() {\r\n        return `/users/@me/guilds`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - DELETE `/users/@me/guilds/{guild.id}`\r\n     */\r\n    userGuild(guildId) {\r\n        return `/users/@me/guilds/${guildId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/users/@me/channels`\r\n     */\r\n    userChannels() {\r\n        return `/users/@me/channels`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/users/@me/connections`\r\n     */\r\n    userConnections() {\r\n        return `/users/@me/connections`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/voice/regions`\r\n     */\r\n    voiceRegions() {\r\n        return `/voice/regions`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/channels/{channel.id}/webhooks`\r\n     * - POST `/channels/{channel.id}/webhooks`\r\n     */\r\n    channelWebhooks(channelId) {\r\n        return `/channels/${channelId}/webhooks`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/guilds/{guild.id}/webhooks`\r\n     */\r\n    guildWebhooks(guildId) {\r\n        return `/guilds/${guildId}/webhooks`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/webhooks/{webhook.id}`\r\n     * - GET    `/webhooks/{webhook.id}/{webhook.token}`\r\n     * - PATCH  `/webhooks/{webhook.id}`\r\n     * - PATCH  `/webhooks/{webhook.id}/{webhook.token}`\r\n     * - DELETE `/webhooks/{webhook.id}`\r\n     * - DELETE `/webhooks/{webhook.id}/{webhook.token}`\r\n     * - POST   `/webhooks/{webhook.id}/{webhook.token}`\r\n     *\r\n     * - POST   `/webhooks/{application.id}/{interaction.token}`\r\n     */\r\n    webhook(webhookId, webhookToken) {\r\n        const parts = ['', 'webhooks', webhookId];\r\n        if (webhookToken)\r\n            parts.push(webhookToken);\r\n        return parts.join('/');\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/webhooks/{webhook.id}/{webhook.token}/messages/@original`\r\n     * - GET    `/webhooks/{webhook.id}/{webhook.token}/messages/{message.id}`\r\n     * - PATCH  `/webhooks/{webhook.id}/{webhook.token}/messages/@original`\r\n     * - PATCH  `/webhooks/{webhook.id}/{webhook.token}/messages/{message.id}`\r\n     * - DELETE `/webhooks/{webhook.id}/{webhook.token}/messages/@original`\r\n     * - DELETE `/webhooks/{webhook.id}/{webhook.token}/messages/{message.id}`\r\n     *\r\n     * - PATCH  `/webhooks/{application.id}/{interaction.token}/messages/@original`\r\n     * - PATCH  `/webhooks/{application.id}/{interaction.token}/messages/{message.id}`\r\n     * - DELETE `/webhooks/{application.id}/{interaction.token}/messages/{message.id}`\r\n     *\r\n     * @param [messageId='@original'] The message ID to change, defaulted to `@original`\r\n     */\r\n    webhookMessage(webhookId, webhookToken, messageId = '@original') {\r\n        return `/webhooks/${webhookId}/${webhookToken}/messages/${messageId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/webhooks/{webhook.id}/{webhook.token}/github`\r\n     * - POST `/webhooks/{webhook.id}/{webhook.token}/slack`\r\n     */\r\n    webhookPlatform(webhookId, webhookToken, platform) {\r\n        return `/webhooks/${webhookId}/${webhookToken}/${platform}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/gateway`\r\n     */\r\n    gateway() {\r\n        return `/gateway`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/gateway/bot`\r\n     */\r\n    gatewayBot() {\r\n        return `/gateway/bot`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/oauth2/applications/@me`\r\n     */\r\n    oauth2CurrentApplication() {\r\n        return `/oauth2/applications/@me`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/oauth2/@me`\r\n     */\r\n    oauth2CurrentAuthorization() {\r\n        return `/oauth2/@me`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/applications/{application.id}/commands`\r\n     * - PUT  `/applications/{application.id}/commands`\r\n     * - POST `/applications/{application.id}/commands`\r\n     */\r\n    applicationCommands(applicationId) {\r\n        return `/applications/${applicationId}/commands`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/applications/{application.id}/commands/{command.id}`\r\n     * - PATCH  `/applications/{application.id}/commands/{command.id}`\r\n     * - DELETE `/applications/{application.id}/commands/{command.id}`\r\n     */\r\n    applicationCommand(applicationId, commandId) {\r\n        return `/applications/${applicationId}/commands/${commandId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/applications/{application.id}/guilds/{guild.id}/commands`\r\n     * - PUT  `/applications/{application.id}/guilds/{guild.id}/commands`\r\n     * - POST `/applications/{application.id}/guilds/{guild.id}/commands`\r\n     */\r\n    applicationGuildCommands(applicationId, guildId) {\r\n        return `/applications/${applicationId}/guilds/${guildId}/commands`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/applications/{application.id}/guilds/{guild.id}/commands/{command.id}`\r\n     * - PATCH  `/applications/{application.id}/guilds/{guild.id}/commands/{command.id}`\r\n     * - DELETE `/applications/{application.id}/guilds/{guild.id}/commands/{command.id}`\r\n     */\r\n    applicationGuildCommand(applicationId, guildId, commandId) {\r\n        return `/applications/${applicationId}/guilds/${guildId}/commands/${commandId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/interactions/{interaction.id}/{interaction.token}/callback`\r\n     */\r\n    interactionCallback(interactionId, interactionToken) {\r\n        return `/interactions/${interactionId}/${interactionToken}/callback`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/guilds/{guild.id}/member-verification`\r\n     * - PATCH `/guilds/{guild.id}/member-verification`\r\n     */\r\n    guildMemberVerification(guildId) {\r\n        return `/guilds/${guildId}/member-verification`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - PATCH `/guilds/{guild.id}/voice-states/@me`\r\n     * - PATCH `/guilds/{guild.id}/voice-states/{user.id}`\r\n     */\r\n    guildVoiceState(guildId, userId = '@me') {\r\n        return `/guilds/${guildId}/voice-states/${userId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/applications/{application.id}/guilds/{guild.id}/commands/permissions`\r\n     * - PUT `/applications/{application.id}/guilds/{guild.id}/commands/permissions`\r\n     */\r\n    guildApplicationCommandsPermissions(applicationId, guildId) {\r\n        return `/applications/${applicationId}/guilds/${guildId}/commands/permissions`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/applications/{application.id}/guilds/{guild.id}/commands/{command.id}/permissions`\r\n     * - PUT `/applications/{application.id}/guilds/{guild.id}/commands/{command.id}/permissions`\r\n     */\r\n    applicationCommandPermissions(applicationId, guildId, commandId) {\r\n        return `/applications/${applicationId}/guilds/${guildId}/commands/${commandId}/permissions`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET   `/guilds/{guild.id}/welcome-screen`\r\n     * - PATCH `/guilds/{guild.id}/welcome-screen`\r\n     */\r\n    guildWelcomeScreen(guildId) {\r\n        return `/guilds/${guildId}/welcome-screen`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - POST `/stage-instances`\r\n     */\r\n    stageInstances() {\r\n        return `/stage-instances`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/stage-instances/{channel.id}`\r\n     * - PATCH `/stage-instances/{channel.id}`\r\n     * - DELETE `/stage-instances/{channel.id}`\r\n     */\r\n    stageInstance(channelId) {\r\n        return `/stage-instances/${channelId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/stickers/{sticker.id}`\r\n     */\r\n    sticker(stickerId) {\r\n        return `/stickers/${stickerId}`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET `/sticker-packs`\r\n     */\r\n    nitroStickerPacks() {\r\n        return '/sticker-packs';\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET  `/guilds/{guild.id}/stickers`\r\n     * - POST `/guilds/{guild.id}/stickers`\r\n     */\r\n    guildStickers(guildId) {\r\n        return `/guilds/${guildId}/stickers`;\r\n    },\r\n    /**\r\n     * Route for:\r\n     * - GET    `/guilds/{guild.id}/stickers/{sticker.id}`\r\n     * - PATCH  `/guilds/{guild.id}/stickers/{sticker.id}`\r\n     * - DELETE `/guilds/{guild.id}/stickers/{sticker.id}`\r\n     */\r\n    guildSticker(guildId, stickerId) {\r\n        return `/guilds/${guildId}/stickers/${stickerId}`;\r\n    },\r\n};\r\nexports.RouteBases = {\r\n    api: `https://discord.com/api/v${exports.APIVersion}`,\r\n    cdn: 'https://cdn.discordapp.com',\r\n    invite: 'https://discord.gg',\r\n    template: 'https://discord.new',\r\n    gift: 'https://discord.gift',\r\n};\r\n// Freeze bases object\r\nObject.freeze(exports.RouteBases);\r\nexports.OAuth2Routes = {\r\n    authorizationURL: `https://discord.com/api/v${exports.APIVersion}/oauth2/authorize`,\r\n    tokenURL: `https://discord.com/api/v${exports.APIVersion}/oauth2/token`,\r\n    /**\r\n     * See https://tools.ietf.org/html/rfc7009\r\n     */\r\n    tokenRevocationURL: `https://discord.com/api/v${exports.APIVersion}/oauth2/token/revoke`,\r\n};\r\n// Freeze OAuth2 route object\r\nObject.freeze(exports.OAuth2Routes);\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=interactions.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=invite.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=oauth2.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=stageInstance.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=sticker.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=template.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=user.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=voice.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=webhook.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RPCCloseEventCodes = exports.RPCErrorCodes = void 0;\r\n/**\r\n * https://discord.com/developers/docs/topics/opcodes-and-status-codes#rpc-rpc-error-codes\r\n */\r\nvar RPCErrorCodes;\r\n(function (RPCErrorCodes) {\r\n    RPCErrorCodes[RPCErrorCodes[\"UnknownError\"] = 1000] = \"UnknownError\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidPayload\"] = 4000] = \"InvalidPayload\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidCommand\"] = 4002] = \"InvalidCommand\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidGuild\"] = 4003] = \"InvalidGuild\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidEvent\"] = 4004] = \"InvalidEvent\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidChannel\"] = 4005] = \"InvalidChannel\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidPermissions\"] = 4006] = \"InvalidPermissions\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidClientId\"] = 4007] = \"InvalidClientId\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidOrigin\"] = 4008] = \"InvalidOrigin\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidToken\"] = 4009] = \"InvalidToken\";\r\n    RPCErrorCodes[RPCErrorCodes[\"InvalidUser\"] = 4010] = \"InvalidUser\";\r\n    RPCErrorCodes[RPCErrorCodes[\"OAuth2Error\"] = 5000] = \"OAuth2Error\";\r\n    RPCErrorCodes[RPCErrorCodes[\"SelectChannelTimedOut\"] = 5001] = \"SelectChannelTimedOut\";\r\n    RPCErrorCodes[RPCErrorCodes[\"GetGuildTimedOut\"] = 5002] = \"GetGuildTimedOut\";\r\n    RPCErrorCodes[RPCErrorCodes[\"SelectVoiceForceRequired\"] = 5003] = \"SelectVoiceForceRequired\";\r\n    RPCErrorCodes[RPCErrorCodes[\"CaptureShortcutAlreadyListening\"] = 5004] = \"CaptureShortcutAlreadyListening\";\r\n})(RPCErrorCodes = exports.RPCErrorCodes || (exports.RPCErrorCodes = {}));\r\n/**\r\n * https://discord.com/developers/docs/topics/opcodes-and-status-codes#rpc-rpc-close-event-codes\r\n */\r\nvar RPCCloseEventCodes;\r\n(function (RPCCloseEventCodes) {\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"InvalidClientId\"] = 4000] = \"InvalidClientId\";\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"InvalidOrigin\"] = 4001] = \"InvalidOrigin\";\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"RateLimited\"] = 4002] = \"RateLimited\";\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"TokenRevoked\"] = 4003] = \"TokenRevoked\";\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"InvalidVersion\"] = 4004] = \"InvalidVersion\";\r\n    RPCCloseEventCodes[RPCCloseEventCodes[\"InvalidEncoding\"] = 4005] = \"InvalidEncoding\";\r\n})(RPCCloseEventCodes = exports.RPCCloseEventCodes || (exports.RPCCloseEventCodes = {}));\r\n//# sourceMappingURL=v9.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isInteractionButton = exports.isLinkButton = exports.isMessageComponentGuildInteraction = exports.isMessageComponentDMInteraction = exports.isApplicationCommandGuildInteraction = exports.isApplicationCommandDMInteraction = exports.isGuildInteraction = exports.isDMInteraction = void 0;\r\nrequire(\"../payloads/v9/index\");\r\n// Interactions\r\n/**\r\n * A type-guard check for DM interactions\r\n * @param interaction The interaction to check against\r\n * @returns A boolean that indicates if the interaction was received in a DM channel\r\n */\r\nfunction isDMInteraction(interaction) {\r\n    return Reflect.has(interaction, 'user');\r\n}\r\nexports.isDMInteraction = isDMInteraction;\r\n/**\r\n * A type-guard check for guild interactions\r\n * @param interaction The interaction to check against\r\n * @returns A boolean that indicates if the interaction was received in a guild\r\n */\r\nfunction isGuildInteraction(interaction) {\r\n    return Reflect.has(interaction, 'guild_id');\r\n}\r\nexports.isGuildInteraction = isGuildInteraction;\r\n// ApplicationCommandInteractions\r\n/**\r\n * A type-guard check for DM application command interactions\r\n * @param interaction The application command interaction to check against\r\n * @returns A boolean that indicates if the application command interaction was received in a DM channel\r\n */\r\nfunction isApplicationCommandDMInteraction(interaction) {\r\n    return isDMInteraction(interaction);\r\n}\r\nexports.isApplicationCommandDMInteraction = isApplicationCommandDMInteraction;\r\n/**\r\n * A type-guard check for guild application command interactions\r\n * @param interaction The interaction to check against\r\n * @returns A boolean that indicates if the application command interaction was received in a guild\r\n */\r\nfunction isApplicationCommandGuildInteraction(interaction) {\r\n    return isGuildInteraction(interaction);\r\n}\r\nexports.isApplicationCommandGuildInteraction = isApplicationCommandGuildInteraction;\r\n// MessageComponentInteractions\r\n/**\r\n * A type-guard check for DM message component interactions\r\n * @param interaction The message component interaction to check against\r\n * @returns A boolean that indicates if the message component interaction was received in a DM channel\r\n */\r\nfunction isMessageComponentDMInteraction(interaction) {\r\n    return isDMInteraction(interaction);\r\n}\r\nexports.isMessageComponentDMInteraction = isMessageComponentDMInteraction;\r\n/**\r\n * A type-guard check for guild message component interactions\r\n * @param interaction The interaction to check against\r\n * @returns A boolean that indicates if the message component interaction was received in a guild\r\n */\r\nfunction isMessageComponentGuildInteraction(interaction) {\r\n    return isGuildInteraction(interaction);\r\n}\r\nexports.isMessageComponentGuildInteraction = isMessageComponentGuildInteraction;\r\n// Buttons\r\n/**\r\n * A type-guard check for buttons that have a `url` attached to them.\r\n * @param component The button to check against\r\n * @returns A boolean that indicates if the button has a `url` attached to it\r\n */\r\nfunction isLinkButton(component) {\r\n    return component.style === 5 /* Link */;\r\n}\r\nexports.isLinkButton = isLinkButton;\r\n/**\r\n * A type-guard check for buttons that have a `custom_id` attached to them.\r\n * @param button The button to check against\r\n * @returns A boolean that indicates if the button has a `custom_id` attached to it\r\n */\r\nfunction isInteractionButton(component) {\r\n    return component.style !== 5 /* Link */;\r\n}\r\nexports.isInteractionButton = isInteractionButton;\r\n//# sourceMappingURL=v9.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Utils = void 0;\r\n__exportStar(require(\"./globals\"), exports);\r\n__exportStar(require(\"./gateway/v9\"), exports);\r\n__exportStar(require(\"./payloads/v9/index\"), exports);\r\n__exportStar(require(\"./rest/v9/index\"), exports);\r\n__exportStar(require(\"./rpc/v9\"), exports);\r\nexports.Utils = require(\"./utils/v9\");\r\n//# sourceMappingURL=v9.js.map","'use strict';\n\nlet erlpack;\n\ntry {\n  erlpack = require('erlpack');\n  if (!erlpack.pack) erlpack = null;\n} catch {} // eslint-disable-line no-empty\n\nexports.WebSocket = require('ws');\n\nconst ab = new TextDecoder();\n\nexports.encoding = erlpack ? 'etf' : 'json';\n\nexports.pack = erlpack ? erlpack.pack : JSON.stringify;\n\nexports.unpack = (data, type) => {\n  if (exports.encoding === 'json' || type === 'json') {\n    if (typeof data !== 'string') {\n      data = ab.decode(data);\n    }\n    return JSON.parse(data);\n  }\n  if (!Buffer.isBuffer(data)) data = Buffer.from(new Uint8Array(data));\n  return erlpack.unpack(data);\n};\n\nexports.create = (gateway, query = {}, ...args) => {\n  const [g, q] = gateway.split('?');\n  query.encoding = exports.encoding;\n  query = new URLSearchParams(query);\n  if (q) new URLSearchParams(q).forEach((v, k) => query.set(k, v));\n  const ws = new exports.WebSocket(`${g}?${query}`, ...args);\n  return ws;\n};\n\nfor (const state of ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED']) exports[state] = exports.WebSocket[state];\n","'use strict';\n\nconst EventEmitter = require('events');\nconst RESTManager = require('../rest/RESTManager');\nconst Options = require('../util/Options');\nconst Util = require('../util/Util');\n\n/**\n * The base class for all clients.\n * @extends {EventEmitter}\n */\nclass BaseClient extends EventEmitter {\n  constructor(options = {}) {\n    super();\n\n    /**\n     * The options the client was instantiated with\n     * @type {ClientOptions}\n     */\n    this.options = Util.mergeDefault(Options.createDefault(), options);\n\n    /**\n     * The REST manager of the client\n     * @type {RESTManager}\n     * @private\n     */\n    this.rest = new RESTManager(this, options._tokenType);\n  }\n\n  /**\n   * API shortcut\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  get api() {\n    return this.rest.api;\n  }\n\n  /**\n   * Destroys all assets used by the base client.\n   * @returns {void}\n   */\n  destroy() {\n    if (this.rest.sweepInterval) clearInterval(this.rest.sweepInterval);\n  }\n\n  /**\n   * Increments max listeners by one, if they are not zero.\n   * @private\n   */\n  incrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners + 1);\n    }\n  }\n\n  /**\n   * Decrements max listeners by one, if they are not zero.\n   * @private\n   */\n  decrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners - 1);\n    }\n  }\n\n  toJSON(...props) {\n    return Util.flatten(this, { domain: false }, ...props);\n  }\n}\n\nmodule.exports = BaseClient;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst BaseClient = require('./BaseClient');\nconst ActionsManager = require('./actions/ActionsManager');\nconst ClientVoiceManager = require('./voice/ClientVoiceManager');\nconst WebSocketManager = require('./websocket/WebSocketManager');\nconst { Error, TypeError, RangeError } = require('../errors');\nconst BaseGuildEmojiManager = require('../managers/BaseGuildEmojiManager');\nconst ChannelManager = require('../managers/ChannelManager');\nconst GuildManager = require('../managers/GuildManager');\nconst UserManager = require('../managers/UserManager');\nconst ShardClientUtil = require('../sharding/ShardClientUtil');\nconst ClientPresence = require('../structures/ClientPresence');\nconst GuildPreview = require('../structures/GuildPreview');\nconst GuildTemplate = require('../structures/GuildTemplate');\nconst Invite = require('../structures/Invite');\nconst Sticker = require('../structures/Sticker');\nconst StickerPack = require('../structures/StickerPack');\nconst VoiceRegion = require('../structures/VoiceRegion');\nconst Webhook = require('../structures/Webhook');\nconst Widget = require('../structures/Widget');\nconst { Events, InviteScopes, Status } = require('../util/Constants');\nconst DataResolver = require('../util/DataResolver');\nconst Intents = require('../util/Intents');\nconst Options = require('../util/Options');\nconst Permissions = require('../util/Permissions');\n\n/**\n * The main hub for interacting with the Discord API, and the starting point for any bot.\n * @extends {BaseClient}\n */\nclass Client extends BaseClient {\n  /**\n   * @param {ClientOptions} options Options for the client\n   */\n  constructor(options) {\n    super(Object.assign({ _tokenType: 'Bot' }, options));\n\n    const data = require('worker_threads').workerData ?? process.env;\n    const defaults = Options.createDefault();\n\n    if (this.options.shards === defaults.shards) {\n      if ('SHARDS' in data) {\n        this.options.shards = JSON.parse(data.SHARDS);\n      }\n    }\n\n    if (this.options.shardCount === defaults.shardCount) {\n      if ('SHARD_COUNT' in data) {\n        this.options.shardCount = Number(data.SHARD_COUNT);\n      } else if (Array.isArray(this.options.shards)) {\n        this.options.shardCount = this.options.shards.length;\n      }\n    }\n\n    const typeofShards = typeof this.options.shards;\n\n    if (typeofShards === 'undefined' && typeof this.options.shardCount === 'number') {\n      this.options.shards = Array.from({ length: this.options.shardCount }, (_, i) => i);\n    }\n\n    if (typeofShards === 'number') this.options.shards = [this.options.shards];\n\n    if (Array.isArray(this.options.shards)) {\n      this.options.shards = [\n        ...new Set(\n          this.options.shards.filter(item => !isNaN(item) && item >= 0 && item < Infinity && item === (item | 0)),\n        ),\n      ];\n    }\n\n    this._validateOptions();\n\n    /**\n     * Functions called when a cache is garbage collected or the Client is destroyed\n     * @type {Set<Function>}\n     * @private\n     */\n    this._cleanups = new Set();\n\n    /**\n     * The finalizers used to cleanup items.\n     * @type {FinalizationRegistry}\n     * @private\n     */\n    this._finalizers = new FinalizationRegistry(this._finalize.bind(this));\n\n    /**\n     * The WebSocket manager of the client\n     * @type {WebSocketManager}\n     */\n    this.ws = new WebSocketManager(this);\n\n    /**\n     * The action manager of the client\n     * @type {ActionsManager}\n     * @private\n     */\n    this.actions = new ActionsManager(this);\n\n    /**\n     * The voice manager of the client\n     * @type {ClientVoiceManager}\n     */\n    this.voice = new ClientVoiceManager(this);\n\n    /**\n     * Shard helpers for the client (only if the process was spawned from a {@link ShardingManager})\n     * @type {?ShardClientUtil}\n     */\n    this.shard = process.env.SHARDING_MANAGER\n      ? ShardClientUtil.singleton(this, process.env.SHARDING_MANAGER_MODE)\n      : null;\n\n    /**\n     * All of the {@link User} objects that have been cached at any point, mapped by their ids\n     * @type {UserManager}\n     */\n    this.users = new UserManager(this);\n\n    /**\n     * All of the guilds the client is currently handling, mapped by their ids -\n     * as long as sharding isn't being used, this will be *every* guild the bot is a member of\n     * @type {GuildManager}\n     */\n    this.guilds = new GuildManager(this);\n\n    /**\n     * All of the {@link Channel}s that the client is currently handling, mapped by their ids -\n     * as long as sharding isn't being used, this will be *every* channel in *every* guild the bot\n     * is a member of. Note that DM channels will not be initially cached, and thus not be present\n     * in the Manager without their explicit fetching or use.\n     * @type {ChannelManager}\n     */\n    this.channels = new ChannelManager(this);\n\n    /**\n     * The presence of the Client\n     * @private\n     * @type {ClientPresence}\n     */\n    this.presence = new ClientPresence(this, this.options.presence);\n\n    Object.defineProperty(this, 'token', { writable: true });\n    if (!this.token && 'DISCORD_TOKEN' in process.env) {\n      /**\n       * Authorization token for the logged in bot.\n       * If present, this defaults to `process.env.DISCORD_TOKEN` when instantiating the client\n       * <warn>This should be kept private at all times.</warn>\n       * @type {?string}\n       */\n      this.token = process.env.DISCORD_TOKEN;\n    } else {\n      this.token = null;\n    }\n\n    /**\n     * User that the client is logged in as\n     * @type {?ClientUser}\n     */\n    this.user = null;\n\n    /**\n     * The application of this bot\n     * @type {?ClientApplication}\n     */\n    this.application = null;\n\n    /**\n     * Time at which the client was last regarded as being in the `READY` state\n     * (each time the client disconnects and successfully reconnects, this will be overwritten)\n     * @type {?Date}\n     */\n    this.readyAt = null;\n\n    if (this.options.messageSweepInterval > 0) {\n      process.emitWarning(\n        'The message sweeping client options are deprecated, use the makeCache option with LimitedCollection instead.',\n        'DeprecationWarning',\n      );\n      this.sweepMessageInterval = setInterval(\n        this.sweepMessages.bind(this),\n        this.options.messageSweepInterval * 1000,\n      ).unref();\n    }\n  }\n\n  /**\n   * All custom emojis that the client has access to, mapped by their ids\n   * @type {BaseGuildEmojiManager}\n   * @readonly\n   */\n  get emojis() {\n    const emojis = new BaseGuildEmojiManager(this);\n    for (const guild of this.guilds.cache.values()) {\n      if (guild.available) for (const emoji of guild.emojis.cache.values()) emojis.cache.set(emoji.id, emoji);\n    }\n    return emojis;\n  }\n\n  /**\n   * Timestamp of the time the client was last `READY` at\n   * @type {?number}\n   * @readonly\n   */\n  get readyTimestamp() {\n    return this.readyAt?.getTime() ?? null;\n  }\n\n  /**\n   * How long it has been since the client last entered the `READY` state in milliseconds\n   * @type {?number}\n   * @readonly\n   */\n  get uptime() {\n    return this.readyAt ? Date.now() - this.readyAt : null;\n  }\n\n  /**\n   * Logs the client in, establishing a websocket connection to Discord.\n   * @param {string} [token=this.token] Token of the account to log in with\n   * @returns {Promise<string>} Token of the account used\n   * @example\n   * client.login('my token');\n   */\n  async login(token = this.token) {\n    if (!token || typeof token !== 'string') throw new Error('TOKEN_INVALID');\n    this.token = token = token.replace(/^(Bot|Bearer)\\s*/i, '');\n    this.emit(\n      Events.DEBUG,\n      `Provided token: ${token\n        .split('.')\n        .map((val, i) => (i > 1 ? val.replace(/./g, '*') : val))\n        .join('.')}`,\n    );\n\n    if (this.options.presence) {\n      this.options.ws.presence = this.presence._parse(this.options.presence);\n    }\n\n    this.emit(Events.DEBUG, 'Preparing to connect to the gateway...');\n\n    try {\n      await this.ws.connect();\n      return this.token;\n    } catch (error) {\n      this.destroy();\n      throw error;\n    }\n  }\n\n  /**\n   * Returns whether the client has logged in, indicative of being able to access\n   * properties such as `user` and `application`.\n   * @returns {boolean}\n   */\n  isReady() {\n    return this.ws.status === Status.READY;\n  }\n\n  /**\n   * Logs out, terminates the connection to Discord, and destroys the client.\n   * @returns {void}\n   */\n  destroy() {\n    super.destroy();\n\n    for (const fn of this._cleanups) fn();\n    this._cleanups.clear();\n\n    if (this.sweepMessageInterval) clearInterval(this.sweepMessageInterval);\n\n    this.ws.destroy();\n    this.token = null;\n  }\n\n  /**\n   * Obtains an invite from Discord.\n   * @param {InviteResolvable} invite Invite code or URL\n   * @returns {Promise<Invite>}\n   * @example\n   * client.fetchInvite('https://discord.gg/djs')\n   *   .then(invite => console.log(`Obtained invite with code: ${invite.code}`))\n   *   .catch(console.error);\n   */\n  async fetchInvite(invite) {\n    const code = DataResolver.resolveInviteCode(invite);\n    const data = await this.api.invites(code).get({ query: { with_counts: true, with_expiration: true } });\n    return new Invite(this, data);\n  }\n\n  /**\n   * Obtains a template from Discord.\n   * @param {GuildTemplateResolvable} template Template code or URL\n   * @returns {Promise<GuildTemplate>}\n   * @example\n   * client.fetchGuildTemplate('https://discord.new/FKvmczH2HyUf')\n   *   .then(template => console.log(`Obtained template with code: ${template.code}`))\n   *   .catch(console.error);\n   */\n  async fetchGuildTemplate(template) {\n    const code = DataResolver.resolveGuildTemplateCode(template);\n    const data = await this.api.guilds.templates(code).get();\n    return new GuildTemplate(this, data);\n  }\n\n  /**\n   * Obtains a webhook from Discord.\n   * @param {Snowflake} id The webhook's id\n   * @param {string} [token] Token for the webhook\n   * @returns {Promise<Webhook>}\n   * @example\n   * client.fetchWebhook('id', 'token')\n   *   .then(webhook => console.log(`Obtained webhook with name: ${webhook.name}`))\n   *   .catch(console.error);\n   */\n  async fetchWebhook(id, token) {\n    const data = await this.api.webhooks(id, token).get();\n    return new Webhook(this, { token, ...data });\n  }\n\n  /**\n   * Obtains the available voice regions from Discord.\n   * @returns {Promise<Collection<string, VoiceRegion>>}\n   * @example\n   * client.fetchVoiceRegions()\n   *   .then(regions => console.log(`Available regions are: ${regions.map(region => region.name).join(', ')}`))\n   *   .catch(console.error);\n   */\n  async fetchVoiceRegions() {\n    const apiRegions = await this.api.voice.regions.get();\n    const regions = new Collection();\n    for (const region of apiRegions) regions.set(region.id, new VoiceRegion(region));\n    return regions;\n  }\n\n  /**\n   * Obtains a sticker from Discord.\n   * @param {Snowflake} id The sticker's id\n   * @returns {Promise<Sticker>}\n   * @example\n   * client.fetchSticker('id')\n   *   .then(sticker => console.log(`Obtained sticker with name: ${sticker.name}`))\n   *   .catch(console.error);\n   */\n  async fetchSticker(id) {\n    const data = await this.api.stickers(id).get();\n    return new Sticker(this, data);\n  }\n\n  /**\n   * Obtains the list of sticker packs available to Nitro subscribers from Discord.\n   * @returns {Promise<Collection<Snowflake, StickerPack>>}\n   * @example\n   * client.fetchPremiumStickerPacks()\n   *   .then(packs => console.log(`Available sticker packs are: ${packs.map(pack => pack.name).join(', ')}`))\n   *   .catch(console.error);\n   */\n  async fetchPremiumStickerPacks() {\n    const data = await this.api('sticker-packs').get();\n    return new Collection(data.sticker_packs.map(p => [p.id, new StickerPack(this, p)]));\n  }\n  /**\n   * A last ditch cleanup function for garbage collection.\n   * @param {Function} options.cleanup The function called to GC\n   * @param {string} [options.message] The message to send after a successful GC\n   * @param {string} [options.name] The name of the item being GCed\n   * @private\n   */\n  _finalize({ cleanup, message, name }) {\n    try {\n      cleanup();\n      this._cleanups.delete(cleanup);\n      if (message) {\n        this.emit(Events.DEBUG, message);\n      }\n    } catch {\n      this.emit(Events.DEBUG, `Garbage collection failed on ${name ?? 'an unknown item'}.`);\n    }\n  }\n\n  /**\n   * Sweeps all text-based channels' messages and removes the ones older than the max message lifetime.\n   * If the message has been edited, the time of the edit is used rather than the time of the original message.\n   * @param {number} [lifetime=this.options.messageCacheLifetime] Messages that are older than this (in seconds)\n   * will be removed from the caches. The default is based on {@link ClientOptions#messageCacheLifetime}\n   * @returns {number} Amount of messages that were removed from the caches,\n   * or -1 if the message cache lifetime is unlimited\n   * @example\n   * // Remove all messages older than 1800 seconds from the messages cache\n   * const amount = client.sweepMessages(1800);\n   * console.log(`Successfully removed ${amount} messages from the cache.`);\n   */\n  sweepMessages(lifetime = this.options.messageCacheLifetime) {\n    if (typeof lifetime !== 'number' || isNaN(lifetime)) {\n      throw new TypeError('INVALID_TYPE', 'lifetime', 'number');\n    }\n    if (lifetime <= 0) {\n      this.emit(Events.DEBUG, \"Didn't sweep messages - lifetime is unlimited\");\n      return -1;\n    }\n\n    const lifetimeMs = lifetime * 1000;\n    const now = Date.now();\n    let channels = 0;\n    let messages = 0;\n\n    for (const channel of this.channels.cache.values()) {\n      if (!channel.messages) continue;\n      channels++;\n\n      messages += channel.messages.cache.sweep(\n        message => now - (message.editedTimestamp ?? message.createdTimestamp) > lifetimeMs,\n      );\n    }\n\n    this.emit(\n      Events.DEBUG,\n      `Swept ${messages} messages older than ${lifetime} seconds in ${channels} text-based channels`,\n    );\n    return messages;\n  }\n\n  /**\n   * Obtains a guild preview from Discord, available for all guilds the bot is in and all Discoverable guilds.\n   * @param {GuildResolvable} guild The guild to fetch the preview for\n   * @returns {Promise<GuildPreview>}\n   */\n  async fetchGuildPreview(guild) {\n    const id = this.guilds.resolveId(guild);\n    if (!id) throw new TypeError('INVALID_TYPE', 'guild', 'GuildResolvable');\n    const data = await this.api.guilds(id).preview.get();\n    return new GuildPreview(this, data);\n  }\n\n  /**\n   * Obtains the widget data of a guild from Discord, available for guilds with the widget enabled.\n   * @param {GuildResolvable} guild The guild to fetch the widget data for\n   * @returns {Promise<Widget>}\n   */\n  async fetchGuildWidget(guild) {\n    const id = this.guilds.resolveId(guild);\n    if (!id) throw new TypeError('INVALID_TYPE', 'guild', 'GuildResolvable');\n    const data = await this.api.guilds(id, 'widget.json').get();\n    return new Widget(this, data);\n  }\n\n  /**\n   * Options for {@link Client#generateInvite}.\n   * @typedef {Object} InviteGenerationOptions\n   * @property {InviteScope[]} scopes Scopes that should be requested\n   * @property {PermissionResolvable} [permissions] Permissions to request\n   * @property {GuildResolvable} [guild] Guild to preselect\n   * @property {boolean} [disableGuildSelect] Whether to disable the guild selection\n   */\n\n  /**\n   * Generates a link that can be used to invite the bot to a guild.\n   * @param {InviteGenerationOptions} [options={}] Options for the invite\n   * @returns {string}\n   * @example\n   * const link = client.generateInvite({\n   *   scopes: ['applications.commands'],\n   * });\n   * console.log(`Generated application invite link: ${link}`);\n   * @example\n   * const link = client.generateInvite({\n   *   permissions: [\n   *     Permissions.FLAGS.SEND_MESSAGES,\n   *     Permissions.FLAGS.MANAGE_GUILD,\n   *     Permissions.FLAGS.MENTION_EVERYONE,\n   *   ],\n   *   scopes: ['bot'],\n   * });\n   * console.log(`Generated bot invite link: ${link}`);\n   */\n  generateInvite(options = {}) {\n    if (typeof options !== 'object') throw new TypeError('INVALID_TYPE', 'options', 'object', true);\n    if (!this.application) throw new Error('CLIENT_NOT_READY', 'generate an invite link');\n\n    const query = new URLSearchParams({\n      client_id: this.application.id,\n    });\n\n    const { scopes } = options;\n    if (typeof scopes === 'undefined') {\n      throw new TypeError('INVITE_MISSING_SCOPES');\n    }\n    if (!Array.isArray(scopes)) {\n      throw new TypeError('INVALID_TYPE', 'scopes', 'Array of Invite Scopes', true);\n    }\n    if (!scopes.some(scope => ['bot', 'applications.commands'].includes(scope))) {\n      throw new TypeError('INVITE_MISSING_SCOPES');\n    }\n    const invalidScope = scopes.find(scope => !InviteScopes.includes(scope));\n    if (invalidScope) {\n      throw new TypeError('INVALID_ELEMENT', 'Array', 'scopes', invalidScope);\n    }\n    query.set('scope', scopes.join(' '));\n\n    if (options.permissions) {\n      const permissions = Permissions.resolve(options.permissions);\n      if (permissions) query.set('permissions', permissions);\n    }\n\n    if (options.disableGuildSelect) {\n      query.set('disable_guild_select', true);\n    }\n\n    if (options.guild) {\n      const guildId = this.guilds.resolveId(options.guild);\n      if (!guildId) throw new TypeError('INVALID_TYPE', 'options.guild', 'GuildResolvable');\n      query.set('guild_id', guildId);\n    }\n\n    return `${this.options.http.api}${this.api.oauth2.authorize}?${query}`;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      readyAt: false,\n    });\n  }\n\n  /**\n   * Calls {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval} on a script\n   * with the client as `this`.\n   * @param {string} script Script to eval\n   * @returns {*}\n   * @private\n   */\n  _eval(script) {\n    return eval(script);\n  }\n\n  /**\n   * Validates the client options.\n   * @param {ClientOptions} [options=this.options] Options to validate\n   * @private\n   */\n  _validateOptions(options = this.options) {\n    if (typeof options.intents === 'undefined') {\n      throw new TypeError('CLIENT_MISSING_INTENTS');\n    } else {\n      options.intents = Intents.resolve(options.intents);\n    }\n    if (typeof options.shardCount !== 'number' || isNaN(options.shardCount) || options.shardCount < 1) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'shardCount', 'a number greater than or equal to 1');\n    }\n    if (options.shards && !(options.shards === 'auto' || Array.isArray(options.shards))) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'shards', \"'auto', a number or array of numbers\");\n    }\n    if (options.shards && !options.shards.length) throw new RangeError('CLIENT_INVALID_PROVIDED_SHARDS');\n    if (typeof options.makeCache !== 'function') {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'makeCache', 'a function');\n    }\n    if (typeof options.messageCacheLifetime !== 'number' || isNaN(options.messageCacheLifetime)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'The messageCacheLifetime', 'a number');\n    }\n    if (typeof options.messageSweepInterval !== 'number' || isNaN(options.messageSweepInterval)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'messageSweepInterval', 'a number');\n    }\n    if (typeof options.invalidRequestWarningInterval !== 'number' || isNaN(options.invalidRequestWarningInterval)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'invalidRequestWarningInterval', 'a number');\n    }\n    if (!Array.isArray(options.partials)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'partials', 'an Array');\n    }\n    if (typeof options.restWsBridgeTimeout !== 'number' || isNaN(options.restWsBridgeTimeout)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'restWsBridgeTimeout', 'a number');\n    }\n    if (typeof options.restRequestTimeout !== 'number' || isNaN(options.restRequestTimeout)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'restRequestTimeout', 'a number');\n    }\n    if (typeof options.restGlobalRateLimit !== 'number' || isNaN(options.restGlobalRateLimit)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'restGlobalRateLimit', 'a number');\n    }\n    if (typeof options.restSweepInterval !== 'number' || isNaN(options.restSweepInterval)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'restSweepInterval', 'a number');\n    }\n    if (typeof options.retryLimit !== 'number' || isNaN(options.retryLimit)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'retryLimit', 'a number');\n    }\n    if (typeof options.failIfNotExists !== 'boolean') {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'failIfNotExists', 'a boolean');\n    }\n    if (!Array.isArray(options.userAgentSuffix)) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'userAgentSuffix', 'an array of strings');\n    }\n    if (\n      typeof options.rejectOnRateLimit !== 'undefined' &&\n      !(typeof options.rejectOnRateLimit === 'function' || Array.isArray(options.rejectOnRateLimit))\n    ) {\n      throw new TypeError('CLIENT_INVALID_OPTION', 'rejectOnRateLimit', 'an array or a function');\n    }\n  }\n}\n\nmodule.exports = Client;\n\n/**\n * Emitted for general warnings.\n * @event Client#warn\n * @param {string} info The warning\n */\n\n/**\n * Emitted for general debugging information.\n * @event Client#debug\n * @param {string} info The debug information\n */\n\n/**\n * @external Collection\n * @see {@link https://discord.js.org/#/docs/collection/main/class/Collection}\n */\n","'use strict';\n\nconst BaseClient = require('./BaseClient');\nconst { Error } = require('../errors');\nconst Webhook = require('../structures/Webhook');\n\n/**\n * The webhook client.\n * @implements {Webhook}\n * @extends {BaseClient}\n */\nclass WebhookClient extends BaseClient {\n  /**\n   * The data for the webhook client containing either an id and token or just a URL\n   * @typedef {Object} WebhookClientData\n   * @property {Snowflake} [id] The id of the webhook\n   * @property {string} [token] The token of the webhook\n   * @property {string} [url] The full url for the webhook client\n   */\n\n  /**\n   * @param {WebhookClientData} data The data of the webhook\n   * @param {ClientOptions} [options] Options for the client\n   */\n  constructor(data, options) {\n    super(options);\n    Object.defineProperty(this, 'client', { value: this });\n    let { id, token } = data;\n\n    if ('url' in data) {\n      const url = data.url.match(\n        // eslint-disable-next-line no-useless-escape\n        /^https?:\\/\\/(?:canary|ptb)?\\.?discord\\.com\\/api\\/webhooks(?:\\/v[0-9]\\d*)?\\/([^\\/]+)\\/([^\\/]+)/i,\n      );\n\n      if (!url || url.length <= 1) throw new Error('WEBHOOK_URL_INVALID');\n\n      [, id, token] = url;\n    }\n\n    this.id = id;\n    Object.defineProperty(this, 'token', { value: token, writable: true, configurable: true });\n  }\n\n  // These are here only for documentation purposes - they are implemented by Webhook\n  /* eslint-disable no-empty-function */\n  send() {}\n  sendSlackMessage() {}\n  fetchMessage() {}\n  edit() {}\n  editMessage() {}\n  delete() {}\n  deleteMessage() {}\n  get createdTimestamp() {}\n  get createdAt() {}\n  get url() {}\n}\n\nWebhook.applyToClass(WebhookClient);\n\nmodule.exports = WebhookClient;\n","'use strict';\n\nconst { PartialTypes } = require('../../util/Constants');\n\n/*\n\nABOUT ACTIONS\n\nActions are similar to WebSocket Packet Handlers, but since introducing\nthe REST API methods, in order to prevent rewriting code to handle data,\n\"actions\" have been introduced. They're basically what Packet Handlers\nused to be but they're strictly for manipulating data and making sure\nthat WebSocket events don't clash with REST methods.\n\n*/\n\nclass GenericAction {\n  constructor(client) {\n    this.client = client;\n  }\n\n  handle(data) {\n    return data;\n  }\n\n  getPayload(data, manager, id, partialType, cache) {\n    const existing = manager.cache.get(id);\n    if (!existing && this.client.options.partials.includes(partialType)) {\n      return manager._add(data, cache);\n    }\n    return existing;\n  }\n\n  getChannel(data) {\n    const id = data.channel_id ?? data.id;\n    return (\n      data.channel ??\n      this.getPayload(\n        {\n          id,\n          guild_id: data.guild_id,\n          recipients: [data.author ?? data.user ?? { id: data.user_id }],\n        },\n        this.client.channels,\n        id,\n        PartialTypes.CHANNEL,\n      )\n    );\n  }\n\n  getMessage(data, channel, cache) {\n    const id = data.message_id ?? data.id;\n    return (\n      data.message ??\n      this.getPayload(\n        {\n          id,\n          channel_id: channel.id,\n          guild_id: data.guild_id ?? channel.guild?.id,\n        },\n        channel.messages,\n        id,\n        PartialTypes.MESSAGE,\n        cache,\n      )\n    );\n  }\n\n  getReaction(data, message, user) {\n    const id = data.emoji.id ?? decodeURIComponent(data.emoji.name);\n    return this.getPayload(\n      {\n        emoji: data.emoji,\n        count: message.partial ? null : 0,\n        me: user?.id === this.client.user.id,\n      },\n      message.reactions,\n      id,\n      PartialTypes.REACTION,\n    );\n  }\n\n  getMember(data, guild) {\n    return this.getPayload(data, guild.members, data.user.id, PartialTypes.GUILD_MEMBER);\n  }\n\n  getUser(data) {\n    const id = data.user_id;\n    return data.user ?? this.getPayload({ id }, this.client.users, id, PartialTypes.USER);\n  }\n\n  getUserFromMember(data) {\n    if (data.guild_id && data.member?.user) {\n      const guild = this.client.guilds.cache.get(data.guild_id);\n      if (guild) {\n        return guild.members._add(data.member).user;\n      } else {\n        return this.client.users._add(data.member.user);\n      }\n    }\n    return this.getUser(data);\n  }\n}\n\nmodule.exports = GenericAction;\n","'use strict';\n\nconst fs = require('fs');\n\nclass ActionsManager {\n  constructor(client) {\n    this.client = client;\n\n    const files = fs.readdirSync(__dirname);\n\n    for (const file of files) {\n      if (['Action.js', 'ActionsManager.js'].includes(file)) continue;\n      this.register(require(`./${file}`));\n    }\n  }\n\n  register(Action) {\n    this[Action.name.replace(/Action$/, '')] = new Action(this.client);\n  }\n}\n\nmodule.exports = ActionsManager;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass ChannelCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const existing = client.channels.cache.has(data.id);\n    const channel = client.channels._add(data);\n    if (!existing && channel) {\n      /**\n       * Emitted whenever a guild channel is created.\n       * @event Client#channelCreate\n       * @param {GuildChannel} channel The channel that was created\n       */\n      client.emit(Events.CHANNEL_CREATE, channel);\n    }\n    return { channel };\n  }\n}\n\nmodule.exports = ChannelCreateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst DMChannel = require('../../structures/DMChannel');\nconst { Events } = require('../../util/Constants');\n\nclass ChannelDeleteAction extends Action {\n  constructor(client) {\n    super(client);\n    this.deleted = new Map();\n  }\n\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.id);\n\n    if (channel) {\n      client.channels._remove(channel.id);\n      channel.deleted = true;\n      if (channel.messages && !(channel instanceof DMChannel)) {\n        for (const message of channel.messages.cache.values()) {\n          message.deleted = true;\n        }\n      }\n      /**\n       * Emitted whenever a channel is deleted.\n       * @event Client#channelDelete\n       * @param {DMChannel|GuildChannel} channel The channel that was deleted\n       */\n      client.emit(Events.CHANNEL_DELETE, channel);\n    }\n\n    return { channel };\n  }\n}\n\nmodule.exports = ChannelDeleteAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst Channel = require('../../structures/Channel');\nconst { ChannelTypes } = require('../../util/Constants');\n\nclass ChannelUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    let channel = client.channels.cache.get(data.id);\n    if (channel) {\n      const old = channel._update(data);\n\n      if (ChannelTypes[channel.type] !== data.type) {\n        const newChannel = Channel.create(this.client, data, channel.guild);\n        for (const [id, message] of channel.messages.cache) newChannel.messages.cache.set(id, message);\n        channel = newChannel;\n        this.client.channels.cache.set(channel.id, channel);\n      }\n\n      return {\n        old,\n        updated: channel,\n      };\n    } else {\n      client.channels._add(data);\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = ChannelUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildBanAdd extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    /**\n     * Emitted whenever a member is banned from a guild.\n     * @event Client#guildBanAdd\n     * @param {GuildBan} ban The ban that occurred\n     */\n    if (guild) client.emit(Events.GUILD_BAN_ADD, guild.bans._add(data));\n  }\n}\n\nmodule.exports = GuildBanAdd;\n","'use strict';\n\nconst Action = require('./Action');\nconst GuildBan = require('../../structures/GuildBan');\nconst { Events } = require('../../util/Constants');\n\nclass GuildBanRemove extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    /**\n     * Emitted whenever a member is unbanned from a guild.\n     * @event Client#guildBanRemove\n     * @param {GuildBan} ban The ban that was removed\n     */\n    if (guild) {\n      const ban = guild.bans.cache.get(data.user.id) ?? new GuildBan(client, data, guild);\n      guild.bans.cache.delete(ban.user.id);\n      client.emit(Events.GUILD_BAN_REMOVE, ban);\n    }\n  }\n}\n\nmodule.exports = GuildBanRemove;\n","'use strict';\n\nconst Action = require('./Action');\n\nclass GuildChannelsPositionUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      for (const partialChannel of data.channels) {\n        const channel = guild.channels.cache.get(partialChannel.id);\n        if (channel) channel.rawPosition = partialChannel.position;\n      }\n    }\n\n    return { guild };\n  }\n}\n\nmodule.exports = GuildChannelsPositionUpdate;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildDeleteAction extends Action {\n  constructor(client) {\n    super(client);\n    this.deleted = new Map();\n  }\n\n  handle(data) {\n    const client = this.client;\n\n    let guild = client.guilds.cache.get(data.id);\n    if (guild) {\n      if (data.unavailable) {\n        // Guild is unavailable\n        guild.available = false;\n\n        /**\n         * Emitted whenever a guild becomes unavailable, likely due to a server outage.\n         * @event Client#guildUnavailable\n         * @param {Guild} guild The guild that has become unavailable\n         */\n        client.emit(Events.GUILD_UNAVAILABLE, guild);\n\n        // Stops the GuildDelete packet thinking a guild was actually deleted,\n        // handles emitting of event itself\n        return {\n          guild: null,\n        };\n      }\n\n      for (const channel of guild.channels.cache.values()) this.client.channels._remove(channel.id);\n      client.voice.adapters.get(data.id)?.destroy();\n\n      // Delete guild\n      client.guilds.cache.delete(guild.id);\n      guild.deleted = true;\n\n      /**\n       * Emitted whenever a guild kicks the client or the guild is deleted/left.\n       * @event Client#guildDelete\n       * @param {Guild} guild The guild that was deleted\n       */\n      client.emit(Events.GUILD_DELETE, guild);\n\n      this.deleted.set(guild.id, guild);\n      this.scheduleForDeletion(guild.id);\n    } else {\n      guild = this.deleted.get(data.id) ?? null;\n    }\n\n    return { guild };\n  }\n\n  scheduleForDeletion(id) {\n    setTimeout(() => this.deleted.delete(id), this.client.options.restWsBridgeTimeout).unref();\n  }\n}\n\nmodule.exports = GuildDeleteAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildEmojiCreateAction extends Action {\n  handle(guild, createdEmoji) {\n    const already = guild.emojis.cache.has(createdEmoji.id);\n    const emoji = guild.emojis._add(createdEmoji);\n    /**\n     * Emitted whenever a custom emoji is created in a guild.\n     * @event Client#emojiCreate\n     * @param {GuildEmoji} emoji The emoji that was created\n     */\n    if (!already) this.client.emit(Events.GUILD_EMOJI_CREATE, emoji);\n    return { emoji };\n  }\n}\n\nmodule.exports = GuildEmojiCreateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildEmojiDeleteAction extends Action {\n  handle(emoji) {\n    emoji.guild.emojis.cache.delete(emoji.id);\n    emoji.deleted = true;\n    /**\n     * Emitted whenever a custom emoji is deleted in a guild.\n     * @event Client#emojiDelete\n     * @param {GuildEmoji} emoji The emoji that was deleted\n     */\n    this.client.emit(Events.GUILD_EMOJI_DELETE, emoji);\n    return { emoji };\n  }\n}\n\nmodule.exports = GuildEmojiDeleteAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildEmojiUpdateAction extends Action {\n  handle(current, data) {\n    const old = current._update(data);\n    /**\n     * Emitted whenever a custom emoji is updated in a guild.\n     * @event Client#emojiUpdate\n     * @param {GuildEmoji} oldEmoji The old emoji\n     * @param {GuildEmoji} newEmoji The new emoji\n     */\n    this.client.emit(Events.GUILD_EMOJI_UPDATE, old, current);\n    return { emoji: current };\n  }\n}\n\nmodule.exports = GuildEmojiUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\n\nclass GuildEmojisUpdateAction extends Action {\n  handle(data) {\n    const guild = this.client.guilds.cache.get(data.guild_id);\n    if (!guild?.emojis) return;\n\n    const deletions = new Map(guild.emojis.cache);\n\n    for (const emoji of data.emojis) {\n      // Determine type of emoji event\n      const cachedEmoji = guild.emojis.cache.get(emoji.id);\n      if (cachedEmoji) {\n        deletions.delete(emoji.id);\n        if (!cachedEmoji.equals(emoji)) {\n          // Emoji updated\n          this.client.actions.GuildEmojiUpdate.handle(cachedEmoji, emoji);\n        }\n      } else {\n        // Emoji added\n        this.client.actions.GuildEmojiCreate.handle(guild, emoji);\n      }\n    }\n\n    for (const emoji of deletions.values()) {\n      // Emoji deleted\n      this.client.actions.GuildEmojiDelete.handle(emoji);\n    }\n  }\n}\n\nmodule.exports = GuildEmojisUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildIntegrationsUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    /**\n     * Emitted whenever a guild integration is updated\n     * @event Client#guildIntegrationsUpdate\n     * @param {Guild} guild The guild whose integrations were updated\n     */\n    if (guild) client.emit(Events.GUILD_INTEGRATIONS_UPDATE, guild);\n  }\n}\n\nmodule.exports = GuildIntegrationsUpdate;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events, Status } = require('../../util/Constants');\n\nclass GuildMemberRemoveAction extends Action {\n  handle(data, shard) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let member = null;\n    if (guild) {\n      member = this.getMember({ user: data.user }, guild);\n      guild.memberCount--;\n      if (member) {\n        member.deleted = true;\n        guild.members.cache.delete(member.id);\n        /**\n         * Emitted whenever a member leaves a guild, or is kicked.\n         * @event Client#guildMemberRemove\n         * @param {GuildMember} member The member that has left/been kicked from the guild\n         */\n        if (shard.status === Status.READY) client.emit(Events.GUILD_MEMBER_REMOVE, member);\n      }\n      guild.voiceStates.cache.delete(data.user.id);\n    }\n    return { guild, member };\n  }\n}\n\nmodule.exports = GuildMemberRemoveAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Status, Events } = require('../../util/Constants');\n\nclass GuildMemberUpdateAction extends Action {\n  handle(data, shard) {\n    const { client } = this;\n    if (data.user.username) {\n      const user = client.users.cache.get(data.user.id);\n      if (!user) {\n        client.users._add(data.user);\n      } else if (!user.equals(data.user)) {\n        client.actions.UserUpdate.handle(data.user);\n      }\n    }\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      const member = this.getMember({ user: data.user }, guild);\n      if (member) {\n        const old = member._update(data);\n        /**\n         * Emitted whenever a guild member changes - i.e. new role, removed role, nickname.\n         * Also emitted when the user's details (e.g. username) change.\n         * @event Client#guildMemberUpdate\n         * @param {GuildMember} oldMember The member before the update\n         * @param {GuildMember} newMember The member after the update\n         */\n        if (shard.status === Status.READY && !member.equals(old)) client.emit(Events.GUILD_MEMBER_UPDATE, old, member);\n      } else {\n        const newMember = guild.members._add(data);\n        /**\n         * Emitted whenever a member becomes available in a large guild.\n         * @event Client#guildMemberAvailable\n         * @param {GuildMember} member The member that became available\n         */\n        this.client.emit(Events.GUILD_MEMBER_AVAILABLE, newMember);\n      }\n    }\n  }\n}\n\nmodule.exports = GuildMemberUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildRoleCreate extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let role;\n    if (guild) {\n      const already = guild.roles.cache.has(data.role.id);\n      role = guild.roles._add(data.role);\n      /**\n       * Emitted whenever a role is created.\n       * @event Client#roleCreate\n       * @param {Role} role The role that was created\n       */\n      if (!already) client.emit(Events.GUILD_ROLE_CREATE, role);\n    }\n    return { role };\n  }\n}\n\nmodule.exports = GuildRoleCreate;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildRoleDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let role;\n\n    if (guild) {\n      role = guild.roles.cache.get(data.role_id);\n      if (role) {\n        guild.roles.cache.delete(data.role_id);\n        role.deleted = true;\n        /**\n         * Emitted whenever a guild role is deleted.\n         * @event Client#roleDelete\n         * @param {Role} role The role that was deleted\n         */\n        client.emit(Events.GUILD_ROLE_DELETE, role);\n      }\n    }\n\n    return { role };\n  }\n}\n\nmodule.exports = GuildRoleDeleteAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildRoleUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      let old = null;\n\n      const role = guild.roles.cache.get(data.role.id);\n      if (role) {\n        old = role._update(data.role);\n        /**\n         * Emitted whenever a guild role is updated.\n         * @event Client#roleUpdate\n         * @param {Role} oldRole The role before the update\n         * @param {Role} newRole The role after the update\n         */\n        client.emit(Events.GUILD_ROLE_UPDATE, old, role);\n      }\n\n      return {\n        old,\n        updated: role,\n      };\n    }\n\n    return {\n      old: null,\n      updated: null,\n    };\n  }\n}\n\nmodule.exports = GuildRoleUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\n\nclass GuildRolesPositionUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      for (const partialRole of data.roles) {\n        const role = guild.roles.cache.get(partialRole.id);\n        if (role) role.rawPosition = partialRole.position;\n      }\n    }\n\n    return { guild };\n  }\n}\n\nmodule.exports = GuildRolesPositionUpdate;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildStickerCreateAction extends Action {\n  handle(guild, createdSticker) {\n    const already = guild.stickers.cache.has(createdSticker.id);\n    const sticker = guild.stickers._add(createdSticker);\n    /**\n     * Emitted whenever a custom sticker is created in a guild.\n     * @event Client#stickerCreate\n     * @param {Sticker} sticker The sticker that was created\n     */\n    if (!already) this.client.emit(Events.GUILD_STICKER_CREATE, sticker);\n    return { sticker };\n  }\n}\n\nmodule.exports = GuildStickerCreateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildStickerDeleteAction extends Action {\n  handle(sticker) {\n    sticker.guild.stickers.cache.delete(sticker.id);\n    sticker.deleted = true;\n    /**\n     * Emitted whenever a custom sticker is deleted in a guild.\n     * @event Client#stickerDelete\n     * @param {Sticker} sticker The sticker that was deleted\n     */\n    this.client.emit(Events.GUILD_STICKER_DELETE, sticker);\n    return { sticker };\n  }\n}\n\nmodule.exports = GuildStickerDeleteAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildStickerUpdateAction extends Action {\n  handle(current, data) {\n    const old = current._update(data);\n    /**\n     * Emitted whenever a custom sticker is updated in a guild.\n     * @event Client#stickerUpdate\n     * @param {Sticker} oldSticker The old sticker\n     * @param {Sticker} newSticker The new sticker\n     */\n    this.client.emit(Events.GUILD_STICKER_UPDATE, old, current);\n    return { sticker: current };\n  }\n}\n\nmodule.exports = GuildStickerUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\n\nclass GuildStickersUpdateAction extends Action {\n  handle(data) {\n    const guild = this.client.guilds.cache.get(data.guild_id);\n    if (!guild?.stickers) return;\n\n    const deletions = new Map(guild.stickers.cache);\n\n    for (const sticker of data.stickers) {\n      // Determine type of sticker event\n      const cachedSticker = guild.stickers.cache.get(sticker.id);\n      if (cachedSticker) {\n        deletions.delete(sticker.id);\n        if (!cachedSticker.equals(sticker)) {\n          // Sticker updated\n          this.client.actions.GuildStickerUpdate.handle(cachedSticker, sticker);\n        }\n      } else {\n        // Sticker added\n        this.client.actions.GuildStickerCreate.handle(guild, sticker);\n      }\n    }\n\n    for (const sticker of deletions.values()) {\n      // Sticker deleted\n      this.client.actions.GuildStickerDelete.handle(sticker);\n    }\n  }\n}\n\nmodule.exports = GuildStickersUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.id);\n    if (guild) {\n      const old = guild._update(data);\n      /**\n       * Emitted whenever a guild is updated - e.g. name change.\n       * @event Client#guildUpdate\n       * @param {Guild} oldGuild The guild before the update\n       * @param {Guild} newGuild The guild after the update\n       */\n      client.emit(Events.GUILD_UPDATE, old, guild);\n      return {\n        old,\n        updated: guild,\n      };\n    }\n\n    return {\n      old: null,\n      updated: null,\n    };\n  }\n}\n\nmodule.exports = GuildUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst ButtonInteraction = require('../../structures/ButtonInteraction');\nconst CommandInteraction = require('../../structures/CommandInteraction');\nconst ContextMenuInteraction = require('../../structures/ContextMenuInteraction');\nconst SelectMenuInteraction = require('../../structures/SelectMenuInteraction');\nconst { Events, InteractionTypes, MessageComponentTypes, ApplicationCommandTypes } = require('../../util/Constants');\n\nlet deprecationEmitted = false;\n\nclass InteractionCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    // Resolve and cache partial channels for Interaction#channel getter\n    this.getChannel(data);\n\n    let InteractionType;\n    switch (data.type) {\n      case InteractionTypes.APPLICATION_COMMAND:\n        switch (data.data.type) {\n          case ApplicationCommandTypes.CHAT_INPUT:\n            InteractionType = CommandInteraction;\n            break;\n          case ApplicationCommandTypes.USER:\n          case ApplicationCommandTypes.MESSAGE:\n            InteractionType = ContextMenuInteraction;\n            break;\n          default:\n            client.emit(\n              Events.DEBUG,\n              `[INTERACTION] Received application command interaction with unknown type: ${data.data.type}`,\n            );\n            return;\n        }\n        break;\n      case InteractionTypes.MESSAGE_COMPONENT:\n        switch (data.data.component_type) {\n          case MessageComponentTypes.BUTTON:\n            InteractionType = ButtonInteraction;\n            break;\n          case MessageComponentTypes.SELECT_MENU:\n            InteractionType = SelectMenuInteraction;\n            break;\n          default:\n            client.emit(\n              Events.DEBUG,\n              `[INTERACTION] Received component interaction with unknown type: ${data.data.component_type}`,\n            );\n            return;\n        }\n        break;\n      default:\n        client.emit(Events.DEBUG, `[INTERACTION] Received interaction with unknown type: ${data.type}`);\n        return;\n    }\n\n    const interaction = new InteractionType(client, data);\n\n    /**\n     * Emitted when an interaction is created.\n     * @event Client#interactionCreate\n     * @param {Interaction} interaction The interaction which was created\n     */\n    client.emit(Events.INTERACTION_CREATE, interaction);\n\n    /**\n     * Emitted when an interaction is created.\n     * @event Client#interaction\n     * @param {Interaction} interaction The interaction which was created\n     * @deprecated Use {@link Client#interactionCreate} instead\n     */\n    if (client.emit('interaction', interaction) && !deprecationEmitted) {\n      deprecationEmitted = true;\n      process.emitWarning('The interaction event is deprecated. Use interactionCreate instead', 'DeprecationWarning');\n    }\n  }\n}\n\nmodule.exports = InteractionCreateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass InviteCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (!channel) return false;\n\n    const inviteData = Object.assign(data, { channel, guild });\n    const invite = guild.invites._add(inviteData);\n\n    /**\n     * Emitted when an invite is created.\n     * <info> This event only triggers if the client has `MANAGE_GUILD` permissions for the guild,\n     * or `MANAGE_CHANNELS` permissions for the channel.</info>\n     * @event Client#inviteCreate\n     * @param {Invite} invite The invite that was created\n     */\n    client.emit(Events.INVITE_CREATE, invite);\n    return { invite };\n  }\n}\n\nmodule.exports = InviteCreateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst Invite = require('../../structures/Invite');\nconst { Events } = require('../../util/Constants');\n\nclass InviteDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (!channel) return false;\n\n    const inviteData = Object.assign(data, { channel, guild });\n    const invite = new Invite(client, inviteData);\n    guild.invites.cache.delete(invite.code);\n\n    /**\n     * Emitted when an invite is deleted.\n     * <info> This event only triggers if the client has `MANAGE_GUILD` permissions for the guild,\n     * or `MANAGE_CHANNELS` permissions for the channel.</info>\n     * @event Client#inviteDelete\n     * @param {Invite} invite The invite that was deleted\n     */\n    client.emit(Events.INVITE_DELETE, invite);\n    return { invite };\n  }\n}\n\nmodule.exports = InviteDeleteAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nlet deprecationEmitted = false;\n\nclass MessageCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n    if (channel) {\n      const existing = channel.messages.cache.get(data.id);\n      if (existing) return { message: existing };\n      const message = channel.messages._add(data);\n      channel.lastMessageId = data.id;\n\n      /**\n       * Emitted whenever a message is created.\n       * @event Client#messageCreate\n       * @param {Message} message The created message\n       */\n      client.emit(Events.MESSAGE_CREATE, message);\n\n      /**\n       * Emitted whenever a message is created.\n       * @event Client#message\n       * @param {Message} message The created message\n       * @deprecated Use {@link Client#messageCreate} instead\n       */\n      if (client.emit('message', message) && !deprecationEmitted) {\n        deprecationEmitted = true;\n        process.emitWarning('The message event is deprecated. Use messageCreate instead', 'DeprecationWarning');\n      }\n\n      return { message };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = MessageCreateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass MessageDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n    let message;\n    if (channel) {\n      message = this.getMessage(data, channel);\n      if (message) {\n        channel.messages.cache.delete(message.id);\n        message.deleted = true;\n        /**\n         * Emitted whenever a message is deleted.\n         * @event Client#messageDelete\n         * @param {Message} message The deleted message\n         */\n        client.emit(Events.MESSAGE_DELETE, message);\n      }\n    }\n\n    return { message };\n  }\n}\n\nmodule.exports = MessageDeleteAction;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass MessageDeleteBulkAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n\n    if (channel) {\n      const ids = data.ids;\n      const messages = new Collection();\n      for (const id of ids) {\n        const message = this.getMessage(\n          {\n            id,\n            guild_id: data.guild_id,\n          },\n          channel,\n          false,\n        );\n        if (message) {\n          message.deleted = true;\n          messages.set(message.id, message);\n          channel.messages.cache.delete(id);\n        }\n      }\n\n      /**\n       * Emitted whenever messages are deleted in bulk.\n       * @event Client#messageDeleteBulk\n       * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their id\n       */\n      if (messages.size > 0) client.emit(Events.MESSAGE_BULK_DELETE, messages);\n      return { messages };\n    }\n    return {};\n  }\n}\n\nmodule.exports = MessageDeleteBulkAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events, VoiceBasedChannelTypes } = require('../../util/Constants');\nconst { PartialTypes } = require('../../util/Constants');\n\n/*\n{ user_id: 'id',\n     message_id: 'id',\n     emoji: { name: '�', id: null },\n     channel_id: 'id',\n     // If originating from a guild\n     guild_id: 'id',\n     member: { ..., user: { ... } } }\n*/\n\nclass MessageReactionAdd extends Action {\n  handle(data) {\n    if (!data.emoji) return false;\n\n    const user = this.getUserFromMember(data);\n    if (!user) return false;\n\n    // Verify channel\n    const channel = this.getChannel(data);\n    if (!channel || VoiceBasedChannelTypes.includes(channel.type)) return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    // Verify reaction\n    if (message.partial && !this.client.options.partials.includes(PartialTypes.REACTION)) return false;\n    const existing = message.reactions.cache.get(data.emoji.id ?? data.emoji.name);\n    if (existing?.users.cache.has(user.id)) return { message, reaction: existing, user };\n    const reaction = message.reactions._add({\n      emoji: data.emoji,\n      count: message.partial ? null : 0,\n      me: user.id === this.client.user.id,\n    });\n    if (!reaction) return false;\n    reaction._add(user);\n    /**\n     * Emitted whenever a reaction is added to a cached message.\n     * @event Client#messageReactionAdd\n     * @param {MessageReaction} messageReaction The reaction object\n     * @param {User} user The user that applied the guild or reaction emoji\n     */\n    this.client.emit(Events.MESSAGE_REACTION_ADD, reaction, user);\n\n    return { message, reaction, user };\n  }\n}\n\nmodule.exports = MessageReactionAdd;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events, VoiceBasedChannelTypes } = require('../../util/Constants');\n\n/*\n{ user_id: 'id',\n     message_id: 'id',\n     emoji: { name: '�', id: null },\n     channel_id: 'id',\n     guild_id: 'id' }\n*/\n\nclass MessageReactionRemove extends Action {\n  handle(data) {\n    if (!data.emoji) return false;\n\n    const user = this.getUser(data);\n    if (!user) return false;\n\n    // Verify channel\n    const channel = this.getChannel(data);\n    if (!channel || VoiceBasedChannelTypes.includes(channel.type)) return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    // Verify reaction\n    const reaction = this.getReaction(data, message, user);\n    if (!reaction) return false;\n    reaction._remove(user);\n    /**\n     * Emitted whenever a reaction is removed from a cached message.\n     * @event Client#messageReactionRemove\n     * @param {MessageReaction} messageReaction The reaction object\n     * @param {User} user The user whose emoji or reaction emoji was removed\n     */\n    this.client.emit(Events.MESSAGE_REACTION_REMOVE, reaction, user);\n\n    return { message, reaction, user };\n  }\n}\n\nmodule.exports = MessageReactionRemove;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events, VoiceBasedChannelTypes } = require('../../util/Constants');\n\nclass MessageReactionRemoveAll extends Action {\n  handle(data) {\n    // Verify channel\n    const channel = this.getChannel(data);\n    if (!channel || VoiceBasedChannelTypes.includes(channel.type)) return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    message.reactions.cache.clear();\n    this.client.emit(Events.MESSAGE_REACTION_REMOVE_ALL, message);\n\n    return { message };\n  }\n}\n\n/**\n * Emitted whenever all reactions are removed from a cached message.\n * @event Client#messageReactionRemoveAll\n * @param {Message} message The message the reactions were removed from\n */\n\nmodule.exports = MessageReactionRemoveAll;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events, VoiceBasedChannelTypes } = require('../../util/Constants');\n\nclass MessageReactionRemoveEmoji extends Action {\n  handle(data) {\n    const channel = this.getChannel(data);\n    if (!channel || VoiceBasedChannelTypes.includes(channel.type)) return false;\n\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    const reaction = this.getReaction(data, message);\n    if (!reaction) return false;\n    if (!message.partial) message.reactions.cache.delete(reaction.emoji.id ?? reaction.emoji.name);\n\n    /**\n     * Emitted when a bot removes an emoji reaction from a cached message.\n     * @event Client#messageReactionRemoveEmoji\n     * @param {MessageReaction} reaction The reaction that was removed\n     */\n    this.client.emit(Events.MESSAGE_REACTION_REMOVE_EMOJI, reaction);\n    return { reaction };\n  }\n}\n\nmodule.exports = MessageReactionRemoveEmoji;\n","'use strict';\n\nconst Action = require('./Action');\n\nclass MessageUpdateAction extends Action {\n  handle(data) {\n    const channel = this.getChannel(data);\n    if (channel) {\n      const { id, channel_id, guild_id, author, timestamp, type } = data;\n      const message = this.getMessage({ id, channel_id, guild_id, author, timestamp, type }, channel);\n      if (message) {\n        const old = message._update(data, true);\n        return {\n          old,\n          updated: message,\n        };\n      }\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = MessageUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass PresenceUpdateAction extends Action {\n  handle(data) {\n    let user = this.client.users.cache.get(data.user.id);\n    if (!user && data.user?.username) user = this.client.users._add(data.user);\n    if (!user) return;\n\n    if (data.user?.username) {\n      if (!user.equals(data.user)) this.client.actions.UserUpdate.handle(data.user);\n    }\n\n    const guild = this.client.guilds.cache.get(data.guild_id);\n    if (!guild) return;\n\n    const oldPresence = guild.presences.cache.get(user.id)?._clone() ?? null;\n    let member = guild.members.cache.get(user.id);\n    if (!member && data.status !== 'offline') {\n      member = guild.members._add({\n        user,\n        deaf: false,\n        mute: false,\n      });\n      this.client.emit(Events.GUILD_MEMBER_AVAILABLE, member);\n    }\n    const newPresence = guild.presences._add(Object.assign(data, { guild }));\n    if (this.client.listenerCount(Events.PRESENCE_UPDATE) && !newPresence.equals(oldPresence)) {\n      /**\n       * Emitted whenever a guild member's presence (e.g. status, activity) is changed.\n       * @event Client#presenceUpdate\n       * @param {?Presence} oldPresence The presence before the update, if one at all\n       * @param {Presence} newPresence The presence after the update\n       */\n      this.client.emit(Events.PRESENCE_UPDATE, oldPresence, newPresence);\n    }\n  }\n}\n\nmodule.exports = PresenceUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass StageInstanceCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n\n    if (channel) {\n      const stageInstance = channel.guild.stageInstances._add(data);\n\n      /**\n       * Emitted whenever a stage instance is created.\n       * @event Client#stageInstanceCreate\n       * @param {StageInstance} stageInstance The created stage instance\n       */\n      client.emit(Events.STAGE_INSTANCE_CREATE, stageInstance);\n\n      return { stageInstance };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = StageInstanceCreateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass StageInstanceDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n\n    if (channel) {\n      const stageInstance = channel.guild.stageInstances._add(data);\n      if (stageInstance) {\n        channel.guild.stageInstances.cache.delete(stageInstance.id);\n        stageInstance.deleted = true;\n\n        /**\n         * Emitted whenever a stage instance is deleted.\n         * @event Client#stageInstanceDelete\n         * @param {StageInstance} stageInstance The deleted stage instance\n         */\n        client.emit(Events.STAGE_INSTANCE_DELETE, stageInstance);\n\n        return { stageInstance };\n      }\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = StageInstanceDeleteAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass StageInstanceUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n\n    if (channel) {\n      const oldStageInstance = channel.guild.stageInstances.cache.get(data.id)?._clone() ?? null;\n      const newStageInstance = channel.guild.stageInstances._add(data);\n\n      /**\n       * Emitted whenever a stage instance gets updated - e.g. change in topic or privacy level\n       * @event Client#stageInstanceUpdate\n       * @param {?StageInstance} oldStageInstance The stage instance before the update\n       * @param {StageInstance} newStageInstance The stage instance after the update\n       */\n      client.emit(Events.STAGE_INSTANCE_UPDATE, oldStageInstance, newStageInstance);\n\n      return { oldStageInstance, newStageInstance };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = StageInstanceUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass ThreadCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const existing = client.channels.cache.has(data.id);\n    const thread = client.channels._add(data);\n    if (!existing && thread) {\n      /**\n       * Emitted whenever a thread is created or when the client user is added to a thread.\n       * @event Client#threadCreate\n       * @param {ThreadChannel} thread The thread that was created\n       */\n      client.emit(Events.THREAD_CREATE, thread);\n    }\n    return { thread };\n  }\n}\n\nmodule.exports = ThreadCreateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass ThreadDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const thread = client.channels.cache.get(data.id);\n\n    if (thread) {\n      client.channels._remove(thread.id);\n      thread.deleted = true;\n      for (const message of thread.messages.cache.values()) {\n        message.deleted = true;\n      }\n\n      /**\n       * Emitted whenever a thread is deleted.\n       * @event Client#threadDelete\n       * @param {ThreadChannel} thread The thread that was deleted\n       */\n      client.emit(Events.THREAD_DELETE, thread);\n    }\n\n    return { thread };\n  }\n}\n\nmodule.exports = ThreadDeleteAction;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass ThreadListSyncAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (!guild) return {};\n\n    if (data.channel_ids) {\n      for (const id of data.channel_ids) {\n        const channel = client.channels.resolve(id);\n        if (channel) this.removeStale(channel);\n      }\n    } else {\n      for (const channel of guild.channels.cache.values()) {\n        this.removeStale(channel);\n      }\n    }\n\n    const syncedThreads = data.threads.reduce((coll, rawThread) => {\n      const thread = client.channels._add(rawThread);\n      return coll.set(thread.id, thread);\n    }, new Collection());\n\n    for (const rawMember of Object.values(data.members)) {\n      // Discord sends the thread id as id in this object\n      const thread = client.channels.cache.get(rawMember.id);\n      if (thread) {\n        thread.members._add(rawMember);\n      }\n    }\n\n    /**\n     * Emitted whenever the client user gains access to a text or news channel that contains threads\n     * @event Client#threadListSync\n     * @param {Collection<Snowflake, ThreadChannel>} threads The threads that were synced\n     */\n    client.emit(Events.THREAD_LIST_SYNC, syncedThreads);\n\n    return {\n      syncedThreads,\n    };\n  }\n\n  removeStale(channel) {\n    channel.threads?.cache.forEach(thread => {\n      if (!thread.archived) {\n        this.client.channels._remove(thread.id);\n      }\n    });\n  }\n}\n\nmodule.exports = ThreadListSyncAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass ThreadMemberUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    // Discord sends the thread id as id in this object\n    const thread = client.channels.cache.get(data.id);\n    if (thread) {\n      const member = thread.members.cache.get(data.user_id);\n      if (!member) {\n        const newMember = thread.members._add(data);\n        return { newMember };\n      }\n      const old = member._update(data);\n      /**\n       * Emitted whenever the client user's thread member is updated.\n       * @event Client#threadMemberUpdate\n       * @param {ThreadMember} oldMember The member before the update\n       * @param {ThreadMember} newMember The member after the update\n       */\n      client.emit(Events.THREAD_MEMBER_UPDATE, old, member);\n    }\n    return {};\n  }\n}\n\nmodule.exports = ThreadMemberUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass ThreadMembersUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const thread = client.channels.cache.get(data.id);\n    if (thread) {\n      const old = thread.members.cache.clone();\n      thread.memberCount = data.member_count;\n\n      data.added_members?.forEach(rawMember => {\n        thread.members._add(rawMember);\n      });\n\n      data.removed_member_ids?.forEach(memberId => {\n        thread.members.cache.delete(memberId);\n      });\n\n      /**\n       * Emitted whenever members are added or removed from a thread. Requires `GUILD_MEMBERS` privileged intent\n       * @event Client#threadMembersUpdate\n       * @param {Collection<Snowflake, ThreadMember>} oldMembers The members before the update\n       * @param {Collection<Snowflake, ThreadMember>} newMembers The members after the update\n       */\n      client.emit(Events.THREAD_MEMBERS_UPDATE, old, thread.members.cache);\n    }\n    return {};\n  }\n}\n\nmodule.exports = ThreadMembersUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst Typing = require('../../structures/Typing');\nconst { Events, TextBasedChannelTypes } = require('../../util/Constants');\n\nclass TypingStart extends Action {\n  handle(data) {\n    const channel = this.getChannel(data);\n    if (!channel) {\n      return;\n    }\n    if (!TextBasedChannelTypes.includes(channel.type)) {\n      this.client.emit(Events.WARN, `Discord sent a typing packet to a ${channel.type} channel ${channel.id}`);\n      return;\n    }\n\n    const user = this.getUserFromMember(data);\n    if (channel && user) {\n      /**\n       * Emitted whenever a user starts typing in a channel.\n       * @event Client#typingStart\n       * @param {Typing} typing The typing state\n       */\n      this.client.emit(Events.TYPING_START, new Typing(channel, user, data));\n    }\n  }\n}\n\nmodule.exports = TypingStart;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass UserUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const newUser = client.users.cache.get(data.id);\n    const oldUser = newUser._update(data);\n\n    if (!oldUser.equals(newUser)) {\n      /**\n       * Emitted whenever a user's details (e.g. username) are changed.\n       * Triggered by the Discord gateway events USER_UPDATE, GUILD_MEMBER_UPDATE, and PRESENCE_UPDATE.\n       * @event Client#userUpdate\n       * @param {User} oldUser The user before the update\n       * @param {User} newUser The user after the update\n       */\n      client.emit(Events.USER_UPDATE, oldUser, newUser);\n      return {\n        old: oldUser,\n        updated: newUser,\n      };\n    }\n\n    return {\n      old: null,\n      updated: null,\n    };\n  }\n}\n\nmodule.exports = UserUpdateAction;\n","'use strict';\n\nconst Action = require('./Action');\nconst VoiceState = require('../../structures/VoiceState');\nconst { Events } = require('../../util/Constants');\n\nclass VoiceStateUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      // Update the state\n      const oldState =\n        guild.voiceStates.cache.get(data.user_id)?._clone() ?? new VoiceState(guild, { user_id: data.user_id });\n\n      const newState = guild.voiceStates._add(data);\n\n      // Get the member\n      let member = guild.members.cache.get(data.user_id);\n      if (member && data.member) {\n        member._patch(data.member);\n      } else if (data.member?.user && data.member.joined_at) {\n        member = guild.members._add(data.member);\n      }\n\n      // Emit event\n      if (member?.user.id === client.user.id) {\n        client.emit('debug', `[VOICE] received voice state update: ${JSON.stringify(data)}`);\n        client.voice.onVoiceStateUpdate(data);\n      }\n\n      /**\n       * Emitted whenever a member changes voice state - e.g. joins/leaves a channel, mutes/unmutes.\n       * @event Client#voiceStateUpdate\n       * @param {VoiceState} oldState The voice state before the update\n       * @param {VoiceState} newState The voice state after the update\n       */\n      client.emit(Events.VOICE_STATE_UPDATE, oldState, newState);\n    }\n  }\n}\n\nmodule.exports = VoiceStateUpdate;\n","'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass WebhooksUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    /**\n     * Emitted whenever a guild text channel has its webhooks changed.\n     * @event Client#webhookUpdate\n     * @param {TextChannel} channel The channel that had a webhook update\n     */\n    if (channel) client.emit(Events.WEBHOOKS_UPDATE, channel);\n  }\n}\n\nmodule.exports = WebhooksUpdate;\n","var map = {\n\t\"./Action\": 32458,\n\t\"./Action.js\": 32458,\n\t\"./ActionsManager\": 67642,\n\t\"./ActionsManager.js\": 67642,\n\t\"./ChannelCreate\": 3764,\n\t\"./ChannelCreate.js\": 3764,\n\t\"./ChannelDelete\": 28876,\n\t\"./ChannelDelete.js\": 28876,\n\t\"./ChannelUpdate\": 27103,\n\t\"./ChannelUpdate.js\": 27103,\n\t\"./GuildBanAdd\": 31385,\n\t\"./GuildBanAdd.js\": 31385,\n\t\"./GuildBanRemove\": 46583,\n\t\"./GuildBanRemove.js\": 46583,\n\t\"./GuildChannelsPositionUpdate\": 69220,\n\t\"./GuildChannelsPositionUpdate.js\": 69220,\n\t\"./GuildDelete\": 56431,\n\t\"./GuildDelete.js\": 56431,\n\t\"./GuildEmojiCreate\": 34385,\n\t\"./GuildEmojiCreate.js\": 34385,\n\t\"./GuildEmojiDelete\": 92058,\n\t\"./GuildEmojiDelete.js\": 92058,\n\t\"./GuildEmojiUpdate\": 82731,\n\t\"./GuildEmojiUpdate.js\": 82731,\n\t\"./GuildEmojisUpdate\": 91017,\n\t\"./GuildEmojisUpdate.js\": 91017,\n\t\"./GuildIntegrationsUpdate\": 26097,\n\t\"./GuildIntegrationsUpdate.js\": 26097,\n\t\"./GuildMemberRemove\": 72543,\n\t\"./GuildMemberRemove.js\": 72543,\n\t\"./GuildMemberUpdate\": 65881,\n\t\"./GuildMemberUpdate.js\": 65881,\n\t\"./GuildRoleCreate\": 98422,\n\t\"./GuildRoleCreate.js\": 98422,\n\t\"./GuildRoleDelete\": 82000,\n\t\"./GuildRoleDelete.js\": 82000,\n\t\"./GuildRoleUpdate\": 23765,\n\t\"./GuildRoleUpdate.js\": 23765,\n\t\"./GuildRolesPositionUpdate\": 82705,\n\t\"./GuildRolesPositionUpdate.js\": 82705,\n\t\"./GuildStickerCreate\": 20806,\n\t\"./GuildStickerCreate.js\": 20806,\n\t\"./GuildStickerDelete\": 50072,\n\t\"./GuildStickerDelete.js\": 50072,\n\t\"./GuildStickerUpdate\": 34194,\n\t\"./GuildStickerUpdate.js\": 34194,\n\t\"./GuildStickersUpdate\": 13675,\n\t\"./GuildStickersUpdate.js\": 13675,\n\t\"./GuildUpdate\": 17368,\n\t\"./GuildUpdate.js\": 17368,\n\t\"./InteractionCreate\": 46266,\n\t\"./InteractionCreate.js\": 46266,\n\t\"./InviteCreate\": 79475,\n\t\"./InviteCreate.js\": 79475,\n\t\"./InviteDelete\": 67190,\n\t\"./InviteDelete.js\": 67190,\n\t\"./MessageCreate\": 39826,\n\t\"./MessageCreate.js\": 39826,\n\t\"./MessageDelete\": 17590,\n\t\"./MessageDelete.js\": 17590,\n\t\"./MessageDeleteBulk\": 11538,\n\t\"./MessageDeleteBulk.js\": 11538,\n\t\"./MessageReactionAdd\": 62088,\n\t\"./MessageReactionAdd.js\": 62088,\n\t\"./MessageReactionRemove\": 76172,\n\t\"./MessageReactionRemove.js\": 76172,\n\t\"./MessageReactionRemoveAll\": 35418,\n\t\"./MessageReactionRemoveAll.js\": 35418,\n\t\"./MessageReactionRemoveEmoji\": 51230,\n\t\"./MessageReactionRemoveEmoji.js\": 51230,\n\t\"./MessageUpdate\": 81924,\n\t\"./MessageUpdate.js\": 81924,\n\t\"./PresenceUpdate\": 24732,\n\t\"./PresenceUpdate.js\": 24732,\n\t\"./StageInstanceCreate\": 16237,\n\t\"./StageInstanceCreate.js\": 16237,\n\t\"./StageInstanceDelete\": 83810,\n\t\"./StageInstanceDelete.js\": 83810,\n\t\"./StageInstanceUpdate\": 15113,\n\t\"./StageInstanceUpdate.js\": 15113,\n\t\"./ThreadCreate\": 44537,\n\t\"./ThreadCreate.js\": 44537,\n\t\"./ThreadDelete\": 67822,\n\t\"./ThreadDelete.js\": 67822,\n\t\"./ThreadListSync\": 87812,\n\t\"./ThreadListSync.js\": 87812,\n\t\"./ThreadMemberUpdate\": 48803,\n\t\"./ThreadMemberUpdate.js\": 48803,\n\t\"./ThreadMembersUpdate\": 41004,\n\t\"./ThreadMembersUpdate.js\": 41004,\n\t\"./TypingStart\": 33350,\n\t\"./TypingStart.js\": 33350,\n\t\"./UserUpdate\": 3923,\n\t\"./UserUpdate.js\": 3923,\n\t\"./VoiceStateUpdate\": 72835,\n\t\"./VoiceStateUpdate.js\": 72835,\n\t\"./WebhooksUpdate\": 66445,\n\t\"./WebhooksUpdate.js\": 66445\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 30052;","'use strict';\n\nconst { Events } = require('../../util/Constants');\n\n/**\n * Manages voice connections for the client\n */\nclass ClientVoiceManager {\n  constructor(client) {\n    /**\n     * The client that instantiated this voice manager\n     * @type {Client}\n     * @readonly\n     * @name ClientVoiceManager#client\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * Maps guild ids to voice adapters created for use with @discordjs/voice.\n     * @type {Map<Snowflake, Object>}\n     */\n    this.adapters = new Map();\n\n    client.on(Events.SHARD_DISCONNECT, (_, shardId) => {\n      for (const [guildId, adapter] of this.adapters.entries()) {\n        if (client.guilds.cache.get(guildId)?.shardId === shardId) {\n          adapter.destroy();\n        }\n      }\n    });\n  }\n\n  onVoiceServer(payload) {\n    this.adapters.get(payload.guild_id)?.onVoiceServerUpdate(payload);\n  }\n\n  onVoiceStateUpdate(payload) {\n    if (payload.guild_id && payload.session_id && payload.user_id === this.client.user?.id) {\n      this.adapters.get(payload.guild_id)?.onVoiceStateUpdate(payload);\n    }\n  }\n}\n\nmodule.exports = ClientVoiceManager;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst { Collection } = require('@discordjs/collection');\nconst WebSocketShard = require('./WebSocketShard');\nconst PacketHandlers = require('./handlers');\nconst { Error } = require('../../errors');\nconst { Events, ShardEvents, Status, WSCodes, WSEvents } = require('../../util/Constants');\nconst Util = require('../../util/Util');\n\nconst BeforeReadyWhitelist = [\n  WSEvents.READY,\n  WSEvents.RESUMED,\n  WSEvents.GUILD_CREATE,\n  WSEvents.GUILD_DELETE,\n  WSEvents.GUILD_MEMBERS_CHUNK,\n  WSEvents.GUILD_MEMBER_ADD,\n  WSEvents.GUILD_MEMBER_REMOVE,\n];\n\nconst UNRECOVERABLE_CLOSE_CODES = Object.keys(WSCodes).slice(1).map(Number);\nconst UNRESUMABLE_CLOSE_CODES = [1000, 4006, 4007];\n\n/**\n * The WebSocket manager for this client.\n * <info>This class forwards raw dispatch events,\n * read more about it here {@link https://discord.com/developers/docs/topics/gateway}</info>\n * @extends EventEmitter\n */\nclass WebSocketManager extends EventEmitter {\n  constructor(client) {\n    super();\n\n    /**\n     * The client that instantiated this WebSocketManager\n     * @type {Client}\n     * @readonly\n     * @name WebSocketManager#client\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The gateway this manager uses\n     * @type {?string}\n     */\n    this.gateway = null;\n\n    /**\n     * The amount of shards this manager handles\n     * @private\n     * @type {number}\n     */\n    this.totalShards = this.client.options.shards.length;\n\n    /**\n     * A collection of all shards this manager handles\n     * @type {Collection<number, WebSocketShard>}\n     */\n    this.shards = new Collection();\n\n    /**\n     * An array of shards to be connected or that need to reconnect\n     * @type {Set<WebSocketShard>}\n     * @private\n     * @name WebSocketManager#shardQueue\n     */\n    Object.defineProperty(this, 'shardQueue', { value: new Set(), writable: true });\n\n    /**\n     * An array of queued events before this WebSocketManager became ready\n     * @type {Object[]}\n     * @private\n     * @name WebSocketManager#packetQueue\n     */\n    Object.defineProperty(this, 'packetQueue', { value: [] });\n\n    /**\n     * The current status of this WebSocketManager\n     * @type {Status}\n     */\n    this.status = Status.IDLE;\n\n    /**\n     * If this manager was destroyed. It will prevent shards from reconnecting\n     * @type {boolean}\n     * @private\n     */\n    this.destroyed = false;\n\n    /**\n     * If this manager is currently reconnecting one or multiple shards\n     * @type {boolean}\n     * @private\n     */\n    this.reconnecting = false;\n  }\n\n  /**\n   * The average ping of all WebSocketShards\n   * @type {number}\n   * @readonly\n   */\n  get ping() {\n    const sum = this.shards.reduce((a, b) => a + b.ping, 0);\n    return sum / this.shards.size;\n  }\n\n  /**\n   * Emits a debug message.\n   * @param {string} message The debug message\n   * @param {?WebSocketShard} [shard] The shard that emitted this message, if any\n   * @private\n   */\n  debug(message, shard) {\n    this.client.emit(Events.DEBUG, `[WS => ${shard ? `Shard ${shard.id}` : 'Manager'}] ${message}`);\n  }\n\n  /**\n   * Connects this manager to the gateway.\n   * @private\n   */\n  async connect() {\n    const invalidToken = new Error(WSCodes[4004]);\n    const {\n      url: gatewayURL,\n      shards: recommendedShards,\n      session_start_limit: sessionStartLimit,\n    } = await this.client.api.gateway.bot.get().catch(error => {\n      throw error.httpStatus === 401 ? invalidToken : error;\n    });\n\n    const { total, remaining } = sessionStartLimit;\n\n    this.debug(`Fetched Gateway Information\n    URL: ${gatewayURL}\n    Recommended Shards: ${recommendedShards}`);\n\n    this.debug(`Session Limit Information\n    Total: ${total}\n    Remaining: ${remaining}`);\n\n    this.gateway = `${gatewayURL}/`;\n\n    let { shards } = this.client.options;\n\n    if (shards === 'auto') {\n      this.debug(`Using the recommended shard count provided by Discord: ${recommendedShards}`);\n      this.totalShards = this.client.options.shardCount = recommendedShards;\n      shards = this.client.options.shards = Array.from({ length: recommendedShards }, (_, i) => i);\n    }\n\n    this.totalShards = shards.length;\n    this.debug(`Spawning shards: ${shards.join(', ')}`);\n    this.shardQueue = new Set(shards.map(id => new WebSocketShard(this, id)));\n\n    return this.createShards();\n  }\n\n  /**\n   * Handles the creation of a shard.\n   * @returns {Promise<boolean>}\n   * @private\n   */\n  async createShards() {\n    // If we don't have any shards to handle, return\n    if (!this.shardQueue.size) return false;\n\n    const [shard] = this.shardQueue;\n\n    this.shardQueue.delete(shard);\n\n    if (!shard.eventsAttached) {\n      shard.on(ShardEvents.ALL_READY, unavailableGuilds => {\n        /**\n         * Emitted when a shard turns ready.\n         * @event Client#shardReady\n         * @param {number} id The shard id that turned ready\n         * @param {?Set<Snowflake>} unavailableGuilds Set of unavailable guild ids, if any\n         */\n        this.client.emit(Events.SHARD_READY, shard.id, unavailableGuilds);\n\n        if (!this.shardQueue.size) this.reconnecting = false;\n        this.checkShardsReady();\n      });\n\n      shard.on(ShardEvents.CLOSE, event => {\n        if (event.code === 1000 ? this.destroyed : UNRECOVERABLE_CLOSE_CODES.includes(event.code)) {\n          /**\n           * Emitted when a shard's WebSocket disconnects and will no longer reconnect.\n           * @event Client#shardDisconnect\n           * @param {CloseEvent} event The WebSocket close event\n           * @param {number} id The shard id that disconnected\n           */\n          this.client.emit(Events.SHARD_DISCONNECT, event, shard.id);\n          this.debug(WSCodes[event.code], shard);\n          return;\n        }\n\n        if (UNRESUMABLE_CLOSE_CODES.includes(event.code)) {\n          // These event codes cannot be resumed\n          shard.sessionId = null;\n        }\n\n        /**\n         * Emitted when a shard is attempting to reconnect or re-identify.\n         * @event Client#shardReconnecting\n         * @param {number} id The shard id that is attempting to reconnect\n         */\n        this.client.emit(Events.SHARD_RECONNECTING, shard.id);\n\n        this.shardQueue.add(shard);\n\n        if (shard.sessionId) {\n          this.debug(`Session id is present, attempting an immediate reconnect...`, shard);\n          this.reconnect();\n        } else {\n          shard.destroy({ reset: true, emit: false, log: false });\n          this.reconnect();\n        }\n      });\n\n      shard.on(ShardEvents.INVALID_SESSION, () => {\n        this.client.emit(Events.SHARD_RECONNECTING, shard.id);\n      });\n\n      shard.on(ShardEvents.DESTROYED, () => {\n        this.debug('Shard was destroyed but no WebSocket connection was present! Reconnecting...', shard);\n\n        this.client.emit(Events.SHARD_RECONNECTING, shard.id);\n\n        this.shardQueue.add(shard);\n        this.reconnect();\n      });\n\n      shard.eventsAttached = true;\n    }\n\n    this.shards.set(shard.id, shard);\n\n    try {\n      await shard.connect();\n    } catch (error) {\n      if (error?.code && UNRECOVERABLE_CLOSE_CODES.includes(error.code)) {\n        throw new Error(WSCodes[error.code]);\n        // Undefined if session is invalid, error event for regular closes\n      } else if (!error || error.code) {\n        this.debug('Failed to connect to the gateway, requeueing...', shard);\n        this.shardQueue.add(shard);\n      } else {\n        throw error;\n      }\n    }\n    // If we have more shards, add a 5s delay\n    if (this.shardQueue.size) {\n      this.debug(`Shard Queue Size: ${this.shardQueue.size}; continuing in 5 seconds...`);\n      await Util.delayFor(5000);\n      return this.createShards();\n    }\n\n    return true;\n  }\n\n  /**\n   * Handles reconnects for this manager.\n   * @private\n   * @returns {Promise<boolean>}\n   */\n  async reconnect() {\n    if (this.reconnecting || this.status !== Status.READY) return false;\n    this.reconnecting = true;\n    try {\n      await this.createShards();\n    } catch (error) {\n      this.debug(`Couldn't reconnect or fetch information about the gateway. ${error}`);\n      if (error.httpStatus !== 401) {\n        this.debug(`Possible network error occurred. Retrying in 5s...`);\n        await Util.delayFor(5000);\n        this.reconnecting = false;\n        return this.reconnect();\n      }\n      // If we get an error at this point, it means we cannot reconnect anymore\n      if (this.client.listenerCount(Events.INVALIDATED)) {\n        /**\n         * Emitted when the client's session becomes invalidated.\n         * You are expected to handle closing the process gracefully and preventing a boot loop\n         * if you are listening to this event.\n         * @event Client#invalidated\n         */\n        this.client.emit(Events.INVALIDATED);\n        // Destroy just the shards. This means you have to handle the cleanup yourself\n        this.destroy();\n      } else {\n        this.client.destroy();\n      }\n    } finally {\n      this.reconnecting = false;\n    }\n    return true;\n  }\n\n  /**\n   * Broadcasts a packet to every shard this manager handles.\n   * @param {Object} packet The packet to send\n   * @private\n   */\n  broadcast(packet) {\n    for (const shard of this.shards.values()) shard.send(packet);\n  }\n\n  /**\n   * Destroys this manager and all its shards.\n   * @private\n   */\n  destroy() {\n    if (this.destroyed) return;\n    this.debug(`Manager was destroyed. Called by:\\n${new Error('MANAGER_DESTROYED').stack}`);\n    this.destroyed = true;\n    this.shardQueue.clear();\n    for (const shard of this.shards.values()) shard.destroy({ closeCode: 1000, reset: true, emit: false, log: false });\n  }\n\n  /**\n   * Processes a packet and queues it if this WebSocketManager is not ready.\n   * @param {Object} [packet] The packet to be handled\n   * @param {WebSocketShard} [shard] The shard that will handle this packet\n   * @returns {boolean}\n   * @private\n   */\n  handlePacket(packet, shard) {\n    if (packet && this.status !== Status.READY) {\n      if (!BeforeReadyWhitelist.includes(packet.t)) {\n        this.packetQueue.push({ packet, shard });\n        return false;\n      }\n    }\n\n    if (this.packetQueue.length) {\n      const item = this.packetQueue.shift();\n      setImmediate(() => {\n        this.handlePacket(item.packet, item.shard);\n      }).unref();\n    }\n\n    if (packet && PacketHandlers[packet.t]) {\n      PacketHandlers[packet.t](this.client, packet, shard);\n    }\n\n    return true;\n  }\n\n  /**\n   * Checks whether the client is ready to be marked as ready.\n   * @private\n   */\n  checkShardsReady() {\n    if (this.status === Status.READY) return;\n    if (this.shards.size !== this.totalShards || this.shards.some(s => s.status !== Status.READY)) {\n      return;\n    }\n\n    this.triggerClientReady();\n  }\n\n  /**\n   * Causes the client to be marked as ready and emits the ready event.\n   * @private\n   */\n  triggerClientReady() {\n    this.status = Status.READY;\n\n    this.client.readyAt = new Date();\n\n    /**\n     * Emitted when the client becomes ready to start working.\n     * @event Client#ready\n     * @param {Client} client The client\n     */\n    this.client.emit(Events.CLIENT_READY, this.client);\n\n    this.handlePacket();\n  }\n}\n\nmodule.exports = WebSocketManager;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst WebSocket = require('../../WebSocket');\nconst { Status, Events, ShardEvents, Opcodes, WSEvents } = require('../../util/Constants');\nconst Intents = require('../../util/Intents');\n\nconst STATUS_KEYS = Object.keys(Status);\nconst CONNECTION_STATE = Object.keys(WebSocket.WebSocket);\n\nlet zlib;\n\ntry {\n  zlib = require('zlib-sync');\n} catch {} // eslint-disable-line no-empty\n\n/**\n * Represents a Shard's WebSocket connection\n */\nclass WebSocketShard extends EventEmitter {\n  constructor(manager, id) {\n    super();\n\n    /**\n     * The WebSocketManager of the shard\n     * @type {WebSocketManager}\n     */\n    this.manager = manager;\n\n    /**\n     * The shard's id\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * The current status of the shard\n     * @type {Status}\n     */\n    this.status = Status.IDLE;\n\n    /**\n     * The current sequence of the shard\n     * @type {number}\n     * @private\n     */\n    this.sequence = -1;\n\n    /**\n     * The sequence of the shard after close\n     * @type {number}\n     * @private\n     */\n    this.closeSequence = 0;\n\n    /**\n     * The current session id of the shard\n     * @type {?string}\n     * @private\n     */\n    this.sessionId = null;\n\n    /**\n     * The previous heartbeat ping of the shard\n     * @type {number}\n     */\n    this.ping = -1;\n\n    /**\n     * The last time a ping was sent (a timestamp)\n     * @type {number}\n     * @private\n     */\n    this.lastPingTimestamp = -1;\n\n    /**\n     * If we received a heartbeat ack back. Used to identify zombie connections\n     * @type {boolean}\n     * @private\n     */\n    this.lastHeartbeatAcked = true;\n\n    /**\n     * Contains the rate limit queue and metadata\n     * @name WebSocketShard#ratelimit\n     * @type {Object}\n     * @private\n     */\n    Object.defineProperty(this, 'ratelimit', {\n      value: {\n        queue: [],\n        total: 120,\n        remaining: 120,\n        time: 60e3,\n        timer: null,\n      },\n    });\n\n    /**\n     * The WebSocket connection for the current shard\n     * @name WebSocketShard#connection\n     * @type {?WebSocket}\n     * @private\n     */\n    Object.defineProperty(this, 'connection', { value: null, writable: true });\n\n    /**\n     * @external Inflate\n     * @see {@link https://www.npmjs.com/package/zlib-sync}\n     */\n\n    /**\n     * The compression to use\n     * @name WebSocketShard#inflate\n     * @type {?Inflate}\n     * @private\n     */\n    Object.defineProperty(this, 'inflate', { value: null, writable: true });\n\n    /**\n     * The HELLO timeout\n     * @name WebSocketShard#helloTimeout\n     * @type {?NodeJS.Timeout}\n     * @private\n     */\n    Object.defineProperty(this, 'helloTimeout', { value: null, writable: true });\n\n    /**\n     * If the manager attached its event handlers on the shard\n     * @name WebSocketShard#eventsAttached\n     * @type {boolean}\n     * @private\n     */\n    Object.defineProperty(this, 'eventsAttached', { value: false, writable: true });\n\n    /**\n     * A set of guild ids this shard expects to receive\n     * @name WebSocketShard#expectedGuilds\n     * @type {?Set<string>}\n     * @private\n     */\n    Object.defineProperty(this, 'expectedGuilds', { value: null, writable: true });\n\n    /**\n     * The ready timeout\n     * @name WebSocketShard#readyTimeout\n     * @type {?NodeJS.Timeout}\n     * @private\n     */\n    Object.defineProperty(this, 'readyTimeout', { value: null, writable: true });\n\n    /**\n     * Time when the WebSocket connection was opened\n     * @name WebSocketShard#connectedAt\n     * @type {number}\n     * @private\n     */\n    Object.defineProperty(this, 'connectedAt', { value: 0, writable: true });\n  }\n\n  /**\n   * Emits a debug event.\n   * @param {string} message The debug message\n   * @private\n   */\n  debug(message) {\n    this.manager.debug(message, this);\n  }\n\n  /**\n   * Connects the shard to the gateway.\n   * @private\n   * @returns {Promise<void>} A promise that will resolve if the shard turns ready successfully,\n   * or reject if we couldn't connect\n   */\n  connect() {\n    const { gateway, client } = this.manager;\n\n    if (this.connection?.readyState === WebSocket.OPEN && this.status === Status.READY) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n      const cleanup = () => {\n        this.removeListener(ShardEvents.CLOSE, onClose);\n        this.removeListener(ShardEvents.READY, onReady);\n        this.removeListener(ShardEvents.RESUMED, onResumed);\n        this.removeListener(ShardEvents.INVALID_SESSION, onInvalidOrDestroyed);\n        this.removeListener(ShardEvents.DESTROYED, onInvalidOrDestroyed);\n      };\n\n      const onReady = () => {\n        cleanup();\n        resolve();\n      };\n\n      const onResumed = () => {\n        cleanup();\n        resolve();\n      };\n\n      const onClose = event => {\n        cleanup();\n        reject(event);\n      };\n\n      const onInvalidOrDestroyed = () => {\n        cleanup();\n        // eslint-disable-next-line prefer-promise-reject-errors\n        reject();\n      };\n\n      this.once(ShardEvents.READY, onReady);\n      this.once(ShardEvents.RESUMED, onResumed);\n      this.once(ShardEvents.CLOSE, onClose);\n      this.once(ShardEvents.INVALID_SESSION, onInvalidOrDestroyed);\n      this.once(ShardEvents.DESTROYED, onInvalidOrDestroyed);\n\n      if (this.connection?.readyState === WebSocket.OPEN) {\n        this.debug('An open connection was found, attempting an immediate identify.');\n        this.identify();\n        return;\n      }\n\n      if (this.connection) {\n        this.debug(`A connection object was found. Cleaning up before continuing.\n    State: ${CONNECTION_STATE[this.connection.readyState]}`);\n        this.destroy({ emit: false });\n      }\n\n      const wsQuery = { v: client.options.ws.version };\n\n      if (zlib) {\n        this.inflate = new zlib.Inflate({\n          chunkSize: 65535,\n          flush: zlib.Z_SYNC_FLUSH,\n          to: WebSocket.encoding === 'json' ? 'string' : '',\n        });\n        wsQuery.compress = 'zlib-stream';\n      }\n\n      this.debug(\n        `[CONNECT]\n    Gateway    : ${gateway}\n    Version    : ${client.options.ws.version}\n    Encoding   : ${WebSocket.encoding}\n    Compression: ${zlib ? 'zlib-stream' : 'none'}`,\n      );\n\n      this.status = this.status === Status.DISCONNECTED ? Status.RECONNECTING : Status.CONNECTING;\n      this.setHelloTimeout();\n\n      this.connectedAt = Date.now();\n\n      const ws = (this.connection = WebSocket.create(gateway, wsQuery));\n      ws.onopen = this.onOpen.bind(this);\n      ws.onmessage = this.onMessage.bind(this);\n      ws.onerror = this.onError.bind(this);\n      ws.onclose = this.onClose.bind(this);\n    });\n  }\n\n  /**\n   * Called whenever a connection is opened to the gateway.\n   * @private\n   */\n  onOpen() {\n    this.debug(`[CONNECTED] Took ${Date.now() - this.connectedAt}ms`);\n    this.status = Status.NEARLY;\n  }\n\n  /**\n   * Called whenever a message is received.\n   * @param {MessageEvent} event Event received\n   * @private\n   */\n  onMessage({ data }) {\n    let raw;\n    if (data instanceof ArrayBuffer) data = new Uint8Array(data);\n    if (zlib) {\n      const l = data.length;\n      const flush =\n        l >= 4 && data[l - 4] === 0x00 && data[l - 3] === 0x00 && data[l - 2] === 0xff && data[l - 1] === 0xff;\n\n      this.inflate.push(data, flush && zlib.Z_SYNC_FLUSH);\n      if (!flush) return;\n      raw = this.inflate.result;\n    } else {\n      raw = data;\n    }\n    let packet;\n    try {\n      packet = WebSocket.unpack(raw);\n    } catch (err) {\n      this.manager.client.emit(Events.SHARD_ERROR, err, this.id);\n      return;\n    }\n    this.manager.client.emit(Events.RAW, packet, this.id);\n    if (packet.op === Opcodes.DISPATCH) this.manager.emit(packet.t, packet.d, this.id);\n    this.onPacket(packet);\n  }\n\n  /**\n   * Called whenever an error occurs with the WebSocket.\n   * @param {ErrorEvent} event The error that occurred\n   * @private\n   */\n  onError(event) {\n    const error = event?.error ?? event;\n    if (!error) return;\n\n    /**\n     * Emitted whenever a shard's WebSocket encounters a connection error.\n     * @event Client#shardError\n     * @param {Error} error The encountered error\n     * @param {number} shardId The shard that encountered this error\n     */\n    this.manager.client.emit(Events.SHARD_ERROR, error, this.id);\n  }\n\n  /**\n   * @external CloseEvent\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n   */\n\n  /**\n   * @external ErrorEvent\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent}\n   */\n\n  /**\n   * @external MessageEvent\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent}\n   */\n\n  /**\n   * Called whenever a connection to the gateway is closed.\n   * @param {CloseEvent} event Close event that was received\n   * @private\n   */\n  onClose(event) {\n    if (this.sequence !== -1) this.closeSequence = this.sequence;\n    this.sequence = -1;\n\n    this.debug(`[CLOSE]\n    Event Code: ${event.code}\n    Clean     : ${event.wasClean}\n    Reason    : ${event.reason ?? 'No reason received'}`);\n\n    this.setHeartbeatTimer(-1);\n    this.setHelloTimeout(-1);\n    // If we still have a connection object, clean up its listeners\n    if (this.connection) this._cleanupConnection();\n\n    this.status = Status.DISCONNECTED;\n\n    /**\n     * Emitted when a shard's WebSocket closes.\n     * @private\n     * @event WebSocketShard#close\n     * @param {CloseEvent} event The received event\n     */\n    this.emit(ShardEvents.CLOSE, event);\n  }\n\n  /**\n   * Called whenever a packet is received.\n   * @param {Object} packet The received packet\n   * @private\n   */\n  onPacket(packet) {\n    if (!packet) {\n      this.debug(`Received broken packet: '${packet}'.`);\n      return;\n    }\n\n    switch (packet.t) {\n      case WSEvents.READY:\n        /**\n         * Emitted when the shard receives the READY payload and is now waiting for guilds\n         * @event WebSocketShard#ready\n         */\n        this.emit(ShardEvents.READY);\n\n        this.sessionId = packet.d.session_id;\n        this.expectedGuilds = new Set(packet.d.guilds.map(d => d.id));\n        this.status = Status.WAITING_FOR_GUILDS;\n        this.debug(`[READY] Session ${this.sessionId}.`);\n        this.lastHeartbeatAcked = true;\n        this.sendHeartbeat('ReadyHeartbeat');\n        break;\n      case WSEvents.RESUMED: {\n        /**\n         * Emitted when the shard resumes successfully\n         * @event WebSocketShard#resumed\n         */\n        this.emit(ShardEvents.RESUMED);\n\n        this.status = Status.READY;\n        const replayed = packet.s - this.closeSequence;\n        this.debug(`[RESUMED] Session ${this.sessionId} | Replayed ${replayed} events.`);\n        this.lastHeartbeatAcked = true;\n        this.sendHeartbeat('ResumeHeartbeat');\n        break;\n      }\n    }\n\n    if (packet.s > this.sequence) this.sequence = packet.s;\n\n    switch (packet.op) {\n      case Opcodes.HELLO:\n        this.setHelloTimeout(-1);\n        this.setHeartbeatTimer(packet.d.heartbeat_interval);\n        this.identify();\n        break;\n      case Opcodes.RECONNECT:\n        this.debug('[RECONNECT] Discord asked us to reconnect');\n        this.destroy({ closeCode: 4000 });\n        break;\n      case Opcodes.INVALID_SESSION:\n        this.debug(`[INVALID SESSION] Resumable: ${packet.d}.`);\n        // If we can resume the session, do so immediately\n        if (packet.d) {\n          this.identifyResume();\n          return;\n        }\n        // Reset the sequence\n        this.sequence = -1;\n        // Reset the session id as it's invalid\n        this.sessionId = null;\n        // Set the status to reconnecting\n        this.status = Status.RECONNECTING;\n        // Finally, emit the INVALID_SESSION event\n        this.emit(ShardEvents.INVALID_SESSION);\n        break;\n      case Opcodes.HEARTBEAT_ACK:\n        this.ackHeartbeat();\n        break;\n      case Opcodes.HEARTBEAT:\n        this.sendHeartbeat('HeartbeatRequest', true);\n        break;\n      default:\n        this.manager.handlePacket(packet, this);\n        if (this.status === Status.WAITING_FOR_GUILDS && packet.t === WSEvents.GUILD_CREATE) {\n          this.expectedGuilds.delete(packet.d.id);\n          this.checkReady();\n        }\n    }\n  }\n\n  /**\n   * Checks if the shard can be marked as ready\n   * @private\n   */\n  checkReady() {\n    // Step 0. Clear the ready timeout, if it exists\n    if (this.readyTimeout) {\n      clearTimeout(this.readyTimeout);\n      this.readyTimeout = null;\n    }\n    // Step 1. If we don't have any other guilds pending, we are ready\n    if (!this.expectedGuilds.size) {\n      this.debug('Shard received all its guilds. Marking as fully ready.');\n      this.status = Status.READY;\n\n      /**\n       * Emitted when the shard is fully ready.\n       * This event is emitted if:\n       * * all guilds were received by this shard\n       * * the ready timeout expired, and some guilds are unavailable\n       * @event WebSocketShard#allReady\n       * @param {?Set<string>} unavailableGuilds Set of unavailable guilds, if any\n       */\n      this.emit(ShardEvents.ALL_READY);\n      return;\n    }\n    const hasGuildsIntent = new Intents(this.manager.client.options.intents).has(Intents.FLAGS.GUILDS);\n    // Step 2. Create a 15s timeout that will mark the shard as ready if there are still unavailable guilds\n    this.readyTimeout = setTimeout(\n      () => {\n        this.debug(\n          `Shard ${hasGuildsIntent ? 'did' : 'will'} not receive any more guild packets` +\n            `${hasGuildsIntent ? ' in 15 seconds' : ''}.\\n   Unavailable guild count: ${this.expectedGuilds.size}`,\n        );\n\n        this.readyTimeout = null;\n\n        this.status = Status.READY;\n\n        this.emit(ShardEvents.ALL_READY, this.expectedGuilds);\n      },\n      hasGuildsIntent ? 15000 : 0,\n    ).unref();\n  }\n\n  /**\n   * Sets the HELLO packet timeout.\n   * @param {number} [time] If set to -1, it will clear the hello timeout timeout\n   * @private\n   */\n  setHelloTimeout(time) {\n    if (time === -1) {\n      if (this.helloTimeout) {\n        this.debug('Clearing the HELLO timeout.');\n        clearTimeout(this.helloTimeout);\n        this.helloTimeout = null;\n      }\n      return;\n    }\n    this.debug('Setting a HELLO timeout for 20s.');\n    this.helloTimeout = setTimeout(() => {\n      this.debug('Did not receive HELLO in time. Destroying and connecting again.');\n      this.destroy({ reset: true, closeCode: 4009 });\n    }, 20000).unref();\n  }\n\n  /**\n   * Sets the heartbeat timer for this shard.\n   * @param {number} time If -1, clears the interval, any other number sets an interval\n   * @private\n   */\n  setHeartbeatTimer(time) {\n    if (time === -1) {\n      if (this.heartbeatInterval) {\n        this.debug('Clearing the heartbeat interval.');\n        clearInterval(this.heartbeatInterval);\n        this.heartbeatInterval = null;\n      }\n      return;\n    }\n    this.debug(`Setting a heartbeat interval for ${time}ms.`);\n    // Sanity checks\n    if (this.heartbeatInterval) clearInterval(this.heartbeatInterval);\n    this.heartbeatInterval = setInterval(() => this.sendHeartbeat(), time).unref();\n  }\n\n  /**\n   * Sends a heartbeat to the WebSocket.\n   * If this shard didn't receive a heartbeat last time, it will destroy it and reconnect\n   * @param {string} [tag='HeartbeatTimer'] What caused this heartbeat to be sent\n   * @param {boolean} [ignoreHeartbeatAck] If we should send the heartbeat forcefully.\n   * @private\n   */\n  sendHeartbeat(\n    tag = 'HeartbeatTimer',\n    ignoreHeartbeatAck = [Status.WAITING_FOR_GUILDS, Status.IDENTIFYING, Status.RESUMING].includes(this.status),\n  ) {\n    if (ignoreHeartbeatAck && !this.lastHeartbeatAcked) {\n      this.debug(`[${tag}] Didn't process heartbeat ack yet but we are still connected. Sending one now.`);\n    } else if (!this.lastHeartbeatAcked) {\n      this.debug(\n        `[${tag}] Didn't receive a heartbeat ack last time, assuming zombie connection. Destroying and reconnecting.\n    Status          : ${STATUS_KEYS[this.status]}\n    Sequence        : ${this.sequence}\n    Connection State: ${this.connection ? CONNECTION_STATE[this.connection.readyState] : 'No Connection??'}`,\n      );\n\n      this.destroy({ closeCode: 4009, reset: true });\n      return;\n    }\n\n    this.debug(`[${tag}] Sending a heartbeat.`);\n    this.lastHeartbeatAcked = false;\n    this.lastPingTimestamp = Date.now();\n    this.send({ op: Opcodes.HEARTBEAT, d: this.sequence }, true);\n  }\n\n  /**\n   * Acknowledges a heartbeat.\n   * @private\n   */\n  ackHeartbeat() {\n    this.lastHeartbeatAcked = true;\n    const latency = Date.now() - this.lastPingTimestamp;\n    this.debug(`Heartbeat acknowledged, latency of ${latency}ms.`);\n    this.ping = latency;\n  }\n\n  /**\n   * Identifies the client on the connection.\n   * @private\n   * @returns {void}\n   */\n  identify() {\n    return this.sessionId ? this.identifyResume() : this.identifyNew();\n  }\n\n  /**\n   * Identifies as a new connection on the gateway.\n   * @private\n   */\n  identifyNew() {\n    const { client } = this.manager;\n    if (!client.token) {\n      this.debug('[IDENTIFY] No token available to identify a new session.');\n      return;\n    }\n\n    this.status = Status.IDENTIFYING;\n\n    // Clone the identify payload and assign the token and shard info\n    const d = {\n      ...client.options.ws,\n      intents: Intents.resolve(client.options.intents),\n      token: client.token,\n      shard: [this.id, Number(client.options.shardCount)],\n    };\n\n    this.debug(`[IDENTIFY] Shard ${this.id}/${client.options.shardCount} with intents: ${d.intents}`);\n    this.send({ op: Opcodes.IDENTIFY, d }, true);\n  }\n\n  /**\n   * Resumes a session on the gateway.\n   * @private\n   */\n  identifyResume() {\n    if (!this.sessionId) {\n      this.debug('[RESUME] No session id was present; identifying as a new session.');\n      this.identifyNew();\n      return;\n    }\n\n    this.status = Status.RESUMING;\n\n    this.debug(`[RESUME] Session ${this.sessionId}, sequence ${this.closeSequence}`);\n\n    const d = {\n      token: this.manager.client.token,\n      session_id: this.sessionId,\n      seq: this.closeSequence,\n    };\n\n    this.send({ op: Opcodes.RESUME, d }, true);\n  }\n\n  /**\n   * Adds a packet to the queue to be sent to the gateway.\n   * <warn>If you use this method, make sure you understand that you need to provide\n   * a full [Payload](https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-commands).\n   * Do not use this method if you don't know what you're doing.</warn>\n   * @param {Object} data The full packet to send\n   * @param {boolean} [important=false] If this packet should be added first in queue\n   */\n  send(data, important = false) {\n    this.ratelimit.queue[important ? 'unshift' : 'push'](data);\n    this.processQueue();\n  }\n\n  /**\n   * Sends data, bypassing the queue.\n   * @param {Object} data Packet to send\n   * @returns {void}\n   * @private\n   */\n  _send(data) {\n    if (this.connection?.readyState !== WebSocket.OPEN) {\n      this.debug(`Tried to send packet '${JSON.stringify(data)}' but no WebSocket is available!`);\n      this.destroy({ closeCode: 4000 });\n      return;\n    }\n\n    this.connection.send(WebSocket.pack(data), err => {\n      if (err) this.manager.client.emit(Events.SHARD_ERROR, err, this.id);\n    });\n  }\n\n  /**\n   * Processes the current WebSocket queue.\n   * @returns {void}\n   * @private\n   */\n  processQueue() {\n    if (this.ratelimit.remaining === 0) return;\n    if (this.ratelimit.queue.length === 0) return;\n    if (this.ratelimit.remaining === this.ratelimit.total) {\n      this.ratelimit.timer = setTimeout(() => {\n        this.ratelimit.remaining = this.ratelimit.total;\n        this.processQueue();\n      }, this.ratelimit.time).unref();\n    }\n    while (this.ratelimit.remaining > 0) {\n      const item = this.ratelimit.queue.shift();\n      if (!item) return;\n      this._send(item);\n      this.ratelimit.remaining--;\n    }\n  }\n\n  /**\n   * Destroys this shard and closes its WebSocket connection.\n   * @param {Object} [options={ closeCode: 1000, reset: false, emit: true, log: true }] Options for destroying the shard\n   * @private\n   */\n  destroy({ closeCode = 1000, reset = false, emit = true, log = true } = {}) {\n    if (log) {\n      this.debug(`[DESTROY]\n    Close Code    : ${closeCode}\n    Reset         : ${reset}\n    Emit DESTROYED: ${emit}`);\n    }\n\n    // Step 0: Remove all timers\n    this.setHeartbeatTimer(-1);\n    this.setHelloTimeout(-1);\n\n    // Step 1: Close the WebSocket connection, if any, otherwise, emit DESTROYED\n    if (this.connection) {\n      // If the connection is currently opened, we will (hopefully) receive close\n      if (this.connection.readyState === WebSocket.OPEN) {\n        this.connection.close(closeCode);\n      } else {\n        // Connection is not OPEN\n        this.debug(`WS State: ${CONNECTION_STATE[this.connection.readyState]}`);\n        // Remove listeners from the connection\n        this._cleanupConnection();\n        // Attempt to close the connection just in case\n        try {\n          this.connection.close(closeCode);\n        } catch {\n          // No-op\n        }\n        // Emit the destroyed event if needed\n        if (emit) this._emitDestroyed();\n      }\n    } else if (emit) {\n      // We requested a destroy, but we had no connection. Emit destroyed\n      this._emitDestroyed();\n    }\n\n    // Step 2: Null the connection object\n    this.connection = null;\n\n    // Step 3: Set the shard status to DISCONNECTED\n    this.status = Status.DISCONNECTED;\n\n    // Step 4: Cache the old sequence (use to attempt a resume)\n    if (this.sequence !== -1) this.closeSequence = this.sequence;\n\n    // Step 5: Reset the sequence and session id if requested\n    if (reset) {\n      this.sequence = -1;\n      this.sessionId = null;\n    }\n\n    // Step 6: reset the ratelimit data\n    this.ratelimit.remaining = this.ratelimit.total;\n    this.ratelimit.queue.length = 0;\n    if (this.ratelimit.timer) {\n      clearTimeout(this.ratelimit.timer);\n      this.ratelimit.timer = null;\n    }\n  }\n\n  /**\n   * Cleans up the WebSocket connection listeners.\n   * @private\n   */\n  _cleanupConnection() {\n    this.connection.onopen = this.connection.onclose = this.connection.onerror = this.connection.onmessage = null;\n  }\n\n  /**\n   * Emits the DESTROYED event on the shard\n   * @private\n   */\n  _emitDestroyed() {\n    /**\n     * Emitted when a shard is destroyed, but no WebSocket connection was present.\n     * @private\n     * @event WebSocketShard#destroyed\n     */\n    this.emit(ShardEvents.DESTROYED);\n  }\n}\n\nmodule.exports = WebSocketShard;\n","'use strict';\n\nconst { Events } = require('../../../util/Constants');\n\nmodule.exports = (client, { d: data }) => {\n  const commandManager = data.guild_id ? client.guilds.cache.get(data.guild_id)?.commands : client.application.commands;\n  if (!commandManager) return;\n\n  const command = commandManager._add(data, data.application_id === client.application.id);\n\n  /**\n   * Emitted when a guild application command is created.\n   * @event Client#applicationCommandCreate\n   * @param {ApplicationCommand} command The command which was created\n   */\n  client.emit(Events.APPLICATION_COMMAND_CREATE, command);\n};\n","'use strict';\n\nconst { Events } = require('../../../util/Constants');\n\nmodule.exports = (client, { d: data }) => {\n  const commandManager = data.guild_id ? client.guilds.cache.get(data.guild_id)?.commands : client.application.commands;\n  if (!commandManager) return;\n\n  const isOwn = data.application_id === client.application.id;\n  const command = commandManager._add(data, isOwn);\n  if (isOwn) commandManager.cache.delete(data.id);\n\n  /**\n   * Emitted when a guild application command is deleted.\n   * @event Client#applicationCommandDelete\n   * @param {ApplicationCommand} command The command which was deleted\n   */\n  client.emit(Events.APPLICATION_COMMAND_DELETE, command);\n};\n","'use strict';\n\nconst { Events } = require('../../../util/Constants');\n\nmodule.exports = (client, { d: data }) => {\n  const commandManager = data.guild_id ? client.guilds.cache.get(data.guild_id)?.commands : client.application.commands;\n  if (!commandManager) return;\n\n  const oldCommand = commandManager.cache.get(data.id)?._clone() ?? null;\n  const newCommand = commandManager._add(data, data.application_id === client.application.id);\n\n  /**\n   * Emitted when a guild application command is updated.\n   * @event Client#applicationCommandUpdate\n   * @param {?ApplicationCommand} oldCommand The command before the update\n   * @param {ApplicationCommand} newCommand The command after the update\n   */\n  client.emit(Events.APPLICATION_COMMAND_UPDATE, oldCommand, newCommand);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ChannelCreate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ChannelDelete.handle(packet.d);\n};\n","'use strict';\n\nconst { Events } = require('../../../util/Constants');\n\nmodule.exports = (client, { d: data }) => {\n  const channel = client.channels.cache.get(data.channel_id);\n  const time = new Date(data.last_pin_timestamp);\n\n  if (channel && !Number.isNaN(time.getTime())) {\n    // Discord sends null for last_pin_timestamp if the last pinned message was removed\n    channel.lastPinTimestamp = time.getTime() ?? null;\n\n    /**\n     * Emitted whenever the pins of a channel are updated. Due to the nature of the WebSocket event,\n     * not much information can be provided easily here - you need to manually check the pins yourself.\n     * @event Client#channelPinsUpdate\n     * @param {TextBasedChannels} channel The channel that the pins update occurred in\n     * @param {Date} time The time of the pins update\n     */\n    client.emit(Events.CHANNEL_PINS_UPDATE, channel, time);\n  }\n};\n","'use strict';\n\nconst { Events } = require('../../../util/Constants');\n\nmodule.exports = (client, packet) => {\n  const { old, updated } = client.actions.ChannelUpdate.handle(packet.d);\n  if (old && updated) {\n    /**\n     * Emitted whenever a channel is updated - e.g. name change, topic change, channel type change.\n     * @event Client#channelUpdate\n     * @param {DMChannel|GuildChannel} oldChannel The channel before the update\n     * @param {DMChannel|GuildChannel} newChannel The channel after the update\n     */\n    client.emit(Events.CHANNEL_UPDATE, old, updated);\n  }\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildBanAdd.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildBanRemove.handle(packet.d);\n};\n","'use strict';\n\nconst { Events, Status } = require('../../../util/Constants');\n\nmodule.exports = (client, { d: data }, shard) => {\n  let guild = client.guilds.cache.get(data.id);\n  if (guild) {\n    if (!guild.available && !data.unavailable) {\n      // A newly available guild\n      guild._patch(data);\n    }\n  } else {\n    // A new guild\n    data.shardId = shard.id;\n    guild = client.guilds._add(data);\n    if (client.ws.status === Status.READY) {\n      /**\n       * Emitted whenever the client joins a guild.\n       * @event Client#guildCreate\n       * @param {Guild} guild The created guild\n       */\n      client.emit(Events.GUILD_CREATE, guild);\n    }\n  }\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildDelete.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildEmojisUpdate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildIntegrationsUpdate.handle(packet.d);\n};\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { Events } = require('../../../util/Constants');\n\nmodule.exports = (client, { d: data }) => {\n  const guild = client.guilds.cache.get(data.guild_id);\n  if (!guild) return;\n  const members = new Collection();\n\n  for (const member of data.members) members.set(member.user.id, guild.members._add(member));\n  if (data.presences) {\n    for (const presence of data.presences) guild.presences._add(Object.assign(presence, { guild }));\n  }\n\n  /**\n   * Represents the properties of a guild members chunk\n   * @typedef {Object} GuildMembersChunk\n   * @property {number} index Index of the received chunk\n   * @property {number} count Number of chunks the client should receive\n   * @property {?string} nonce Nonce for this chunk\n   */\n\n  /**\n   * Emitted whenever a chunk of guild members is received (all members come from the same guild).\n   * @event Client#guildMembersChunk\n   * @param {Collection<Snowflake, GuildMember>} members The members in the chunk\n   * @param {Guild} guild The guild related to the member chunk\n   * @param {GuildMembersChunk} chunk Properties of the received chunk\n   */\n  client.emit(Events.GUILD_MEMBERS_CHUNK, members, guild, {\n    count: data.chunk_count,\n    index: data.chunk_index,\n    nonce: data.nonce,\n  });\n};\n","'use strict';\n\nconst { Events, Status } = require('../../../util/Constants');\n\nmodule.exports = (client, { d: data }, shard) => {\n  const guild = client.guilds.cache.get(data.guild_id);\n  if (guild) {\n    guild.memberCount++;\n    const member = guild.members._add(data);\n    if (shard.status === Status.READY) {\n      /**\n       * Emitted whenever a user joins a guild.\n       * @event Client#guildMemberAdd\n       * @param {GuildMember} member The member that has joined a guild\n       */\n      client.emit(Events.GUILD_MEMBER_ADD, member);\n    }\n  }\n};\n","'use strict';\n\nmodule.exports = (client, packet, shard) => {\n  client.actions.GuildMemberRemove.handle(packet.d, shard);\n};\n","'use strict';\n\nmodule.exports = (client, packet, shard) => {\n  client.actions.GuildMemberUpdate.handle(packet.d, shard);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildRoleCreate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildRoleDelete.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildRoleUpdate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildStickersUpdate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildUpdate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.InteractionCreate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.InviteCreate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.InviteDelete.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageCreate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageDelete.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageDeleteBulk.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionAdd.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionRemove.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionRemoveAll.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionRemoveEmoji.handle(packet.d);\n};\n","'use strict';\n\nconst { Events } = require('../../../util/Constants');\n\nmodule.exports = (client, packet) => {\n  const { old, updated } = client.actions.MessageUpdate.handle(packet.d);\n  if (old && updated) {\n    /**\n     * Emitted whenever a message is updated - e.g. embed or content change.\n     * @event Client#messageUpdate\n     * @param {Message} oldMessage The message before the update\n     * @param {Message} newMessage The message after the update\n     */\n    client.emit(Events.MESSAGE_UPDATE, old, updated);\n  }\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.PresenceUpdate.handle(packet.d);\n};\n","'use strict';\n\nconst ClientApplication = require('../../../structures/ClientApplication');\nlet ClientUser;\n\nmodule.exports = (client, { d: data }, shard) => {\n  if (client.user) {\n    client.user._patch(data.user);\n  } else {\n    if (!ClientUser) ClientUser = require('../../../structures/ClientUser');\n    client.user = new ClientUser(client, data.user);\n    client.users.cache.set(client.user.id, client.user);\n  }\n\n  for (const guild of data.guilds) {\n    guild.shardId = shard.id;\n    client.guilds._add(guild);\n  }\n\n  if (client.application) {\n    client.application._patch(data.application);\n  } else {\n    client.application = new ClientApplication(client, data.application);\n  }\n\n  shard.checkReady();\n};\n","'use strict';\n\nconst { Events } = require('../../../util/Constants');\n\nmodule.exports = (client, packet, shard) => {\n  const replayed = shard.sequence - shard.closeSequence;\n  /**\n   * Emitted when a shard resumes successfully.\n   * @event Client#shardResume\n   * @param {number} id The shard id that resumed\n   * @param {number} replayedEvents The amount of replayed events\n   */\n  client.emit(Events.SHARD_RESUME, shard.id, replayed);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.StageInstanceCreate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.StageInstanceDelete.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.StageInstanceUpdate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadCreate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadDelete.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadListSync.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadMembersUpdate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadMemberUpdate.handle(packet.d);\n};\n","'use strict';\n\nconst { Events } = require('../../../util/Constants');\n\nmodule.exports = (client, packet) => {\n  const { old, updated } = client.actions.ChannelUpdate.handle(packet.d);\n  if (old && updated) {\n    /**\n     * Emitted whenever a thread is updated - e.g. name change, archive state change, locked state change.\n     * @event Client#threadUpdate\n     * @param {ThreadChannel} oldThread The thread before the update\n     * @param {ThreadChannel} newThread The thread after the update\n     */\n    client.emit(Events.THREAD_UPDATE, old, updated);\n  }\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.TypingStart.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.UserUpdate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.emit('debug', `[VOICE] received voice server: ${JSON.stringify(packet)}`);\n  client.voice.onVoiceServer(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.VoiceStateUpdate.handle(packet.d);\n};\n","'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.WebhooksUpdate.handle(packet.d);\n};\n","'use strict';\n\nconst { WSEvents } = require('../../../util/Constants');\n\nconst handlers = {};\n\nfor (const name of Object.keys(WSEvents)) {\n  handlers[name] = require(`./${name}.js`);\n}\n\nmodule.exports = handlers;\n","var map = {\n\t\"./APPLICATION_COMMAND_CREATE.js\": 81149,\n\t\"./APPLICATION_COMMAND_DELETE.js\": 39093,\n\t\"./APPLICATION_COMMAND_UPDATE.js\": 19421,\n\t\"./CHANNEL_CREATE.js\": 6648,\n\t\"./CHANNEL_DELETE.js\": 23800,\n\t\"./CHANNEL_PINS_UPDATE.js\": 77627,\n\t\"./CHANNEL_UPDATE.js\": 57638,\n\t\"./GUILD_BAN_ADD.js\": 95514,\n\t\"./GUILD_BAN_REMOVE.js\": 14382,\n\t\"./GUILD_CREATE.js\": 45352,\n\t\"./GUILD_DELETE.js\": 14944,\n\t\"./GUILD_EMOJIS_UPDATE.js\": 42163,\n\t\"./GUILD_INTEGRATIONS_UPDATE.js\": 66749,\n\t\"./GUILD_MEMBERS_CHUNK.js\": 39138,\n\t\"./GUILD_MEMBER_ADD.js\": 73574,\n\t\"./GUILD_MEMBER_REMOVE.js\": 63361,\n\t\"./GUILD_MEMBER_UPDATE.js\": 32289,\n\t\"./GUILD_ROLE_CREATE.js\": 31902,\n\t\"./GUILD_ROLE_DELETE.js\": 76720,\n\t\"./GUILD_ROLE_UPDATE.js\": 17598,\n\t\"./GUILD_STICKERS_UPDATE.js\": 17885,\n\t\"./GUILD_UPDATE.js\": 31640,\n\t\"./INTERACTION_CREATE.js\": 47814,\n\t\"./INVITE_CREATE.js\": 9317,\n\t\"./INVITE_DELETE.js\": 89912,\n\t\"./MESSAGE_CREATE.js\": 54257,\n\t\"./MESSAGE_DELETE.js\": 69001,\n\t\"./MESSAGE_DELETE_BULK.js\": 20021,\n\t\"./MESSAGE_REACTION_ADD.js\": 54992,\n\t\"./MESSAGE_REACTION_REMOVE.js\": 60040,\n\t\"./MESSAGE_REACTION_REMOVE_ALL.js\": 16849,\n\t\"./MESSAGE_REACTION_REMOVE_EMOJI.js\": 1431,\n\t\"./MESSAGE_UPDATE.js\": 306,\n\t\"./PRESENCE_UPDATE.js\": 4359,\n\t\"./READY.js\": 95183,\n\t\"./RESUMED.js\": 85043,\n\t\"./STAGE_INSTANCE_CREATE.js\": 18722,\n\t\"./STAGE_INSTANCE_DELETE.js\": 8084,\n\t\"./STAGE_INSTANCE_UPDATE.js\": 21205,\n\t\"./THREAD_CREATE.js\": 11503,\n\t\"./THREAD_DELETE.js\": 35636,\n\t\"./THREAD_LIST_SYNC.js\": 97493,\n\t\"./THREAD_MEMBERS_UPDATE.js\": 1414,\n\t\"./THREAD_MEMBER_UPDATE.js\": 65972,\n\t\"./THREAD_UPDATE.js\": 79991,\n\t\"./TYPING_START.js\": 30246,\n\t\"./USER_UPDATE.js\": 29717,\n\t\"./VOICE_SERVER_UPDATE.js\": 7722,\n\t\"./VOICE_STATE_UPDATE.js\": 55425,\n\t\"./WEBHOOKS_UPDATE.js\": 46889,\n\t\"./index.js\": 89536\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 51325;","'use strict';\n\n// Heavily inspired by node's `internal/errors` module\n\nconst kCode = Symbol('code');\nconst messages = new Map();\n\n/**\n * Extend an error of some sort into a DiscordjsError.\n * @param {Error} Base Base error to extend\n * @returns {DiscordjsError}\n */\nfunction makeDiscordjsError(Base) {\n  return class DiscordjsError extends Base {\n    constructor(key, ...args) {\n      super(message(key, args));\n      this[kCode] = key;\n      if (Error.captureStackTrace) Error.captureStackTrace(this, DiscordjsError);\n    }\n\n    get name() {\n      return `${super.name} [${this[kCode]}]`;\n    }\n\n    get code() {\n      return this[kCode];\n    }\n  };\n}\n\n/**\n * Format the message for an error.\n * @param {string} key Error key\n * @param {Array<*>} args Arguments to pass for util format or as function args\n * @returns {string} Formatted string\n */\nfunction message(key, args) {\n  if (typeof key !== 'string') throw new Error('Error message key must be a string');\n  const msg = messages.get(key);\n  if (!msg) throw new Error(`An invalid error message key was used: ${key}.`);\n  if (typeof msg === 'function') return msg(...args);\n  if (!args?.length) return msg;\n  args.unshift(msg);\n  return String(...args);\n}\n\n/**\n * Register an error code and message.\n * @param {string} sym Unique name for the error\n * @param {*} val Value of the error\n */\nfunction register(sym, val) {\n  messages.set(sym, typeof val === 'function' ? val : String(val));\n}\n\nmodule.exports = {\n  register,\n  Error: makeDiscordjsError(Error),\n  TypeError: makeDiscordjsError(TypeError),\n  RangeError: makeDiscordjsError(RangeError),\n};\n","'use strict';\n\nconst { register } = require('./DJSError');\n\nconst Messages = {\n  CLIENT_INVALID_OPTION: (prop, must) => `The ${prop} option must be ${must}`,\n  CLIENT_INVALID_PROVIDED_SHARDS: 'None of the provided shards were valid.',\n  CLIENT_MISSING_INTENTS: 'Valid intents must be provided for the Client.',\n  CLIENT_NOT_READY: action => `The client needs to be logged in to ${action}.`,\n\n  TOKEN_INVALID: 'An invalid token was provided.',\n  TOKEN_MISSING: 'Request to use token, but token was unavailable to the client.',\n\n  WS_CLOSE_REQUESTED: 'WebSocket closed due to user request.',\n  WS_CONNECTION_EXISTS: 'There is already an existing WebSocket connection.',\n  WS_NOT_OPEN: (data = 'data') => `Websocket not open to send ${data}`,\n  MANAGER_DESTROYED: 'Manager was destroyed.',\n\n  BITFIELD_INVALID: bit => `Invalid bitfield flag or number: ${bit}.`,\n\n  SHARDING_INVALID: 'Invalid shard settings were provided.',\n  SHARDING_REQUIRED: 'This session would have handled too many guilds - Sharding is required.',\n  INVALID_INTENTS: 'Invalid intent provided for WebSocket intents.',\n  DISALLOWED_INTENTS: 'Privileged intent provided is not enabled or whitelisted.',\n  SHARDING_NO_SHARDS: 'No shards have been spawned.',\n  SHARDING_IN_PROCESS: 'Shards are still being spawned.',\n  SHARDING_INVALID_EVAL_BROADCAST: 'Script to evaluate must be a function',\n  SHARDING_SHARD_NOT_FOUND: id => `Shard ${id} could not be found.`,\n  SHARDING_ALREADY_SPAWNED: count => `Already spawned ${count} shards.`,\n  SHARDING_PROCESS_EXISTS: id => `Shard ${id} already has an active process.`,\n  SHARDING_WORKER_EXISTS: id => `Shard ${id} already has an active worker.`,\n  SHARDING_READY_TIMEOUT: id => `Shard ${id}'s Client took too long to become ready.`,\n  SHARDING_READY_DISCONNECTED: id => `Shard ${id}'s Client disconnected before becoming ready.`,\n  SHARDING_READY_DIED: id => `Shard ${id}'s process exited before its Client became ready.`,\n  SHARDING_NO_CHILD_EXISTS: id => `Shard ${id} has no active process or worker.`,\n  SHARDING_SHARD_MISCALCULATION: (shard, guild, count) =>\n    `Calculated invalid shard ${shard} for guild ${guild} with ${count} shards.`,\n\n  COLOR_RANGE: 'Color must be within the range 0 - 16777215 (0xFFFFFF).',\n  COLOR_CONVERT: 'Unable to convert color to a number.',\n\n  EMBED_TITLE: 'MessageEmbed title must be a string.',\n  EMBED_FIELD_NAME: 'MessageEmbed field names must be non-empty strings.',\n  EMBED_FIELD_VALUE: 'MessageEmbed field values must be non-empty strings.',\n  EMBED_FOOTER_TEXT: 'MessageEmbed footer text must be a string.',\n  EMBED_DESCRIPTION: 'MessageEmbed description must be a string.',\n  EMBED_AUTHOR_NAME: 'MessageEmbed author name must be a string.',\n\n  BUTTON_LABEL: 'MessageButton label must be a string',\n  BUTTON_URL: 'MessageButton url must be a string',\n  BUTTON_CUSTOM_ID: 'MessageButton customId must be a string',\n\n  SELECT_MENU_CUSTOM_ID: 'MessageSelectMenu customId must be a string',\n  SELECT_MENU_PLACEHOLDER: 'MessageSelectMenu placeholder must be a string',\n  SELECT_OPTION_LABEL: 'MessageSelectOption label must be a string',\n  SELECT_OPTION_VALUE: 'MessageSelectOption value must be a string',\n  SELECT_OPTION_DESCRIPTION: 'MessageSelectOption description must be a string',\n\n  INTERACTION_COLLECTOR_ERROR: reason => `Collector received no interactions before ending with reason: ${reason}`,\n\n  FILE_NOT_FOUND: file => `File could not be found: ${file}`,\n\n  USER_NO_DMCHANNEL: 'No DM Channel exists!',\n\n  VOICE_NOT_STAGE_CHANNEL: 'You are only allowed to do this in stage channels.',\n\n  VOICE_STATE_UNCACHED_MEMBER: 'The member of this voice state is uncached.',\n  VOICE_STATE_NOT_OWN:\n    'You cannot self-deafen/mute/request to speak on VoiceStates that do not belong to the ClientUser.',\n  VOICE_STATE_INVALID_TYPE: name => `${name} must be a boolean.`,\n\n  REQ_RESOURCE_TYPE: 'The resource must be a string, Buffer or a valid file stream.',\n\n  IMAGE_FORMAT: format => `Invalid image format: ${format}`,\n  IMAGE_SIZE: size => `Invalid image size: ${size}`,\n\n  MESSAGE_BULK_DELETE_TYPE: 'The messages must be an Array, Collection, or number.',\n  MESSAGE_NONCE_TYPE: 'Message nonce must be an integer or a string.',\n  MESSAGE_CONTENT_TYPE: 'Message content must be a non-empty string.',\n\n  SPLIT_MAX_LEN: 'Chunk exceeds the max length and contains no split characters.',\n\n  BAN_RESOLVE_ID: (ban = false) => `Couldn't resolve the user id to ${ban ? 'ban' : 'unban'}.`,\n  FETCH_BAN_RESOLVE_ID: \"Couldn't resolve the user id to fetch the ban.\",\n\n  PRUNE_DAYS_TYPE: 'Days must be a number',\n\n  GUILD_CHANNEL_RESOLVE: 'Could not resolve channel to a guild channel.',\n  GUILD_VOICE_CHANNEL_RESOLVE: 'Could not resolve channel to a guild voice channel.',\n  GUILD_CHANNEL_ORPHAN: 'Could not find a parent to this guild channel.',\n  GUILD_CHANNEL_UNOWNED: \"The fetched channel does not belong to this manager's guild.\",\n  GUILD_OWNED: 'Guild is owned by the client.',\n  GUILD_MEMBERS_TIMEOUT: \"Members didn't arrive in time.\",\n  GUILD_UNCACHED_ME: 'The client user as a member of this guild is uncached.',\n  STAGE_CHANNEL_RESOLVE: 'Could not resolve channel to a stage channel.',\n\n  INVALID_TYPE: (name, expected, an = false) => `Supplied ${name} is not a${an ? 'n' : ''} ${expected}.`,\n  INVALID_ELEMENT: (type, name, elem) => `Supplied ${type} ${name} includes an invalid element: ${elem}`,\n\n  MESSAGE_THREAD_PARENT: 'The message was not sent in a guild text or news channel',\n  MESSAGE_EXISTING_THREAD: 'The message already has a thread',\n\n  WEBHOOK_MESSAGE: 'The message was not sent by a webhook.',\n  WEBHOOK_TOKEN_UNAVAILABLE: 'This action requires a webhook token, but none is available.',\n  WEBHOOK_URL_INVALID: 'The provided webhook URL is not valid.',\n  MESSAGE_REFERENCE_MISSING: 'The message does not reference another message',\n\n  EMOJI_TYPE: 'Emoji must be a string or GuildEmoji/ReactionEmoji',\n  EMOJI_MANAGED: 'Emoji is managed and has no Author.',\n  MISSING_MANAGE_EMOJIS_AND_STICKERS_PERMISSION: guild =>\n    `Client must have Manage Emojis and Stickers permission in guild ${guild} to see emoji authors.`,\n  NOT_GUILD_STICKER: 'Sticker is a standard (non-guild) sticker and has no author.',\n\n  REACTION_RESOLVE_USER: \"Couldn't resolve the user id to remove from the reaction.\",\n\n  VANITY_URL: 'This guild does not have the VANITY_URL feature enabled.',\n\n  INVITE_RESOLVE_CODE: 'Could not resolve the code to fetch the invite.',\n\n  INVITE_NOT_FOUND: 'Could not find the requested invite.',\n\n  DELETE_GROUP_DM_CHANNEL: \"Bots don't have access to Group DM Channels and cannot delete them\",\n  FETCH_GROUP_DM_CHANNEL: \"Bots don't have access to Group DM Channels and cannot fetch them\",\n\n  MEMBER_FETCH_NONCE_LENGTH: 'Nonce length must not exceed 32 characters.',\n\n  GLOBAL_COMMAND_PERMISSIONS:\n    'Permissions for global commands may only be fetched or modified by providing a GuildResolvable ' +\n    \"or from a guild's application command manager.\",\n  GUILD_UNCACHED_ROLE_RESOLVE: 'Cannot resolve roles from an arbitrary guild, provide an id instead',\n\n  INTERACTION_ALREADY_REPLIED: 'The reply to this interaction has already been sent or deferred.',\n  INTERACTION_NOT_REPLIED: 'The reply to this interaction has not been sent or deferred.',\n  INTERACTION_EPHEMERAL_REPLIED: 'Ephemeral responses cannot be fetched or deleted.',\n  INTERACTION_FETCH_EPHEMERAL: 'Ephemeral responses cannot be fetched.',\n\n  COMMAND_INTERACTION_OPTION_NOT_FOUND: name => `Required option \"${name}\" not found.`,\n  COMMAND_INTERACTION_OPTION_TYPE: (name, type, expected) =>\n    `Option \"${name}\" is of type: ${type}; expected ${expected}.`,\n  COMMAND_INTERACTION_OPTION_EMPTY: (name, type) =>\n    `Required option \"${name}\" is of type: ${type}; expected a non-empty value.`,\n  COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND: 'No subcommand specified for interaction.',\n  COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND_GROUP: 'No subcommand group specified for interaction.',\n\n  INVITE_MISSING_SCOPES: 'At least one valid scope must be provided for the invite',\n\n  NOT_IMPLEMENTED: (what, name) => `Method ${what} not implemented on ${name}.`,\n\n  SWEEP_FILTER_RETURN: 'The return value of the sweepFilter function was not false or a Function',\n};\n\nfor (const [name, message] of Object.entries(Messages)) register(name, message);\n","'use strict';\n\nmodule.exports = require('./DJSError');\nmodule.exports.Messages = require('./Messages');\n","'use strict';\n\nmodule.exports = {\n  // \"Root\" classes (starting points)\n  BaseClient: require('./client/BaseClient'),\n  Client: require('./client/Client'),\n  Shard: require('./sharding/Shard'),\n  ShardClientUtil: require('./sharding/ShardClientUtil'),\n  ShardingManager: require('./sharding/ShardingManager'),\n  WebhookClient: require('./client/WebhookClient'),\n\n  // Utilities\n  ActivityFlags: require('./util/ActivityFlags'),\n  ApplicationFlags: require('./util/ApplicationFlags'),\n  BaseManager: require('./managers/BaseManager'),\n  BitField: require('./util/BitField'),\n  Collection: require('@discordjs/collection').Collection,\n  Constants: require('./util/Constants'),\n  DataResolver: require('./util/DataResolver'),\n  DiscordAPIError: require('./rest/DiscordAPIError'),\n  Formatters: require('./util/Formatters'),\n  HTTPError: require('./rest/HTTPError'),\n  Intents: require('./util/Intents'),\n  LimitedCollection: require('./util/LimitedCollection'),\n  MessageFlags: require('./util/MessageFlags'),\n  Options: require('./util/Options'),\n  Permissions: require('./util/Permissions'),\n  RateLimitError: require('./rest/RateLimitError'),\n  SnowflakeUtil: require('./util/SnowflakeUtil'),\n  SystemChannelFlags: require('./util/SystemChannelFlags'),\n  ThreadMemberFlags: require('./util/ThreadMemberFlags'),\n  UserFlags: require('./util/UserFlags'),\n  Util: require('./util/Util'),\n  version: require('../package.json').version,\n\n  // Managers\n  ApplicationCommandManager: require('./managers/ApplicationCommandManager'),\n  ApplicationCommandPermissionsManager: require('./managers/ApplicationCommandPermissionsManager'),\n  BaseGuildEmojiManager: require('./managers/BaseGuildEmojiManager'),\n  CachedManager: require('./managers/CachedManager'),\n  ChannelManager: require('./managers/ChannelManager'),\n  ClientVoiceManager: require('./client/voice/ClientVoiceManager'),\n  DataManager: require('./managers/DataManager'),\n  GuildApplicationCommandManager: require('./managers/GuildApplicationCommandManager'),\n  GuildBanManager: require('./managers/GuildBanManager'),\n  GuildChannelManager: require('./managers/GuildChannelManager'),\n  GuildEmojiManager: require('./managers/GuildEmojiManager'),\n  GuildEmojiRoleManager: require('./managers/GuildEmojiRoleManager'),\n  GuildInviteManager: require('./managers/GuildInviteManager'),\n  GuildManager: require('./managers/GuildManager'),\n  GuildMemberManager: require('./managers/GuildMemberManager'),\n  GuildMemberRoleManager: require('./managers/GuildMemberRoleManager'),\n  GuildStickerManager: require('./managers/GuildStickerManager'),\n  MessageManager: require('./managers/MessageManager'),\n  PermissionOverwriteManager: require('./managers/PermissionOverwriteManager'),\n  PresenceManager: require('./managers/PresenceManager'),\n  ReactionManager: require('./managers/ReactionManager'),\n  ReactionUserManager: require('./managers/ReactionUserManager'),\n  RoleManager: require('./managers/RoleManager'),\n  StageInstanceManager: require('./managers/StageInstanceManager'),\n  ThreadManager: require('./managers/ThreadManager'),\n  ThreadMemberManager: require('./managers/ThreadMemberManager'),\n  UserManager: require('./managers/UserManager'),\n  VoiceStateManager: require('./managers/VoiceStateManager'),\n  WebSocketManager: require('./client/websocket/WebSocketManager'),\n  WebSocketShard: require('./client/websocket/WebSocketShard'),\n\n  // Structures\n  Activity: require('./structures/Presence').Activity,\n  AnonymousGuild: require('./structures/AnonymousGuild'),\n  Application: require('./structures/interfaces/Application'),\n  ApplicationCommand: require('./structures/ApplicationCommand'),\n  Base: require('./structures/Base'),\n  BaseGuild: require('./structures/BaseGuild'),\n  BaseGuildEmoji: require('./structures/BaseGuildEmoji'),\n  BaseGuildVoiceChannel: require('./structures/BaseGuildVoiceChannel'),\n  BaseMessageComponent: require('./structures/BaseMessageComponent'),\n  ButtonInteraction: require('./structures/ButtonInteraction'),\n  CategoryChannel: require('./structures/CategoryChannel'),\n  Channel: require('./structures/Channel'),\n  ClientApplication: require('./structures/ClientApplication'),\n  ClientPresence: require('./structures/ClientPresence'),\n  ClientUser: require('./structures/ClientUser'),\n  Collector: require('./structures/interfaces/Collector'),\n  CommandInteraction: require('./structures/CommandInteraction'),\n  CommandInteractionOptionResolver: require('./structures/CommandInteractionOptionResolver'),\n  DMChannel: require('./structures/DMChannel'),\n  Emoji: require('./structures/Emoji'),\n  Guild: require('./structures/Guild'),\n  GuildAuditLogs: require('./structures/GuildAuditLogs'),\n  GuildAuditLogsEntry: require('./structures/GuildAuditLogs').Entry,\n  GuildBan: require('./structures/GuildBan'),\n  GuildChannel: require('./structures/GuildChannel'),\n  GuildEmoji: require('./structures/GuildEmoji'),\n  GuildMember: require('./structures/GuildMember'),\n  GuildPreview: require('./structures/GuildPreview'),\n  GuildPreviewEmoji: require('./structures/GuildPreviewEmoji'),\n  GuildTemplate: require('./structures/GuildTemplate'),\n  Integration: require('./structures/Integration'),\n  IntegrationApplication: require('./structures/IntegrationApplication'),\n  Interaction: require('./structures/Interaction'),\n  InteractionCollector: require('./structures/InteractionCollector'),\n  InteractionWebhook: require('./structures/InteractionWebhook'),\n  Invite: require('./structures/Invite'),\n  InviteStageInstance: require('./structures/InviteStageInstance'),\n  InviteGuild: require('./structures/InviteGuild'),\n  Message: require('./structures/Message'),\n  MessageActionRow: require('./structures/MessageActionRow'),\n  MessageAttachment: require('./structures/MessageAttachment'),\n  MessageButton: require('./structures/MessageButton'),\n  MessageCollector: require('./structures/MessageCollector'),\n  MessageComponentInteraction: require('./structures/MessageComponentInteraction'),\n  MessageEmbed: require('./structures/MessageEmbed'),\n  MessageMentions: require('./structures/MessageMentions'),\n  MessagePayload: require('./structures/MessagePayload'),\n  MessageReaction: require('./structures/MessageReaction'),\n  MessageSelectMenu: require('./structures/MessageSelectMenu'),\n  NewsChannel: require('./structures/NewsChannel'),\n  OAuth2Guild: require('./structures/OAuth2Guild'),\n  PartialGroupDMChannel: require('./structures/PartialGroupDMChannel'),\n  PermissionOverwrites: require('./structures/PermissionOverwrites'),\n  Presence: require('./structures/Presence').Presence,\n  ReactionCollector: require('./structures/ReactionCollector'),\n  ReactionEmoji: require('./structures/ReactionEmoji'),\n  RichPresenceAssets: require('./structures/Presence').RichPresenceAssets,\n  Role: require('./structures/Role'),\n  SelectMenuInteraction: require('./structures/SelectMenuInteraction'),\n  StageChannel: require('./structures/StageChannel'),\n  StageInstance: require('./structures/StageInstance'),\n  Sticker: require('./structures/Sticker'),\n  StickerPack: require('./structures/StickerPack'),\n  StoreChannel: require('./structures/StoreChannel'),\n  Team: require('./structures/Team'),\n  TeamMember: require('./structures/TeamMember'),\n  TextChannel: require('./structures/TextChannel'),\n  ThreadChannel: require('./structures/ThreadChannel'),\n  ThreadMember: require('./structures/ThreadMember'),\n  Typing: require('./structures/Typing'),\n  User: require('./structures/User'),\n  VoiceChannel: require('./structures/VoiceChannel'),\n  VoiceRegion: require('./structures/VoiceRegion'),\n  VoiceState: require('./structures/VoiceState'),\n  Webhook: require('./structures/Webhook'),\n  Widget: require('./structures/Widget'),\n  WidgetMember: require('./structures/WidgetMember'),\n  WelcomeChannel: require('./structures/WelcomeChannel'),\n  WelcomeScreen: require('./structures/WelcomeScreen'),\n\n  WebSocket: require('./WebSocket'),\n};\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst ApplicationCommandPermissionsManager = require('./ApplicationCommandPermissionsManager');\nconst CachedManager = require('./CachedManager');\nconst { TypeError } = require('../errors');\nconst ApplicationCommand = require('../structures/ApplicationCommand');\nconst { ApplicationCommandTypes } = require('../util/Constants');\n\n/**\n * Manages API methods for application commands and stores their cache.\n * @extends {CachedManager}\n */\nclass ApplicationCommandManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, ApplicationCommand, iterable);\n\n    /**\n     * The manager for permissions of arbitrary commands on arbitrary guilds\n     * @type {ApplicationCommandPermissionsManager}\n     */\n    this.permissions = new ApplicationCommandPermissionsManager(this);\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, ApplicationCommand>}\n   * @name ApplicationCommandManager#cache\n   */\n\n  _add(data, cache, guildId) {\n    return super._add(data, cache, { extras: [this.guild, guildId] });\n  }\n\n  /**\n   * The APIRouter path to the commands\n   * @param {Snowflake} [options.id] The application command's id\n   * @param {Snowflake} [options.guildId] The guild's id to use in the path,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Object}\n   * @private\n   */\n  commandPath({ id, guildId } = {}) {\n    let path = this.client.api.applications(this.client.application.id);\n    if (this.guild ?? guildId) path = path.guilds(this.guild?.id ?? guildId);\n    return id ? path.commands(id) : path.commands;\n  }\n\n  /**\n   * Data that resolves to give an ApplicationCommand object. This can be:\n   * * An ApplicationCommand object\n   * * A Snowflake\n   * @typedef {ApplicationCommand|Snowflake} ApplicationCommandResolvable\n   */\n\n  /**\n   * Options used to fetch data from discord\n   * @typedef {Object} BaseFetchOptions\n   * @property {boolean} [cache=true] Whether to cache the fetched data if it wasn't already\n   * @property {boolean} [force=false] Whether to skip the cache check and request the API\n   */\n\n  /**\n   * Options used to fetch Application Commands from discord\n   * @typedef {BaseFetchOptions} FetchApplicationCommandOptions\n   * @property {Snowflake} [guildId] The guild's id to fetch commands for, for when the guild is not cached\n   */\n\n  /**\n   * Obtains one or multiple application commands from Discord, or the cache if it's already available.\n   * @param {Snowflake} [id] The application command's id\n   * @param {FetchApplicationCommandOptions} [options] Additional options for this fetch\n   * @returns {Promise<ApplicationCommand|Collection<Snowflake, ApplicationCommand>>}\n   * @example\n   * // Fetch a single command\n   * client.application.commands.fetch('123456789012345678')\n   *   .then(command => console.log(`Fetched command ${command.name}`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch all commands\n   * guild.commands.fetch()\n   *   .then(commands => console.log(`Fetched ${commands.size} commands`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { guildId, cache = true, force = false } = {}) {\n    if (typeof id === 'object') {\n      ({ guildId, cache = true } = id);\n    } else if (id) {\n      if (!force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n      const command = await this.commandPath({ id, guildId }).get();\n      return this._add(command, cache);\n    }\n\n    const data = await this.commandPath({ guildId }).get();\n    return data.reduce((coll, command) => coll.set(command.id, this._add(command, cache, guildId)), new Collection());\n  }\n\n  /**\n   * Creates an application command.\n   * @param {ApplicationCommandData} command The command\n   * @param {Snowflake} [guildId] The guild's id to create this command in,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Create a new command\n   * client.application.commands.create({\n   *   name: 'test',\n   *   description: 'A test command',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async create(command, guildId) {\n    const data = await this.commandPath({ guildId }).post({\n      data: this.constructor.transformCommand(command),\n    });\n    return this._add(data, !guildId, guildId);\n  }\n\n  /**\n   * Sets all the commands for this application or guild.\n   * @param {ApplicationCommandData[]} commands The commands\n   * @param {Snowflake} [guildId] The guild's id to create the commands in,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<Collection<Snowflake, ApplicationCommand>>}\n   * @example\n   * // Set all commands to just this one\n   * client.application.commands.set([\n   *   {\n   *     name: 'test',\n   *     description: 'A test command',\n   *   },\n   * ])\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove all commands\n   * guild.commands.set([])\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async set(commands, guildId) {\n    const data = await this.commandPath({ guildId }).put({\n      data: commands.map(c => this.constructor.transformCommand(c)),\n    });\n    return data.reduce(\n      (coll, command) => coll.set(command.id, this._add(command, !guildId, guildId)),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Edits an application command.\n   * @param {ApplicationCommandResolvable} command The command to edit\n   * @param {ApplicationCommandData} data The data to update the command with\n   * @param {Snowflake} [guildId] The guild's id where the command registered,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Edit an existing command\n   * client.application.commands.edit('123456789012345678', {\n   *   description: 'New description',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async edit(command, data, guildId) {\n    const id = this.resolveId(command);\n    if (!id) throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable');\n\n    const patched = await this.commandPath({ id, guildId }).patch({ data: this.constructor.transformCommand(data) });\n    return this._add(patched, !guildId, guildId);\n  }\n\n  /**\n   * Deletes an application command.\n   * @param {ApplicationCommandResolvable} command The command to delete\n   * @param {Snowflake} [guildId] The guild's id where the command is registered,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<?ApplicationCommand>}\n   * @example\n   * // Delete a command\n   * guild.commands.delete('123456789012345678')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async delete(command, guildId) {\n    const id = this.resolveId(command);\n    if (!id) throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable');\n\n    await this.commandPath({ id, guildId }).delete();\n\n    const cached = this.cache.get(id);\n    if (!guildId) this.cache.delete(id);\n    return cached ?? null;\n  }\n\n  /**\n   * Transforms an {@link ApplicationCommandData} object into something that can be used with the API.\n   * @param {ApplicationCommandData} command The command to transform\n   * @returns {APIApplicationCommand}\n   * @private\n   */\n  static transformCommand(command) {\n    return {\n      name: command.name,\n      description: command.description,\n      type: typeof command.type === 'number' ? command.type : ApplicationCommandTypes[command.type],\n      options: command.options?.map(o => ApplicationCommand.transformOption(o)),\n      default_permission: command.defaultPermission,\n    };\n  }\n}\n\nmodule.exports = ApplicationCommandManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst BaseManager = require('./BaseManager');\nconst { Error, TypeError } = require('../errors');\nconst { ApplicationCommandPermissionTypes, APIErrors } = require('../util/Constants');\n\n/**\n * Manages API methods for permissions of Application Commands.\n * @extends {BaseManager}\n */\nclass ApplicationCommandPermissionsManager extends BaseManager {\n  constructor(manager) {\n    super(manager.client);\n\n    /**\n     * The manager or command that this manager belongs to\n     * @type {ApplicationCommandManager|ApplicationCommand}\n     * @private\n     */\n    this.manager = manager;\n\n    /**\n     * The guild that this manager acts on\n     * @type {?Guild}\n     */\n    this.guild = manager.guild ?? null;\n\n    /**\n     * The id of the guild that this manager acts on\n     * @type {?Snowflake}\n     */\n    this.guildId = manager.guildId ?? manager.guild?.id ?? null;\n\n    /**\n     * The id of the command this manager acts on\n     * @type {?Snowflake}\n     */\n    this.commandId = manager.id ?? null;\n  }\n\n  /**\n   * The APIRouter path to the commands\n   * @param {Snowflake} guildId The guild's id to use in the path,\n   * @param {Snowflake} [commandId] The application command's id\n   * @returns {Object}\n   * @private\n   */\n  permissionsPath(guildId, commandId) {\n    return this.client.api.applications(this.client.application.id).guilds(guildId).commands(commandId).permissions;\n  }\n\n  /**\n   * Data for setting the permissions of an application command.\n   * @typedef {Object} ApplicationCommandPermissionData\n   * @property {Snowflake} id The role or user's id\n   * @property {ApplicationCommandPermissionType|number} type Whether this permission is for a role or a user\n   * @property {boolean} permission Whether the role or user has the permission to use this command\n   */\n\n  /**\n   * The object returned when fetching permissions for an application command.\n   * @typedef {Object} ApplicationCommandPermissions\n   * @property {Snowflake} id The role or user's id\n   * @property {ApplicationCommandPermissionType} type Whether this permission is for a role or a user\n   * @property {boolean} permission Whether the role or user has the permission to use this command\n   */\n\n  /**\n   * Options for managing permissions for one or more Application Commands\n   * <warn>When passing these options to a manager where `guildId` is `null`,\n   * `guild` is a required parameter</warn>\n   * @typedef {Object} BaseApplicationCommandPermissionsOptions\n   * @param {GuildResolvable} [guild] The guild to modify / check permissions for\n   * <warn>Ignored when the manager has a non-null `guildId` property</warn>\n   * @param {ApplicationCommandResolvable} [command] The command to modify / check permissions for\n   * <warn>Ignored when the manager has a non-null `commandId` property</warn>\n   */\n\n  /**\n   * Fetches the permissions for one or multiple commands.\n   * @param {BaseApplicationCommandPermissionsOptions} [options] Options used to fetch permissions\n   * @returns {Promise<ApplicationCommandPermissions[]|Collection<Snowflake, ApplicationCommandPermissions[]>>}\n   * @example\n   * // Fetch permissions for one command\n   * guild.commands.permissions.fetch({ command: '123456789012345678' })\n   *   .then(perms => console.log(`Fetched permissions for ${perms.length} users`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch permissions for all commands in a guild\n   * client.application.commands.permissions.fetch({ guild: '123456789012345678' })\n   *   .then(perms => console.log(`Fetched permissions for ${perms.size} commands`))\n   *   .catch(console.error);\n   */\n  async fetch({ guild, command } = {}) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n    if (commandId) {\n      const data = await this.permissionsPath(guildId, commandId).get();\n      return data.permissions.map(perm => this.constructor.transformPermissions(perm, true));\n    }\n\n    const data = await this.permissionsPath(guildId).get();\n    return data.reduce(\n      (coll, perm) =>\n        coll.set(\n          perm.id,\n          perm.permissions.map(p => this.constructor.transformPermissions(p, true)),\n        ),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Data used for overwriting the permissions for all application commands in a guild.\n   * @typedef {Object} GuildApplicationCommandPermissionData\n   * @property {Snowflake} id The command's id\n   * @property {ApplicationCommandPermissionData[]} permissions The permissions for this command\n   */\n\n  /**\n   * Options used to set permissions for one or more Application Commands in a guild\n   * <warn>One of `command` AND `permissions`, OR `fullPermissions` is required.\n   * `fullPermissions` is not a valid option when passing to a manager where `commandId` is non-null</warn>\n   * @typedef {BaseApplicationCommandPermissionsOptions} SetApplicationCommandPermissionsOptions\n   * @param {ApplicationCommandPermissionData[]} [permissions] The new permissions for the command\n   * @param {GuildApplicationCommandPermissionData[]} [fullPermissions] The new permissions for all commands\n   * in a guild <warn>When this parameter is set, `permissions` and `command` are ignored</warn>\n   */\n\n  /**\n   * Sets the permissions for one or more commands.\n   * @param {SetApplicationCommandPermissionsOptions} options Options used to set permissions\n   * @returns {Promise<ApplicationCommandPermissions[]|Collection<Snowflake, ApplicationCommandPermissions[]>>}\n   * @example\n   * // Set the permissions for one command\n   * client.application.commands.permissions.set({ command: '123456789012345678', permissions: [\n   *   {\n   *     id: '876543210987654321',\n   *     type: 'USER',\n   *     permission: false,\n   *   },\n   * ]})\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Set the permissions for all commands\n   * guild.commands.permissions.set({ fullPermissions: [\n   *   {\n   *     id: '123456789012345678',\n   *     permissions: [{\n   *       id: '876543210987654321',\n   *       type: 'USER',\n   *       permission: false,\n   *     }],\n   *   },\n   * ]})\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async set({ guild, command, permissions, fullPermissions } = {}) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n\n    if (commandId) {\n      if (!Array.isArray(permissions)) {\n        throw new TypeError('INVALID_TYPE', 'permissions', 'Array of ApplicationCommandPermissionData', true);\n      }\n      const data = await this.permissionsPath(guildId, commandId).put({\n        data: { permissions: permissions.map(perm => this.constructor.transformPermissions(perm)) },\n      });\n      return data.permissions.map(perm => this.constructor.transformPermissions(perm, true));\n    }\n\n    if (!Array.isArray(fullPermissions)) {\n      throw new TypeError('INVALID_TYPE', 'fullPermissions', 'Array of GuildApplicationCommandPermissionData', true);\n    }\n\n    const APIPermissions = [];\n    for (const perm of fullPermissions) {\n      if (!Array.isArray(perm.permissions)) throw new TypeError('INVALID_ELEMENT', 'Array', 'fullPermissions', perm);\n      APIPermissions.push({\n        id: perm.id,\n        permissions: perm.permissions.map(p => this.constructor.transformPermissions(p)),\n      });\n    }\n    const data = await this.permissionsPath(guildId).put({\n      data: APIPermissions,\n    });\n    return data.reduce(\n      (coll, perm) =>\n        coll.set(\n          perm.id,\n          perm.permissions.map(p => this.constructor.transformPermissions(p, true)),\n        ),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Options used to add permissions to a command\n   * <warn>The `command` parameter is not optional when the managers `commandId` is `null`</warn>\n   * @typedef {BaseApplicationCommandPermissionsOptions} AddApplicationCommandPermissionsOptions\n   * @param {ApplicationCommandPermissionData[]} permissions The permissions to add to the command\n   */\n\n  /**\n   * Add permissions to a command.\n   * @param {AddApplicationCommandPermissionsOptions} options Options used to add permissions\n   * @returns {Promise<ApplicationCommandPermissions[]>}\n   * @example\n   * // Block a role from the command permissions\n   * guild.commands.permissions.add({ command: '123456789012345678', permissions: [\n   *   {\n   *     id: '876543211234567890',\n   *     type: 'ROLE',\n   *     permission: false\n   *   },\n   * ]})\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async add({ guild, command, permissions }) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n    if (!commandId) throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable');\n    if (!Array.isArray(permissions)) {\n      throw new TypeError('INVALID_TYPE', 'permissions', 'Array of ApplicationCommandPermissionData', true);\n    }\n\n    let existing = [];\n    try {\n      existing = await this.fetch({ guild: guildId, command: commandId });\n    } catch (error) {\n      if (error.code !== APIErrors.UNKNOWN_APPLICATION_COMMAND_PERMISSIONS) throw error;\n    }\n\n    const newPermissions = permissions.slice();\n    for (const perm of existing) {\n      if (!newPermissions.some(x => x.id === perm.id)) {\n        newPermissions.push(perm);\n      }\n    }\n\n    return this.set({ guild: guildId, command: commandId, permissions: newPermissions });\n  }\n\n  /**\n   * Options used to remove permissions from a command\n   * <warn>The `command` parameter is not optional when the managers `commandId` is `null`</warn>\n   * @typedef {BaseApplicationCommandPermissionsOptions} RemoveApplicationCommandPermissionsOptions\n   * @param {UserResolvable|UserResolvable[]} [users] The user(s) to remove from the command permissions\n   * <warn>One of `users` or `roles` is required</warn>\n   * @param {RoleResolvable|RoleResolvable[]} [roles] The role(s) to remove from the command permissions\n   * <warn>One of `users` or `roles` is required</warn>\n   */\n\n  /**\n   * Remove permissions from a command.\n   * @param {RemoveApplicationCommandPermissionsOptions} options Options used to remove permissions\n   * @returns {Promise<ApplicationCommandPermissions[]>}\n   * @example\n   * // Remove a user permission from this command\n   * guild.commands.permissions.remove({ command: '123456789012345678', users: '876543210123456789' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove multiple roles from this command\n   * guild.commands.permissions.remove({\n   *   command: '123456789012345678', roles: ['876543210123456789', '765432101234567890']\n   * })\n   *    .then(console.log)\n   *    .catch(console.error);\n   */\n  async remove({ guild, command, users, roles }) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n    if (!commandId) throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable');\n\n    if (!users && !roles) throw new TypeError('INVALID_TYPE', 'users OR roles', 'Array or Resolvable', true);\n\n    let resolvedIds = [];\n    if (Array.isArray(users)) {\n      users.forEach(user => {\n        const userId = this.client.users.resolveId(user);\n        if (!userId) throw new TypeError('INVALID_ELEMENT', 'Array', 'users', user);\n        resolvedIds.push(userId);\n      });\n    } else if (users) {\n      const userId = this.client.users.resolveId(users);\n      if (!userId) {\n        throw new TypeError('INVALID_TYPE', 'users', 'Array or UserResolvable');\n      }\n      resolvedIds.push(userId);\n    }\n\n    if (Array.isArray(roles)) {\n      roles.forEach(role => {\n        if (typeof role === 'string') {\n          resolvedIds.push(role);\n          return;\n        }\n        if (!this.guild) throw new Error('GUILD_UNCACHED_ROLE_RESOLVE');\n        const roleId = this.guild.roles.resolveId(role);\n        if (!roleId) throw new TypeError('INVALID_ELEMENT', 'Array', 'users', role);\n        resolvedIds.push(roleId);\n      });\n    } else if (roles) {\n      if (typeof roles === 'string') {\n        resolvedIds.push(roles);\n      } else {\n        if (!this.guild) throw new Error('GUILD_UNCACHED_ROLE_RESOLVE');\n        const roleId = this.guild.roles.resolveId(roles);\n        if (!roleId) {\n          throw new TypeError('INVALID_TYPE', 'users', 'Array or RoleResolvable');\n        }\n        resolvedIds.push(roleId);\n      }\n    }\n\n    let existing = [];\n    try {\n      existing = await this.fetch({ guild: guildId, command: commandId });\n    } catch (error) {\n      if (error.code !== APIErrors.UNKNOWN_APPLICATION_COMMAND_PERMISSIONS) throw error;\n    }\n\n    const permissions = existing.filter(perm => !resolvedIds.includes(perm.id));\n\n    return this.set({ guild: guildId, command: commandId, permissions });\n  }\n\n  /**\n   * Options used to check existance of permissions on a command\n   * <warn>The `command` parameter is not optional when the managers `commandId` is `null`</warn>\n   * @typedef {BaseApplicationCommandPermissionsOptions} HasApplicationCommandPermissionsOptions\n   * @param {UserResolvable|RoleResolvable} permissionId The user or role to check if a permission exists for\n   * on this command.\n   */\n\n  /**\n   * Check whether a permission exists for a user or role\n   * @param {AddApplicationCommandPermissionsOptions} options Options used to check permissions\n   * @returns {Promise<boolean>}\n   * @example\n   * // Check whether a user has permission to use a command\n   * guild.commands.permissions.has({ command: '123456789012345678', permissionId: '876543210123456789' })\n   *  .then(console.log)\n   *  .catch(console.error);\n   */\n  async has({ guild, command, permissionId }) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n    if (!commandId) throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable');\n\n    if (!permissionId) throw new TypeError('INVALID_TYPE', 'permissionId', 'UserResolvable or RoleResolvable');\n    let resolvedId = permissionId;\n    if (typeof permissionId !== 'string') {\n      resolvedId = this.client.users.resolveId(permissionId);\n      if (!resolvedId) {\n        if (!this.guild) throw new Error('GUILD_UNCACHED_ROLE_RESOLVE');\n        resolvedId = this.guild.roles.resolveId(permissionId);\n      }\n      if (!resolvedId) {\n        throw new TypeError('INVALID_TYPE', 'permissionId', 'UserResolvable or RoleResolvable');\n      }\n    }\n\n    let existing = [];\n    try {\n      existing = await this.fetch({ guild: guildId, command: commandId });\n    } catch (error) {\n      if (error.code !== APIErrors.UNKNOWN_APPLICATION_COMMAND_PERMISSIONS) throw error;\n    }\n\n    return existing.some(perm => perm.id === resolvedId);\n  }\n\n  _validateOptions(guild, command) {\n    const guildId = this.guildId ?? this.client.guilds.resolveId(guild);\n    if (!guildId) throw new Error('GLOBAL_COMMAND_PERMISSIONS');\n    let commandId = this.commandId;\n    if (command && !commandId) {\n      commandId = this.manager.resolveId?.(command);\n      if (!commandId && this.guild) {\n        commandId = this.guild.commands.resolveId(command);\n      }\n      if (!commandId) {\n        commandId = this.client.application?.commands.resolveId(command);\n      }\n      if (!commandId) {\n        throw new TypeError('INVALID_TYPE', 'command', 'ApplicationCommandResolvable', true);\n      }\n    }\n    return { guildId, commandId };\n  }\n\n  /**\n   * Transforms an {@link ApplicationCommandPermissionData} object into something that can be used with the API.\n   * @param {ApplicationCommandPermissionData} permissions The permissions to transform\n   * @param {boolean} [received] Whether these permissions have been received from Discord\n   * @returns {APIApplicationCommandPermissions}\n   * @private\n   */\n  static transformPermissions(permissions, received) {\n    return {\n      id: permissions.id,\n      permission: permissions.permission,\n      type:\n        typeof permissions.type === 'number' && !received\n          ? permissions.type\n          : ApplicationCommandPermissionTypes[permissions.type],\n    };\n  }\n}\n\nmodule.exports = ApplicationCommandPermissionsManager;\n\n/* eslint-disable max-len */\n/**\n * @external APIApplicationCommandPermissions\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#application-command-permissions-object-application-command-permissions-structure}\n */\n","'use strict';\n\nconst CachedManager = require('./CachedManager');\nconst GuildEmoji = require('../structures/GuildEmoji');\nconst ReactionEmoji = require('../structures/ReactionEmoji');\nconst { parseEmoji } = require('../util/Util');\n\n/**\n * Holds methods to resolve GuildEmojis and stores their cache.\n * @extends {CachedManager}\n */\nclass BaseGuildEmojiManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, GuildEmoji, iterable);\n  }\n\n  /**\n   * The cache of GuildEmojis\n   * @type {Collection<Snowflake, GuildEmoji>}\n   * @name BaseGuildEmojiManager#cache\n   */\n\n  /**\n   * Data that can be resolved into a GuildEmoji object. This can be:\n   * * A custom emoji identifier\n   * * A GuildEmoji object\n   * * A ReactionEmoji object\n   * @typedef {Snowflake|GuildEmoji|ReactionEmoji} EmojiResolvable\n   */\n\n  /**\n   * Resolves an EmojiResolvable to an Emoji object.\n   * @param {EmojiResolvable} emoji The Emoji resolvable to identify\n   * @returns {?GuildEmoji}\n   */\n  resolve(emoji) {\n    if (emoji instanceof ReactionEmoji) return super.resolve(emoji.id);\n    return super.resolve(emoji);\n  }\n\n  /**\n   * Resolves an EmojiResolvable to an Emoji id string.\n   * @param {EmojiResolvable} emoji The Emoji resolvable to identify\n   * @returns {?Snowflake}\n   */\n  resolveId(emoji) {\n    if (emoji instanceof ReactionEmoji) return emoji.id;\n    return super.resolveId(emoji);\n  }\n\n  /**\n   * Data that can be resolved to give an emoji identifier. This can be:\n   * * The unicode representation of an emoji\n   * * The `<a:name:id>`, `<:name:id>`, `a:name:id` or `name:id` emoji identifier string of an emoji\n   * * An EmojiResolvable\n   * @typedef {string|EmojiResolvable} EmojiIdentifierResolvable\n   */\n\n  /**\n   * Resolves an EmojiResolvable to an emoji identifier.\n   * @param {EmojiIdentifierResolvable} emoji The emoji resolvable to resolve\n   * @returns {?string}\n   */\n  resolveIdentifier(emoji) {\n    const emojiResolvable = this.resolve(emoji);\n    if (emojiResolvable) return emojiResolvable.identifier;\n    if (emoji instanceof ReactionEmoji) return emoji.identifier;\n    if (typeof emoji === 'string') {\n      const res = parseEmoji(emoji);\n      if (res?.name.length) {\n        emoji = `${res.animated ? 'a:' : ''}${res.name}${res.id ? `:${res.id}` : ''}`;\n      }\n      if (!emoji.includes('%')) return encodeURIComponent(emoji);\n      return emoji;\n    }\n    return null;\n  }\n}\n\nmodule.exports = BaseGuildEmojiManager;\n","'use strict';\n\n/**\n * Manages the API methods of a data model.\n * @abstract\n */\nclass BaseManager {\n  constructor(client) {\n    /**\n     * The client that instantiated this Manager\n     * @name BaseManager#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n  }\n}\n\nmodule.exports = BaseManager;\n","'use strict';\n\nconst DataManager = require('./DataManager');\nconst { _cleanupSymbol } = require('../util/Constants');\n\n/**\n * Manages the API methods of a data model with a mutable cache of instances.\n * @extends {DataManager}\n * @abstract\n */\nclass CachedManager extends DataManager {\n  constructor(client, holds, iterable) {\n    super(client, holds);\n\n    Object.defineProperty(this, '_cache', { value: this.client.options.makeCache(this.constructor, this.holds) });\n\n    let cleanup = this._cache[_cleanupSymbol]?.();\n    if (cleanup) {\n      cleanup = cleanup.bind(this._cache);\n      client._cleanups.add(cleanup);\n      client._finalizers.register(this, {\n        cleanup,\n        message:\n          `Garbage collection completed on ${this.constructor.name}, ` +\n          `which had a ${this._cache.constructor.name} of ${this.holds.name}.`,\n        name: this.constructor.name,\n      });\n    }\n\n    if (iterable) {\n      for (const item of iterable) {\n        this._add(item);\n      }\n    }\n  }\n\n  /**\n   * The cache of items for this manager.\n   * @type {Collection}\n   * @abstract\n   */\n  get cache() {\n    return this._cache;\n  }\n\n  _add(data, cache = true, { id, extras = [] } = {}) {\n    const existing = this.cache.get(id ?? data.id);\n    if (cache) existing?._patch(data);\n    if (existing) return existing;\n\n    const entry = this.holds ? new this.holds(this.client, data, ...extras) : data;\n    if (cache) this.cache.set(id ?? entry.id, entry);\n    return entry;\n  }\n}\n\nmodule.exports = CachedManager;\n","'use strict';\n\nconst CachedManager = require('./CachedManager');\nconst Channel = require('../structures/Channel');\nconst { Events, ThreadChannelTypes } = require('../util/Constants');\n\nlet cacheWarningEmitted = false;\n\n/**\n * A manager of channels belonging to a client\n * @extends {CachedManager}\n */\nclass ChannelManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, Channel, iterable);\n    const defaultCaching =\n      this._cache.constructor.name === 'Collection' ||\n      ((this._cache.maxSize === undefined || this._cache.maxSize === Infinity) &&\n        (this._cache.sweepFilter === undefined || this._cache.sweepFilter.isDefault));\n    if (!cacheWarningEmitted && !defaultCaching) {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n  }\n\n  /**\n   * The cache of Channels\n   * @type {Collection<Snowflake, Channel>}\n   * @name ChannelManager#cache\n   */\n\n  _add(data, guild, { cache = true, allowUnknownGuild = false, fromInteraction = false } = {}) {\n    const existing = this.cache.get(data.id);\n    if (existing) {\n      if (cache) existing._patch(data, fromInteraction);\n      guild?.channels?._add(existing);\n      if (ThreadChannelTypes.includes(existing.type)) {\n        existing.parent?.threads?._add(existing);\n      }\n      return existing;\n    }\n\n    const channel = Channel.create(this.client, data, guild, { allowUnknownGuild, fromInteraction });\n\n    if (!channel) {\n      this.client.emit(Events.DEBUG, `Failed to find guild, or unknown type for channel ${data.id} ${data.type}`);\n      return null;\n    }\n\n    if (cache && !allowUnknownGuild) this.cache.set(channel.id, channel);\n\n    return channel;\n  }\n\n  _remove(id) {\n    const channel = this.cache.get(id);\n    channel?.guild?.channels.cache.delete(id);\n    channel?.parent?.threads?.cache.delete(id);\n    this.cache.delete(id);\n  }\n\n  /**\n   * Data that can be resolved to give a Channel object. This can be:\n   * * A Channel object\n   * * A Snowflake\n   * @typedef {Channel|Snowflake} ChannelResolvable\n   */\n\n  /**\n   * Resolves a ChannelResolvable to a Channel object.\n   * @method resolve\n   * @memberof ChannelManager\n   * @instance\n   * @param {ChannelResolvable} channel The channel resolvable to resolve\n   * @returns {?Channel}\n   */\n\n  /**\n   * Resolves a ChannelResolvable to a channel id string.\n   * @method resolveId\n   * @memberof ChannelManager\n   * @instance\n   * @param {ChannelResolvable} channel The channel resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Options for fetching a channel from discord\n   * @typedef {BaseFetchOptions} FetchChannelOptions\n   * @property {boolean} [allowUnknownGuild=false] Allows the channel to be returned even if the guild is not in cache,\n   * it will not be cached. <warn>Many of the properties and methods on the returned channel will throw errors</warn>\n   */\n\n  /**\n   * Obtains a channel from Discord, or the channel cache if it's already available.\n   * @param {Snowflake} id The channel's id\n   * @param {FetchChannelOptions} [options] Additional options for this fetch\n   * @returns {Promise<?Channel>}\n   * @example\n   * // Fetch a channel by its id\n   * client.channels.fetch('222109930545610754')\n   *   .then(channel => console.log(channel.name))\n   *   .catch(console.error);\n   */\n  async fetch(id, { allowUnknownGuild = false, cache = true, force = false } = {}) {\n    if (!force) {\n      const existing = this.cache.get(id);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.api.channels(id).get();\n    return this._add(data, null, { cache, allowUnknownGuild });\n  }\n}\n\nmodule.exports = ChannelManager;\n","'use strict';\n\nconst BaseManager = require('./BaseManager');\nconst { Error } = require('../errors');\n\n/**\n * Manages the API methods of a data model along with a collection of instances.\n * @extends {BaseManager}\n * @abstract\n */\nclass DataManager extends BaseManager {\n  constructor(client, holds) {\n    super(client);\n\n    /**\n     * The data structure belonging to this manager.\n     * @name DataManager#holds\n     * @type {Function}\n     * @private\n     * @readonly\n     */\n    Object.defineProperty(this, 'holds', { value: holds });\n  }\n\n  /**\n   * The cache of items for this manager.\n   * @type {Collection}\n   * @abstract\n   */\n  get cache() {\n    throw new Error('NOT_IMPLEMENTED', 'get cache', this.constructor.name);\n  }\n\n  /**\n   * Resolves a data entry to a data Object.\n   * @param {string|Object} idOrInstance The id or instance of something in this Manager\n   * @returns {?Object} An instance from this Manager\n   */\n  resolve(idOrInstance) {\n    if (idOrInstance instanceof this.holds) return idOrInstance;\n    if (typeof idOrInstance === 'string') return this.cache.get(idOrInstance) ?? null;\n    return null;\n  }\n\n  /**\n   * Resolves a data entry to an instance id.\n   * @param {string|Object} idOrInstance The id or instance of something in this Manager\n   * @returns {?Snowflake}\n   */\n  resolveId(idOrInstance) {\n    if (idOrInstance instanceof this.holds) return idOrInstance.id;\n    if (typeof idOrInstance === 'string') return idOrInstance;\n    return null;\n  }\n\n  valueOf() {\n    return this.cache;\n  }\n}\n\nmodule.exports = DataManager;\n","'use strict';\n\nconst ApplicationCommandManager = require('./ApplicationCommandManager');\nconst ApplicationCommandPermissionsManager = require('./ApplicationCommandPermissionsManager');\n\n/**\n * An extension for guild-specific application commands.\n * @extends {ApplicationCommandManager}\n */\nclass GuildApplicationCommandManager extends ApplicationCommandManager {\n  constructor(guild, iterable) {\n    super(guild.client, iterable);\n\n    /**\n     * The guild that this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The manager for permissions of arbitrary commands on this guild\n     * @type {ApplicationCommandPermissionsManager}\n     */\n    this.permissions = new ApplicationCommandPermissionsManager(this);\n  }\n}\n\nmodule.exports = GuildApplicationCommandManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst { TypeError, Error } = require('../errors');\nconst GuildBan = require('../structures/GuildBan');\nconst GuildMember = require('../structures/GuildMember');\n\n/**\n * Manages API methods for GuildBans and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildBanManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, GuildBan, iterable);\n\n    /**\n     * The guild this Manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, GuildBan>}\n   * @name GuildBanManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.user.id, extras: [this.guild] });\n  }\n\n  /**\n   * Data that resolves to give a GuildBan object. This can be:\n   * * A GuildBan object\n   * * A User resolvable\n   * @typedef {GuildBan|UserResolvable} GuildBanResolvable\n   */\n\n  /**\n   * Resolves a GuildBanResolvable to a GuildBan object.\n   * @param {GuildBanResolvable} ban The ban that is in the guild\n   * @returns {?GuildBan}\n   */\n  resolve(ban) {\n    return super.resolve(ban) ?? super.resolve(this.client.users.resolveId(ban));\n  }\n\n  /**\n   * Options used to fetch a single ban from a guild.\n   * @typedef {BaseFetchOptions} FetchBanOptions\n   * @property {UserResolvable} user The ban to fetch\n   */\n\n  /**\n   * Options used to fetch all bans from a guild.\n   * @typedef {Object} FetchBansOptions\n   * @property {boolean} cache Whether or not to cache the fetched bans\n   */\n\n  /**\n   * Fetches ban(s) from Discord.\n   * @param {UserResolvable|FetchBanOptions|FetchBansOptions} [options] Options for fetching guild ban(s)\n   * @returns {Promise<GuildBan|Collection<Snowflake, GuildBan>>}\n   * @example\n   * // Fetch all bans from a guild\n   * guild.bans.fetch()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch all bans from a guild without caching\n   * guild.bans.fetch({ cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single ban\n   * guild.bans.fetch('351871113346809860')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single ban without checking cache\n   * guild.bans.fetch({ user, force: true })\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Fetch a single ban without caching\n   * guild.bans.fetch({ user, cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    const user = this.client.users.resolveId(options);\n    if (user) return this._fetchSingle({ user, cache: true });\n    if (options.user) {\n      options.user = this.client.users.resolveId(options.user);\n    }\n    if (!options.user) {\n      if ('cache' in options) return this._fetchMany(options.cache);\n      return Promise.reject(new Error('FETCH_BAN_RESOLVE_ID'));\n    }\n    return this._fetchSingle(options);\n  }\n\n  async _fetchSingle({ user, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(user);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).bans(user).get();\n    return this._add(data, cache);\n  }\n\n  async _fetchMany(cache) {\n    const data = await this.client.api.guilds(this.guild.id).bans.get();\n    return data.reduce((col, ban) => col.set(ban.user.id, this._add(ban, cache)), new Collection());\n  }\n\n  /**\n   * Options used to ban a user from a guild.\n   * @typedef {Object} BanOptions\n   * @property {number} [days=0] Number of days of messages to delete, must be between 0 and 7, inclusive\n   * @property {string} [reason] The reason for the ban\n   */\n\n  /**\n   * Bans a user from the guild.\n   * @param {UserResolvable} user The user to ban\n   * @param {BanOptions} [options] Options for the ban\n   * @returns {Promise<GuildMember|User|Snowflake>} Result object will be resolved as specifically as possible.\n   * If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot\n   * be resolved, the user id will be the result.\n   * @example\n   * // Ban a user by id (or with a user/guild member object)\n   * guild.bans.create('84484653687267328')\n   *   .then(banInfo => console.log(`Banned ${banInfo.user?.tag ?? banInfo.tag ?? banInfo}`))\n   *   .catch(console.error);\n   */\n  async create(user, options = { days: 0 }) {\n    if (typeof options !== 'object') throw new TypeError('INVALID_TYPE', 'options', 'object', true);\n    const id = this.client.users.resolveId(user);\n    if (!id) throw new Error('BAN_RESOLVE_ID', true);\n    await this.client.api\n      .guilds(this.guild.id)\n      .bans(id)\n      .put({\n        data: {\n          reason: options.reason,\n          delete_message_days: options.days,\n        },\n      });\n    if (user instanceof GuildMember) return user;\n    const _user = this.client.users.resolve(id);\n    if (_user) {\n      return this.guild.members.resolve(_user) ?? _user;\n    }\n    return id;\n  }\n\n  /**\n   * Unbans a user from the guild.\n   * @param {UserResolvable} user The user to unban\n   * @param {string} [reason] Reason for unbanning user\n   * @returns {Promise<User>}\n   * @example\n   * // Unban a user by id (or with a user/guild member object)\n   * guild.bans.remove('84484653687267328')\n   *   .then(user => console.log(`Unbanned ${user.username} from ${guild.name}`))\n   *   .catch(console.error);\n   */\n  async remove(user, reason) {\n    const id = this.client.users.resolveId(user);\n    if (!id) throw new Error('BAN_RESOLVE_ID');\n    await this.client.api.guilds(this.guild.id).bans(id).delete({ reason });\n    return this.client.users.resolve(user);\n  }\n}\n\nmodule.exports = GuildBanManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst ThreadManager = require('./ThreadManager');\nconst { Error } = require('../errors');\nconst GuildChannel = require('../structures/GuildChannel');\nconst PermissionOverwrites = require('../structures/PermissionOverwrites');\nconst ThreadChannel = require('../structures/ThreadChannel');\nconst { ChannelTypes, ThreadChannelTypes } = require('../util/Constants');\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for GuildChannels and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildChannelManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, GuildChannel, iterable);\n    const defaultCaching =\n      this._cache.constructor.name === 'Collection' ||\n      ((this._cache.maxSize === undefined || this._cache.maxSize === Infinity) &&\n        (this._cache.sweepFilter === undefined || this._cache.sweepFilter.isDefault));\n    if (!cacheWarningEmitted && !defaultCaching) {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n\n    /**\n     * The guild this Manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The number of channels in this managers cache excluding thread channels\n   * that do not count towards a guild's maximum channels restriction.\n   * @type {number}\n   * @readonly\n   */\n  get channelCountWithoutThreads() {\n    return this.cache.reduce((acc, channel) => {\n      if (ThreadChannelTypes.includes(channel.type)) return acc;\n      return ++acc;\n    }, 0);\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, GuildChannel|ThreadChannel>}\n   * @name GuildChannelManager#cache\n   */\n\n  _add(channel) {\n    const existing = this.cache.get(channel.id);\n    if (existing) return existing;\n    this.cache.set(channel.id, channel);\n    return channel;\n  }\n\n  /**\n   * Data that can be resolved to give a Guild Channel object. This can be:\n   * * A GuildChannel object\n   * * A ThreadChannel object\n   * * A Snowflake\n   * @typedef {GuildChannel|ThreadChannel|Snowflake} GuildChannelResolvable\n   */\n\n  /**\n   * Resolves a GuildChannelResolvable to a Channel object.\n   * @param {GuildChannelResolvable} channel The GuildChannel resolvable to resolve\n   * @returns {?(GuildChannel|ThreadChannel)}\n   */\n  resolve(channel) {\n    if (channel instanceof ThreadChannel) return super.resolve(channel.id);\n    return super.resolve(channel);\n  }\n\n  /**\n   * Resolves a GuildChannelResolvable to a channel id.\n   * @param {GuildChannelResolvable} channel The GuildChannel resolvable to resolve\n   * @returns {?Snowflake}\n   */\n  resolveId(channel) {\n    if (channel instanceof ThreadChannel) return super.resolveId(channel.id);\n    return super.resolveId(channel);\n  }\n\n  /**\n   * Options used to create a new channel in a guild.\n   * @typedef {Object} GuildChannelCreateOptions\n   * @property {string|number} [type='GUILD_TEXT'] The type of the new channel, either `GUILD_TEXT`, `GUILD_VOICE`,\n   * `GUILD_CATEGORY`, `GUILD_NEWS`, `GUILD_STORE`, or `GUILD_STAGE_VOICE`\n   * @property {string} [topic] The topic for the new channel\n   * @property {boolean} [nsfw] Whether the new channel is nsfw\n   * @property {number} [bitrate] Bitrate of the new channel in bits (only voice)\n   * @property {number} [userLimit] Maximum amount of users allowed in the new channel (only voice)\n   * @property {CategoryChannelResolvable} [parent] Parent of the new channel\n   * @property {OverwriteResolvable[]|Collection<Snowflake, OverwriteResolvable>} [permissionOverwrites]\n   * Permission overwrites of the new channel\n   * @property {number} [position] Position of the new channel\n   * @property {number} [rateLimitPerUser] The ratelimit per user for the new channel\n   * @property {string} [reason] Reason for creating the new channel\n   */\n\n  /**\n   * Creates a new channel in the guild.\n   * @param {string} name The name of the new channel\n   * @param {GuildChannelCreateOptions} [options={}] Options for creating the new channel\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Create a new text channel\n   * guild.channels.create('new-general', { reason: 'Needed a cool new channel' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Create a new channel with permission overwrites\n   * guild.channels.create('new-voice', {\n   *   type: 'GUILD_VOICE',\n   *   permissionOverwrites: [\n   *      {\n   *        id: message.author.id,\n   *        deny: [Permissions.FLAGS.VIEW_CHANNEL],\n   *     },\n   *   ],\n   * })\n   */\n  async create(\n    name,\n    { type, topic, nsfw, bitrate, userLimit, parent, permissionOverwrites, position, rateLimitPerUser, reason } = {},\n  ) {\n    if (parent) parent = this.client.channels.resolveId(parent);\n    if (permissionOverwrites) {\n      permissionOverwrites = permissionOverwrites.map(o => PermissionOverwrites.resolve(o, this.guild));\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).channels.post({\n      data: {\n        name,\n        topic,\n        type: typeof type === 'number' ? type : ChannelTypes[type] ?? ChannelTypes.GUILD_TEXT,\n        nsfw,\n        bitrate,\n        user_limit: userLimit,\n        parent_id: parent,\n        position,\n        permission_overwrites: permissionOverwrites,\n        rate_limit_per_user: rateLimitPerUser,\n      },\n      reason,\n    });\n    return this.client.actions.ChannelCreate.handle(data).channel;\n  }\n\n  /**\n   * Obtains one or more guild channels from Discord, or the channel cache if they're already available.\n   * @param {Snowflake} [id] The channel's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<?GuildChannel|Collection<Snowflake, GuildChannel>>}\n   * @example\n   * // Fetch all channels from the guild (excluding threads)\n   * message.guild.channels.fetch()\n   *   .then(channels => console.log(`There are ${channels.size} channels.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single channel\n   * message.guild.channels.fetch('222197033908436994')\n   *   .then(channel => console.log(`The channel name is: ${channel.name}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id && !force) {\n      const existing = this.cache.get(id);\n      if (existing) return existing;\n    }\n\n    if (id) {\n      const data = await this.client.api.channels(id).get();\n      // Since this is the guild manager, throw if on a different guild\n      if (this.guild.id !== data.guild_id) throw new Error('GUILD_CHANNEL_UNOWNED');\n      return this.client.channels._add(data, this.guild, { cache });\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).channels.get();\n    const channels = new Collection();\n    for (const channel of data) channels.set(channel.id, this.client.channels._add(channel, this.guild, { cache }));\n    return channels;\n  }\n\n  /**\n   * Obtains all active thread channels in the guild from Discord\n   * @param {boolean} [cache=true] Whether to cache the fetched data\n   * @returns {Promise<FetchedThreads>}\n   * @example\n   * // Fetch all threads from the guild\n   * message.guild.channels.fetchActiveThreads()\n   *   .then(fetched => console.log(`There are ${fetched.threads.size} threads.`))\n   *   .catch(console.error);\n   */\n  async fetchActiveThreads(cache = true) {\n    const raw = await this.client.api.guilds(this.guild.id).threads.active.get();\n    return ThreadManager._mapThreads(raw, this.client, { guild: this.guild, cache });\n  }\n}\n\nmodule.exports = GuildChannelManager;\n\n/**\n * @external APIActiveThreadsList\n * @see {@link https://discord.com/developers/docs/resources/guild#list-active-threads-response-body}\n */\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst BaseGuildEmojiManager = require('./BaseGuildEmojiManager');\nconst { TypeError } = require('../errors');\nconst DataResolver = require('../util/DataResolver');\n\n/**\n * Manages API methods for GuildEmojis and stores their cache.\n * @extends {BaseGuildEmojiManager}\n */\nclass GuildEmojiManager extends BaseGuildEmojiManager {\n  constructor(guild, iterable) {\n    super(guild.client, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.guild] });\n  }\n\n  /**\n   * Options used for creating an emoji in a guild.\n   * @typedef {Object} GuildEmojiCreateOptions\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] The roles to limit the emoji to\n   * @property {string} [reason] The reason for creating the emoji\n   */\n\n  /**\n   * Creates a new custom emoji in the guild.\n   * @param {BufferResolvable|Base64Resolvable} attachment The image for the emoji\n   * @param {string} name The name for the emoji\n   * @param {GuildEmojiCreateOptions} [options] Options for creating the emoji\n   * @returns {Promise<Emoji>} The created emoji\n   * @example\n   * // Create a new emoji from a url\n   * guild.emojis.create('https://i.imgur.com/w3duR07.png', 'rip')\n   *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}!`))\n   *   .catch(console.error);\n   * @example\n   * // Create a new emoji from a file on your computer\n   * guild.emojis.create('./memes/banana.png', 'banana')\n   *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}!`))\n   *   .catch(console.error);\n   */\n  async create(attachment, name, { roles, reason } = {}) {\n    attachment = await DataResolver.resolveImage(attachment);\n    if (!attachment) throw new TypeError('REQ_RESOURCE_TYPE');\n\n    const data = { image: attachment, name };\n    if (roles) {\n      if (!Array.isArray(roles) && !(roles instanceof Collection)) {\n        throw new TypeError('INVALID_TYPE', 'options.roles', 'Array or Collection of Roles or Snowflakes', true);\n      }\n      data.roles = [];\n      for (const role of roles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) throw new TypeError('INVALID_ELEMENT', 'Array or Collection', 'options.roles', role);\n        data.roles.push(resolvedRole);\n      }\n    }\n\n    const emoji = await this.client.api.guilds(this.guild.id).emojis.post({ data, reason });\n    return this.client.actions.GuildEmojiCreate.handle(this.guild, emoji).emoji;\n  }\n\n  /**\n   * Obtains one or more emojis from Discord, or the emoji cache if they're already available.\n   * @param {Snowflake} [id] The emoji's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<GuildEmoji|Collection<Snowflake, GuildEmoji>>}\n   * @example\n   * // Fetch all emojis from the guild\n   * message.guild.emojis.fetch()\n   *   .then(emojis => console.log(`There are ${emojis.size} emojis.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single emoji\n   * message.guild.emojis.fetch('222078108977594368')\n   *   .then(emoji => console.log(`The emoji name is: ${emoji.name}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id) {\n      if (!force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n      const emoji = await this.client.api.guilds(this.guild.id).emojis(id).get();\n      return this._add(emoji, cache);\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).emojis.get();\n    const emojis = new Collection();\n    for (const emoji of data) emojis.set(emoji.id, this._add(emoji, cache));\n    return emojis;\n  }\n}\n\nmodule.exports = GuildEmojiManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst DataManager = require('./DataManager');\nconst { TypeError } = require('../errors');\nconst Role = require('../structures/Role');\n\n/**\n * Manages API methods for roles belonging to emojis and stores their cache.\n * @extends {DataManager}\n */\nclass GuildEmojiRoleManager extends DataManager {\n  constructor(emoji) {\n    super(emoji.client, Role);\n\n    /**\n     * The emoji belonging to this manager\n     * @type {GuildEmoji}\n     */\n    this.emoji = emoji;\n    /**\n     * The guild belonging to this manager\n     * @type {Guild}\n     */\n    this.guild = emoji.guild;\n  }\n\n  /**\n   * The cache of roles belonging to this emoji\n   * @type {Collection<Snowflake, Role>}\n   * @readonly\n   */\n  get cache() {\n    return this.guild.roles.cache.filter(role => this.emoji._roles.includes(role.id));\n  }\n\n  /**\n   * Adds a role (or multiple roles) to the list of roles that can use this emoji.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to add\n   * @returns {Promise<GuildEmoji>}\n   */\n  add(roleOrRoles) {\n    if (!Array.isArray(roleOrRoles) && !(roleOrRoles instanceof Collection)) roleOrRoles = [roleOrRoles];\n\n    const resolvedRoles = [];\n    for (const role of roleOrRoles.values()) {\n      const resolvedRole = this.guild.roles.resolveId(role);\n      if (!resolvedRole) {\n        return Promise.reject(new TypeError('INVALID_ELEMENT', 'Array or Collection', 'roles', role));\n      }\n      resolvedRoles.push(resolvedRole);\n    }\n\n    const newRoles = [...new Set(resolvedRoles.concat(...this.cache.values()))];\n    return this.set(newRoles);\n  }\n\n  /**\n   * Removes a role (or multiple roles) from the list of roles that can use this emoji.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to remove\n   * @returns {Promise<GuildEmoji>}\n   */\n  remove(roleOrRoles) {\n    if (!Array.isArray(roleOrRoles) && !(roleOrRoles instanceof Collection)) roleOrRoles = [roleOrRoles];\n\n    const resolvedRoleIds = [];\n    for (const role of roleOrRoles.values()) {\n      const roleId = this.guild.roles.resolveId(role);\n      if (!roleId) {\n        return Promise.reject(new TypeError('INVALID_ELEMENT', 'Array or Collection', 'roles', role));\n      }\n      resolvedRoleIds.push(roleId);\n    }\n\n    const newRoles = [...this.cache.keys()].filter(id => !resolvedRoleIds.includes(id));\n    return this.set(newRoles);\n  }\n\n  /**\n   * Sets the role(s) that can use this emoji.\n   * @param {Collection<Snowflake, Role>|RoleResolvable[]} roles The roles or role ids to apply\n   * @returns {Promise<GuildEmoji>}\n   * @example\n   * // Set the emoji's roles to a single role\n   * guildEmoji.roles.set(['391156570408615936'])\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove all roles from an emoji\n   * guildEmoji.roles.set([])\n   *    .then(console.log)\n   *    .catch(console.error);\n   */\n  set(roles) {\n    return this.emoji.edit({ roles });\n  }\n\n  clone() {\n    const clone = new this.constructor(this.emoji);\n    clone._patch([...this.cache.keys()]);\n    return clone;\n  }\n\n  /**\n   * Patches the roles for this manager's cache\n   * @param {Snowflake[]} roles The new roles\n   * @private\n   */\n  _patch(roles) {\n    this.emoji._roles = roles;\n  }\n\n  valueOf() {\n    return this.cache;\n  }\n}\n\nmodule.exports = GuildEmojiRoleManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst { Error } = require('../errors');\nconst Invite = require('../structures/Invite');\nconst DataResolver = require('../util/DataResolver');\n\n/**\n * Manages API methods for GuildInvites and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildInviteManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, Invite, iterable);\n\n    /**\n     * The guild this Manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<string, Invite>}\n   * @name GuildInviteManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.code, extras: [this.guild] });\n  }\n\n  /**\n   * Data that resolves to give an Invite object. This can be:\n   * * An invite code\n   * * An invite URL\n   * @typedef {string} InviteResolvable\n   */\n\n  /**\n   * Resolves an InviteResolvable to an Invite object.\n   * @method resolve\n   * @memberof GuildInviteManager\n   * @instance\n   * @param {InviteResolvable} invite The invite resolvable to resolve\n   * @returns {?Invite}\n   */\n\n  /**\n   * Resolves an InviteResolvable to an invite code string.\n   * @method resolveId\n   * @memberof GuildInviteManager\n   * @instance\n   * @param {InviteResolvable} invite The invite resolvable to resolve\n   * @returns {?string}\n   */\n\n  /**\n   * Options used to fetch a single invite from a guild.\n   * @typedef {Object} FetchInviteOptions\n   * @property {InviteResolvable} code The invite to fetch\n   * @property {boolean} [cache=true] Whether or not to cache the fetched invite\n   * @property {boolean} [force=false] Whether to skip the cache check and request the API\n   */\n\n  /**\n   * Options used to fetch all invites from a guild.\n   * @typedef {Object} FetchInvitesOptions\n   * @property {GuildChannelResolvable} [channelId] The channel to fetch all invites from\n   * @property {boolean} [cache=true] Whether or not to cache the fetched invites\n   */\n\n  /**\n   * Fetches invite(s) from Discord.\n   * @param {InviteResolvable|FetchInviteOptions|FetchInvitesOptions} [options] Options for fetching guild invite(s)\n   * @returns {Promise<Invite|Collection<string, Invite>>}\n   * @example\n   * // Fetch all invites from a guild\n   * guild.invites.fetch()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch all invites from a guild without caching\n   * guild.invites.fetch({ cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch all invites from a channel\n   * guild.invites.fetch({ channelId: '222197033908436994' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single invite\n   * guild.invites.fetch('bRCvFy9')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single invite without checking cache\n   * guild.invites.fetch({ code: 'bRCvFy9', force: true })\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Fetch a single invite without caching\n   * guild.invites.fetch({ code: 'bRCvFy9', cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    if (typeof options === 'string') {\n      const code = DataResolver.resolveInviteCode(options);\n      if (!code) return Promise.reject(new Error('INVITE_RESOLVE_CODE'));\n      return this._fetchSingle({ code, cache: true });\n    }\n    if (!options.code) {\n      if (options.channelId) {\n        const id = this.guild.channels.resolveId(options.channelId);\n        if (!id) return Promise.reject(new Error('GUILD_CHANNEL_RESOLVE'));\n        return this._fetchChannelMany(id, options.cache);\n      }\n\n      if ('cache' in options) return this._fetchMany(options.cache);\n      return Promise.reject(new Error('INVITE_RESOLVE_CODE'));\n    }\n    return this._fetchSingle({\n      ...options,\n      code: DataResolver.resolveInviteCode(options.code),\n    });\n  }\n\n  async _fetchSingle({ code, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(code);\n      if (existing) return existing;\n    }\n\n    const invites = await this._fetchMany(cache);\n    const invite = invites.get(code);\n    if (!invite) throw new Error('INVITE_NOT_FOUND');\n    return invite;\n  }\n\n  async _fetchMany(cache) {\n    const data = await this.client.api.guilds(this.guild.id).invites.get();\n    return data.reduce((col, invite) => col.set(invite.code, this._add(invite, cache)), new Collection());\n  }\n\n  async _fetchChannelMany(channelId, cache) {\n    const data = await this.client.api.channels(channelId).invites.get();\n    return data.reduce((col, invite) => col.set(invite.code, this._add(invite, cache)), new Collection());\n  }\n\n  /**\n   * Create an invite to the guild from the provided channel.\n   * @param {GuildChannelResolvable} channel The options for creating the invite from a channel.\n   * @param {CreateInviteOptions} [options={}] The options for creating the invite from a channel.\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a selected channel\n   * guild.invites.create('599942732013764608')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async create(\n    channel,\n    { temporary = false, maxAge = 86400, maxUses = 0, unique, targetUser, targetApplication, targetType, reason } = {},\n  ) {\n    const id = this.guild.channels.resolveId(channel);\n    if (!id) throw new Error('GUILD_CHANNEL_RESOLVE');\n\n    const invite = await this.client.api.channels(id).invites.post({\n      data: {\n        temporary,\n        max_age: maxAge,\n        max_uses: maxUses,\n        unique,\n        target_user_id: this.client.users.resolveId(targetUser),\n        target_application_id: targetApplication?.id ?? targetApplication?.applicationId ?? targetApplication,\n        target_type: targetType,\n      },\n      reason,\n    });\n    return new Invite(this.client, invite);\n  }\n\n  /**\n   * Deletes an invite.\n   * @param {InviteResolvable} invite The invite to delete\n   * @param {string} [reason] Reason for deleting the invite\n   * @returns {Promise<void>}\n   */\n  async delete(invite, reason) {\n    const code = DataResolver.resolveInviteCode(invite);\n\n    await this.client.api.invites(code).delete({ reason });\n  }\n}\n\nmodule.exports = GuildInviteManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst Guild = require('../structures/Guild');\nconst GuildChannel = require('../structures/GuildChannel');\nconst GuildEmoji = require('../structures/GuildEmoji');\nconst GuildMember = require('../structures/GuildMember');\nconst Invite = require('../structures/Invite');\nconst OAuth2Guild = require('../structures/OAuth2Guild');\nconst Role = require('../structures/Role');\nconst {\n  ChannelTypes,\n  Events,\n  VerificationLevels,\n  DefaultMessageNotificationLevels,\n  ExplicitContentFilterLevels,\n} = require('../util/Constants');\nconst DataResolver = require('../util/DataResolver');\nconst Permissions = require('../util/Permissions');\nconst SystemChannelFlags = require('../util/SystemChannelFlags');\nconst { resolveColor } = require('../util/Util');\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for Guilds and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, Guild, iterable);\n    if (!cacheWarningEmitted && this._cache.constructor.name !== 'Collection') {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, Guild>}\n   * @name GuildManager#cache\n   */\n\n  /**\n   * Data that resolves to give a Guild object. This can be:\n   * * A Guild object\n   * * A GuildChannel object\n   * * A GuildEmoji object\n   * * A Role object\n   * * A Snowflake\n   * * An Invite object\n   * @typedef {Guild|GuildChannel|GuildMember|GuildEmoji|Role|Snowflake|Invite} GuildResolvable\n   */\n\n  /**\n   * Partial data for a Role.\n   * @typedef {Object} PartialRoleData\n   * @property {Snowflake|number} [id] The role's id, used to set channel overrides,\n   * this is a placeholder and will be replaced by the API after consumption\n   * @property {string} [name] The name of the role\n   * @property {ColorResolvable} [color] The color of the role, either a hex string or a base 10 number\n   * @property {boolean} [hoist] Whether or not the role should be hoisted\n   * @property {number} [position] The position of the role\n   * @property {PermissionResolvable} [permissions] The permissions of the role\n   * @property {boolean} [mentionable] Whether or not the role should be mentionable\n   */\n\n  /**\n   * Partial overwrite data.\n   * @typedef {Object} PartialOverwriteData\n   * @property {Snowflake|number} id The id of the {@link Role} or {@link User} this overwrite belongs to\n   * @property {string} [type] The type of this overwrite\n   * @property {PermissionResolvable} [allow] The permissions to allow\n   * @property {PermissionResolvable} [deny] The permissions to deny\n   */\n\n  /**\n   * Partial data for a Channel.\n   * @typedef {Object} PartialChannelData\n   * @property {Snowflake|number} [id] The channel's id, used to set its parent,\n   * this is a placeholder and will be replaced by the API after consumption\n   * @property {Snowflake|number} [parentId] The parent id for this channel\n   * @property {ChannelType} [type] The type of the channel\n   * @property {string} name The name of the channel\n   * @property {string} [topic] The topic of the text channel\n   * @property {boolean} [nsfw] Whether the channel is NSFW\n   * @property {number} [bitrate] The bitrate of the voice channel\n   * @property {number} [userLimit] The user limit of the channel\n   * @property {PartialOverwriteData[]} [permissionOverwrites]\n   * Overwrites of the channel\n   * @property {number} [rateLimitPerUser] The rate limit per user of the channel in seconds\n   */\n\n  /**\n   * Resolves a GuildResolvable to a Guild object.\n   * @method resolve\n   * @memberof GuildManager\n   * @instance\n   * @param {GuildResolvable} guild The guild resolvable to identify\n   * @returns {?Guild}\n   */\n  resolve(guild) {\n    if (\n      guild instanceof GuildChannel ||\n      guild instanceof GuildMember ||\n      guild instanceof GuildEmoji ||\n      guild instanceof Role ||\n      (guild instanceof Invite && guild.guild)\n    ) {\n      return super.resolve(guild.guild);\n    }\n    return super.resolve(guild);\n  }\n\n  /**\n   * Resolves a {@link GuildResolvable} to a {@link Guild} id string.\n   * @method resolveId\n   * @memberof GuildManager\n   * @instance\n   * @param {GuildResolvable} guild The guild resolvable to identify\n   * @returns {?Snowflake}\n   */\n  resolveId(guild) {\n    if (\n      guild instanceof GuildChannel ||\n      guild instanceof GuildMember ||\n      guild instanceof GuildEmoji ||\n      guild instanceof Role ||\n      (guild instanceof Invite && guild.guild)\n    ) {\n      return super.resolveId(guild.guild.id);\n    }\n    return super.resolveId(guild);\n  }\n\n  /**\n   * Options used to create a guild.\n   * @typedef {Object} GuildCreateOptions\n   * @property {Snowflake|number} [afkChannelId] The AFK channel's id\n   * @property {number} [afkTimeout] The AFK timeout in seconds\n   * @property {PartialChannelData[]} [channels=[]] The channels for this guild\n   * @property {DefaultMessageNotificationLevel|number} [defaultMessageNotifications] The default message notifications\n   * for the guild\n   * @property {ExplicitContentFilterLevel} [explicitContentFilter] The explicit content filter level for the guild\n   * @property {BufferResolvable|Base64Resolvable} [icon=null] The icon for the guild\n   * @property {PartialRoleData[]} [roles=[]] The roles for this guild,\n   * the first element of this array is used to change properties of the guild's everyone role.\n   * @property {Snowflake|number} [systemChannelId] The system channel's id\n   * @property {SystemChannelFlagsResolvable} [systemChannelFlags] The flags of the system channel\n   * @property {VerificationLevel} [verificationLevel] The verification level for the guild\n   */\n\n  /**\n   * Creates a guild.\n   * <warn>This is only available to bots in fewer than 10 guilds.</warn>\n   * @param {string} name The name of the guild\n   * @param {GuildCreateOptions} [options] Options for creating the guild\n   * @returns {Promise<Guild>} The guild that was created\n   */\n  async create(\n    name,\n    {\n      afkChannelId,\n      afkTimeout,\n      channels = [],\n      defaultMessageNotifications,\n      explicitContentFilter,\n      icon = null,\n      roles = [],\n      systemChannelId,\n      systemChannelFlags,\n      verificationLevel,\n    } = {},\n  ) {\n    icon = await DataResolver.resolveImage(icon);\n    if (typeof verificationLevel === 'string') {\n      verificationLevel = VerificationLevels[verificationLevel];\n    }\n    if (typeof defaultMessageNotifications === 'string') {\n      defaultMessageNotifications = DefaultMessageNotificationLevels[defaultMessageNotifications];\n    }\n    if (typeof explicitContentFilter === 'string') {\n      explicitContentFilter = ExplicitContentFilterLevels[explicitContentFilter];\n    }\n    for (const channel of channels) {\n      if (channel.type) channel.type = ChannelTypes[channel.type.toUpperCase()];\n      channel.parent_id = channel.parentId;\n      delete channel.parentId;\n      if (!channel.permissionOverwrites) continue;\n      for (const overwrite of channel.permissionOverwrites) {\n        if (overwrite.allow) overwrite.allow = Permissions.resolve(overwrite.allow).toString();\n        if (overwrite.deny) overwrite.deny = Permissions.resolve(overwrite.deny).toString();\n      }\n      channel.permission_overwrites = channel.permissionOverwrites;\n      delete channel.permissionOverwrites;\n    }\n    for (const role of roles) {\n      if (role.color) role.color = resolveColor(role.color);\n      if (role.permissions) role.permissions = Permissions.resolve(role.permissions).toString();\n    }\n    if (systemChannelFlags) systemChannelFlags = SystemChannelFlags.resolve(systemChannelFlags);\n\n    const data = await this.client.api.guilds.post({\n      data: {\n        name,\n        icon,\n        verification_level: verificationLevel,\n        default_message_notifications: defaultMessageNotifications,\n        explicit_content_filter: explicitContentFilter,\n        roles,\n        channels,\n        afk_channel_id: afkChannelId,\n        afk_timeout: afkTimeout,\n        system_channel_id: systemChannelId,\n        system_channel_flags: systemChannelFlags,\n      },\n    });\n\n    if (this.client.guilds.cache.has(data.id)) return this.client.guilds.cache.get(data.id);\n\n    return new Promise(resolve => {\n      const handleGuild = guild => {\n        if (guild.id === data.id) {\n          clearTimeout(timeout);\n          this.client.removeListener(Events.GUILD_CREATE, handleGuild);\n          this.client.decrementMaxListeners();\n          resolve(guild);\n        }\n      };\n      this.client.incrementMaxListeners();\n      this.client.on(Events.GUILD_CREATE, handleGuild);\n\n      const timeout = setTimeout(() => {\n        this.client.removeListener(Events.GUILD_CREATE, handleGuild);\n        this.client.decrementMaxListeners();\n        resolve(this.client.guilds._add(data));\n      }, 10000).unref();\n    });\n  }\n\n  /**\n   * Options used to fetch a single guild.\n   * @typedef {BaseFetchOptions} FetchGuildOptions\n   * @property {GuildResolvable} guild The guild to fetch\n   * @property {boolean} [withCounts=true] Whether the approximate member and presence counts should be returned\n   */\n\n  /**\n   * Options used to fetch multiple guilds.\n   * @typedef {Object} FetchGuildsOptions\n   * @property {Snowflake} [before] Get guilds before this guild id\n   * @property {Snowflake} [after] Get guilds after this guild id\n   * @property {number} [limit=200] Maximum number of guilds to request (1-200)\n   */\n\n  /**\n   * Obtains one or multiple guilds from Discord, or the guild cache if it's already available.\n   * @param {GuildResolvable|FetchGuildOptions|FetchGuildsOptions} [options] The guild's id or options\n   * @returns {Promise<Guild|Collection<Snowflake, OAuth2Guild>>}\n   */\n  async fetch(options = {}) {\n    const id = this.resolveId(options) ?? this.resolveId(options.guild);\n\n    if (id) {\n      if (!options.force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n\n      const data = await this.client.api.guilds(id).get({ query: { with_counts: options.withCounts ?? true } });\n      return this._add(data, options.cache);\n    }\n\n    const data = await this.client.api.users('@me').guilds.get({ query: options });\n    return data.reduce((coll, guild) => coll.set(guild.id, new OAuth2Guild(this.client, guild)), new Collection());\n  }\n}\n\nmodule.exports = GuildManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst { Error, TypeError, RangeError } = require('../errors');\nconst BaseGuildVoiceChannel = require('../structures/BaseGuildVoiceChannel');\nconst GuildMember = require('../structures/GuildMember');\nconst Role = require('../structures/Role');\nconst { Events, Opcodes } = require('../util/Constants');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Manages API methods for GuildMembers and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildMemberManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, GuildMember, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, GuildMember>}\n   * @name GuildMemberManager#cache\n   */\n\n  _add(data, cache = true) {\n    return super._add(data, cache, { id: data.user.id, extras: [this.guild] });\n  }\n\n  /**\n   * Data that resolves to give a GuildMember object. This can be:\n   * * A GuildMember object\n   * * A User resolvable\n   * @typedef {GuildMember|UserResolvable} GuildMemberResolvable\n   */\n\n  /**\n   * Resolves a {@link GuildMemberResolvable} to a {@link GuildMember} object.\n   * @param {GuildMemberResolvable} member The user that is part of the guild\n   * @returns {?GuildMember}\n   */\n  resolve(member) {\n    const memberResolvable = super.resolve(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    if (userResolvable) return super.resolve(userResolvable);\n    return null;\n  }\n\n  /**\n   * Resolves a {@link GuildMemberResolvable} to a member id.\n   * @param {GuildMemberResolvable} member The user that is part of the guild\n   * @returns {?Snowflake}\n   */\n  resolveId(member) {\n    const memberResolvable = super.resolveId(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    return this.cache.has(userResolvable) ? userResolvable : null;\n  }\n\n  /**\n   * Options used to add a user to a guild using OAuth2.\n   * @typedef {Object} AddGuildMemberOptions\n   * @property {string} accessToken An OAuth2 access token for the user with the `guilds.join` scope granted to the\n   * bot's application\n   * @property {string} [nick] The nickname to give to the member (requires `MANAGE_NICKNAMES`)\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] The roles to add to the member\n   * (requires `MANAGE_ROLES`)\n   * @property {boolean} [mute] Whether the member should be muted (requires `MUTE_MEMBERS`)\n   * @property {boolean} [deaf] Whether the member should be deafened (requires `DEAFEN_MEMBERS`)\n   * @property {boolean} [force] Whehter to skip the cache check and call the API directly\n   * @property {boolean} [fetchWhenExisting=true] Whether to fetch the user if not cached and already a member\n   */\n\n  /**\n   * Adds a user to the guild using OAuth2. Requires the `CREATE_INSTANT_INVITE` permission.\n   * @param {UserResolvable} user The user to add to the guild\n   * @param {AddGuildMemberOptions} options Options for adding the user to the guild\n   * @returns {Promise<GuildMember|null>}\n   */\n  async add(user, options) {\n    const userId = this.client.users.resolveId(user);\n    if (!userId) throw new TypeError('INVALID_TYPE', 'user', 'UserResolvable');\n    if (!options.force) {\n      const cachedUser = this.cache.get(userId);\n      if (cachedUser) return cachedUser;\n    }\n    const resolvedOptions = {\n      access_token: options.accessToken,\n      nick: options.nick,\n      mute: options.mute,\n      deaf: options.deaf,\n    };\n    if (options.roles) {\n      if (!Array.isArray(options.roles) && !(options.roles instanceof Collection)) {\n        throw new TypeError('INVALID_TYPE', 'options.roles', 'Array or Collection of Roles or Snowflakes', true);\n      }\n      const resolvedRoles = [];\n      for (const role of options.roles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) throw new TypeError('INVALID_ELEMENT', 'Array or Collection', 'options.roles', role);\n        resolvedRoles.push(resolvedRole);\n      }\n      resolvedOptions.roles = resolvedRoles;\n    }\n    const data = await this.client.api.guilds(this.guild.id).members(userId).put({ data: resolvedOptions });\n    // Data is an empty buffer if the member is already part of the guild.\n    return data instanceof Buffer ? (options.fetchWhenExisting === false ? null : this.fetch(userId)) : this._add(data);\n  }\n\n  /**\n   * Options used to fetch a single member from a guild.\n   * @typedef {BaseFetchOptions} FetchMemberOptions\n   * @property {UserResolvable} user The user to fetch\n   */\n\n  /**\n   * Options used to fetch multiple members from a guild.\n   * @typedef {Object} FetchMembersOptions\n   * @property {UserResolvable|UserResolvable[]} user The user(s) to fetch\n   * @property {?string} query Limit fetch to members with similar usernames\n   * @property {number} [limit=0] Maximum number of members to request\n   * @property {boolean} [withPresences=false] Whether or not to include the presences\n   * @property {number} [time=120e3] Timeout for receipt of members\n   * @property {?string} nonce Nonce for this request (32 characters max - default to base 16 now timestamp)\n   * @property {boolean} [force=false] Whether to skip the cache check and request the API\n   */\n\n  /**\n   * Fetches member(s) from Discord, even if they're offline.\n   * @param {UserResolvable|FetchMemberOptions|FetchMembersOptions} [options] If a UserResolvable, the user to fetch.\n   * If undefined, fetches all members.\n   * If a query, it limits the results to users with similar usernames.\n   * @returns {Promise<GuildMember|Collection<Snowflake, GuildMember>>}\n   * @example\n   * // Fetch all members from a guild\n   * guild.members.fetch()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single member\n   * guild.members.fetch('66564597481480192')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single member without checking cache\n   * guild.members.fetch({ user, force: true })\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Fetch a single member without caching\n   * guild.members.fetch({ user, cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch by an array of users including their presences\n   * guild.members.fetch({ user: ['66564597481480192', '191615925336670208'], withPresences: true })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch by query\n   * guild.members.fetch({ query: 'hydra', limit: 1 })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    const user = this.client.users.resolveId(options);\n    if (user) return this._fetchSingle({ user, cache: true });\n    if (options.user) {\n      if (Array.isArray(options.user)) {\n        options.user = options.user.map(u => this.client.users.resolveId(u));\n        return this._fetchMany(options);\n      } else {\n        options.user = this.client.users.resolveId(options.user);\n      }\n      if (!options.limit && !options.withPresences) return this._fetchSingle(options);\n    }\n    return this._fetchMany(options);\n  }\n\n  /**\n   * Options used for searching guild members.\n   * @typedef {Object} GuildSearchMembersOptions\n   * @property {string} query Filter members whose username or nickname start with this query\n   * @property {number} [limit=1] Maximum number of members to search\n   * @property {boolean} [cache=true] Whether or not to cache the fetched member(s)\n   */\n\n  /**\n   * Searches for members in the guild based on a query.\n   * @param {GuildSearchMembersOptions} options Options for searching members\n   * @returns {Promise<Collection<Snowflake, GuildMember>>}\n   */\n  async search({ query, limit = 1, cache = true } = {}) {\n    const data = await this.client.api.guilds(this.guild.id).members.search.get({ query: { query, limit } });\n    return data.reduce((col, member) => col.set(member.user.id, this._add(member, cache)), new Collection());\n  }\n\n  /**\n   * Options used for listing guild members.\n   * @typedef {Object} GuildListMembersOptions\n   * @property {Snowflake} [after] Limit fetching members to those with an id greater than the supplied id\n   * @property {number} [limit=1] Maximum number of members to list\n   * @property {boolean} [cache=true] Whether or not to cache the fetched member(s)\n   */\n\n  /**\n   * Lists up to 1000 members of the guild.\n   * @param {GuildListMembersOptions} [options] Options for listing members\n   * @returns {Promise<Collection<Snowflake, GuildMember>>}\n   */\n  async list({ after, limit = 1, cache = true } = {}) {\n    const data = await this.client.api.guilds(this.guild.id).members.get({ query: { after, limit } });\n    return data.reduce((col, member) => col.set(member.user.id, this._add(member, cache)), new Collection());\n  }\n\n  /**\n   * Edits a member of the guild.\n   * <info>The user must be a member of the guild</info>\n   * @param {UserResolvable} user The member to edit\n   * @param {GuildMemberEditData} data The data to edit the member with\n   * @param {string} [reason] Reason for editing this user\n   * @returns {Promise<GuildMember>}\n   */\n  async edit(user, data, reason) {\n    const id = this.client.users.resolveId(user);\n    if (!id) throw new TypeError('INVALID_TYPE', 'user', 'UserResolvable');\n\n    // Clone the data object for immutability\n    const _data = { ...data };\n    if (_data.channel) {\n      _data.channel = this.guild.channels.resolve(_data.channel);\n      if (!(_data.channel instanceof BaseGuildVoiceChannel)) {\n        throw new Error('GUILD_VOICE_CHANNEL_RESOLVE');\n      }\n      _data.channel_id = _data.channel.id;\n      _data.channel = undefined;\n    } else if (_data.channel === null) {\n      _data.channel_id = null;\n      _data.channel = undefined;\n    }\n    if (_data.roles) _data.roles = _data.roles.map(role => (role instanceof Role ? role.id : role));\n    let endpoint = this.client.api.guilds(this.guild.id);\n    if (id === this.client.user.id) {\n      const keys = Object.keys(_data);\n      if (keys.length === 1 && keys[0] === 'nick') endpoint = endpoint.members('@me').nick;\n      else endpoint = endpoint.members(id);\n    } else {\n      endpoint = endpoint.members(id);\n    }\n    const d = await endpoint.patch({ data: _data, reason });\n\n    const clone = this.cache.get(id)?._clone();\n    clone?._patch(d);\n    return clone ?? this._add(d, false);\n  }\n\n  /**\n   * Options used for pruning guild members.\n   * <info>It's recommended to set {@link GuildPruneMembersOptions#count options.count}\n   * to `false` for large guilds.</info>\n   * @typedef {Object} GuildPruneMembersOptions\n   * @property {number} [days=7] Number of days of inactivity required to kick\n   * @property {boolean} [dry=false] Get the number of users that will be kicked, without actually kicking them\n   * @property {boolean} [count=true] Whether or not to return the number of users that have been kicked.\n   * @property {RoleResolvable[]} [roles] Array of roles to bypass the \"...and no roles\" constraint when pruning\n   * @property {string} [reason] Reason for this prune\n   */\n\n  /**\n   * Prunes members from the guild based on how long they have been inactive.\n   * @param {GuildPruneMembersOptions} [options] Options for pruning\n   * @returns {Promise<number|null>} The number of members that were/will be kicked\n   * @example\n   * // See how many members will be pruned\n   * guild.members.prune({ dry: true })\n   *   .then(pruned => console.log(`This will prune ${pruned} people!`))\n   *   .catch(console.error);\n   * @example\n   * // Actually prune the members\n   * guild.members.prune({ days: 1, reason: 'too many people!' })\n   *   .then(pruned => console.log(`I just pruned ${pruned} people!`))\n   *   .catch(console.error);\n   * @example\n   * // Include members with a specified role\n   * guild.members.prune({ days: 7, roles: ['657259391652855808'] })\n   *    .then(pruned => console.log(`I just pruned ${pruned} people!`))\n   *    .catch(console.error);\n   */\n  async prune({ days = 7, dry = false, count: compute_prune_count = true, roles = [], reason } = {}) {\n    if (typeof days !== 'number') throw new TypeError('PRUNE_DAYS_TYPE');\n\n    const query = { days };\n    const resolvedRoles = [];\n\n    for (const role of roles) {\n      const resolvedRole = this.guild.roles.resolveId(role);\n      if (!resolvedRole) {\n        throw new TypeError('INVALID_ELEMENT', 'Array', 'options.roles', role);\n      }\n      resolvedRoles.push(resolvedRole);\n    }\n\n    if (resolvedRoles.length) {\n      query.include_roles = dry ? resolvedRoles.join(',') : resolvedRoles;\n    }\n\n    const endpoint = this.client.api.guilds(this.guild.id).prune;\n\n    const { pruned } = await (dry\n      ? endpoint.get({ query, reason })\n      : endpoint.post({ data: { ...query, compute_prune_count }, reason }));\n\n    return pruned;\n  }\n\n  /**\n   * Kicks a user from the guild.\n   * <info>The user must be a member of the guild</info>\n   * @param {UserResolvable} user The member to kick\n   * @param {string} [reason] Reason for kicking\n   * @returns {Promise<GuildMember|User|Snowflake>} Result object will be resolved as specifically as possible.\n   * If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot\n   * be resolved, the user's id will be the result.\n   * @example\n   * // Kick a user by id (or with a user/guild member object)\n   * guild.members.kick('84484653687267328')\n   *   .then(banInfo => console.log(`Kicked ${banInfo.user?.tag ?? banInfo.tag ?? banInfo}`))\n   *   .catch(console.error);\n   */\n  async kick(user, reason) {\n    const id = this.client.users.resolveId(user);\n    if (!id) return Promise.reject(new TypeError('INVALID_TYPE', 'user', 'UserResolvable'));\n\n    await this.client.api.guilds(this.guild.id).members(id).delete({ reason });\n\n    return this.resolve(user) ?? this.client.users.resolve(user) ?? id;\n  }\n\n  /**\n   * Bans a user from the guild.\n   * @param {UserResolvable} user The user to ban\n   * @param {BanOptions} [options] Options for the ban\n   * @returns {Promise<GuildMember|User|Snowflake>} Result object will be resolved as specifically as possible.\n   * If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot\n   * be resolved, the user id will be the result.\n   * Internally calls the GuildBanManager#create method.\n   * @example\n   * // Ban a user by id (or with a user/guild member object)\n   * guild.members.ban('84484653687267328')\n   *   .then(kickInfo => console.log(`Banned ${kickInfo.user?.tag ?? kickInfo.tag ?? kickInfo}`))\n   *   .catch(console.error);\n   */\n  ban(user, options = { days: 0 }) {\n    return this.guild.bans.create(user, options);\n  }\n\n  /**\n   * Unbans a user from the guild. Internally calls the {@link GuildBanManager#remove} method.\n   * @param {UserResolvable} user The user to unban\n   * @param {string} [reason] Reason for unbanning user\n   * @returns {Promise<User>} The user that was unbanned\n   * @example\n   * // Unban a user by id (or with a user/guild member object)\n   * guild.members.unban('84484653687267328')\n   *   .then(user => console.log(`Unbanned ${user.username} from ${guild.name}`))\n   *   .catch(console.error);\n   */\n  unban(user, reason) {\n    return this.guild.bans.remove(user, reason);\n  }\n\n  async _fetchSingle({ user, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(user);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).members(user).get();\n    return this._add(data, cache);\n  }\n\n  _fetchMany({\n    limit = 0,\n    withPresences: presences = false,\n    user: user_ids,\n    query,\n    time = 120e3,\n    nonce = SnowflakeUtil.generate(),\n  } = {}) {\n    return new Promise((resolve, reject) => {\n      if (!query && !user_ids) query = '';\n      if (nonce.length > 32) throw new RangeError('MEMBER_FETCH_NONCE_LENGTH');\n      this.guild.shard.send({\n        op: Opcodes.REQUEST_GUILD_MEMBERS,\n        d: {\n          guild_id: this.guild.id,\n          presences,\n          user_ids,\n          query,\n          nonce,\n          limit,\n        },\n      });\n      const fetchedMembers = new Collection();\n      let i = 0;\n      const handler = (members, _, chunk) => {\n        timeout.refresh();\n        if (chunk.nonce !== nonce) return;\n        i++;\n        for (const member of members.values()) {\n          fetchedMembers.set(member.id, member);\n        }\n        if (members.size < 1000 || (limit && fetchedMembers.size >= limit) || i === chunk.count) {\n          clearTimeout(timeout);\n          this.client.removeListener(Events.GUILD_MEMBERS_CHUNK, handler);\n          this.client.decrementMaxListeners();\n          let fetched = fetchedMembers;\n          if (user_ids && !Array.isArray(user_ids) && fetched.size) fetched = fetched.first();\n          resolve(fetched);\n        }\n      };\n      const timeout = setTimeout(() => {\n        this.client.removeListener(Events.GUILD_MEMBERS_CHUNK, handler);\n        this.client.decrementMaxListeners();\n        reject(new Error('GUILD_MEMBERS_TIMEOUT'));\n      }, time).unref();\n      this.client.incrementMaxListeners();\n      this.client.on(Events.GUILD_MEMBERS_CHUNK, handler);\n    });\n  }\n}\n\nmodule.exports = GuildMemberManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst DataManager = require('./DataManager');\nconst { TypeError } = require('../errors');\nconst Role = require('../structures/Role');\n\n/**\n * Manages API methods for roles of a GuildMember and stores their cache.\n * @extends {DataManager}\n */\nclass GuildMemberRoleManager extends DataManager {\n  constructor(member) {\n    super(member.client, Role);\n\n    /**\n     * The GuildMember this manager belongs to\n     * @type {GuildMember}\n     */\n    this.member = member;\n\n    /**\n     * The Guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = member.guild;\n  }\n\n  /**\n   * The roles of this member\n   * @type {Collection<Snowflake, Role>}\n   * @readonly\n   */\n  get cache() {\n    const everyone = this.guild.roles.everyone;\n    return this.guild.roles.cache.filter(role => this.member._roles.includes(role.id)).set(everyone.id, everyone);\n  }\n\n  /**\n   * The role of the member used to hoist them in a separate category in the users list\n   * @type {?Role}\n   * @readonly\n   */\n  get hoist() {\n    const hoistedRoles = this.cache.filter(role => role.hoist);\n    if (!hoistedRoles.size) return null;\n    return hoistedRoles.reduce((prev, role) => (!prev || role.comparePositionTo(prev) > 0 ? role : prev));\n  }\n\n  /**\n   * The role of the member used to set their color\n   * @type {?Role}\n   * @readonly\n   */\n  get color() {\n    const coloredRoles = this.cache.filter(role => role.color);\n    if (!coloredRoles.size) return null;\n    return coloredRoles.reduce((prev, role) => (!prev || role.comparePositionTo(prev) > 0 ? role : prev));\n  }\n\n  /**\n   * The role of the member with the highest position\n   * @type {Role}\n   * @readonly\n   */\n  get highest() {\n    return this.cache.reduce((prev, role) => (role.comparePositionTo(prev) > 0 ? role : prev), this.cache.first());\n  }\n\n  /**\n   * The premium subscriber role of the guild, if present on the member\n   * @type {?Role}\n   * @readonly\n   */\n  get premiumSubscriberRole() {\n    return this.cache.find(role => role.tags?.premiumSubscriberRole) ?? null;\n  }\n\n  /**\n   * The managed role this member created when joining the guild, if any\n   * <info>Only ever available on bots</info>\n   * @type {?Role}\n   * @readonly\n   */\n  get botRole() {\n    if (!this.member.user.bot) return null;\n    return this.cache.find(role => role.tags?.botId === this.member.user.id) ?? null;\n  }\n\n  /**\n   * Adds a role (or multiple roles) to the member.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to add\n   * @param {string} [reason] Reason for adding the role(s)\n   * @returns {Promise<GuildMember>}\n   */\n  async add(roleOrRoles, reason) {\n    if (roleOrRoles instanceof Collection || Array.isArray(roleOrRoles)) {\n      const resolvedRoles = [];\n      for (const role of roleOrRoles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) throw new TypeError('INVALID_ELEMENT', 'Array or Collection', 'roles', role);\n        resolvedRoles.push(resolvedRole);\n      }\n\n      const newRoles = [...new Set(resolvedRoles.concat(...this.cache.values()))];\n      return this.set(newRoles, reason);\n    } else {\n      roleOrRoles = this.guild.roles.resolveId(roleOrRoles);\n      if (roleOrRoles === null) {\n        throw new TypeError('INVALID_TYPE', 'roles', 'Role, Snowflake or Array or Collection of Roles or Snowflakes');\n      }\n\n      await this.client.api.guilds[this.guild.id].members[this.member.id].roles[roleOrRoles].put({ reason });\n\n      const clone = this.member._clone();\n      clone._roles = [...this.cache.keys(), roleOrRoles];\n      return clone;\n    }\n  }\n\n  /**\n   * Removes a role (or multiple roles) from the member.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to remove\n   * @param {string} [reason] Reason for removing the role(s)\n   * @returns {Promise<GuildMember>}\n   */\n  async remove(roleOrRoles, reason) {\n    if (roleOrRoles instanceof Collection || Array.isArray(roleOrRoles)) {\n      const resolvedRoles = [];\n      for (const role of roleOrRoles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) throw new TypeError('INVALID_ELEMENT', 'Array or Collection', 'roles', role);\n        resolvedRoles.push(resolvedRole);\n      }\n\n      const newRoles = this.cache.filter(role => !resolvedRoles.includes(role.id));\n      return this.set(newRoles, reason);\n    } else {\n      roleOrRoles = this.guild.roles.resolveId(roleOrRoles);\n      if (roleOrRoles === null) {\n        throw new TypeError('INVALID_TYPE', 'roles', 'Role, Snowflake or Array or Collection of Roles or Snowflakes');\n      }\n\n      await this.client.api.guilds[this.guild.id].members[this.member.id].roles[roleOrRoles].delete({ reason });\n\n      const clone = this.member._clone();\n      const newRoles = this.cache.filter(role => role.id !== roleOrRoles);\n      clone._roles = [...newRoles.keys()];\n      return clone;\n    }\n  }\n\n  /**\n   * Sets the roles applied to the member.\n   * @param {Collection<Snowflake, Role>|RoleResolvable[]} roles The roles or role ids to apply\n   * @param {string} [reason] Reason for applying the roles\n   * @returns {Promise<GuildMember>}\n   * @example\n   * // Set the member's roles to a single role\n   * guildMember.roles.set(['391156570408615936'])\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove all the roles from a member\n   * guildMember.roles.set([])\n   *   .then(member => console.log(`Member roles is now of ${member.roles.cache.size} size`))\n   *   .catch(console.error);\n   */\n  set(roles, reason) {\n    return this.member.edit({ roles }, reason);\n  }\n\n  clone() {\n    const clone = new this.constructor(this.member);\n    clone.member._roles = [...this.cache.keys()];\n    return clone;\n  }\n}\n\nmodule.exports = GuildMemberRoleManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst { TypeError } = require('../errors');\nconst MessagePayload = require('../structures/MessagePayload');\nconst Sticker = require('../structures/Sticker');\n\n/**\n * Manages API methods for Guild Stickers and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildStickerManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, Sticker, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of Guild Stickers\n   * @type {Collection<Snowflake, Sticker>}\n   * @name GuildStickerManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.guild] });\n  }\n\n  /**\n   * Options for creating a guild sticker.\n   * @typedef {Object} GuildStickerCreateOptions\n   * @param {?string} [description] The description for the sticker\n   * @param {string} [reason] Reason for creating the sticker\n   */\n\n  /**\n   * Creates a new custom sticker in the guild.\n   * @param {BufferResolvable|Stream|FileOptions|MessageAttachment} file The file for the sticker\n   * @param {string} name The name for the sticker\n   * @param {string} tags The Discord name of a unicode emoji representing the sticker's expression\n   * @param {GuildStickerCreateOptions} [options] Options\n   * @returns {Promise<Sticker>} The created sticker\n   * @example\n   * // Create a new sticker from a url\n   * guild.stickers.create('https://i.imgur.com/w3duR07.png', 'rip')\n   *   .then(sticker => console.log(`Created new sticker with name ${sticker.name}!`))\n   *   .catch(console.error);\n   * @example\n   * // Create a new sticker from a file on your computer\n   * guild.stickers.create('./memes/banana.png', 'banana')\n   *   .then(sticker => console.log(`Created new sticker with name ${sticker.name}!`))\n   *   .catch(console.error);\n   */\n  async create(file, name, tags, { description, reason } = {}) {\n    file = { ...(await MessagePayload.resolveFile(file)), key: 'file' };\n    if (!file) throw new TypeError('REQ_RESOURCE_TYPE');\n\n    const data = { name, tags, description: description ?? '' };\n\n    const sticker = await this.client.api\n      .guilds(this.guild.id)\n      .stickers.post({ data, files: [file], reason, dontUsePayloadJSON: true });\n    return this.client.actions.GuildStickerCreate.handle(this.guild, sticker).sticker;\n  }\n\n  /**\n   * Data that resolves to give a Sticker object. This can be:\n   * * A Sticker object\n   * * A Snowflake\n   * @typedef {Sticker|Snowflake} StickerResolvable\n   */\n\n  /**\n   * Resolves a StickerResolvable to a Sticker object.\n   * @method resolve\n   * @memberof GuildStickerManager\n   * @instance\n   * @param {StickerResolvable} sticker The Sticker resolvable to identify\n   * @returns {?Sticker}\n   */\n\n  /**\n   * Resolves a StickerResolvable to a Sticker id string.\n   * @method resolveId\n   * @memberof GuildStickerManager\n   * @instance\n   * @param {StickerResolvable} sticker The Sticker resolvable to identify\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Edits a sticker.\n   * @param {StickerResolvable} sticker The sticker to edit\n   * @param {GuildStickerEditData} [data] The new data for the sticker\n   * @param {string} [reason] Reason for editing this sticker\n   * @returns {Promise<Sticker>}\n   */\n  async edit(sticker, data, reason) {\n    const stickerId = this.resolveId(sticker);\n    if (!stickerId) throw new TypeError('INVALID_TYPE', 'sticker', 'StickerResolvable');\n\n    const d = await this.client.api.guilds(this.guild.id).stickers(stickerId).patch({\n      data,\n      reason,\n    });\n\n    const existing = this.cache.get(stickerId);\n    if (existing) {\n      const clone = existing._clone();\n      clone._patch(d);\n      return clone;\n    }\n    return this._add(d);\n  }\n\n  /**\n   * Deletes a sticker.\n   * @param {StickerResolvable} sticker The sticker to delete\n   * @param {string} [reason] Reason for deleting this sticker\n   * @returns {Promise<void>}\n   */\n  async delete(sticker, reason) {\n    sticker = this.resolveId(sticker);\n    if (!sticker) throw new TypeError('INVALID_TYPE', 'sticker', 'StickerResolvable');\n\n    await this.client.api.guilds(this.guild.id).stickers(sticker).delete({ reason });\n  }\n\n  /**\n   * Obtains one or more stickers from Discord, or the sticker cache if they're already available.\n   * @param {Snowflake} [id] The Sticker's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<Sticker|Collection<Snowflake, Sticker>>}\n   * @example\n   * // Fetch all stickers from the guild\n   * message.guild.stickers.fetch()\n   *   .then(stickers => console.log(`There are ${stickers.size} stickers.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single sticker\n   * message.guild.stickers.fetch('222078108977594368')\n   *   .then(sticker => console.log(`The sticker name is: ${sticker.name}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id) {\n      if (!force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n      const sticker = await this.client.api.guilds(this.guild.id).stickers(id).get();\n      return this._add(sticker, cache);\n    }\n\n    const data = await this.client.api.guilds(this.guild.id).stickers.get();\n    return new Collection(data.map(sticker => [sticker.id, this._add(sticker, cache)]));\n  }\n}\n\nmodule.exports = GuildStickerManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst { TypeError } = require('../errors');\nconst Message = require('../structures/Message');\nconst MessagePayload = require('../structures/MessagePayload');\n\n/**\n * Manages API methods for Messages and holds their cache.\n * @extends {CachedManager}\n */\nclass MessageManager extends CachedManager {\n  constructor(channel, iterable) {\n    super(channel.client, Message, iterable);\n\n    /**\n     * The channel that the messages belong to\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n  }\n\n  /**\n   * The cache of Messages\n   * @type {Collection<Snowflake, Message>}\n   * @name MessageManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache);\n  }\n\n  /**\n   * The parameters to pass in when requesting previous messages from a channel. `around`, `before` and\n   * `after` are mutually exclusive. All the parameters are optional.\n   * @typedef {Object} ChannelLogsQueryOptions\n   * @property {number} [limit=50] Number of messages to acquire\n   * @property {Snowflake} [before] The message's id to get the messages that were posted before it\n   * @property {Snowflake} [after] The message's id to get the messages that were posted after it\n   * @property {Snowflake} [around] The message's id to get the messages that were posted around it\n   */\n\n  /**\n   * Gets a message, or messages, from this channel.\n   * <info>The returned Collection does not contain reaction users of the messages if they were not cached.\n   * Those need to be fetched separately in such a case.</info>\n   * @param {Snowflake|ChannelLogsQueryOptions} [message] The id of the message to fetch, or query parameters.\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<Message|Collection<Snowflake, Message>>}\n   * @example\n   * // Get message\n   * channel.messages.fetch('99539446449315840')\n   *   .then(message => console.log(message.content))\n   *   .catch(console.error);\n   * @example\n   * // Get messages\n   * channel.messages.fetch({ limit: 10 })\n   *   .then(messages => console.log(`Received ${messages.size} messages`))\n   *   .catch(console.error);\n   * @example\n   * // Get messages and filter by user id\n   * channel.messages.fetch()\n   *   .then(messages => console.log(`${messages.filter(m => m.author.id === '84484653687267328').size} messages`))\n   *   .catch(console.error);\n   */\n  fetch(message, { cache = true, force = false } = {}) {\n    return typeof message === 'string' ? this._fetchId(message, cache, force) : this._fetchMany(message, cache);\n  }\n\n  /**\n   * Fetches the pinned messages of this channel and returns a collection of them.\n   * <info>The returned Collection does not contain any reaction data of the messages.\n   * Those need to be fetched separately.</info>\n   * @param {boolean} [cache=true] Whether to cache the message(s)\n   * @returns {Promise<Collection<Snowflake, Message>>}\n   * @example\n   * // Get pinned messages\n   * channel.messages.fetchPinned()\n   *   .then(messages => console.log(`Received ${messages.size} messages`))\n   *   .catch(console.error);\n   */\n  async fetchPinned(cache = true) {\n    const data = await this.client.api.channels[this.channel.id].pins.get();\n    const messages = new Collection();\n    for (const message of data) messages.set(message.id, this._add(message, cache));\n    return messages;\n  }\n\n  /**\n   * Data that can be resolved to a Message object. This can be:\n   * * A Message\n   * * A Snowflake\n   * @typedef {Message|Snowflake} MessageResolvable\n   */\n\n  /**\n   * Resolves a {@link MessageResolvable} to a {@link Message} object.\n   * @method resolve\n   * @memberof MessageManager\n   * @instance\n   * @param {MessageResolvable} message The message resolvable to resolve\n   * @returns {?Message}\n   */\n\n  /**\n   * Resolves a {@link MessageResolvable} to a {@link Message} id.\n   * @method resolveId\n   * @memberof MessageManager\n   * @instance\n   * @param {MessageResolvable} message The message resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Edits a message, even if it's not cached.\n   * @param {MessageResolvable} message The message to edit\n   * @param {MessageEditOptions|MessagePayload} options The options to edit the message\n   * @returns {Promise<Message>}\n   */\n  async edit(message, options) {\n    const messageId = this.resolveId(message);\n    if (!messageId) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    const { data, files } = await (options instanceof MessagePayload\n      ? options\n      : MessagePayload.create(message instanceof Message ? message : this, options)\n    )\n      .resolveData()\n      .resolveFiles();\n    const d = await this.client.api.channels[this.channel.id].messages[messageId].patch({ data, files });\n\n    const existing = this.cache.get(messageId);\n    if (existing) {\n      const clone = existing._clone();\n      clone._patch(d);\n      return clone;\n    }\n    return this._add(d);\n  }\n\n  /**\n   * Publishes a message in an announcement channel to all channels following it, even if it's not cached.\n   * @param {MessageResolvable} message The message to publish\n   * @returns {Promise<Message>}\n   */\n  async crosspost(message) {\n    message = this.resolveId(message);\n    if (!message) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    const data = await this.client.api.channels(this.channel.id).messages(message).crosspost.post();\n    return this.cache.get(data.id) ?? this._add(data);\n  }\n\n  /**\n   * Pins a message to the channel's pinned messages, even if it's not cached.\n   * @param {MessageResolvable} message The message to pin\n   * @returns {Promise<void>}\n   */\n  async pin(message) {\n    message = this.resolveId(message);\n    if (!message) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    await this.client.api.channels(this.channel.id).pins(message).put();\n  }\n\n  /**\n   * Unpins a message from the channel's pinned messages, even if it's not cached.\n   * @param {MessageResolvable} message The message to unpin\n   * @returns {Promise<void>}\n   */\n  async unpin(message) {\n    message = this.resolveId(message);\n    if (!message) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    await this.client.api.channels(this.channel.id).pins(message).delete();\n  }\n\n  /**\n   * Adds a reaction to a message, even if it's not cached.\n   * @param {MessageResolvable} message The messag to react to\n   * @param {EmojiIdentifierResolvable} emoji The emoji to react with\n   * @returns {Promise<void>}\n   */\n  async react(message, emoji) {\n    message = this.resolveId(message);\n    if (!message) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    emoji = this.client.emojis.resolveIdentifier(emoji);\n    if (!emoji) throw new TypeError('EMOJI_TYPE', 'emoji', 'EmojiIdentifierResolvable');\n\n    // eslint-disable-next-line newline-per-chained-call\n    await this.client.api.channels(this.channel.id).messages(message).reactions(emoji, '@me').put();\n  }\n\n  /**\n   * Deletes a message, even if it's not cached.\n   * @param {MessageResolvable} message The message to delete\n   * @returns {Promise<void>}\n   */\n  async delete(message) {\n    message = this.resolveId(message);\n    if (!message) throw new TypeError('INVALID_TYPE', 'message', 'MessageResolvable');\n\n    await this.client.api.channels(this.channel.id).messages(message).delete();\n  }\n\n  async _fetchId(messageId, cache, force) {\n    if (!force) {\n      const existing = this.cache.get(messageId);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.api.channels[this.channel.id].messages[messageId].get();\n    return this._add(data, cache);\n  }\n\n  async _fetchMany(options = {}, cache) {\n    const data = await this.client.api.channels[this.channel.id].messages.get({ query: options });\n    const messages = new Collection();\n    for (const message of data) messages.set(message.id, this._add(message, cache));\n    return messages;\n  }\n}\n\nmodule.exports = MessageManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst { TypeError } = require('../errors');\nconst PermissionOverwrites = require('../structures/PermissionOverwrites');\nconst Role = require('../structures/Role');\nconst { OverwriteTypes } = require('../util/Constants');\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for guild channel permission overwrites and stores their cache.\n * @extends {CachedManager}\n */\nclass PermissionOverwriteManager extends CachedManager {\n  constructor(channel, iterable) {\n    super(channel.client, PermissionOverwrites);\n    if (!cacheWarningEmitted && this._cache.constructor.name !== 'Collection') {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n\n    /**\n     * The channel of the permission overwrite this manager belongs to\n     * @type {GuildChannel}\n     */\n    this.channel = channel;\n\n    if (iterable) {\n      for (const item of iterable) {\n        this._add(item);\n      }\n    }\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, PermissionOverwrites>}\n   * @name PermissionOverwriteManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.channel] });\n  }\n\n  /**\n   * Replaces the permission overwrites in this channel.\n   * @param {OverwriteResolvable[]|Collection<Snowflake, OverwriteResolvable>} overwrites\n   * Permission overwrites the channel gets updated with\n   * @param {string} [reason] Reason for updating the channel overwrites\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * message.channel.permissionOverwrites.set([\n   *   {\n   *      id: message.author.id,\n   *      deny: [Permissions.FLAGS.VIEW_CHANNEL],\n   *   },\n   * ], 'Needed to change permissions');\n   */\n  set(overwrites, reason) {\n    if (!Array.isArray(overwrites) && !(overwrites instanceof Collection)) {\n      return Promise.reject(\n        new TypeError('INVALID_TYPE', 'overwrites', 'Array or Collection of Permission Overwrites', true),\n      );\n    }\n    return this.channel.edit({ permissionOverwrites: overwrites, reason });\n  }\n\n  /**\n   * Extra information about the overwrite\n   * @typedef {Object} GuildChannelOverwriteOptions\n   * @property {string} [reason] Reason for creating/editing this overwrite\n   * @property {number} [type] The type of overwrite, either `0` for a role or `1` for a member. Use this to bypass\n   * automatic resolution of type that results in an error for uncached structure\n   */\n\n  /**\n   * Creates or edits permission overwrites for a user or role in this channel.\n   * @param {RoleResolvable|UserResolvable} userOrRole The user or role to update\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {GuildChannelOverwriteOptions} [overwriteOptions] The extra information for the update\n   * @param {PermissionOverwrites} [existing] The existing overwrites to merge with this update\n   * @returns {Promise<GuildChannel>}\n   * @private\n   */\n  async upsert(userOrRole, options, overwriteOptions = {}, existing) {\n    let userOrRoleId = this.channel.guild.roles.resolveId(userOrRole) ?? this.client.users.resolveId(userOrRole);\n    let { type, reason } = overwriteOptions;\n    if (typeof type !== 'number') {\n      userOrRole = this.channel.guild.roles.resolve(userOrRole) ?? this.client.users.resolve(userOrRole);\n      if (!userOrRole) throw new TypeError('INVALID_TYPE', 'parameter', 'User nor a Role');\n      type = userOrRole instanceof Role ? OverwriteTypes.role : OverwriteTypes.member;\n    }\n\n    const { allow, deny } = PermissionOverwrites.resolveOverwriteOptions(options, existing);\n\n    await this.client.api\n      .channels(this.channel.id)\n      .permissions(userOrRoleId)\n      .put({\n        data: { id: userOrRoleId, type, allow, deny },\n        reason,\n      });\n    return this.channel;\n  }\n\n  /**\n   * Creates permission overwrites for a user or role in this channel, or replaces them if already present.\n   * @param {RoleResolvable|UserResolvable} userOrRole The user or role to update\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {GuildChannelOverwriteOptions} [overwriteOptions] The extra information for the update\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Create or Replace permission overwrites for a message author\n   * message.channel.permissionOverwrites.create(message.author, {\n   *   SEND_MESSAGES: false\n   * })\n   *   .then(channel => console.log(channel.permissionOverwrites.cache.get(message.author.id)))\n   *   .catch(console.error);\n   */\n  create(userOrRole, options, overwriteOptions) {\n    return this.upsert(userOrRole, options, overwriteOptions);\n  }\n\n  /**\n   * Edits permission overwrites for a user or role in this channel, or creates an entry if not already present.\n   * @param {RoleResolvable|UserResolvable} userOrRole The user or role to update\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {GuildChannelOverwriteOptions} [overwriteOptions] The extra information for the update\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Edit or Create permission overwrites for a message author\n   * message.channel.permissionOverwrites.edit(message.author, {\n   *   SEND_MESSAGES: false\n   * })\n   *   .then(channel => console.log(channel.permissionOverwrites.cache.get(message.author.id)))\n   *   .catch(console.error);\n   */\n  edit(userOrRole, options, overwriteOptions) {\n    userOrRole = this.channel.guild.roles.resolveId(userOrRole) ?? this.client.users.resolveId(userOrRole);\n    const existing = this.cache.get(userOrRole);\n    return this.upsert(userOrRole, options, overwriteOptions, existing);\n  }\n\n  /**\n   * Deletes permission overwrites for a user or role in this channel.\n   * @param {UserResolvable|RoleResolvable} userOrRole The user or role to delete\n   * @param {string} [reason] The reason for deleting the overwrite\n   * @returns {GuildChannel}\n   */\n  async delete(userOrRole, reason) {\n    const userOrRoleId = this.channel.guild.roles.resolveId(userOrRole) ?? this.client.users.resolveId(userOrRole);\n    if (!userOrRoleId) throw new TypeError('INVALID_TYPE', 'parameter', 'User nor a Role');\n\n    await this.client.api.channels(this.channel.id).permissions(userOrRoleId).delete({ reason });\n    return this.channel;\n  }\n}\n\nmodule.exports = PermissionOverwriteManager;\n","'use strict';\n\nconst CachedManager = require('./CachedManager');\nconst { Presence } = require('../structures/Presence');\n\n/**\n * Manages API methods for Presences and holds their cache.\n * @extends {CachedManager}\n */\nclass PresenceManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, Presence, iterable);\n  }\n\n  /**\n   * The cache of Presences\n   * @type {Collection<Snowflake, Presence>}\n   * @name PresenceManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.user.id });\n  }\n\n  /**\n   * Data that can be resolved to a Presence object. This can be:\n   * * A Presence\n   * * A UserResolvable\n   * * A Snowflake\n   * @typedef {Presence|UserResolvable|Snowflake} PresenceResolvable\n   */\n\n  /**\n   * Resolves a {@link PresenceResolvable} to a {@link Presence} object.\n   * @param {PresenceResolvable} presence The presence resolvable to resolve\n   * @returns {?Presence}\n   */\n  resolve(presence) {\n    const presenceResolvable = super.resolve(presence);\n    if (presenceResolvable) return presenceResolvable;\n    const UserResolvable = this.client.users.resolveId(presence);\n    return super.resolve(UserResolvable);\n  }\n\n  /**\n   * Resolves a {@link PresenceResolvable} to a {@link Presence} id.\n   * @param {PresenceResolvable} presence The presence resolvable to resolve\n   * @returns {?Snowflake}\n   */\n  resolveId(presence) {\n    const presenceResolvable = super.resolveId(presence);\n    if (presenceResolvable) return presenceResolvable;\n    const userResolvable = this.client.users.resolveId(presence);\n    return this.cache.has(userResolvable) ? userResolvable : null;\n  }\n}\n\nmodule.exports = PresenceManager;\n","'use strict';\n\nconst CachedManager = require('./CachedManager');\nconst MessageReaction = require('../structures/MessageReaction');\n\n/**\n * Manages API methods for reactions and holds their cache.\n * @extends {CachedManager}\n */\nclass ReactionManager extends CachedManager {\n  constructor(message, iterable) {\n    super(message.client, MessageReaction, iterable);\n\n    /**\n     * The message that this manager belongs to\n     * @type {Message}\n     */\n    this.message = message;\n  }\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.emoji.id ?? data.emoji.name, extras: [this.message] });\n  }\n\n  /**\n   * The reaction cache of this manager\n   * @type {Collection<string|Snowflake, MessageReaction>}\n   * @name ReactionManager#cache\n   */\n\n  /**\n   * Data that can be resolved to a MessageReaction object. This can be:\n   * * A MessageReaction\n   * * A Snowflake\n   * @typedef {MessageReaction|Snowflake} MessageReactionResolvable\n   */\n\n  /**\n   * Resolves a {@link MessageReactionResolvable} to a {@link MessageReaction} object.\n   * @method resolve\n   * @memberof ReactionManager\n   * @instance\n   * @param {MessageReactionResolvable} reaction The MessageReaction to resolve\n   * @returns {?MessageReaction}\n   */\n\n  /**\n   * Resolves a {@link MessageReactionResolvable} to a {@link MessageReaction} id.\n   * @method resolveId\n   * @memberof ReactionManager\n   * @instance\n   * @param {MessageReactionResolvable} reaction The MessageReaction to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Removes all reactions from a message.\n   * @returns {Promise<Message>}\n   */\n  async removeAll() {\n    await this.client.api.channels(this.message.channelId).messages(this.message.id).reactions.delete();\n    return this.message;\n  }\n}\n\nmodule.exports = ReactionManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst { Error } = require('../errors');\nconst User = require('../structures/User');\n\n/**\n * Manages API methods for users who reacted to a reaction and stores their cache.\n * @extends {CachedManager}\n */\nclass ReactionUserManager extends CachedManager {\n  constructor(reaction, iterable) {\n    super(reaction.client, User, iterable);\n\n    /**\n     * The reaction that this manager belongs to\n     * @type {MessageReaction}\n     */\n    this.reaction = reaction;\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, User>}\n   * @name ReactionUserManager#cache\n   */\n\n  /**\n   * Options used to fetch users who gave a reaction.\n   * @typedef {Object} FetchReactionUsersOptions\n   * @property {number} [limit=100] The maximum amount of users to fetch, defaults to `100`\n   * @property {Snowflake} [after] Limit fetching users to those with an id greater than the supplied id\n   */\n\n  /**\n   * Fetches all the users that gave this reaction. Resolves with a collection of users, mapped by their ids.\n   * @param {FetchReactionUsersOptions} [options] Options for fetching the users\n   * @returns {Promise<Collection<Snowflake, User>>}\n   */\n  async fetch({ limit = 100, after } = {}) {\n    const message = this.reaction.message;\n    const data = await this.client.api.channels[message.channelId].messages[message.id].reactions[\n      this.reaction.emoji.identifier\n    ].get({ query: { limit, after } });\n    const users = new Collection();\n    for (const rawUser of data) {\n      const user = this.client.users._add(rawUser);\n      this.cache.set(user.id, user);\n      users.set(user.id, user);\n    }\n    return users;\n  }\n\n  /**\n   * Removes a user from this reaction.\n   * @param {UserResolvable} [user=this.client.user] The user to remove the reaction of\n   * @returns {Promise<MessageReaction>}\n   */\n  async remove(user = this.client.user) {\n    const userId = this.client.users.resolveId(user);\n    if (!userId) throw new Error('REACTION_RESOLVE_USER');\n    const message = this.reaction.message;\n    await this.client.api.channels[message.channelId].messages[message.id].reactions[this.reaction.emoji.identifier][\n      userId === this.client.user.id ? '@me' : userId\n    ].delete();\n    return this.reaction;\n  }\n}\n\nmodule.exports = ReactionUserManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst { TypeError } = require('../errors');\nconst Role = require('../structures/Role');\nconst Permissions = require('../util/Permissions');\nconst { resolveColor, setPosition } = require('../util/Util');\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for roles and stores their cache.\n * @extends {CachedManager}\n */\nclass RoleManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, Role, iterable);\n    if (!cacheWarningEmitted && this._cache.constructor.name !== 'Collection') {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n\n    /**\n     * The guild belonging to this manager\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The role cache of this manager\n   * @type {Collection<Snowflake, Role>}\n   * @name RoleManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.guild] });\n  }\n\n  /**\n   * Obtains a role from Discord, or the role cache if they're already available.\n   * @param {Snowflake} [id] The role's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<?Role|Collection<Snowflake, Role>>}\n   * @example\n   * // Fetch all roles from the guild\n   * message.guild.roles.fetch()\n   *   .then(roles => console.log(`There are ${roles.cache.size} roles.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single role\n   * message.guild.roles.fetch('222078108977594368')\n   *   .then(role => console.log(`The role color is: ${role.color}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id && !force) {\n      const existing = this.cache.get(id);\n      if (existing) return existing;\n    }\n\n    // We cannot fetch a single role, as of this commit's date, Discord API throws with 405\n    const data = await this.client.api.guilds(this.guild.id).roles.get();\n    const roles = new Collection();\n    for (const role of data) roles.set(role.id, this._add(role, cache));\n    return id ? roles.get(id) ?? null : roles;\n  }\n\n  /**\n   * Data that can be resolved to a Role object. This can be:\n   * * A Role\n   * * A Snowflake\n   * @typedef {Role|Snowflake} RoleResolvable\n   */\n\n  /**\n   * Resolves a {@link RoleResolvable} to a {@link Role} object.\n   * @method resolve\n   * @memberof RoleManager\n   * @instance\n   * @param {RoleResolvable} role The role resolvable to resolve\n   * @returns {?Role}\n   */\n\n  /**\n   * Resolves a {@link RoleResolvable} to a {@link Role} id.\n   * @method resolveId\n   * @memberof RoleManager\n   * @instance\n   * @param {RoleResolvable} role The role resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Options used to create a new role.\n   * @typedef {Object} CreateRoleOptions\n   * @property {string} [name] The name of the new role\n   * @property {ColorResolvable} [color] The data to create the role with\n   * @property {boolean} [hoist] Whether or not the new role should be hoisted\n   * @property {PermissionResolvable} [permissions] The permissions for the new role\n   * @property {number} [position] The position of the new role\n   * @property {boolean} [mentionable] Whether or not the new role should be mentionable\n   * @property {string} [reason] The reason for creating this role\n   */\n\n  /**\n   * Creates a new role in the guild with given information.\n   * <warn>The position will silently reset to 1 if an invalid one is provided, or none.</warn>\n   * @param {CreateRoleOptions} [options] Options for creating the new role\n   * @returns {Promise<Role>}\n   * @example\n   * // Create a new role\n   * guild.roles.create()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Create a new role with data and a reason\n   * guild.roles.create({\n   *   name: 'Super Cool Blue People',\n   *   color: 'BLUE',\n   *   reason: 'we needed a role for Super Cool People',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async create(options = {}) {\n    let { name, color, hoist, permissions, position, mentionable, reason } = options;\n    if (color) color = resolveColor(color);\n    if (typeof permissions !== 'undefined') permissions = new Permissions(permissions);\n\n    const data = await this.client.api.guilds(this.guild.id).roles.post({\n      data: {\n        name,\n        color,\n        hoist,\n        permissions,\n        mentionable,\n      },\n      reason,\n    });\n    const { role } = this.client.actions.GuildRoleCreate.handle({\n      guild_id: this.guild.id,\n      role: data,\n    });\n    if (position) return role.setPosition(position, reason);\n    return role;\n  }\n\n  /**\n   * Edits a role of the guild.\n   * @param {RoleResolvable} role The role to edit\n   * @param {RoleData} data The new data for the role\n   * @param {string} [reason] Reason for editing this role\n   * @returns {Promise<Role>}\n   * @example\n   * // Edit a role\n   * guild.roles.edit('222079219327434752', { name: 'buddies' })\n   *   .then(updated => console.log(`Edited role name to ${updated.name}`))\n   *   .catch(console.error);\n   */\n  async edit(role, data, reason) {\n    role = this.resolve(role);\n    if (!role) throw new TypeError('INVALID_TYPE', 'role', 'RoleResolvable');\n\n    if (typeof data.position === 'number') {\n      const updatedRoles = await setPosition(\n        role,\n        data.position,\n        false,\n        this.guild._sortedRoles(),\n        this.client.api.guilds(this.guild.id).roles,\n        reason,\n      );\n\n      this.client.actions.GuildRolesPositionUpdate.handle({\n        guild_id: this.guild.id,\n        roles: updatedRoles,\n      });\n    }\n\n    const _data = {\n      name: data.name,\n      color: typeof data.color === 'undefined' ? undefined : resolveColor(data.color),\n      hoist: data.hoist,\n      permissions: typeof data.permissions === 'undefined' ? undefined : new Permissions(data.permissions),\n      mentionable: data.mentionable,\n    };\n\n    const d = await this.client.api.guilds(this.guild.id).roles(role.id).patch({ data: _data, reason });\n\n    const clone = role._clone();\n    clone._patch(d);\n    return clone;\n  }\n\n  /**\n   * Gets the managed role a user created when joining the guild, if any\n   * <info>Only ever available for bots</info>\n   * @param {UserResolvable} user The user to access the bot role for\n   * @returns {?Role}\n   */\n  botRoleFor(user) {\n    const userId = this.client.users.resolveId(user);\n    if (!userId) return null;\n    return this.cache.find(role => role.tags?.botId === userId) ?? null;\n  }\n\n  /**\n   * The `@everyone` role of the guild\n   * @type {Role}\n   * @readonly\n   */\n  get everyone() {\n    return this.cache.get(this.guild.id);\n  }\n\n  /**\n   * The premium subscriber role of the guild, if any\n   * @type {?Role}\n   * @readonly\n   */\n  get premiumSubscriberRole() {\n    return this.cache.find(role => role.tags?.premiumSubscriberRole) ?? null;\n  }\n\n  /**\n   * The role with the highest position in the cache\n   * @type {Role}\n   * @readonly\n   */\n  get highest() {\n    return this.cache.reduce((prev, role) => (role.comparePositionTo(prev) > 0 ? role : prev), this.cache.first());\n  }\n}\n\nmodule.exports = RoleManager;\n","'use strict';\n\nconst CachedManager = require('./CachedManager');\nconst { TypeError, Error } = require('../errors');\nconst StageInstance = require('../structures/StageInstance');\nconst { PrivacyLevels } = require('../util/Constants');\n\n/**\n * Manages API methods for {@link StageInstance} objects and holds their cache.\n * @extends {CachedManager}\n */\nclass StageInstanceManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, StageInstance, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, StageInstance>}\n   * @name StageInstanceManager#cache\n   */\n\n  /**\n   * Options used to create a stage instance.\n   * @typedef {Object} StageInstanceCreateOptions\n   * @property {string} topic The topic of the stage instance\n   * @property {PrivacyLevel|number} [privacyLevel] The privacy level of the stage instance\n   */\n\n  /**\n   * Creates a new stage instance.\n   * @param {StageChannel|Snowflake} channel The stage channel to associate the created stage instance to\n   * @param {StageInstanceCreateOptions} options The options to create the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Create a stage instance\n   * guild.stageInstances.create('1234567890123456789', {\n   *  topic: 'A very creative topic',\n   *  privacyLevel: 'GUILD_ONLY'\n   * })\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async create(channel, options) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new Error('STAGE_CHANNEL_RESOLVE');\n    if (typeof options !== 'object') throw new TypeError('INVALID_TYPE', 'options', 'object', true);\n    let { topic, privacyLevel } = options;\n\n    if (privacyLevel) privacyLevel = typeof privacyLevel === 'number' ? privacyLevel : PrivacyLevels[privacyLevel];\n\n    const data = await this.client.api['stage-instances'].post({\n      data: {\n        channel_id: channelId,\n        topic,\n        privacy_level: privacyLevel,\n      },\n    });\n\n    return this._add(data);\n  }\n\n  /**\n   * Fetches the stage instance associated with a stage channel, if it exists.\n   * @param {StageChannel|Snowflake} channel The stage channel whose associated stage instance is to be fetched\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Fetch a stage instance\n   * guild.stageInstances.fetch('1234567890123456789')\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async fetch(channel, { cache = true, force = false } = {}) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new Error('STAGE_CHANNEL_RESOLVE');\n\n    if (!force) {\n      const existing = this.cache.find(stageInstance => stageInstance.channelId === channelId);\n      if (existing) return existing;\n    }\n\n    const data = await this.client.api('stage-instances', channelId).get();\n    return this._add(data, cache);\n  }\n\n  /**\n   * Options used to edit an existing stage instance.\n   * @typedef {Object} StageInstanceEditOptions\n   * @property {string} [topic] The new topic of the stage instance\n   * @property {PrivacyLevel|number} [privacyLevel] The new privacy level of the stage instance\n   */\n\n  /**\n   * Edits an existing stage instance.\n   * @param {StageChannel|Snowflake} channel The stage channel whose associated stage instance is to be edited\n   * @param {StageInstanceEditOptions} options The options to edit the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Edit a stage instance\n   * guild.stageInstances.edit('1234567890123456789', { topic: 'new topic' })\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async edit(channel, options) {\n    if (typeof options !== 'object') throw new TypeError('INVALID_TYPE', 'options', 'object', true);\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new Error('STAGE_CHANNEL_RESOLVE');\n\n    let { topic, privacyLevel } = options;\n\n    if (privacyLevel) privacyLevel = typeof privacyLevel === 'number' ? privacyLevel : PrivacyLevels[privacyLevel];\n\n    const data = await this.client.api('stage-instances', channelId).patch({\n      data: {\n        topic,\n        privacy_level: privacyLevel,\n      },\n    });\n\n    if (this.cache.has(data.id)) {\n      const clone = this.cache.get(data.id)._clone();\n      clone._patch(data);\n      return clone;\n    }\n\n    return this._add(data);\n  }\n\n  /**\n   * Deletes an existing stage instance.\n   * @param {StageChannel|Snowflake} channel The stage channel whose associated stage instance is to be deleted\n   * @returns {Promise<void>}\n   */\n  async delete(channel) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new Error('STAGE_CHANNEL_RESOLVE');\n\n    await this.client.api('stage-instances', channelId).delete();\n  }\n}\n\nmodule.exports = StageInstanceManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst { TypeError } = require('../errors');\nconst ThreadChannel = require('../structures/ThreadChannel');\nconst { ChannelTypes } = require('../util/Constants');\n\n/**\n * Manages API methods for {@link ThreadChannel} objects and stores their cache.\n * @extends {CachedManager}\n */\nclass ThreadManager extends CachedManager {\n  constructor(channel, iterable) {\n    super(channel.client, ThreadChannel, iterable);\n\n    /**\n     * The channel this Manager belongs to\n     * @type {NewsChannel|TextChannel}\n     */\n    this.channel = channel;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, ThreadChannel>}\n   * @name ThreadManager#cache\n   */\n\n  _add(thread) {\n    const existing = this.cache.get(thread.id);\n    if (existing) return existing;\n    this.cache.set(thread.id, thread);\n    return thread;\n  }\n\n  /**\n   * Data that can be resolved to a Thread Channel object. This can be:\n   * * A ThreadChannel object\n   * * A Snowflake\n   * @typedef {ThreadChannel|Snowflake} ThreadChannelResolvable\n   */\n\n  /**\n   * Resolves a {@link ThreadChannelResolvable} to a {@link ThreadChannel} object.\n   * @method resolve\n   * @memberof ThreadManager\n   * @instance\n   * @param {ThreadChannelResolvable} thread The ThreadChannel resolvable to resolve\n   * @returns {?ThreadChannel}\n   */\n\n  /**\n   * Resolves a {@link ThreadChannelResolvable} to a {@link ThreadChannel} id.\n   * @method resolveId\n   * @memberof ThreadManager\n   * @instance\n   * @param {ThreadChannelResolvable} thread The ThreadChannel resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * A number that is allowed to be the duration (in minutes) of inactivity after which a thread is automatically\n   * archived. This can be:\n   * * `60` (1 hour)\n   * * `1440` (1 day)\n   * * `4320` (3 days) <warn>This is only available when the guild has the `THREE_DAY_THREAD_ARCHIVE` feature.</warn>\n   * * `10080` (7 days) <warn>This is only available when the guild has the `SEVEN_DAY_THREAD_ARCHIVE` feature.</warn>\n   * * `'MAX'` Based on the guilds boost count\n   * @typedef {number|string} ThreadAutoArchiveDuration\n   */\n\n  /**\n   * Options for creating a thread. <warn>Only one of `startMessage` or `type` can be defined.</warn>\n   * @typedef {StartThreadOptions} ThreadCreateOptions\n   * @property {MessageResolvable} [startMessage] The message to start a thread from. <warn>If this is defined then type\n   * of thread gets automatically defined and cannot be changed. The provided `type` field will be ignored</warn>\n   * @property {ThreadChannelTypes|number} [type] The type of thread to create. Defaults to `GUILD_PUBLIC_THREAD` if\n   * created in a {@link TextChannel} <warn>When creating threads in a {@link NewsChannel} this is ignored and is always\n   * `GUILD_NEWS_THREAD`</warn>\n   */\n\n  /**\n   * Creates a new thread in the channel.\n   * @param {ThreadCreateOptions} [options] Options to create a new thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Create a new public thread\n   * channel.threads\n   *   .create({\n   *     name: 'food-talk',\n   *     autoArchiveDuration: 60,\n   *     reason: 'Needed a separate thread for food',\n   *   })\n   *   .then(threadChannel => console.log(threadChannel))\n   *   .catch(console.error);\n   * @example\n   * // Create a new private thread\n   * channel.threads\n   *   .create({\n   *      name: 'mod-talk',\n   *      autoArchiveDuration: 60,\n   *      type: 'GUILD_PRIVATE_THREAD',\n   *      reason: 'Needed a separate thread for moderation',\n   *    })\n   *   .then(threadChannel => console.log(threadChannel))\n   *   .catch(console.error);\n   */\n  async create({ name, autoArchiveDuration, startMessage, type, reason } = {}) {\n    let path = this.client.api.channels(this.channel.id);\n    if (type && typeof type !== 'string' && typeof type !== 'number') {\n      throw new TypeError('INVALID_TYPE', 'type', 'ThreadChannelType or Number');\n    }\n    let resolvedType =\n      this.channel.type === 'GUILD_NEWS' ? ChannelTypes.GUILD_NEWS_THREAD : ChannelTypes.GUILD_PUBLIC_THREAD;\n    if (startMessage) {\n      const startMessageId = this.channel.messages.resolveId(startMessage);\n      if (!startMessageId) throw new TypeError('INVALID_TYPE', 'startMessage', 'MessageResolvable');\n      path = path.messages(startMessageId);\n    } else if (this.channel.type !== 'GUILD_NEWS') {\n      resolvedType = typeof type === 'string' ? ChannelTypes[type] : type ?? resolvedType;\n    }\n    if (autoArchiveDuration === 'MAX') {\n      autoArchiveDuration = 1440;\n      if (this.channel.guild.features.includes('SEVEN_DAY_THREAD_ARCHIVE')) {\n        autoArchiveDuration = 10080;\n      } else if (this.channel.guild.features.includes('THREE_DAY_THREAD_ARCHIVE')) {\n        autoArchiveDuration = 4320;\n      }\n    }\n\n    const data = await path.threads.post({\n      data: {\n        name,\n        auto_archive_duration: autoArchiveDuration,\n        type: resolvedType,\n      },\n      reason,\n    });\n\n    return this.client.actions.ThreadCreate.handle(data).thread;\n  }\n\n  /**\n   * The options for fetching multiple threads, the properties are mutually exclusive\n   * @typedef {Object} FetchThreadsOptions\n   * @property {FetchArchivedThreadOptions} [archived] The options used to fetch archived threads\n   * @property {boolean} [active] When true, fetches active threads. <warn>If `archived` is set, this is ignored!</warn>\n   */\n\n  /**\n   * Obtains a thread from Discord, or the channel cache if it's already available.\n   * @param {ThreadChannelResolvable|FetchThreadsOptions} [options] The options to fetch threads. If it is a\n   * ThreadChannelResolvable then the specified thread will be fetched. Fetches all active threads if `undefined`\n   * @param {BaseFetchOptions} [cacheOptions] Additional options for this fetch. <warn>The `force` field gets ignored\n   * if `options` is not a {@link ThreadChannelResolvable}</warn>\n   * @returns {Promise<?(ThreadChannel|FetchedThreads)>}\n   * @example\n   * // Fetch a thread by its id\n   * channel.threads.fetch('831955138126104859')\n   *   .then(channel => console.log(channel.name))\n   *   .catch(console.error);\n   */\n  fetch(options, { cache = true, force = false } = {}) {\n    if (!options) return this.fetchActive(cache);\n    const channel = this.client.channels.resolveId(options);\n    if (channel) return this.client.channels.fetch(channel, cache, force);\n    if (options.archived) {\n      return this.fetchArchived(options.archived, cache);\n    }\n    return this.fetchActive(cache);\n  }\n\n  /**\n   * Data that can be resolved to a Date object. This can be:\n   * * A Date object\n   * * A number representing a timestamp\n   * * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string\n   * @typedef {Date|number|string} DateResolvable\n   */\n\n  /**\n   * The options used to fetch archived threads.\n   * @typedef {Object} FetchArchivedThreadOptions\n   * @property {string} [type='public'] The type of threads to fetch, either `public` or `private`\n   * @property {boolean} [fetchAll=false] Whether to fetch **all** archived threads when type is `private`.\n   * Requires `MANAGE_THREADS` if true\n   * @property {DateResolvable|ThreadChannelResolvable} [before] Only return threads that were created before this Date\n   * or Snowflake. <warn>Must be a {@link ThreadChannelResolvable} when type is `private` and fetchAll is `false`</warn>\n   * @property {number} [limit] Maximum number of threads to return\n   */\n\n  /**\n   * The data returned from a thread fetch that returns multiple threads.\n   * @typedef {Object} FetchedThreads\n   * @property {Collection<Snowflake, ThreadChannel>} threads The threads that were fetched, with any members returned\n   * @property {?boolean} hasMore Whether there are potentially additional threads that require a subsequent call\n   */\n\n  /**\n   * Obtains a set of archived threads from Discord, requires `READ_MESSAGE_HISTORY` in the parent channel.\n   * @param {FetchArchivedThreadOptions} [options] The options to fetch archived threads\n   * @param {boolean} [cache=true] Whether to cache the new thread objects if they aren't already\n   * @returns {Promise<FetchedThreads>}\n   */\n  async fetchArchived({ type = 'public', fetchAll = false, before, limit } = {}, cache = true) {\n    let path = this.client.api.channels(this.channel.id);\n    if (type === 'private' && !fetchAll) {\n      path = path.users('@me');\n    }\n    let timestamp;\n    let id;\n    if (typeof before !== 'undefined') {\n      if (before instanceof ThreadChannel || /^\\d{16,19}$/.test(String(before))) {\n        id = this.resolveId(before);\n        timestamp = this.resolve(before)?.archivedAt?.toISOString();\n      } else {\n        try {\n          timestamp = new Date(before).toISOString();\n        } catch {\n          throw new TypeError('INVALID_TYPE', 'before', 'DateResolvable or ThreadChannelResolvable');\n        }\n      }\n    }\n    const raw = await path.threads\n      .archived(type)\n      .get({ query: { before: type === 'private' && !fetchAll ? id : timestamp, limit } });\n    return this.constructor._mapThreads(raw, this.client, { parent: this.channel, cache });\n  }\n\n  /**\n   * Obtains the accessible active threads from Discord, requires `READ_MESSAGE_HISTORY` in the parent channel.\n   * @param {boolean} [cache=true] Whether to cache the new thread objects if they aren't already\n   * @returns {Promise<FetchedThreads>}\n   */\n  async fetchActive(cache = true) {\n    const raw = await this.client.api.guilds(this.channel.guild.id).threads.active.get();\n    return this.constructor._mapThreads(raw, this.client, { parent: this.channel, cache });\n  }\n\n  static _mapThreads(rawThreads, client, { parent, guild, cache }) {\n    const threads = rawThreads.threads.reduce((coll, raw) => {\n      const thread = client.channels._add(raw, guild ?? parent?.guild, { cache });\n      if (parent && thread.parentId !== parent.id) return coll;\n      return coll.set(thread.id, thread);\n    }, new Collection());\n    // Discord sends the thread id as id in this object\n    for (const rawMember of rawThreads.members) client.channels.cache.get(rawMember.id)?.members._add(rawMember);\n    return {\n      threads,\n      hasMore: rawThreads.has_more ?? false,\n    };\n  }\n}\n\nmodule.exports = ThreadManager;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst CachedManager = require('./CachedManager');\nconst { TypeError } = require('../errors');\nconst ThreadMember = require('../structures/ThreadMember');\n\n/**\n * Manages API methods for GuildMembers and stores their cache.\n * @extends {CachedManager}\n */\nclass ThreadMemberManager extends CachedManager {\n  constructor(thread, iterable) {\n    super(thread.client, ThreadMember, iterable);\n\n    /**\n     * The thread this manager belongs to\n     * @type {ThreadChannel}\n     */\n    this.thread = thread;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, ThreadMember>}\n   * @name ThreadMemberManager#cache\n   */\n\n  _add(data, cache = true) {\n    const existing = this.cache.get(data.user_id);\n    if (cache) existing?._patch(data);\n    if (existing) return existing;\n\n    const member = new ThreadMember(this.thread, data);\n    if (cache) this.cache.set(data.user_id, member);\n    return member;\n  }\n\n  /**\n   * Data that resolves to give a ThreadMember object. This can be:\n   * * A ThreadMember object\n   * * A User resolvable\n   * @typedef {ThreadMember|UserResolvable} ThreadMemberResolvable\n   */\n\n  /**\n   * Resolves a {@link ThreadMemberResolvable} to a {@link ThreadMember} object.\n   * @param {ThreadMemberResolvable} member The user that is part of the thread\n   * @returns {?GuildMember}\n   */\n  resolve(member) {\n    const memberResolvable = super.resolve(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    if (userResolvable) return super.resolve(userResolvable);\n    return null;\n  }\n\n  /**\n   * Resolves a {@link ThreadMemberResolvable} to a {@link ThreadMember} id string.\n   * @param {ThreadMemberResolvable} member The user that is part of the guild\n   * @returns {?Snowflake}\n   */\n  resolveId(member) {\n    const memberResolvable = super.resolveId(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    return this.cache.has(userResolvable) ? userResolvable : null;\n  }\n\n  /**\n   * Adds a member to the thread.\n   * @param {UserResolvable|'@me'} member The member to add\n   * @param {string} [reason] The reason for adding this member\n   * @returns {Promise<Snowflake>}\n   */\n  async add(member, reason) {\n    const id = member === '@me' ? member : this.client.users.resolveId(member);\n    if (!id) throw new TypeError('INVALID_TYPE', 'member', 'UserResolvable');\n    await this.client.api.channels(this.thread.id, 'thread-members', id).put({ reason });\n    return id;\n  }\n\n  /**\n   * Remove a user from the thread.\n   * @param {Snowflake|'@me'} id The id of the member to remove\n   * @param {string} [reason] The reason for removing this member from the thread\n   * @returns {Promise<Snowflake>}\n   */\n  async remove(id, reason) {\n    await this.client.api.channels(this.thread.id, 'thread-members', id).delete({ reason });\n    return id;\n  }\n\n  /**\n   * Fetches member(s) for the thread from Discord, requires access to the `GUILD_MEMBERS` gateway intent.\n   * @param {boolean} [cache=true] Whether or not to cache the fetched members\n   * @returns {Promise<Collection<Snowflake, ThreadMember>>}\n   */\n  async fetch(cache = true) {\n    const raw = await this.client.api.channels(this.thread.id, 'thread-members').get();\n    return raw.reduce((col, rawMember) => {\n      const member = this._add(rawMember, cache);\n      return col.set(member.id, member);\n    }, new Collection());\n  }\n}\n\nmodule.exports = ThreadMemberManager;\n","'use strict';\n\nconst CachedManager = require('./CachedManager');\nconst GuildMember = require('../structures/GuildMember');\nconst Message = require('../structures/Message');\nconst ThreadMember = require('../structures/ThreadMember');\nconst User = require('../structures/User');\n\n/**\n * Manages API methods for users and stores their cache.\n * @extends {CachedManager}\n */\nclass UserManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, User, iterable);\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, User>}\n   * @name UserManager#cache\n   */\n\n  /**\n   * Data that resolves to give a User object. This can be:\n   * * A User object\n   * * A Snowflake\n   * * A Message object (resolves to the message author)\n   * * A GuildMember object\n   * * A ThreadMember object\n   * @typedef {User|Snowflake|Message|GuildMember|ThreadMember} UserResolvable\n   */\n\n  /**\n   * Resolves a {@link UserResolvable} to a {@link User} object.\n   * @param {UserResolvable} user The UserResolvable to identify\n   * @returns {?User}\n   */\n  resolve(user) {\n    if (user instanceof GuildMember || user instanceof ThreadMember) return user.user;\n    if (user instanceof Message) return user.author;\n    return super.resolve(user);\n  }\n\n  /**\n   * Resolves a {@link UserResolvable} to a {@link User} id.\n   * @param {UserResolvable} user The UserResolvable to identify\n   * @returns {?Snowflake}\n   */\n  resolveId(user) {\n    if (user instanceof ThreadMember) return user.id;\n    if (user instanceof GuildMember) return user.user.id;\n    if (user instanceof Message) return user.author.id;\n    return super.resolveId(user);\n  }\n\n  /**\n   * Obtains a user from Discord, or the user cache if it's already available.\n   * @param {Snowflake} id The user's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<User>}\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (!force) {\n      const existing = this.cache.get(id);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.api.users(id).get();\n    return this._add(data, cache);\n  }\n}\n\nmodule.exports = UserManager;\n","'use strict';\n\nconst CachedManager = require('./CachedManager');\nconst VoiceState = require('../structures/VoiceState');\n\n/**\n * Manages API methods for VoiceStates and stores their cache.\n * @extends {CachedManager}\n */\nclass VoiceStateManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, VoiceState, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, VoiceState>}\n   * @name VoiceStateManager#cache\n   */\n\n  _add(data, cache = true) {\n    const existing = this.cache.get(data.user_id);\n    if (existing) return existing._patch(data);\n\n    const entry = new this.holds(this.guild, data);\n    if (cache) this.cache.set(data.user_id, entry);\n    return entry;\n  }\n}\n\nmodule.exports = VoiceStateManager;\n","'use strict';\n\nconst https = require('https');\nconst FormData = require('@discordjs/form-data');\nconst fetch = require('node-fetch');\nconst { UserAgent } = require('../util/Constants');\n\nconst agent = new https.Agent({ keepAlive: true });\n\nclass APIRequest {\n  constructor(rest, method, path, options) {\n    this.rest = rest;\n    this.client = rest.client;\n    this.method = method;\n    this.route = options.route;\n    this.options = options;\n    this.retries = 0;\n\n    const { userAgentSuffix } = this.client.options;\n    this.fullUserAgent = `${UserAgent}${userAgentSuffix.length ? `, ${userAgentSuffix.join(', ')}` : ''}`;\n\n    let queryString = '';\n    if (options.query) {\n      const query = Object.entries(options.query)\n        .filter(([, value]) => value !== null && typeof value !== 'undefined')\n        .flatMap(([key, value]) => (Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]));\n      queryString = new URLSearchParams(query).toString();\n    }\n    this.path = `${path}${queryString && `?${queryString}`}`;\n  }\n\n  make() {\n    const API =\n      this.options.versioned === false\n        ? this.client.options.http.api\n        : `${this.client.options.http.api}/v${this.client.options.http.version}`;\n    const url = API + this.path;\n\n    let headers = {\n      ...this.client.options.http.headers,\n      'User-Agent': this.fullUserAgent,\n    };\n\n    if (this.options.auth !== false) headers.Authorization = this.rest.getAuth();\n    if (this.options.reason) headers['X-Audit-Log-Reason'] = encodeURIComponent(this.options.reason);\n    if (this.options.headers) headers = Object.assign(headers, this.options.headers);\n\n    let body;\n    if (this.options.files && this.options.files.length) {\n      body = new FormData();\n      for (const file of this.options.files) {\n        if (file?.file) body.append(file.key ?? file.name, file.file, file.name);\n      }\n      if (typeof this.options.data !== 'undefined') {\n        if (this.options.dontUsePayloadJSON) {\n          for (const [key, value] of Object.entries(this.options.data)) body.append(key, value);\n        } else {\n          body.append('payload_json', JSON.stringify(this.options.data));\n        }\n      }\n      headers = Object.assign(headers, body.getHeaders());\n      // eslint-disable-next-line eqeqeq\n    } else if (this.options.data != null) {\n      body = JSON.stringify(this.options.data);\n      headers['Content-Type'] = 'application/json';\n    }\n\n    const controller = new AbortController();\n    const timeout = setTimeout(() => controller.abort(), this.client.options.restRequestTimeout).unref();\n    return fetch(url, {\n      method: this.method,\n      headers,\n      agent,\n      body,\n      signal: controller.signal,\n    }).finally(() => clearTimeout(timeout));\n  }\n}\n\nmodule.exports = APIRequest;\n","'use strict';\n\nconst noop = () => {}; // eslint-disable-line no-empty-function\nconst methods = ['get', 'post', 'delete', 'patch', 'put'];\nconst reflectors = [\n  'toString',\n  'valueOf',\n  'inspect',\n  'constructor',\n  Symbol.toPrimitive,\n  Symbol.for('nodejs.util.inspect.custom'),\n];\n\nfunction buildRoute(manager) {\n  const route = [''];\n  const handler = {\n    get(target, name) {\n      if (reflectors.includes(name)) return () => route.join('/');\n      if (methods.includes(name)) {\n        const routeBucket = [];\n        for (let i = 0; i < route.length; i++) {\n          // Reactions routes and sub-routes all share the same bucket\n          if (route[i - 1] === 'reactions') break;\n          // Literal ids should only be taken account if they are the Major id (the Channel/Guild id)\n          if (/\\d{16,19}/g.test(route[i]) && !/channels|guilds/.test(route[i - 1])) routeBucket.push(':id');\n          // All other parts of the route should be considered as part of the bucket identifier\n          else routeBucket.push(route[i]);\n        }\n        return options =>\n          manager.request(\n            name,\n            route.join('/'),\n            Object.assign(\n              {\n                versioned: manager.versioned,\n                route: routeBucket.join('/'),\n              },\n              options,\n            ),\n          );\n      }\n      route.push(name);\n      return new Proxy(noop, handler);\n    },\n    apply(target, _, args) {\n      route.push(...args.filter(x => x != null)); // eslint-disable-line eqeqeq\n      return new Proxy(noop, handler);\n    },\n  };\n  return new Proxy(noop, handler);\n}\n\nmodule.exports = buildRoute;\n","'use strict';\n\n/**\n * Represents an error from the Discord API.\n * @extends Error\n */\nclass DiscordAPIError extends Error {\n  constructor(error, status, request) {\n    super();\n    const flattened = this.constructor.flattenErrors(error.errors ?? error).join('\\n');\n    this.name = 'DiscordAPIError';\n    this.message = error.message && flattened ? `${error.message}\\n${flattened}` : error.message ?? flattened;\n\n    /**\n     * The HTTP method used for the request\n     * @type {string}\n     */\n    this.method = request.method;\n\n    /**\n     * The path of the request relative to the HTTP endpoint\n     * @type {string}\n     */\n    this.path = request.path;\n\n    /**\n     * HTTP error code returned by Discord\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * The HTTP status code\n     * @type {number}\n     */\n    this.httpStatus = status;\n\n    /**\n     * The data associated with the request that caused this error\n     * @type {HTTPErrorData}\n     */\n    this.requestData = {\n      json: request.options.data,\n      files: request.options.files ?? [],\n    };\n  }\n\n  /**\n   * Flattens an errors object returned from the API into an array.\n   * @param {APIError} obj Discord errors object\n   * @param {string} [key] Used internally to determine key names of nested fields\n   * @returns {string[]}\n   * @private\n   */\n  static flattenErrors(obj, key = '') {\n    let messages = [];\n\n    for (const [k, v] of Object.entries(obj)) {\n      if (k === 'message') continue;\n      const newKey = key ? (isNaN(k) ? `${key}.${k}` : `${key}[${k}]`) : k;\n\n      if (v._errors) {\n        messages.push(`${newKey}: ${v._errors.map(e => e.message).join(' ')}`);\n      } else if (v.code ?? v.message) {\n        messages.push(`${v.code ? `${v.code}: ` : ''}${v.message}`.trim());\n      } else if (typeof v === 'string') {\n        messages.push(v);\n      } else {\n        messages = messages.concat(this.flattenErrors(v, newKey));\n      }\n    }\n\n    return messages;\n  }\n}\n\nmodule.exports = DiscordAPIError;\n\n/**\n * @external APIError\n * @see {@link https://discord.com/developers/docs/reference#error-messages}\n */\n","'use strict';\n\n/**\n * Represents an HTTP error from a request.\n * @extends Error\n */\nclass HTTPError extends Error {\n  constructor(message, name, code, request) {\n    super(message);\n\n    /**\n     * The name of the error\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * HTTP error code returned from the request\n     * @type {number}\n     */\n    this.code = code ?? 500;\n\n    /**\n     * The HTTP method used for the request\n     * @type {string}\n     */\n    this.method = request.method;\n\n    /**\n     * The path of the request relative to the HTTP endpoint\n     * @type {string}\n     */\n    this.path = request.path;\n\n    /**\n     * The HTTP data that was sent to Discord\n     * @typedef {Object} HTTPErrorData\n     * @property {*} json The JSON data that was sent\n     * @property {HTTPAttachmentData[]} files The files that were sent with this request, if any\n     */\n\n    /**\n     * The attachment data that is sent to Discord\n     * @typedef {Object} HTTPAttachmentData\n     * @property {string|Buffer|Stream} attachment The source of this attachment data\n     * @property {string} name The file name\n     * @property {Buffer|Stream} file The file buffer\n     */\n\n    /**\n     * The data associated with the request that caused this error\n     * @type {HTTPErrorData}\n     */\n    this.requestData = {\n      json: request.options.data,\n      files: request.options.files ?? [],\n    };\n  }\n}\n\nmodule.exports = HTTPError;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst APIRequest = require('./APIRequest');\nconst routeBuilder = require('./APIRouter');\nconst RequestHandler = require('./RequestHandler');\nconst { Error } = require('../errors');\nconst { Endpoints } = require('../util/Constants');\n\nclass RESTManager {\n  constructor(client, tokenPrefix = 'Bot') {\n    this.client = client;\n    this.handlers = new Collection();\n    this.tokenPrefix = tokenPrefix;\n    this.versioned = true;\n    this.globalLimit = client.options.restGlobalRateLimit > 0 ? client.options.restGlobalRateLimit : Infinity;\n    this.globalRemaining = this.globalLimit;\n    this.globalReset = null;\n    this.globalDelay = null;\n    if (client.options.restSweepInterval > 0) {\n      this.sweepInterval = setInterval(() => {\n        this.handlers.sweep(handler => handler._inactive);\n      }, client.options.restSweepInterval * 1000).unref();\n    }\n  }\n\n  get api() {\n    return routeBuilder(this);\n  }\n\n  getAuth() {\n    const token = this.client.token ?? this.client.accessToken;\n    if (token) return `${this.tokenPrefix} ${token}`;\n    throw new Error('TOKEN_MISSING');\n  }\n\n  get cdn() {\n    return Endpoints.CDN(this.client.options.http.cdn);\n  }\n\n  request(method, url, options = {}) {\n    const apiRequest = new APIRequest(this, method, url, options);\n    let handler = this.handlers.get(apiRequest.route);\n\n    if (!handler) {\n      handler = new RequestHandler(this);\n      this.handlers.set(apiRequest.route, handler);\n    }\n\n    return handler.push(apiRequest);\n  }\n\n  get endpoint() {\n    return this.client.options.http.api;\n  }\n\n  set endpoint(endpoint) {\n    this.client.options.http.api = endpoint;\n  }\n}\n\nmodule.exports = RESTManager;\n","'use strict';\n\n/**\n * Represents a RateLimit error from a request.\n * @extends Error\n */\nclass RateLimitError extends Error {\n  constructor({ timeout, limit, method, path, route, global }) {\n    super(`A ${global ? 'global ' : ''}rate limit was hit on route ${route}`);\n\n    /**\n     * The name of the error\n     * @type {string}\n     */\n    this.name = 'RateLimitError';\n\n    /**\n     * Time until this rate limit ends, in ms\n     * @type {number}\n     */\n    this.timeout = timeout;\n\n    /**\n     * The HTTP method used for the request\n     * @type {string}\n     */\n    this.method = method;\n\n    /**\n     * The path of the request relative to the HTTP endpoint\n     * @type {string}\n     */\n    this.path = path;\n\n    /**\n     * The route of the request relative to the HTTP endpoint\n     * @type {string}\n     */\n    this.route = route;\n\n    /**\n     * Whether this rate limit is global\n     * @type {boolean}\n     */\n    this.global = global;\n\n    /**\n     * The maximum amount of requests of this end point\n     * @type {number}\n     */\n    this.limit = limit;\n  }\n}\n\nmodule.exports = RateLimitError;\n","'use strict';\n\nconst { AsyncQueue } = require('@sapphire/async-queue');\nconst DiscordAPIError = require('./DiscordAPIError');\nconst HTTPError = require('./HTTPError');\nconst RateLimitError = require('./RateLimitError');\nconst {\n  Events: { DEBUG, RATE_LIMIT, INVALID_REQUEST_WARNING },\n} = require('../util/Constants');\nconst Util = require('../util/Util');\n\nfunction parseResponse(res) {\n  if (res.headers.get('content-type').startsWith('application/json')) return res.json();\n  return res.buffer();\n}\n\nfunction getAPIOffset(serverDate) {\n  return new Date(serverDate).getTime() - Date.now();\n}\n\nfunction calculateReset(reset, resetAfter, serverDate) {\n  // Use direct reset time when available, server date becomes irrelevant in this case\n  if (resetAfter) {\n    return Date.now() + Number(resetAfter) * 1000;\n  }\n  return new Date(Number(reset) * 1000).getTime() - getAPIOffset(serverDate);\n}\n\n/* Invalid request limiting is done on a per-IP basis, not a per-token basis.\n * The best we can do is track invalid counts process-wide (on the theory that\n * users could have multiple bots run from one process) rather than per-bot.\n * Therefore, store these at file scope here rather than in the client's\n * RESTManager object.\n */\nlet invalidCount = 0;\nlet invalidCountResetTime = null;\n\nclass RequestHandler {\n  constructor(manager) {\n    this.manager = manager;\n    this.queue = new AsyncQueue();\n    this.reset = -1;\n    this.remaining = -1;\n    this.limit = -1;\n  }\n\n  async push(request) {\n    await this.queue.wait();\n    try {\n      return await this.execute(request);\n    } finally {\n      this.queue.shift();\n    }\n  }\n\n  get globalLimited() {\n    return this.manager.globalRemaining <= 0 && Date.now() < this.manager.globalReset;\n  }\n\n  get localLimited() {\n    return this.remaining <= 0 && Date.now() < this.reset;\n  }\n\n  get limited() {\n    return this.globalLimited || this.localLimited;\n  }\n\n  get _inactive() {\n    return this.queue.remaining === 0 && !this.limited;\n  }\n\n  globalDelayFor(ms) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.manager.globalDelay = null;\n        resolve();\n      }, ms).unref();\n    });\n  }\n\n  /*\n   * Determines whether the request should be queued or whether a RateLimitError should be thrown\n   */\n  async onRateLimit(request, limit, timeout, isGlobal) {\n    const { options } = this.manager.client;\n    if (!options.rejectOnRateLimit) return;\n\n    const rateLimitData = {\n      timeout,\n      limit,\n      method: request.method,\n      path: request.path,\n      route: request.route,\n      global: isGlobal,\n    };\n    const shouldThrow =\n      typeof options.rejectOnRateLimit === 'function'\n        ? await options.rejectOnRateLimit(rateLimitData)\n        : options.rejectOnRateLimit.some(route => rateLimitData.route.startsWith(route.toLowerCase()));\n    if (shouldThrow) {\n      throw new RateLimitError(rateLimitData);\n    }\n  }\n\n  async execute(request) {\n    /*\n     * After calculations have been done, pre-emptively stop further requests\n     * Potentially loop until this task can run if e.g. the global rate limit is hit twice\n     */\n    while (this.limited) {\n      const isGlobal = this.globalLimited;\n      let limit, timeout, delayPromise;\n\n      if (isGlobal) {\n        // Set the variables based on the global rate limit\n        limit = this.manager.globalLimit;\n        timeout = this.manager.globalReset + this.manager.client.options.restTimeOffset - Date.now();\n      } else {\n        // Set the variables based on the route-specific rate limit\n        limit = this.limit;\n        timeout = this.reset + this.manager.client.options.restTimeOffset - Date.now();\n      }\n\n      if (this.manager.client.listenerCount(RATE_LIMIT)) {\n        /**\n         * Emitted when the client hits a rate limit while making a request\n         * @event Client#rateLimit\n         * @param {RateLimitData} rateLimitData Object containing the rate limit info\n         */\n        this.manager.client.emit(RATE_LIMIT, {\n          timeout,\n          limit,\n          method: request.method,\n          path: request.path,\n          route: request.route,\n          global: isGlobal,\n        });\n      }\n\n      if (isGlobal) {\n        // If this is the first task to reach the global timeout, set the global delay\n        if (!this.manager.globalDelay) {\n          // The global delay function should clear the global delay state when it is resolved\n          this.manager.globalDelay = this.globalDelayFor(timeout);\n        }\n        delayPromise = this.manager.globalDelay;\n      } else {\n        delayPromise = Util.delayFor(timeout);\n      }\n\n      // Determine whether a RateLimitError should be thrown\n      await this.onRateLimit(request, limit, timeout, isGlobal); // eslint-disable-line no-await-in-loop\n\n      // Wait for the timeout to expire in order to avoid an actual 429\n      await delayPromise; // eslint-disable-line no-await-in-loop\n    }\n\n    // As the request goes out, update the global usage information\n    if (!this.manager.globalReset || this.manager.globalReset < Date.now()) {\n      this.manager.globalReset = Date.now() + 1000;\n      this.manager.globalRemaining = this.manager.globalLimit;\n    }\n    this.manager.globalRemaining--;\n\n    // Perform the request\n    let res;\n    try {\n      res = await request.make();\n    } catch (error) {\n      // Retry the specified number of times for request abortions\n      if (request.retries === this.manager.client.options.retryLimit) {\n        throw new HTTPError(error.message, error.constructor.name, error.status, request);\n      }\n\n      request.retries++;\n      return this.execute(request);\n    }\n\n    let sublimitTimeout;\n    if (res && res.headers) {\n      const serverDate = res.headers.get('date');\n      const limit = res.headers.get('x-ratelimit-limit');\n      const remaining = res.headers.get('x-ratelimit-remaining');\n      const reset = res.headers.get('x-ratelimit-reset');\n      const resetAfter = res.headers.get('x-ratelimit-reset-after');\n      this.limit = limit ? Number(limit) : Infinity;\n      this.remaining = remaining ? Number(remaining) : 1;\n\n      this.reset = reset || resetAfter ? calculateReset(reset, resetAfter, serverDate) : Date.now();\n\n      // https://github.com/discord/discord-api-docs/issues/182\n      if (!resetAfter && request.route.includes('reactions')) {\n        this.reset = new Date(serverDate).getTime() - getAPIOffset(serverDate) + 250;\n      }\n\n      // Handle retryAfter, which means we have actually hit a rate limit\n      let retryAfter = res.headers.get('retry-after');\n      retryAfter = retryAfter ? Number(retryAfter) * 1000 : -1;\n      if (retryAfter > 0) {\n        // If the global ratelimit header is set, that means we hit the global rate limit\n        if (res.headers.get('x-ratelimit-global')) {\n          this.manager.globalRemaining = 0;\n          this.manager.globalReset = Date.now() + retryAfter;\n        } else if (!this.localLimited) {\n          /*\n           * This is a sublimit (e.g. 2 channel name changes/10 minutes) since the headers don't indicate a\n           * route-wide rate limit. Don't update remaining or reset to avoid rate limiting the whole\n           * endpoint, just set a reset time on the request itself to avoid retrying too soon.\n           */\n          sublimitTimeout = retryAfter;\n        }\n      }\n    }\n\n    // Count the invalid requests\n    if (res.status === 401 || res.status === 403 || res.status === 429) {\n      if (!invalidCountResetTime || invalidCountResetTime < Date.now()) {\n        invalidCountResetTime = Date.now() + 1000 * 60 * 10;\n        invalidCount = 0;\n      }\n      invalidCount++;\n\n      const emitInvalid =\n        this.manager.client.listenerCount(INVALID_REQUEST_WARNING) &&\n        this.manager.client.options.invalidRequestWarningInterval > 0 &&\n        invalidCount % this.manager.client.options.invalidRequestWarningInterval === 0;\n      if (emitInvalid) {\n        /**\n         * @typedef {Object} InvalidRequestWarningData\n         * @property {number} count Number of invalid requests that have been made in the window\n         * @property {number} remainingTime Time in ms remaining before the count resets\n         */\n\n        /**\n         * Emitted periodically when the process sends invalid requests to let users avoid the\n         * 10k invalid requests in 10 minutes threshold that causes a ban\n         * @event Client#invalidRequestWarning\n         * @param {InvalidRequestWarningData} invalidRequestWarningData Object containing the invalid request info\n         */\n        this.manager.client.emit(INVALID_REQUEST_WARNING, {\n          count: invalidCount,\n          remainingTime: invalidCountResetTime - Date.now(),\n        });\n      }\n    }\n\n    // Handle 2xx and 3xx responses\n    if (res.ok) {\n      // Nothing wrong with the request, proceed with the next one\n      return parseResponse(res);\n    }\n\n    // Handle 4xx responses\n    if (res.status >= 400 && res.status < 500) {\n      // Handle ratelimited requests\n      if (res.status === 429) {\n        const isGlobal = this.globalLimited;\n        let limit, timeout;\n        if (isGlobal) {\n          // Set the variables based on the global rate limit\n          limit = this.manager.globalLimit;\n          timeout = this.manager.globalReset + this.manager.client.options.restTimeOffset - Date.now();\n        } else {\n          // Set the variables based on the route-specific rate limit\n          limit = this.limit;\n          timeout = this.reset + this.manager.client.options.restTimeOffset - Date.now();\n        }\n\n        this.manager.client.emit(\n          DEBUG,\n          `Hit a 429 while executing a request.\n    Global  : ${isGlobal}\n    Method  : ${request.method}\n    Path    : ${request.path}\n    Route   : ${request.route}\n    Limit   : ${limit}\n    Timeout : ${timeout}ms\n    Sublimit: ${sublimitTimeout ? `${sublimitTimeout}ms` : 'None'}`,\n        );\n\n        await this.onRateLimit(request, limit, timeout, isGlobal);\n\n        // If caused by a sublimit, wait it out here so other requests on the route can be handled\n        if (sublimitTimeout) {\n          await Util.delayFor(sublimitTimeout);\n        }\n        return this.execute(request);\n      }\n\n      // Handle possible malformed requests\n      let data;\n      try {\n        data = await parseResponse(res);\n      } catch (err) {\n        throw new HTTPError(err.message, err.constructor.name, err.status, request);\n      }\n\n      throw new DiscordAPIError(data, res.status, request);\n    }\n\n    // Handle 5xx responses\n    if (res.status >= 500 && res.status < 600) {\n      // Retry the specified number of times for possible serverside issues\n      if (request.retries === this.manager.client.options.retryLimit) {\n        throw new HTTPError(res.statusText, res.constructor.name, res.status, request);\n      }\n\n      request.retries++;\n      return this.execute(request);\n    }\n\n    // Fallback in the rare case a status code outside the range 200..=599 is returned\n    return null;\n  }\n}\n\nmodule.exports = RequestHandler;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst path = require('path');\nconst { Error } = require('../errors');\nconst Util = require('../util/Util');\nlet childProcess = null;\nlet Worker = null;\n\n/**\n * A self-contained shard created by the {@link ShardingManager}. Each one has a {@link ChildProcess} that contains\n * an instance of the bot and its {@link Client}. When its child process/worker exits for any reason, the shard will\n * spawn a new one to replace it as necessary.\n * @extends EventEmitter\n */\nclass Shard extends EventEmitter {\n  /**\n   * @param {ShardingManager} manager Manager that is creating this shard\n   * @param {number} id The shard's id\n   */\n  constructor(manager, id) {\n    super();\n\n    if (manager.mode === 'process') childProcess = require('child_process');\n    else if (manager.mode === 'worker') Worker = require('worker_threads').Worker;\n\n    /**\n     * Manager that created the shard\n     * @type {ShardingManager}\n     */\n    this.manager = manager;\n\n    /**\n     * The shard's id in the manager\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * Arguments for the shard's process (only when {@link ShardingManager#mode} is `process`)\n     * @type {string[]}\n     */\n    this.args = manager.shardArgs ?? [];\n\n    /**\n     * Arguments for the shard's process executable (only when {@link ShardingManager#mode} is `process`)\n     * @type {string[]}\n     */\n    this.execArgv = manager.execArgv;\n\n    /**\n     * Environment variables for the shard's process, or workerData for the shard's worker\n     * @type {Object}\n     */\n    this.env = Object.assign({}, process.env, {\n      SHARDING_MANAGER: true,\n      SHARDS: this.id,\n      SHARD_COUNT: this.manager.totalShards,\n      DISCORD_TOKEN: this.manager.token,\n    });\n\n    /**\n     * Whether the shard's {@link Client} is ready\n     * @type {boolean}\n     */\n    this.ready = false;\n\n    /**\n     * Process of the shard (if {@link ShardingManager#mode} is `process`)\n     * @type {?ChildProcess}\n     */\n    this.process = null;\n\n    /**\n     * Worker of the shard (if {@link ShardingManager#mode} is `worker`)\n     * @type {?Worker}\n     */\n    this.worker = null;\n\n    /**\n     * Ongoing promises for calls to {@link Shard#eval}, mapped by the `script` they were called with\n     * @type {Map<string, Promise>}\n     * @private\n     */\n    this._evals = new Map();\n\n    /**\n     * Ongoing promises for calls to {@link Shard#fetchClientValue}, mapped by the `prop` they were called with\n     * @type {Map<string, Promise>}\n     * @private\n     */\n    this._fetches = new Map();\n\n    /**\n     * Listener function for the {@link ChildProcess}' `exit` event\n     * @type {Function}\n     * @private\n     */\n    this._exitListener = this._handleExit.bind(this, undefined);\n  }\n\n  /**\n   * Forks a child process or creates a worker thread for the shard.\n   * <warn>You should not need to call this manually.</warn>\n   * @param {number} [timeout=30000] The amount in milliseconds to wait until the {@link Client} has become ready\n   * before resolving (`-1` or `Infinity` for no wait)\n   * @returns {Promise<ChildProcess>}\n   */\n  spawn(timeout = 30000) {\n    if (this.process) throw new Error('SHARDING_PROCESS_EXISTS', this.id);\n    if (this.worker) throw new Error('SHARDING_WORKER_EXISTS', this.id);\n\n    if (this.manager.mode === 'process') {\n      this.process = childProcess\n        .fork(path.resolve(this.manager.file), this.args, {\n          env: this.env,\n          execArgv: this.execArgv,\n        })\n        .on('message', this._handleMessage.bind(this))\n        .on('exit', this._exitListener);\n    } else if (this.manager.mode === 'worker') {\n      this.worker = new Worker(path.resolve(this.manager.file), { workerData: this.env })\n        .on('message', this._handleMessage.bind(this))\n        .on('exit', this._exitListener);\n    }\n\n    this._evals.clear();\n    this._fetches.clear();\n\n    const child = this.process ?? this.worker;\n\n    /**\n     * Emitted upon the creation of the shard's child process/worker.\n     * @event Shard#spawn\n     * @param {ChildProcess|Worker} process Child process/worker that was created\n     */\n    this.emit('spawn', child);\n\n    if (timeout === -1 || timeout === Infinity) return child;\n    return new Promise((resolve, reject) => {\n      const cleanup = () => {\n        clearTimeout(spawnTimeoutTimer);\n        this.off('ready', onReady);\n        this.off('disconnect', onDisconnect);\n        this.off('death', onDeath);\n      };\n\n      const onReady = () => {\n        cleanup();\n        resolve(child);\n      };\n\n      const onDisconnect = () => {\n        cleanup();\n        reject(new Error('SHARDING_READY_DISCONNECTED', this.id));\n      };\n\n      const onDeath = () => {\n        cleanup();\n        reject(new Error('SHARDING_READY_DIED', this.id));\n      };\n\n      const onTimeout = () => {\n        cleanup();\n        reject(new Error('SHARDING_READY_TIMEOUT', this.id));\n      };\n\n      const spawnTimeoutTimer = setTimeout(onTimeout, timeout);\n      this.once('ready', onReady);\n      this.once('disconnect', onDisconnect);\n      this.once('death', onDeath);\n    });\n  }\n\n  /**\n   * Immediately kills the shard's process/worker and does not restart it.\n   */\n  kill() {\n    if (this.process) {\n      this.process.removeListener('exit', this._exitListener);\n      this.process.kill();\n    } else {\n      this.worker.removeListener('exit', this._exitListener);\n      this.worker.terminate();\n    }\n\n    this._handleExit(false);\n  }\n\n  /**\n   * Options used to respawn a shard.\n   * @typedef {Object} ShardRespawnOptions\n   * @property {number} [delay=500] How long to wait between killing the process/worker and\n   * restarting it (in milliseconds)\n   * @property {number} [timeout=30000] The amount in milliseconds to wait until the {@link Client}\n   * has become ready before resolving (`-1` or `Infinity` for no wait)\n   */\n\n  /**\n   * Kills and restarts the shard's process/worker.\n   * @param {ShardRespawnOptions} [options] Options for respawning the shard\n   * @returns {Promise<ChildProcess>}\n   */\n  async respawn({ delay = 500, timeout = 30000 } = {}) {\n    this.kill();\n    if (delay > 0) await Util.delayFor(delay);\n    return this.spawn(timeout);\n  }\n\n  /**\n   * Sends a message to the shard's process/worker.\n   * @param {*} message Message to send to the shard\n   * @returns {Promise<Shard>}\n   */\n  send(message) {\n    return new Promise((resolve, reject) => {\n      if (this.process) {\n        this.process.send(message, err => {\n          if (err) reject(err);\n          else resolve(this);\n        });\n      } else {\n        this.worker.postMessage(message);\n        resolve(this);\n      }\n    });\n  }\n\n  /**\n   * Fetches a client property value of the shard.\n   * @param {string} prop Name of the client property to get, using periods for nesting\n   * @returns {Promise<*>}\n   * @example\n   * shard.fetchClientValue('guilds.cache.size')\n   *   .then(count => console.log(`${count} guilds in shard ${shard.id}`))\n   *   .catch(console.error);\n   */\n  fetchClientValue(prop) {\n    // Shard is dead (maybe respawning), don't cache anything and error immediately\n    if (!this.process && !this.worker) return Promise.reject(new Error('SHARDING_NO_CHILD_EXISTS', this.id));\n\n    // Cached promise from previous call\n    if (this._fetches.has(prop)) return this._fetches.get(prop);\n\n    const promise = new Promise((resolve, reject) => {\n      const child = this.process ?? this.worker;\n\n      const listener = message => {\n        if (message?._fetchProp !== prop) return;\n        child.removeListener('message', listener);\n        this._fetches.delete(prop);\n        resolve(message._result);\n      };\n      child.on('message', listener);\n\n      this.send({ _fetchProp: prop }).catch(err => {\n        child.removeListener('message', listener);\n        this._fetches.delete(prop);\n        reject(err);\n      });\n    });\n\n    this._fetches.set(prop, promise);\n    return promise;\n  }\n\n  /**\n   * Evaluates a script or function on the shard, in the context of the {@link Client}.\n   * @param {string|Function} script JavaScript to run on the shard\n   * @returns {Promise<*>} Result of the script execution\n   */\n  eval(script) {\n    // Shard is dead (maybe respawning), don't cache anything and error immediately\n    if (!this.process && !this.worker) return Promise.reject(new Error('SHARDING_NO_CHILD_EXISTS', this.id));\n\n    // Cached promise from previous call\n    if (this._evals.has(script)) return this._evals.get(script);\n\n    const promise = new Promise((resolve, reject) => {\n      const child = this.process ?? this.worker;\n\n      const listener = message => {\n        if (message?._eval !== script) return;\n        child.removeListener('message', listener);\n        this._evals.delete(script);\n        if (!message._error) resolve(message._result);\n        else reject(Util.makeError(message._error));\n      };\n      child.on('message', listener);\n\n      const _eval = typeof script === 'function' ? `(${script})(this)` : script;\n      this.send({ _eval }).catch(err => {\n        child.removeListener('message', listener);\n        this._evals.delete(script);\n        reject(err);\n      });\n    });\n\n    this._evals.set(script, promise);\n    return promise;\n  }\n\n  /**\n   * Handles a message received from the child process/worker.\n   * @param {*} message Message received\n   * @private\n   */\n  _handleMessage(message) {\n    if (message) {\n      // Shard is ready\n      if (message._ready) {\n        this.ready = true;\n        /**\n         * Emitted upon the shard's {@link Client#ready} event.\n         * @event Shard#ready\n         */\n        this.emit('ready');\n        return;\n      }\n\n      // Shard has disconnected\n      if (message._disconnect) {\n        this.ready = false;\n        /**\n         * Emitted upon the shard's {@link Client#disconnect} event.\n         * @event Shard#disconnect\n         */\n        this.emit('disconnect');\n        return;\n      }\n\n      // Shard is attempting to reconnect\n      if (message._reconnecting) {\n        this.ready = false;\n        /**\n         * Emitted upon the shard's {@link Client#reconnecting} event.\n         * @event Shard#reconnecting\n         */\n        this.emit('reconnecting');\n        return;\n      }\n\n      // Shard is requesting a property fetch\n      if (message._sFetchProp) {\n        const resp = { _sFetchProp: message._sFetchProp, _sFetchPropShard: message._sFetchPropShard };\n        this.manager.fetchClientValues(message._sFetchProp, message._sFetchPropShard).then(\n          results => this.send({ ...resp, _result: results }),\n          err => this.send({ ...resp, _error: Util.makePlainError(err) }),\n        );\n        return;\n      }\n\n      // Shard is requesting an eval broadcast\n      if (message._sEval) {\n        const resp = { _sEval: message._sEval, _sEvalShard: message._sEvalShard };\n        this.manager._performOnShards('eval', [message._sEval], message._sEvalShard).then(\n          results => this.send({ ...resp, _result: results }),\n          err => this.send({ ...resp, _error: Util.makePlainError(err) }),\n        );\n        return;\n      }\n\n      // Shard is requesting a respawn of all shards\n      if (message._sRespawnAll) {\n        const { shardDelay, respawnDelay, timeout } = message._sRespawnAll;\n        this.manager.respawnAll({ shardDelay, respawnDelay, timeout }).catch(() => {\n          // Do nothing\n        });\n        return;\n      }\n    }\n\n    /**\n     * Emitted upon receiving a message from the child process/worker.\n     * @event Shard#message\n     * @param {*} message Message that was received\n     */\n    this.emit('message', message);\n  }\n\n  /**\n   * Handles the shard's process/worker exiting.\n   * @param {boolean} [respawn=this.manager.respawn] Whether to spawn the shard again\n   * @private\n   */\n  _handleExit(respawn = this.manager.respawn) {\n    /**\n     * Emitted upon the shard's child process/worker exiting.\n     * @event Shard#death\n     * @param {ChildProcess|Worker} process Child process/worker that exited\n     */\n    this.emit('death', this.process ?? this.worker);\n\n    this.ready = false;\n    this.process = null;\n    this.worker = null;\n    this._evals.clear();\n    this._fetches.clear();\n\n    if (respawn) this.spawn().catch(err => this.emit('error', err));\n  }\n}\n\nmodule.exports = Shard;\n","'use strict';\n\nconst { Error } = require('../errors');\nconst { Events } = require('../util/Constants');\nconst Util = require('../util/Util');\n\n/**\n * Helper class for sharded clients spawned as a child process/worker, such as from a {@link ShardingManager}.\n * Utilises IPC to send and receive data to/from the master process and other shards.\n */\nclass ShardClientUtil {\n  /**\n   * @param {Client} client Client of the current shard\n   * @param {ShardingManagerMode} mode Mode the shard was spawned with\n   */\n  constructor(client, mode) {\n    /**\n     * Client for the shard\n     * @type {Client}\n     */\n    this.client = client;\n\n    /**\n     * Mode the shard was spawned with\n     * @type {ShardingManagerMode}\n     */\n    this.mode = mode;\n\n    /**\n     * Message port for the master process (only when {@link ShardClientUtil#mode} is `worker`)\n     * @type {?MessagePort}\n     */\n    this.parentPort = null;\n\n    if (mode === 'process') {\n      process.on('message', this._handleMessage.bind(this));\n      client.on('ready', () => {\n        process.send({ _ready: true });\n      });\n      client.on('disconnect', () => {\n        process.send({ _disconnect: true });\n      });\n      client.on('reconnecting', () => {\n        process.send({ _reconnecting: true });\n      });\n    } else if (mode === 'worker') {\n      this.parentPort = require('worker_threads').parentPort;\n      this.parentPort.on('message', this._handleMessage.bind(this));\n      client.on('ready', () => {\n        this.parentPort.postMessage({ _ready: true });\n      });\n      client.on('disconnect', () => {\n        this.parentPort.postMessage({ _disconnect: true });\n      });\n      client.on('reconnecting', () => {\n        this.parentPort.postMessage({ _reconnecting: true });\n      });\n    }\n  }\n\n  /**\n   * Array of shard ids of this client\n   * @type {number[]}\n   * @readonly\n   */\n  get ids() {\n    return this.client.options.shards;\n  }\n\n  /**\n   * Total number of shards\n   * @type {number}\n   * @readonly\n   */\n  get count() {\n    return this.client.options.shardCount;\n  }\n\n  /**\n   * Sends a message to the master process.\n   * @param {*} message Message to send\n   * @returns {Promise<void>}\n   * @emits Shard#message\n   */\n  send(message) {\n    return new Promise((resolve, reject) => {\n      if (this.mode === 'process') {\n        process.send(message, err => {\n          if (err) reject(err);\n          else resolve();\n        });\n      } else if (this.mode === 'worker') {\n        this.parentPort.postMessage(message);\n        resolve();\n      }\n    });\n  }\n\n  /**\n   * Fetches a client property value of each shard, or a given shard.\n   * @param {string} prop Name of the client property to get, using periods for nesting\n   * @param {number} [shard] Shard to fetch property from, all if undefined\n   * @returns {Promise<*|Array<*>>}\n   * @example\n   * client.shard.fetchClientValues('guilds.cache.size')\n   *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n   *   .catch(console.error);\n   * @see {@link ShardingManager#fetchClientValues}\n   */\n  fetchClientValues(prop, shard) {\n    return new Promise((resolve, reject) => {\n      const parent = this.parentPort ?? process;\n\n      const listener = message => {\n        if (message?._sFetchProp !== prop || message._sFetchPropShard !== shard) return;\n        parent.removeListener('message', listener);\n        if (!message._error) resolve(message._result);\n        else reject(Util.makeError(message._error));\n      };\n      parent.on('message', listener);\n\n      this.send({ _sFetchProp: prop, _sFetchPropShard: shard }).catch(err => {\n        parent.removeListener('message', listener);\n        reject(err);\n      });\n    });\n  }\n\n  /**\n   * Evaluates a script or function on all shards, or a given shard, in the context of the {@link Client}s.\n   * @param {Function} script JavaScript to run on each shard\n   * @param {BroadcastEvalOptions} [options={}] The options for the broadcast\n   * @returns {Promise<*|Array<*>>} Results of the script execution\n   * @example\n   * client.shard.broadcastEval(client => client.guilds.cache.size)\n   *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n   *   .catch(console.error);\n   * @see {@link ShardingManager#broadcastEval}\n   */\n  broadcastEval(script, options = {}) {\n    return new Promise((resolve, reject) => {\n      const parent = this.parentPort ?? process;\n      if (typeof script !== 'function') {\n        reject(new TypeError('SHARDING_INVALID_EVAL_BROADCAST'));\n        return;\n      }\n      script = `(${script})(this, ${JSON.stringify(options.context)})`;\n\n      const listener = message => {\n        if (message?._sEval !== script || message._sEvalShard !== options.shard) return;\n        parent.removeListener('message', listener);\n        if (!message._error) resolve(message._result);\n        else reject(Util.makeError(message._error));\n      };\n      parent.on('message', listener);\n\n      this.send({ _sEval: script, _sEvalShard: options.shard }).catch(err => {\n        parent.removeListener('message', listener);\n        reject(err);\n      });\n    });\n  }\n\n  /**\n   * Requests a respawn of all shards.\n   * @param {MultipleShardRespawnOptions} [options] Options for respawning shards\n   * @returns {Promise<void>} Resolves upon the message being sent\n   * @see {@link ShardingManager#respawnAll}\n   */\n  respawnAll({ shardDelay = 5000, respawnDelay = 500, timeout = 30000 } = {}) {\n    return this.send({ _sRespawnAll: { shardDelay, respawnDelay, timeout } });\n  }\n\n  /**\n   * Handles an IPC message.\n   * @param {*} message Message received\n   * @private\n   */\n  async _handleMessage(message) {\n    if (!message) return;\n    if (message._fetchProp) {\n      const props = message._fetchProp.split('.');\n      let value = this.client;\n      for (const prop of props) value = value[prop];\n      this._respond('fetchProp', { _fetchProp: message._fetchProp, _result: value });\n    } else if (message._eval) {\n      try {\n        this._respond('eval', { _eval: message._eval, _result: await this.client._eval(message._eval) });\n      } catch (err) {\n        this._respond('eval', { _eval: message._eval, _error: Util.makePlainError(err) });\n      }\n    }\n  }\n\n  /**\n   * Sends a message to the master process, emitting an error from the client upon failure.\n   * @param {string} type Type of response to send\n   * @param {*} message Message to send\n   * @private\n   */\n  _respond(type, message) {\n    this.send(message).catch(err => {\n      const error = new Error(`Error when sending ${type} response to master process: ${err.message}`);\n      error.stack = err.stack;\n      /**\n       * Emitted when the client encounters an error.\n       * @event Client#error\n       * @param {Error} error The error encountered\n       */\n      this.client.emit(Events.ERROR, error);\n    });\n  }\n\n  /**\n   * Creates/gets the singleton of this class.\n   * @param {Client} client The client to use\n   * @param {ShardingManagerMode} mode Mode the shard was spawned with\n   * @returns {ShardClientUtil}\n   */\n  static singleton(client, mode) {\n    if (!this._singleton) {\n      this._singleton = new this(client, mode);\n    } else {\n      client.emit(\n        Events.WARN,\n        'Multiple clients created in child process/worker; only the first will handle sharding helpers.',\n      );\n    }\n    return this._singleton;\n  }\n\n  /**\n   * Get the shard id for a given guild id.\n   * @param {Snowflake} guildId Snowflake guild id to get shard id for\n   * @param {number} shardCount Number of shards\n   * @returns {number}\n   */\n  static shardIdForGuildId(guildId, shardCount) {\n    const shard = Number(BigInt(guildId) >> 22n) % shardCount;\n    if (shard < 0) throw new Error('SHARDING_SHARD_MISCALCULATION', shard, guildId, shardCount);\n    return shard;\n  }\n}\n\nmodule.exports = ShardClientUtil;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst fs = require('fs');\nconst path = require('path');\nconst { Collection } = require('@discordjs/collection');\nconst Shard = require('./Shard');\nconst { Error, TypeError, RangeError } = require('../errors');\nconst Util = require('../util/Util');\n\n/**\n * This is a utility class that makes multi-process sharding of a bot an easy and painless experience.\n * It works by spawning a self-contained {@link ChildProcess} or {@link Worker} for each individual shard, each\n * containing its own instance of your bot's {@link Client}. They all have a line of communication with the master\n * process, and there are several useful methods that utilise it in order to simplify tasks that are normally difficult\n * with sharding. It can spawn a specific number of shards or the amount that Discord suggests for the bot, and takes a\n * path to your main bot script to launch for each one.\n * @extends {EventEmitter}\n */\nclass ShardingManager extends EventEmitter {\n  /**\n   * The mode to spawn shards with for a {@link ShardingManager}. Can be either one of:\n   * * 'process' to use child processes\n   * * 'worker' to use [Worker threads](https://nodejs.org/api/worker_threads.html)\n   * @typedef {string} ShardingManagerMode\n   */\n\n  /**\n   * The options to spawn shards with for a {@link ShardingManager}.\n   * @typedef {Object} ShardingManagerOptions\n   * @property {string|number} [totalShards='auto'] Number of total shards of all shard managers or \"auto\"\n   * @property {string|number[]} [shardList='auto'] List of shards to spawn or \"auto\"\n   * @property {ShardingManagerMode} [mode='process'] Which mode to use for shards\n   * @property {boolean} [respawn=true] Whether shards should automatically respawn upon exiting\n   * @property {string[]} [shardArgs=[]] Arguments to pass to the shard script when spawning\n   * (only available when mode is set to 'process')\n   * @property {string} [execArgv=[]] Arguments to pass to the shard script executable when spawning\n   * (only available when mode is set to 'process')\n   * @property {string} [token] Token to use for automatic shard count and passing to shards\n   */\n\n  /**\n   * @param {string} file Path to your shard script file\n   * @param {ShardingManagerOptions} [options] Options for the sharding manager\n   */\n  constructor(file, options = {}) {\n    super();\n    options = Util.mergeDefault(\n      {\n        totalShards: 'auto',\n        mode: 'process',\n        respawn: true,\n        shardArgs: [],\n        execArgv: [],\n        token: process.env.DISCORD_TOKEN,\n      },\n      options,\n    );\n\n    /**\n     * Path to the shard script file\n     * @type {string}\n     */\n    this.file = file;\n    if (!file) throw new Error('CLIENT_INVALID_OPTION', 'File', 'specified.');\n    if (!path.isAbsolute(file)) this.file = path.resolve(process.cwd(), file);\n    const stats = fs.statSync(this.file);\n    if (!stats.isFile()) throw new Error('CLIENT_INVALID_OPTION', 'File', 'a file');\n\n    /**\n     * List of shards this sharding manager spawns\n     * @type {string|number[]}\n     */\n    this.shardList = options.shardList ?? 'auto';\n    if (this.shardList !== 'auto') {\n      if (!Array.isArray(this.shardList)) {\n        throw new TypeError('CLIENT_INVALID_OPTION', 'shardList', 'an array.');\n      }\n      this.shardList = [...new Set(this.shardList)];\n      if (this.shardList.length < 1) throw new RangeError('CLIENT_INVALID_OPTION', 'shardList', 'at least 1 id.');\n      if (\n        this.shardList.some(\n          shardId => typeof shardId !== 'number' || isNaN(shardId) || !Number.isInteger(shardId) || shardId < 0,\n        )\n      ) {\n        throw new TypeError('CLIENT_INVALID_OPTION', 'shardList', 'an array of positive integers.');\n      }\n    }\n\n    /**\n     * Amount of shards that all sharding managers spawn in total\n     * @type {number}\n     */\n    this.totalShards = options.totalShards || 'auto';\n    if (this.totalShards !== 'auto') {\n      if (typeof this.totalShards !== 'number' || isNaN(this.totalShards)) {\n        throw new TypeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'a number.');\n      }\n      if (this.totalShards < 1) throw new RangeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'at least 1.');\n      if (!Number.isInteger(this.totalShards)) {\n        throw new RangeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'an integer.');\n      }\n    }\n\n    /**\n     * Mode for shards to spawn with\n     * @type {ShardingManagerMode}\n     */\n    this.mode = options.mode;\n    if (this.mode !== 'process' && this.mode !== 'worker') {\n      throw new RangeError('CLIENT_INVALID_OPTION', 'Sharding mode', '\"process\" or \"worker\"');\n    }\n\n    /**\n     * Whether shards should automatically respawn upon exiting\n     * @type {boolean}\n     */\n    this.respawn = options.respawn;\n\n    /**\n     * An array of arguments to pass to shards (only when {@link ShardingManager#mode} is `process`)\n     * @type {string[]}\n     */\n    this.shardArgs = options.shardArgs;\n\n    /**\n     * An array of arguments to pass to the executable (only when {@link ShardingManager#mode} is `process`)\n     * @type {string[]}\n     */\n    this.execArgv = options.execArgv;\n\n    /**\n     * Token to use for obtaining the automatic shard count, and passing to shards\n     * @type {?string}\n     */\n    this.token = options.token?.replace(/^Bot\\s*/i, '') ?? null;\n\n    /**\n     * A collection of shards that this manager has spawned\n     * @type {Collection<number, Shard>}\n     */\n    this.shards = new Collection();\n\n    process.env.SHARDING_MANAGER = true;\n    process.env.SHARDING_MANAGER_MODE = this.mode;\n    process.env.DISCORD_TOKEN = this.token;\n  }\n\n  /**\n   * Creates a single shard.\n   * <warn>Using this method is usually not necessary if you use the spawn method.</warn>\n   * @param {number} [id=this.shards.size] Id of the shard to create\n   * <info>This is usually not necessary to manually specify.</info>\n   * @returns {Shard} Note that the created shard needs to be explicitly spawned using its spawn method.\n   */\n  createShard(id = this.shards.size) {\n    const shard = new Shard(this, id);\n    this.shards.set(id, shard);\n    /**\n     * Emitted upon creating a shard.\n     * @event ShardingManager#shardCreate\n     * @param {Shard} shard Shard that was created\n     */\n    this.emit('shardCreate', shard);\n    return shard;\n  }\n\n  /**\n   * Option used to spawn multiple shards.\n   * @typedef {Object} MultipleShardSpawnOptions\n   * @property {number|string} [amount=this.totalShards] Number of shards to spawn\n   * @property {number} [delay=5500] How long to wait in between spawning each shard (in milliseconds)\n   * @property {number} [timeout=30000] The amount in milliseconds to wait until the {@link Client} has become ready\n   */\n\n  /**\n   * Spawns multiple shards.\n   * @param {MultipleShardSpawnOptions} [options] Options for spawning shards\n   * @returns {Promise<Collection<number, Shard>>}\n   */\n  async spawn({ amount = this.totalShards, delay = 5500, timeout = 30000 } = {}) {\n    // Obtain/verify the number of shards to spawn\n    if (amount === 'auto') {\n      amount = await Util.fetchRecommendedShards(this.token);\n    } else {\n      if (typeof amount !== 'number' || isNaN(amount)) {\n        throw new TypeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'a number.');\n      }\n      if (amount < 1) throw new RangeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'at least 1.');\n      if (!Number.isInteger(amount)) {\n        throw new TypeError('CLIENT_INVALID_OPTION', 'Amount of shards', 'an integer.');\n      }\n    }\n\n    // Make sure this many shards haven't already been spawned\n    if (this.shards.size >= amount) throw new Error('SHARDING_ALREADY_SPAWNED', this.shards.size);\n    if (this.shardList === 'auto' || this.totalShards === 'auto' || this.totalShards !== amount) {\n      this.shardList = [...Array(amount).keys()];\n    }\n    if (this.totalShards === 'auto' || this.totalShards !== amount) {\n      this.totalShards = amount;\n    }\n\n    if (this.shardList.some(shardId => shardId >= amount)) {\n      throw new RangeError(\n        'CLIENT_INVALID_OPTION',\n        'Amount of shards',\n        'bigger than the highest shardId in the shardList option.',\n      );\n    }\n\n    // Spawn the shards\n    for (const shardId of this.shardList) {\n      const promises = [];\n      const shard = this.createShard(shardId);\n      promises.push(shard.spawn(timeout));\n      if (delay > 0 && this.shards.size !== this.shardList.length) promises.push(Util.delayFor(delay));\n      await Promise.all(promises); // eslint-disable-line no-await-in-loop\n    }\n\n    return this.shards;\n  }\n\n  /**\n   * Sends a message to all shards.\n   * @param {*} message Message to be sent to the shards\n   * @returns {Promise<Shard[]>}\n   */\n  broadcast(message) {\n    const promises = [];\n    for (const shard of this.shards.values()) promises.push(shard.send(message));\n    return Promise.all(promises);\n  }\n\n  /**\n   * Options for {@link ShardingManager#broadcastEval} and {@link ShardClientUtil#broadcastEval}.\n   * @typedef {Object} BroadcastEvalOptions\n   * @property {number} [shard] Shard to run script on, all if undefined\n   * @property {*} [context] The JSON-serializable values to call the script with\n   */\n\n  /**\n   * Evaluates a script on all shards, or a given shard, in the context of the {@link Client}s.\n   * @param {Function} script JavaScript to run on each shard\n   * @param {BroadcastEvalOptions} [options={}] The options for the broadcast\n   * @returns {Promise<*|Array<*>>} Results of the script execution\n   */\n  broadcastEval(script, options = {}) {\n    if (typeof script !== 'function') return Promise.reject(new TypeError('SHARDING_INVALID_EVAL_BROADCAST'));\n    return this._performOnShards('eval', [`(${script})(this, ${JSON.stringify(options.context)})`], options.shard);\n  }\n\n  /**\n   * Fetches a client property value of each shard, or a given shard.\n   * @param {string} prop Name of the client property to get, using periods for nesting\n   * @param {number} [shard] Shard to fetch property from, all if undefined\n   * @returns {Promise<*|Array<*>>}\n   * @example\n   * manager.fetchClientValues('guilds.cache.size')\n   *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n   *   .catch(console.error);\n   */\n  fetchClientValues(prop, shard) {\n    return this._performOnShards('fetchClientValue', [prop], shard);\n  }\n\n  /**\n   * Runs a method with given arguments on all shards, or a given shard.\n   * @param {string} method Method name to run on each shard\n   * @param {Array<*>} args Arguments to pass through to the method call\n   * @param {number} [shard] Shard to run on, all if undefined\n   * @returns {Promise<*|Array<*>>} Results of the method execution\n   * @private\n   */\n  _performOnShards(method, args, shard) {\n    if (this.shards.size === 0) return Promise.reject(new Error('SHARDING_NO_SHARDS'));\n\n    if (typeof shard === 'number') {\n      if (this.shards.has(shard)) return this.shards.get(shard)[method](...args);\n      return Promise.reject(new Error('SHARDING_SHARD_NOT_FOUND', shard));\n    }\n\n    if (this.shards.size !== this.shardList.length) return Promise.reject(new Error('SHARDING_IN_PROCESS'));\n\n    const promises = [];\n    for (const sh of this.shards.values()) promises.push(sh[method](...args));\n    return Promise.all(promises);\n  }\n\n  /**\n   * Options used to respawn all shards.\n   * @typedef {Object} MultipleShardRespawnOptions\n   * @property {number} [shardDelay=5000] How long to wait between shards (in milliseconds)\n   * @property {number} [respawnDelay=500] How long to wait between killing a shard's process and restarting it\n   * (in milliseconds)\n   * @property {number} [timeout=30000] The amount in milliseconds to wait for a shard to become ready before\n   * continuing to another (`-1` or `Infinity` for no wait)\n   */\n\n  /**\n   * Kills all running shards and respawns them.\n   * @param {MultipleShardRespawnOptions} [options] Options for respawning shards\n   * @returns {Promise<Collection<string, Shard>>}\n   */\n  async respawnAll({ shardDelay = 5000, respawnDelay = 500, timeout = 30000 } = {}) {\n    let s = 0;\n    for (const shard of this.shards.values()) {\n      const promises = [shard.respawn({ respawnDelay, timeout })];\n      if (++s < this.shards.size && shardDelay > 0) promises.push(Util.delayFor(shardDelay));\n      await Promise.all(promises); // eslint-disable-line no-await-in-loop\n    }\n    return this.shards;\n  }\n}\n\nmodule.exports = ShardingManager;\n","'use strict';\n\nconst BaseGuild = require('./BaseGuild');\nconst { VerificationLevels, NSFWLevels } = require('../util/Constants');\n\n/**\n * Bundles common attributes and methods between {@link Guild} and {@link InviteGuild}\n * @extends {BaseGuild}\n * @abstract\n */\nclass AnonymousGuild extends BaseGuild {\n  constructor(client, data, immediatePatch = true) {\n    super(client, data);\n    if (immediatePatch) this._patch(data);\n  }\n\n  _patch(data) {\n    this.features = data.features;\n    /**\n     * The hash of the guild invite splash image\n     * @type {?string}\n     */\n    this.splash = data.splash;\n\n    /**\n     * The hash of the guild banner\n     * @type {?string}\n     */\n    this.banner = data.banner;\n\n    /**\n     * The description of the guild, if any\n     * @type {?string}\n     */\n    this.description = data.description;\n\n    /**\n     * The verification level of the guild\n     * @type {VerificationLevel}\n     */\n    this.verificationLevel = VerificationLevels[data.verification_level];\n\n    /**\n     * The vanity invite code of the guild, if any\n     * @type {?string}\n     */\n    this.vanityURLCode = data.vanity_url_code;\n\n    if ('nsfw_level' in data) {\n      /**\n       * The NSFW level of this guild\n       * @type {NSFWLevel}\n       */\n      this.nsfwLevel = NSFWLevels[data.nsfw_level];\n    }\n  }\n\n  /**\n   * The URL to this guild's banner.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  bannerURL({ format, size } = {}) {\n    if (!this.banner) return null;\n    return this.client.rest.cdn.Banner(this.id, this.banner, format, size);\n  }\n\n  /**\n   * The URL to this guild's invite splash image.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  splashURL({ format, size } = {}) {\n    if (!this.splash) return null;\n    return this.client.rest.cdn.Splash(this.id, this.splash, format, size);\n  }\n}\n\nmodule.exports = AnonymousGuild;\n","'use strict';\n\nconst Base = require('./Base');\nconst ApplicationCommandPermissionsManager = require('../managers/ApplicationCommandPermissionsManager');\nconst { ApplicationCommandOptionTypes, ApplicationCommandTypes } = require('../util/Constants');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Represents an application command.\n * @extends {Base}\n */\nclass ApplicationCommand extends Base {\n  constructor(client, data, guild, guildId) {\n    super(client);\n\n    /**\n     * The command's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The parent application's id\n     * @type {Snowflake}\n     */\n    this.applicationId = data.application_id;\n\n    /**\n     * The guild this command is part of\n     * @type {?Guild}\n     */\n    this.guild = guild ?? null;\n\n    /**\n     * The guild's id this command is part of, this may be non-null when `guild` is `null` if the command\n     * was fetched from the `ApplicationCommandManager`\n     * @type {?Snowflake}\n     */\n    this.guildId = guild?.id ?? guildId ?? null;\n\n    /**\n     * The manager for permissions of this command on its guild or arbitrary guilds when the command is global\n     * @type {ApplicationCommandPermissionsManager}\n     */\n    this.permissions = new ApplicationCommandPermissionsManager(this);\n\n    /**\n     * The type of this application command\n     * @type {ApplicationCommandType}\n     */\n    this.type = ApplicationCommandTypes[data.type];\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The name of this command\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The description of this command\n     * @type {string}\n     */\n    this.description = data.description;\n\n    /**\n     * The options of this command\n     * @type {ApplicationCommandOption[]}\n     */\n    this.options = data.options?.map(o => this.constructor.transformOption(o, true)) ?? [];\n\n    /**\n     * Whether the command is enabled by default when the app is added to a guild\n     * @type {boolean}\n     */\n    this.defaultPermission = data.default_permission;\n  }\n\n  /**\n   * The timestamp the command was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the command was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The manager that this command belongs to\n   * @type {ApplicationCommandManager}\n   * @readonly\n   */\n  get manager() {\n    return (this.guild ?? this.client.application).commands;\n  }\n\n  /**\n   * Data for creating or editing an application command.\n   * @typedef {Object} ApplicationCommandData\n   * @property {string} name The name of the command\n   * @property {string} description The description of the command\n   * @property {ApplicationCommandType} [type] The type of the command\n   * @property {ApplicationCommandOptionData[]} [options] Options for the command\n   * @property {boolean} [defaultPermission] Whether the command is enabled by default when the app is added to a guild\n   */\n\n  /**\n   * An option for an application command or subcommand.\n   * @typedef {Object} ApplicationCommandOptionData\n   * @property {ApplicationCommandOptionType|number} type The type of the option\n   * @property {string} name The name of the option\n   * @property {string} description The description of the option\n   * @property {boolean} [required] Whether the option is required\n   * @property {ApplicationCommandOptionChoice[]} [choices] The choices of the option for the user to pick from\n   * @property {ApplicationCommandOptionData[]} [options] Additional options if this option is a subcommand (group)\n   */\n\n  /**\n   * Edits this application command.\n   * @param {ApplicationCommandData} data The data to update the command with\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Edit the description of this command\n   * command.edit({\n   *   description: 'New description',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  edit(data) {\n    return this.manager.edit(this, data, this.guildId);\n  }\n\n  /**\n   * Deletes this command.\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Delete this command\n   * command.delete()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  delete() {\n    return this.manager.delete(this, this.guildId);\n  }\n\n  /**\n   * An option for an application command or subcommand.\n   * @typedef {Object} ApplicationCommandOption\n   * @property {ApplicationCommandOptionType} type The type of the option\n   * @property {string} name The name of the option\n   * @property {string} description The description of the option\n   * @property {boolean} [required] Whether the option is required\n   * @property {ApplicationCommandOptionChoice[]} [choices] The choices of the option for the user to pick from\n   * @property {ApplicationCommandOption[]} [options] Additional options if this option is a subcommand (group)\n   */\n\n  /**\n   * A choice for an application command option.\n   * @typedef {Object} ApplicationCommandOptionChoice\n   * @property {string} name The name of the choice\n   * @property {string|number} value The value of the choice\n   */\n\n  /**\n   * Transforms an {@link ApplicationCommandOptionData} object into something that can be used with the API.\n   * @param {ApplicationCommandOptionData} option The option to transform\n   * @param {boolean} [received] Whether this option has been received from Discord\n   * @returns {APIApplicationCommandOption}\n   * @private\n   */\n  static transformOption(option, received) {\n    const stringType = typeof option.type === 'string' ? option.type : ApplicationCommandOptionTypes[option.type];\n    return {\n      type: typeof option.type === 'number' && !received ? option.type : ApplicationCommandOptionTypes[option.type],\n      name: option.name,\n      description: option.description,\n      required:\n        option.required ?? (stringType === 'SUB_COMMAND' || stringType === 'SUB_COMMAND_GROUP' ? undefined : false),\n      choices: option.choices,\n      options: option.options?.map(o => this.transformOption(o, received)),\n    };\n  }\n}\n\nmodule.exports = ApplicationCommand;\n\n/* eslint-disable max-len */\n/**\n * @external APIApplicationCommand\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-structure}\n */\n\n/**\n * @external APIApplicationCommandOption\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-structure}\n */\n","'use strict';\n\nconst Util = require('../util/Util');\n\n/**\n * Represents a data model that is identifiable by a Snowflake (i.e. Discord API data models).\n * @abstract\n */\nclass Base {\n  constructor(client) {\n    /**\n     * The client that instantiated this\n     * @name Base#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n  }\n\n  _clone() {\n    return Object.assign(Object.create(this), this);\n  }\n\n  _patch(data) {\n    return data;\n  }\n\n  _update(data) {\n    const clone = this._clone();\n    this._patch(data);\n    return clone;\n  }\n\n  toJSON(...props) {\n    return Util.flatten(this, ...props);\n  }\n\n  valueOf() {\n    return this.id;\n  }\n}\n\nmodule.exports = Base;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Interaction = require('./Interaction');\nconst InteractionWebhook = require('./InteractionWebhook');\nconst InteractionResponses = require('./interfaces/InteractionResponses');\nconst { ApplicationCommandOptionTypes } = require('../util/Constants');\n\n/**\n * Represents a command interaction.\n * @extends {Interaction}\n * @implements {InteractionResponses}\n * @abstract\n */\nclass BaseCommandInteraction extends Interaction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The channel this interaction was sent in\n     * @type {?TextBasedChannels}\n     * @name BaseCommandInteraction#channel\n     * @readonly\n     */\n\n    /**\n     * The id of the channel this interaction was sent in\n     * @type {Snowflake}\n     * @name BaseCommandInteraction#channelId\n     */\n\n    /**\n     * The invoked application command's id\n     * @type {Snowflake}\n     */\n    this.commandId = data.data.id;\n\n    /**\n     * The invoked application command's name\n     * @type {string}\n     */\n    this.commandName = data.data.name;\n\n    /**\n     * Whether the reply to this interaction has been deferred\n     * @type {boolean}\n     */\n    this.deferred = false;\n\n    /**\n     * Whether this interaction has already been replied to\n     * @type {boolean}\n     */\n    this.replied = false;\n\n    /**\n     * Whether the reply to this interaction is ephemeral\n     * @type {?boolean}\n     */\n    this.ephemeral = null;\n\n    /**\n     * An associated interaction webhook, can be used to further interact with this interaction\n     * @type {InteractionWebhook}\n     */\n    this.webhook = new InteractionWebhook(this.client, this.applicationId, this.token);\n  }\n\n  /**\n   * The invoked application command, if it was fetched before\n   * @type {?ApplicationCommand}\n   */\n  get command() {\n    const id = this.commandId;\n    return this.guild?.commands.cache.get(id) ?? this.client.application.commands.cache.get(id) ?? null;\n  }\n\n  /**\n   * Represents the resolved data of a received command interaction.\n   * @typedef {Object} CommandInteractionResolvedData\n   * @property {Collection<string, User>} [users] The resolved users\n   * @property {Collection<string, GuildMember|APIGuildMember>} [members] The resolved guild members\n   * @property {Collection<string, Role|APIRole>} [roles] The resolved roles\n   * @property {Collection<string, Channel|APIChannel>} [channels] The resolved channels\n   * @property {Collection<string, Message|APIMessage>} [messages] The resolved messages\n   */\n\n  /**\n   * Transforms the resolved received from the API.\n   * @param {APIInteractionDataResolved} resolved The received resolved objects\n   * @returns {CommandInteractionResolvedData}\n   * @private\n   */\n  transformResolved({ members, users, channels, roles, messages }) {\n    const result = {};\n\n    if (members) {\n      result.members = new Collection();\n      for (const [id, member] of Object.entries(members)) {\n        const user = users[id];\n        result.members.set(id, this.guild?.members._add({ user, ...member }) ?? member);\n      }\n    }\n\n    if (users) {\n      result.users = new Collection();\n      for (const user of Object.values(users)) {\n        result.users.set(user.id, this.client.users._add(user));\n      }\n    }\n\n    if (roles) {\n      result.roles = new Collection();\n      for (const role of Object.values(roles)) {\n        result.roles.set(role.id, this.guild?.roles._add(role) ?? role);\n      }\n    }\n\n    if (channels) {\n      result.channels = new Collection();\n      for (const channel of Object.values(channels)) {\n        result.channels.set(channel.id, this.client.channels._add(channel, this.guild) ?? channel);\n      }\n    }\n\n    if (messages) {\n      result.messages = new Collection();\n      for (const message of Object.values(messages)) {\n        result.messages.set(message.id, this.channel?.messages?._add(message) ?? message);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Represents an option of a received command interaction.\n   * @typedef {Object} CommandInteractionOption\n   * @property {string} name The name of the option\n   * @property {ApplicationCommandOptionType} type The type of the option\n   * @property {string|number|boolean} [value] The value of the option\n   * @property {CommandInteractionOption[]} [options] Additional options if this option is a\n   * subcommand (group)\n   * @property {User} [user] The resolved user\n   * @property {GuildMember|APIGuildMember} [member] The resolved member\n   * @property {GuildChannel|APIChannel} [channel] The resolved channel\n   * @property {Role|APIRole} [role] The resolved role\n   */\n\n  /**\n   * Transforms an option received from the API.\n   * @param {APIApplicationCommandOption} option The received option\n   * @param {APIInteractionDataResolved} resolved The resolved interaction data\n   * @returns {CommandInteractionOption}\n   * @private\n   */\n  transformOption(option, resolved) {\n    const result = {\n      name: option.name,\n      type: ApplicationCommandOptionTypes[option.type],\n    };\n\n    if ('value' in option) result.value = option.value;\n    if ('options' in option) result.options = option.options.map(opt => this.transformOption(opt, resolved));\n\n    if (resolved) {\n      const user = resolved.users?.[option.value];\n      if (user) result.user = this.client.users._add(user);\n\n      const member = resolved.members?.[option.value];\n      if (member) result.member = this.guild?.members._add({ user, ...member }) ?? member;\n\n      const channel = resolved.channels?.[option.value];\n      if (channel) result.channel = this.client.channels._add(channel, this.guild) ?? channel;\n\n      const role = resolved.roles?.[option.value];\n      if (role) result.role = this.guild?.roles._add(role) ?? role;\n    }\n\n    return result;\n  }\n\n  // These are here only for documentation purposes - they are implemented by InteractionResponses\n  /* eslint-disable no-empty-function */\n  defer() {}\n  reply() {}\n  fetchReply() {}\n  editReply() {}\n  deleteReply() {}\n  followUp() {}\n}\n\nInteractionResponses.applyToClass(BaseCommandInteraction, ['deferUpdate', 'update']);\n\nmodule.exports = BaseCommandInteraction;\n\n/* eslint-disable max-len */\n/**\n * @external APIInteractionDataResolved\n * @see {@link https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-resolved-data-structure}\n */\n","'use strict';\n\nconst Base = require('./Base');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * The base class for {@link Guild}, {@link OAuth2Guild} and {@link InviteGuild}.\n * @extends {Base}\n * @abstract\n */\nclass BaseGuild extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The guild's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of this guild\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The icon hash of this guild\n     * @type {?string}\n     */\n    this.icon = data.icon;\n\n    /**\n     * An array of features available to this guild\n     * @type {Features[]}\n     */\n    this.features = data.features;\n  }\n\n  /**\n   * The timestamp this guild was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time this guild was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The acronym that shows up in place of a guild icon\n   * @type {string}\n   * @readonly\n   */\n  get nameAcronym() {\n    return this.name\n      .replace(/'s /g, ' ')\n      .replace(/\\w+/g, e => e[0])\n      .replace(/\\s/g, '');\n  }\n\n  /**\n   * Whether this guild is partnered\n   * @type {boolean}\n   * @readonly\n   */\n  get partnered() {\n    return this.features.includes('PARTNERED');\n  }\n\n  /**\n   * Whether this guild is verified\n   * @type {boolean}\n   * @readonly\n   */\n  get verified() {\n    return this.features.includes('VERIFIED');\n  }\n\n  /**\n   * The URL to this guild's icon.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  iconURL({ format, size, dynamic } = {}) {\n    if (!this.icon) return null;\n    return this.client.rest.cdn.Icon(this.id, this.icon, format, size, dynamic);\n  }\n\n  /**\n   * Fetches this guild.\n   * @returns {Promise<Guild>}\n   */\n  async fetch() {\n    const data = await this.client.api.guilds(this.id).get({ query: { with_counts: true } });\n    return this.client.guilds._add(data);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the guild's name instead of the Guild object.\n   * @returns {string}\n   */\n  toString() {\n    return this.name;\n  }\n}\n\nmodule.exports = BaseGuild;\n","'use strict';\n\nconst Emoji = require('./Emoji');\n\n/**\n * Parent class for {@link GuildEmoji} and {@link GuildPreviewEmoji}.\n * @extends {Emoji}\n * @abstract\n */\nclass BaseGuildEmoji extends Emoji {\n  constructor(client, data, guild) {\n    super(client, data);\n\n    /**\n     * The guild this emoji is a part of\n     * @type {Guild|GuildPreview}\n     */\n    this.guild = guild;\n\n    this.requiresColons = null;\n    this.managed = null;\n    this.available = null;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if (data.name) this.name = data.name;\n\n    if (typeof data.require_colons !== 'undefined') {\n      /**\n       * Whether or not this emoji requires colons surrounding it\n       * @type {?boolean}\n       */\n      this.requiresColons = data.require_colons;\n    }\n\n    if (typeof data.managed !== 'undefined') {\n      /**\n       * Whether this emoji is managed by an external service\n       * @type {?boolean}\n       */\n      this.managed = data.managed;\n    }\n\n    if (typeof data.available !== 'undefined') {\n      /**\n       * Whether this emoji is available\n       * @type {?boolean}\n       */\n      this.available = data.available;\n    }\n  }\n}\n\nmodule.exports = BaseGuildEmoji;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst GuildChannel = require('./GuildChannel');\nconst Webhook = require('./Webhook');\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst MessageManager = require('../managers/MessageManager');\nconst ThreadManager = require('../managers/ThreadManager');\nconst DataResolver = require('../util/DataResolver');\n\n/**\n * Represents a text-based guild channel on Discord.\n * @extends {GuildChannel}\n * @implements {TextBasedChannel}\n */\nclass BaseGuildTextChannel extends GuildChannel {\n  /**\n   * @param {Guild} guild The guild the text channel is part of\n   * @param {APIChannel} data The data for the text channel\n   * @param {Client} [client] A safety parameter for the client that instantiated this\n   */\n  constructor(guild, data, client) {\n    super(guild, data, client, false);\n\n    /**\n     * A manager of the messages sent to this channel\n     * @type {MessageManager}\n     */\n    this.messages = new MessageManager(this);\n\n    /**\n     * A manager of the threads belonging to this channel\n     * @type {ThreadManager}\n     */\n    this.threads = new ThreadManager(this);\n\n    /**\n     * If the guild considers this channel NSFW\n     * @type {boolean}\n     */\n    this.nsfw = Boolean(data.nsfw);\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('topic' in data) {\n      /**\n       * The topic of the text channel\n       * @type {?string}\n       */\n      this.topic = data.topic;\n    }\n\n    if ('nsfw' in data) {\n      this.nsfw = Boolean(data.nsfw);\n    }\n\n    if ('last_message_id' in data) {\n      /**\n       * The last message id sent in the channel, if one was sent\n       * @type {?Snowflake}\n       */\n      this.lastMessageId = data.last_message_id;\n    }\n\n    if ('last_pin_timestamp' in data) {\n      /**\n       * The timestamp when the last pinned message was pinned, if there was one\n       * @type {?number}\n       */\n      this.lastPinTimestamp = data.last_pin_timestamp ? new Date(data.last_pin_timestamp).getTime() : null;\n    }\n\n    if ('default_auto_archive_duration' in data) {\n      /**\n       * The default auto archive duration for newly created threads in this channel\n       * @type {?ThreadAutoArchiveDuration}\n       */\n      this.defaultAutoArchiveDuration = data.default_auto_archive_duration;\n    }\n\n    if ('messages' in data) {\n      for (const message of data.messages) this.messages._add(message);\n    }\n  }\n\n  /**\n   * Sets the default auto archive duration for all newly created threads in this channel.\n   * @param {ThreadAutoArchiveDuration} defaultAutoArchiveDuration The new default auto archive duration\n   * @param {string} [reason] Reason for changing the channel's default auto archive duration\n   * @returns {Promise<TextChannel>}\n   */\n  setDefaultAutoArchiveDuration(defaultAutoArchiveDuration, reason) {\n    return this.edit({ defaultAutoArchiveDuration }, reason);\n  }\n\n  /**\n   * Sets whether this channel is flagged as NSFW.\n   * @param {boolean} nsfw Whether the channel should be considered NSFW\n   * @param {string} [reason] Reason for changing the channel's NSFW flag\n   * @returns {Promise<TextChannel>}\n   */\n  setNSFW(nsfw, reason) {\n    return this.edit({ nsfw }, reason);\n  }\n\n  /**\n   * Sets the type of this channel (only conversion between text and news is supported)\n   * @param {string} type The new channel type\n   * @param {string} [reason] Reason for changing the channel's type\n   * @returns {Promise<GuildChannel>}\n   */\n  setType(type, reason) {\n    return this.edit({ type }, reason);\n  }\n\n  /**\n   * Fetches all webhooks for the channel.\n   * @returns {Promise<Collection<Snowflake, Webhook>>}\n   * @example\n   * // Fetch webhooks\n   * channel.fetchWebhooks()\n   *   .then(hooks => console.log(`This channel has ${hooks.size} hooks`))\n   *   .catch(console.error);\n   */\n  async fetchWebhooks() {\n    const data = await this.client.api.channels[this.id].webhooks.get();\n    const hooks = new Collection();\n    for (const hook of data) hooks.set(hook.id, new Webhook(this.client, hook));\n    return hooks;\n  }\n\n  /**\n   * Options used to create a {@link Webhook} for {@link TextChannel} and {@link NewsChannel}.\n   * @typedef {Object} ChannelWebhookCreateOptions\n   * @property {BufferResolvable|Base64Resolvable} [avatar] Avatar for the webhook\n   * @property {string} [reason] Reason for creating the webhook\n   */\n\n  /**\n   * Creates a webhook for the channel.\n   * @param {string} name The name of the webhook\n   * @param {ChannelWebhookCreateOptions} [options] Options for creating the webhook\n   * @returns {Promise<Webhook>} Returns the created Webhook\n   * @example\n   * // Create a webhook for the current channel\n   * channel.createWebhook('Snek', {\n   *   avatar: 'https://i.imgur.com/mI8XcpG.jpg',\n   *   reason: 'Needed a cool new Webhook'\n   * })\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  async createWebhook(name, { avatar, reason } = {}) {\n    if (typeof avatar === 'string' && !avatar.startsWith('data:')) {\n      avatar = await DataResolver.resolveImage(avatar);\n    }\n    const data = await this.client.api.channels[this.id].webhooks.post({\n      data: {\n        name,\n        avatar,\n      },\n      reason,\n    });\n    return new Webhook(this.client, data);\n  }\n\n  /**\n   * Sets a new topic for the guild channel.\n   * @param {?string} topic The new topic for the guild channel\n   * @param {string} [reason] Reason for changing the guild channel's topic\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel topic\n   * channel.setTopic('needs more rate limiting')\n   *   .then(newChannel => console.log(`Channel's new topic is ${newChannel.topic}`))\n   *   .catch(console.error);\n   */\n  setTopic(topic, reason) {\n    return this.edit({ topic }, reason);\n  }\n\n  /**\n   * Options used to create an invite to a guild channel.\n   * @typedef {Object} CreateInviteOptions\n   * @property {boolean} [temporary=false] Whether members that joined via the invite should be automatically\n   * kicked after 24 hours if they have not yet received a role\n   * @property {number} [maxAge=86400] How long the invite should last (in seconds, 0 for forever)\n   * @property {number} [maxUses=0] Maximum number of uses\n   * @property {boolean} [unique=false] Create a unique invite, or use an existing one with similar settings\n   * @property {UserResolvable} [targetUser] The user whose stream to display for this invite,\n   * required if `targetType` is 1, the user must be streaming in the channel\n   * @property {ApplicationResolvable} [targetApplication] The embedded application to open for this invite,\n   * required if `targetType` is 2, the application must have the `EMBEDDED` flag\n   * @property {TargetType} [targetType] The type of the target for this voice channel invite\n   * @property {string} [reason] The reason for creating the invite\n   */\n\n  /**\n   * Creates an invite to this guild channel.\n   * @param {CreateInviteOptions} [options={}] The options for creating the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a channel\n   * channel.createInvite()\n   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n   *   .catch(console.error);\n   */\n  createInvite(options) {\n    return this.guild.invites.create(this.id, options);\n  }\n\n  /**\n   * Fetches a collection of invites to this guild channel.\n   * Resolves with a collection mapping invites by their codes.\n   * @param {boolean} [cache=true] Whether or not to cache the fetched invites\n   * @returns {Promise<Collection<string, Invite>>}\n   */\n  fetchInvites(cache = true) {\n    return this.guild.invites.fetch({ channelId: this.id, cache });\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  get lastMessage() {}\n  get lastPinAt() {}\n  send() {}\n  sendTyping() {}\n  createMessageCollector() {}\n  awaitMessages() {}\n  createMessageComponentCollector() {}\n  awaitMessageComponent() {}\n  bulkDelete() {}\n}\n\nTextBasedChannel.applyToClass(BaseGuildTextChannel, true);\n\nmodule.exports = BaseGuildTextChannel;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst GuildChannel = require('./GuildChannel');\nconst Permissions = require('../util/Permissions');\n\n/**\n * Represents a voice-based guild channel on Discord.\n * @extends {GuildChannel}\n */\nclass BaseGuildVoiceChannel extends GuildChannel {\n  _patch(data) {\n    super._patch(data);\n\n    /**\n     * The RTC region for this voice-based channel. This region is automatically selected if `null`.\n     * @type {?string}\n     */\n    this.rtcRegion = data.rtc_region;\n\n    /**\n     * The bitrate of this voice-based channel\n     * @type {number}\n     */\n    this.bitrate = data.bitrate;\n\n    /**\n     * The maximum amount of users allowed in this channel.\n     * @type {number}\n     */\n    this.userLimit = data.user_limit;\n  }\n\n  /**\n   * The members in this voice-based channel\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    const coll = new Collection();\n    for (const state of this.guild.voiceStates.cache.values()) {\n      if (state.channelId === this.id && state.member) {\n        coll.set(state.id, state.member);\n      }\n    }\n    return coll;\n  }\n\n  /**\n   * Checks if the voice-based channel is full\n   * @type {boolean}\n   * @readonly\n   */\n  get full() {\n    return this.userLimit > 0 && this.members.size >= this.userLimit;\n  }\n\n  /**\n   * Whether the channel is joinable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get joinable() {\n    if (!this.viewable) return false;\n    if (!this.permissionsFor(this.client.user).has(Permissions.FLAGS.CONNECT, false)) return false;\n    return true;\n  }\n\n  /**\n   * Sets the RTC region of the channel.\n   * @param {?string} region The new region of the channel. Set to `null` to remove a specific region for the channel\n   * @returns {Promise<BaseGuildVoiceChannel>}\n   * @example\n   * // Set the RTC region to europe\n   * channel.setRTCRegion('europe');\n   * @example\n   * // Remove a fixed region for this channel - let Discord decide automatically\n   * channel.setRTCRegion(null);\n   */\n  setRTCRegion(region) {\n    return this.edit({ rtcRegion: region });\n  }\n\n  /**\n   * Creates an invite to this guild channel.\n   * @param {CreateInviteOptions} [options={}] The options for creating the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a channel\n   * channel.createInvite()\n   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n   *   .catch(console.error);\n   */\n  createInvite(options) {\n    return this.guild.invites.create(this.id, options);\n  }\n\n  /**\n   * Fetches a collection of invites to this guild channel.\n   * Resolves with a collection mapping invites by their codes.\n   * @param {boolean} [cache=true] Whether or not to cache the fetched invites\n   * @returns {Promise<Collection<string, Invite>>}\n   */\n  fetchInvites(cache = true) {\n    return this.guild.invites.fetch({ channelId: this.id, cache });\n  }\n}\n\nmodule.exports = BaseGuildVoiceChannel;\n","'use strict';\n\nconst { TypeError } = require('../errors');\nconst { MessageComponentTypes, Events } = require('../util/Constants');\n\n/**\n * Represents an interactive component of a Message. It should not be necessary to construct this directly.\n * See {@link MessageComponent}\n */\nclass BaseMessageComponent {\n  /**\n   * Options for a BaseMessageComponent\n   * @typedef {Object} BaseMessageComponentOptions\n   * @property {MessageComponentTypeResolvable} type The type of this component\n   */\n\n  /**\n   * Data that can be resolved into options for a MessageComponent. This can be:\n   * * MessageActionRowOptions\n   * * MessageButtonOptions\n   * * MessageSelectMenuOptions\n   * @typedef {MessageActionRowOptions|MessageButtonOptions|MessageSelectMenuOptions} MessageComponentOptions\n   */\n\n  /**\n   * Components that can be sent in a message. These can be:\n   * * MessageActionRow\n   * * MessageButton\n   * * MessageSelectMenu\n   * @typedef {MessageActionRow|MessageButton|MessageSelectMenu} MessageComponent\n   * @see {@link https://discord.com/developers/docs/interactions/message-components#component-object-component-types}\n   */\n\n  /**\n   * Data that can be resolved to a MessageComponentType. This can be:\n   * * MessageComponentType\n   * * string\n   * * number\n   * @typedef {string|number|MessageComponentType} MessageComponentTypeResolvable\n   */\n\n  /**\n   * @param {BaseMessageComponent|BaseMessageComponentOptions} [data={}] The options for this component\n   */\n  constructor(data) {\n    /**\n     * The type of this component\n     * @type {?MessageComponentType}\n     */\n    this.type = 'type' in data ? BaseMessageComponent.resolveType(data.type) : null;\n  }\n\n  /**\n   * Constructs a MessageComponent based on the type of the incoming data\n   * @param {MessageComponentOptions} data Data for a MessageComponent\n   * @param {Client|WebhookClient} [client] Client constructing this component\n   * @returns {?MessageComponent}\n   * @private\n   */\n  static create(data, client) {\n    let component;\n    let type = data.type;\n\n    if (typeof type === 'string') type = MessageComponentTypes[type];\n\n    switch (type) {\n      case MessageComponentTypes.ACTION_ROW: {\n        const MessageActionRow = require('./MessageActionRow');\n        component = new MessageActionRow(data, client);\n        break;\n      }\n      case MessageComponentTypes.BUTTON: {\n        const MessageButton = require('./MessageButton');\n        component = new MessageButton(data);\n        break;\n      }\n      case MessageComponentTypes.SELECT_MENU: {\n        const MessageSelectMenu = require('./MessageSelectMenu');\n        component = new MessageSelectMenu(data);\n        break;\n      }\n      default:\n        if (client) {\n          client.emit(Events.DEBUG, `[BaseMessageComponent] Received component with unknown type: ${data.type}`);\n        } else {\n          throw new TypeError('INVALID_TYPE', 'data.type', 'valid MessageComponentType');\n        }\n    }\n    return component;\n  }\n\n  /**\n   * Resolves the type of a MessageComponent\n   * @param {MessageComponentTypeResolvable} type The type to resolve\n   * @returns {MessageComponentType}\n   * @private\n   */\n  static resolveType(type) {\n    return typeof type === 'string' ? type : MessageComponentTypes[type];\n  }\n}\n\nmodule.exports = BaseMessageComponent;\n","'use strict';\n\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\n\n/**\n * Represents a button interaction.\n * @extends {MessageComponentInteraction}\n */\nclass ButtonInteraction extends MessageComponentInteraction {}\n\nmodule.exports = ButtonInteraction;\n","'use strict';\n\nconst GuildChannel = require('./GuildChannel');\n\n/**\n * Represents a guild category channel on Discord.\n * @extends {GuildChannel}\n */\nclass CategoryChannel extends GuildChannel {\n  /**\n   * Channels that are a part of this category\n   * @type {Collection<Snowflake, GuildChannel>}\n   * @readonly\n   */\n  get children() {\n    return this.guild.channels.cache.filter(c => c.parentId === this.id);\n  }\n\n  /**\n   * Sets the category parent of this channel.\n   * <warn>It is not currently possible to set the parent of a CategoryChannel.</warn>\n   * @method setParent\n   * @memberof CategoryChannel\n   * @instance\n   * @param {?CategoryChannelResolvable} channel The channel to set as parent\n   * @param {SetParentOptions} [options={}] The options for setting the parent\n   * @returns {Promise<GuildChannel>}\n   */\n}\n\nmodule.exports = CategoryChannel;\n","'use strict';\n\nconst Base = require('./Base');\nlet CategoryChannel;\nlet DMChannel;\nlet NewsChannel;\nlet StageChannel;\nlet StoreChannel;\nlet TextChannel;\nlet ThreadChannel;\nlet VoiceChannel;\nconst { ChannelTypes, ThreadChannelTypes, VoiceBasedChannelTypes } = require('../util/Constants');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Represents any channel on Discord.\n * @extends {Base}\n * @abstract\n */\nclass Channel extends Base {\n  constructor(client, data, immediatePatch = true) {\n    super(client);\n\n    const type = ChannelTypes[data.type];\n    /**\n     * The type of the channel\n     * @type {ChannelType}\n     */\n    this.type = type ?? 'UNKNOWN';\n\n    /**\n     * Whether the channel has been deleted\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    if (data && immediatePatch) this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The channel's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n  }\n\n  /**\n   * The timestamp the channel was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the channel was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * Whether this Channel is a partial\n   * <info>This is always false outside of DM channels.</info>\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return false;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the channel's mention instead of the Channel object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <#123456789012345678>!\n   * console.log(`Hello from ${channel}!`);\n   */\n  toString() {\n    return `<#${this.id}>`;\n  }\n\n  /**\n   * Deletes this channel.\n   * @returns {Promise<Channel>}\n   * @example\n   * // Delete the channel\n   * channel.delete()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  delete() {\n    return this.client.api\n      .channels(this.id)\n      .delete()\n      .then(() => this);\n  }\n\n  /**\n   * Fetches this channel.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<Channel>}\n   */\n  fetch(force = true) {\n    return this.client.channels.fetch(this.id, { force });\n  }\n\n  /**\n   * Indicates whether this channel is {@link TextBasedChannels text-based}.\n   * @returns {boolean}\n   */\n  isText() {\n    return 'messages' in this;\n  }\n\n  /**\n   * Indicates whether this channel is voice-based\n   * ({@link VoiceChannel} or {@link StageChannel}).\n   * @returns {boolean}\n   */\n  isVoice() {\n    return VoiceBasedChannelTypes.includes(this.type);\n  }\n\n  /**\n   * Indicates whether this channel is a {@link ThreadChannel}.\n   * @returns {boolean}\n   */\n  isThread() {\n    return ThreadChannelTypes.includes(this.type);\n  }\n\n  static create(client, data, guild, { allowUnknownGuild, fromInteraction } = {}) {\n    if (!CategoryChannel) CategoryChannel = require('./CategoryChannel');\n    if (!DMChannel) DMChannel = require('./DMChannel');\n    if (!NewsChannel) NewsChannel = require('./NewsChannel');\n    if (!StageChannel) StageChannel = require('./StageChannel');\n    if (!StoreChannel) StoreChannel = require('./StoreChannel');\n    if (!TextChannel) TextChannel = require('./TextChannel');\n    if (!ThreadChannel) ThreadChannel = require('./ThreadChannel');\n    if (!VoiceChannel) VoiceChannel = require('./VoiceChannel');\n\n    let channel;\n    if (!data.guild_id && !guild) {\n      if ((data.recipients && data.type !== ChannelTypes.GROUP_DM) || data.type === ChannelTypes.DM) {\n        channel = new DMChannel(client, data);\n      } else if (data.type === ChannelTypes.GROUP_DM) {\n        const PartialGroupDMChannel = require('./PartialGroupDMChannel');\n        channel = new PartialGroupDMChannel(client, data);\n      }\n    } else {\n      if (!guild) guild = client.guilds.cache.get(data.guild_id);\n\n      if (guild || allowUnknownGuild) {\n        switch (data.type) {\n          case ChannelTypes.GUILD_TEXT: {\n            channel = new TextChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_VOICE: {\n            channel = new VoiceChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_CATEGORY: {\n            channel = new CategoryChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_NEWS: {\n            channel = new NewsChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_STORE: {\n            channel = new StoreChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_STAGE_VOICE: {\n            channel = new StageChannel(guild, data, client);\n            break;\n          }\n          case ChannelTypes.GUILD_NEWS_THREAD:\n          case ChannelTypes.GUILD_PUBLIC_THREAD:\n          case ChannelTypes.GUILD_PRIVATE_THREAD: {\n            channel = new ThreadChannel(guild, data, client, fromInteraction);\n            if (!allowUnknownGuild) channel.parent?.threads.cache.set(channel.id, channel);\n            break;\n          }\n        }\n        if (channel && !allowUnknownGuild) guild.channels?.cache.set(channel.id, channel);\n      }\n    }\n    return channel;\n  }\n\n  toJSON(...props) {\n    return super.toJSON({ createdTimestamp: true }, ...props);\n  }\n}\n\nmodule.exports = Channel;\n\n/**\n * @external APIChannel\n * @see {@link https://discord.com/developers/docs/resources/channel#channel-object}\n */\n","'use strict';\n\nconst Team = require('./Team');\nconst Application = require('./interfaces/Application');\nconst ApplicationCommandManager = require('../managers/ApplicationCommandManager');\nconst ApplicationFlags = require('../util/ApplicationFlags');\n\n/**\n * Represents a Client OAuth2 Application.\n * @extends {Application}\n */\nclass ClientApplication extends Application {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The application command manager for this application\n     * @type {ApplicationCommandManager}\n     */\n    this.commands = new ApplicationCommandManager(this.client);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    /**\n     * The flags this application has\n     * @type {ApplicationFlags}\n     */\n    this.flags = 'flags' in data ? new ApplicationFlags(data.flags).freeze() : this.flags;\n\n    /**\n     * The hash of the application's cover image\n     * @type {?string}\n     */\n    this.cover = data.cover_image ?? this.cover ?? null;\n\n    /**\n     * The application's RPC origins, if enabled\n     * @type {string[]}\n     */\n    this.rpcOrigins = data.rpc_origins ?? this.rpcOrigins ?? [];\n\n    /**\n     * If this application's bot requires a code grant when using the OAuth2 flow\n     * @type {?boolean}\n     */\n    this.botRequireCodeGrant = data.bot_require_code_grant ?? this.botRequireCodeGrant ?? null;\n\n    /**\n     * If this application's bot is public\n     * @type {?boolean}\n     */\n    this.botPublic = data.bot_public ?? this.botPublic ?? null;\n\n    /**\n     * The owner of this OAuth application\n     * @type {?(User|Team)}\n     */\n    this.owner = data.team\n      ? new Team(this.client, data.team)\n      : data.owner\n      ? this.client.users._add(data.owner)\n      : this.owner ?? null;\n  }\n\n  /**\n   * Whether this application is partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !this.name;\n  }\n\n  /**\n   * Obtains this application from Discord.\n   * @returns {Promise<ClientApplication>}\n   */\n  async fetch() {\n    const app = await this.client.api.oauth2.applications('@me').get();\n    this._patch(app);\n    return this;\n  }\n}\n\nmodule.exports = ClientApplication;\n","'use strict';\n\nconst { Presence } = require('./Presence');\nconst { TypeError } = require('../errors');\nconst { ActivityTypes, Opcodes } = require('../util/Constants');\n\nclass ClientPresence extends Presence {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIPresence} [data={}] The data for the client presence\n   */\n  constructor(client, data = {}) {\n    super(client, Object.assign(data, { status: data.status ?? 'online', user: { id: null } }));\n  }\n\n  set(presence) {\n    const packet = this._parse(presence);\n    this._patch(packet);\n    if (typeof presence.shardId === 'undefined') {\n      this.client.ws.broadcast({ op: Opcodes.STATUS_UPDATE, d: packet });\n    } else if (Array.isArray(presence.shardId)) {\n      for (const shardId of presence.shardId) {\n        this.client.ws.shards.get(shardId).send({ op: Opcodes.STATUS_UPDATE, d: packet });\n      }\n    } else {\n      this.client.ws.shards.get(presence.shardId).send({ op: Opcodes.STATUS_UPDATE, d: packet });\n    }\n    return this;\n  }\n\n  _parse({ status, since, afk, activities }) {\n    const data = {\n      activities: [],\n      afk: typeof afk === 'boolean' ? afk : false,\n      since: typeof since === 'number' && !Number.isNaN(since) ? since : null,\n      status: status ?? this.status,\n    };\n    if (activities?.length) {\n      for (const [i, activity] of activities.entries()) {\n        if (typeof activity.name !== 'string') throw new TypeError('INVALID_TYPE', `activities[${i}].name`, 'string');\n        if (!activity.type) activity.type = 0;\n\n        data.activities.push({\n          type: typeof activity.type === 'number' ? activity.type : ActivityTypes[activity.type],\n          name: activity.name,\n          url: activity.url,\n        });\n      }\n    } else if (!activities && (status || afk || since) && this.activities.length) {\n      data.activities.push(\n        ...this.activities.map(a => ({\n          name: a.name,\n          type: ActivityTypes[a.type],\n          url: a.url ?? undefined,\n        })),\n      );\n    }\n\n    return data;\n  }\n}\n\nmodule.exports = ClientPresence;\n","'use strict';\n\nconst User = require('./User');\nconst DataResolver = require('../util/DataResolver');\n\n/**\n * Represents the logged in client's Discord user.\n * @extends {User}\n */\nclass ClientUser extends User {\n  _patch(data) {\n    super._patch(data);\n\n    if ('verified' in data) {\n      /**\n       * Whether or not this account has been verified\n       * @type {boolean}\n       */\n      this.verified = data.verified;\n    }\n\n    if ('mfa_enabled' in data) {\n      /**\n       * If the bot's {@link ClientApplication#owner Owner} has MFA enabled on their account\n       * @type {?boolean}\n       */\n      this.mfaEnabled = typeof data.mfa_enabled === 'boolean' ? data.mfa_enabled : null;\n    } else if (typeof this.mfaEnabled === 'undefined') {\n      this.mfaEnabled = null;\n    }\n\n    if (data.token) this.client.token = data.token;\n  }\n\n  /**\n   * ClientUser's presence\n   * @type {Presence}\n   * @readonly\n   */\n  get presence() {\n    return this.client.presence;\n  }\n\n  /**\n   * Data used to edit the logged in client\n   * @typdef {Object} ClientUserEditData\n   * @property {string} [username] The new username\n   * @property {BufferResolvable|Base64Resolvable} [avatar] The new avatar\n   */\n\n  /**\n   * Edits the logged in client.\n   * @param {ClientUserEditData} data The new data\n   */\n  async edit(data) {\n    const newData = await this.client.api.users('@me').patch({ data });\n    this.client.token = newData.token;\n    const { updated } = this.client.actions.UserUpdate.handle(newData);\n    return updated ?? this;\n  }\n\n  /**\n   * Sets the username of the logged in client.\n   * <info>Changing usernames in Discord is heavily rate limited, with only 2 requests\n   * every hour. Use this sparingly!</info>\n   * @param {string} username The new username\n   * @returns {Promise<ClientUser>}\n   * @example\n   * // Set username\n   * client.user.setUsername('discordjs')\n   *   .then(user => console.log(`My new username is ${user.username}`))\n   *   .catch(console.error);\n   */\n  setUsername(username) {\n    return this.edit({ username });\n  }\n\n  /**\n   * Sets the avatar of the logged in client.\n   * @param {BufferResolvable|Base64Resolvable} avatar The new avatar\n   * @returns {Promise<ClientUser>}\n   * @example\n   * // Set avatar\n   * client.user.setAvatar('./avatar.png')\n   *   .then(user => console.log(`New avatar set!`))\n   *   .catch(console.error);\n   */\n  async setAvatar(avatar) {\n    return this.edit({ avatar: await DataResolver.resolveImage(avatar) });\n  }\n\n  /**\n   * Options for setting activities\n   * @typedef {Object} ActivitiesOptions\n   * @property {string} [name] Name of the activity\n   * @property {ActivityType|number} [type] Type of the activity\n   * @property {string} [url] Twitch / YouTube stream URL\n   */\n\n  /**\n   * Data resembling a raw Discord presence.\n   * @typedef {Object} PresenceData\n   * @property {PresenceStatusData} [status] Status of the user\n   * @property {boolean} [afk] Whether the user is AFK\n   * @property {ActivitiesOptions[]} [activities] Activity the user is playing\n   * @property {number|number[]} [shardId] Shard id(s) to have the activity set on\n   */\n\n  /**\n   * Sets the full presence of the client user.\n   * @param {PresenceData} data Data for the presence\n   * @returns {Presence}\n   * @example\n   * // Set the client user's presence\n   * client.user.setPresence({ activities: [{ name: 'with discord.js' }], status: 'idle' });\n   */\n  setPresence(data) {\n    return this.client.presence.set(data);\n  }\n\n  /**\n   * A user's status. Must be one of:\n   * * `online`\n   * * `idle`\n   * * `invisible`\n   * * `dnd` (do not disturb)\n   * @typedef {string} PresenceStatusData\n   */\n\n  /**\n   * Sets the status of the client user.\n   * @param {PresenceStatusData} status Status to change to\n   * @param {number|number[]} [shardId] Shard id(s) to have the activity set on\n   * @returns {Presence}\n   * @example\n   * // Set the client user's status\n   * client.user.setStatus('idle');\n   */\n  setStatus(status, shardId) {\n    return this.setPresence({ status, shardId });\n  }\n\n  /**\n   * Options for setting an activity.\n   * @typedef {Object} ActivityOptions\n   * @property {string} [name] Name of the activity\n   * @property {string} [url] Twitch / YouTube stream URL\n   * @property {ActivityType|number} [type] Type of the activity\n   * @property {number|number[]} [shardId] Shard Id(s) to have the activity set on\n   */\n\n  /**\n   * Sets the activity the client user is playing.\n   * @param {string|ActivityOptions} [name] Activity being played, or options for setting the activity\n   * @param {ActivityOptions} [options] Options for setting the activity\n   * @returns {Presence}\n   * @example\n   * // Set the client user's activity\n   * client.user.setActivity('discord.js', { type: 'WATCHING' });\n   */\n  setActivity(name, options = {}) {\n    if (!name) return this.setPresence({ activities: [], shardId: options.shardId });\n\n    const activity = Object.assign({}, options, typeof name === 'object' ? name : { name });\n    return this.setPresence({ activities: [activity], shardId: activity.shardId });\n  }\n\n  /**\n   * Sets/removes the AFK flag for the client user.\n   * @param {boolean} afk Whether or not the user is AFK\n   * @param {number|number[]} [shardId] Shard Id(s) to have the AFK flag set on\n   * @returns {Presence}\n   */\n  setAFK(afk, shardId) {\n    return this.setPresence({ afk, shardId });\n  }\n}\n\nmodule.exports = ClientUser;\n","'use strict';\n\nconst BaseCommandInteraction = require('./BaseCommandInteraction');\nconst CommandInteractionOptionResolver = require('./CommandInteractionOptionResolver');\n\n/**\n * Represents a command interaction.\n * @extends {BaseCommandInteraction}\n */\nclass CommandInteraction extends BaseCommandInteraction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The options passed to the command.\n     * @type {CommandInteractionOptionResolver}\n     */\n    this.options = new CommandInteractionOptionResolver(\n      this.client,\n      data.data.options?.map(option => this.transformOption(option, data.data.resolved)) ?? [],\n      this.transformResolved(data.data.resolved ?? {}),\n    );\n  }\n}\n\nmodule.exports = CommandInteraction;\n","'use strict';\n\nconst { TypeError } = require('../errors');\n\n/**\n * A resolver for command interaction options.\n */\nclass CommandInteractionOptionResolver {\n  constructor(client, options, resolved) {\n    /**\n     * The client that instantiated this.\n     * @name CommandInteractionOptionResolver#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The name of the subcommand group.\n     * @type {?string}\n     * @private\n     */\n    this._group = null;\n\n    /**\n     * The name of the subcommand.\n     * @type {?string}\n     * @private\n     */\n    this._subcommand = null;\n\n    /**\n     * The bottom-level options for the interaction.\n     * If there is a subcommand (or subcommand and group), this is the options for the subcommand.\n     * @type {CommandInteractionOption[]}\n     * @private\n     */\n    this._hoistedOptions = options;\n\n    // Hoist subcommand group if present\n    if (this._hoistedOptions[0]?.type === 'SUB_COMMAND_GROUP') {\n      this._group = this._hoistedOptions[0].name;\n      this._hoistedOptions = this._hoistedOptions[0].options ?? [];\n    }\n    // Hoist subcommand if present\n    if (this._hoistedOptions[0]?.type === 'SUB_COMMAND') {\n      this._subcommand = this._hoistedOptions[0].name;\n      this._hoistedOptions = this._hoistedOptions[0].options ?? [];\n    }\n\n    /**\n     * The interaction options array.\n     * @name CommandInteractionOptionResolver#data\n     * @type {ReadonlyArray<CommandInteractionOption>}\n     * @readonly\n     */\n    Object.defineProperty(this, 'data', { value: Object.freeze([...options]) });\n\n    /**\n     * The interaction resolved data\n     * @name CommandInteractionOptionResolver#resolved\n     * @type {Readonly<CommandInteractionResolvedData>}\n     */\n    Object.defineProperty(this, 'resolved', { value: Object.freeze(resolved) });\n  }\n\n  /**\n   * Gets an option by its name.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?CommandInteractionOption} The option, if found.\n   */\n  get(name, required = false) {\n    const option = this._hoistedOptions.find(opt => opt.name === name);\n    if (!option) {\n      if (required) {\n        throw new TypeError('COMMAND_INTERACTION_OPTION_NOT_FOUND', name);\n      }\n      return null;\n    }\n    return option;\n  }\n\n  /**\n   * Gets an option by name and property and checks its type.\n   * @param {string} name The name of the option.\n   * @param {ApplicationCommandOptionType} type The type of the option.\n   * @param {string[]} properties The properties to check for for `required`.\n   * @param {boolean} required Whether to throw an error if the option is not found.\n   * @returns {?CommandInteractionOption} The option, if found.\n   * @private\n   */\n  _getTypedOption(name, type, properties, required) {\n    const option = this.get(name, required);\n    if (!option) {\n      return null;\n    } else if (option.type !== type) {\n      throw new TypeError('COMMAND_INTERACTION_OPTION_TYPE', name, option.type, type);\n    } else if (required && properties.every(prop => option[prop] === null || typeof option[prop] === 'undefined')) {\n      throw new TypeError('COMMAND_INTERACTION_OPTION_EMPTY', name, option.type);\n    }\n    return option;\n  }\n\n  /**\n   * Gets the selected subcommand.\n   * @param {boolean} [required=true] Whether to throw an error if there is no subcommand.\n   * @returns {?string} The name of the selected subcommand, or null if not set and not required.\n   */\n  getSubcommand(required = true) {\n    if (required && !this._subcommand) {\n      throw new TypeError('COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND');\n    }\n    return this._subcommand;\n  }\n\n  /**\n   * Gets the selected subcommand group.\n   * @param {boolean} [required=true] Whether to throw an error if there is no subcommand group.\n   * @returns {?string} The name of the selected subcommand group, or null if not set and not required.\n   */\n  getSubcommandGroup(required = true) {\n    if (required && !this._group) {\n      throw new TypeError('COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND_GROUP');\n    }\n    return this._group;\n  }\n\n  /**\n   * Gets a boolean option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?boolean} The value of the option, or null if not set and not required.\n   */\n  getBoolean(name, required = false) {\n    const option = this._getTypedOption(name, 'BOOLEAN', ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets a channel option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(GuildChannel|APIGuildChannel)}\n   * The value of the option, or null if not set and not required.\n   */\n  getChannel(name, required = false) {\n    const option = this._getTypedOption(name, 'CHANNEL', ['channel'], required);\n    return option?.channel ?? null;\n  }\n\n  /**\n   * Gets a string option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?string} The value of the option, or null if not set and not required.\n   */\n  getString(name, required = false) {\n    const option = this._getTypedOption(name, 'STRING', ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets an integer option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?number} The value of the option, or null if not set and not required.\n   */\n  getInteger(name, required = false) {\n    const option = this._getTypedOption(name, 'INTEGER', ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets a number option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?number} The value of the option, or null if not set and not required.\n   */\n  getNumber(name, required = false) {\n    const option = this._getTypedOption(name, 'NUMBER', ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets a user option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?User} The value of the option, or null if not set and not required.\n   */\n  getUser(name, required = false) {\n    const option = this._getTypedOption(name, 'USER', ['user'], required);\n    return option?.user ?? null;\n  }\n\n  /**\n   * Gets a member option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(GuildMember|APIGuildMember)}\n   * The value of the option, or null if not set and not required.\n   */\n  getMember(name, required = false) {\n    const option = this._getTypedOption(name, 'USER', ['member'], required);\n    return option?.member ?? null;\n  }\n\n  /**\n   * Gets a role option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(Role|APIRole)} The value of the option, or null if not set and not required.\n   */\n  getRole(name, required = false) {\n    const option = this._getTypedOption(name, 'ROLE', ['role'], required);\n    return option?.role ?? null;\n  }\n\n  /**\n   * Gets a mentionable option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(User|GuildMember|APIGuildMember|Role|APIRole)}\n   * The value of the option, or null if not set and not required.\n   */\n  getMentionable(name, required = false) {\n    const option = this._getTypedOption(name, 'MENTIONABLE', ['user', 'member', 'role'], required);\n    return option?.member ?? option?.user ?? option?.role ?? null;\n  }\n\n  /**\n   * Gets a message option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(Message|APIMessage)}\n   * The value of the option, or null if not set and not required.\n   */\n  getMessage(name, required = false) {\n    const option = this._getTypedOption(name, '_MESSAGE', ['message'], required);\n    return option?.message ?? null;\n  }\n}\n\nmodule.exports = CommandInteractionOptionResolver;\n","'use strict';\n\nconst BaseCommandInteraction = require('./BaseCommandInteraction');\nconst CommandInteractionOptionResolver = require('./CommandInteractionOptionResolver');\nconst { ApplicationCommandOptionTypes, ApplicationCommandTypes } = require('../util/Constants');\n\n/**\n * Represents a context menu interaction.\n * @extends {BaseCommandInteraction}\n */\nclass ContextMenuInteraction extends BaseCommandInteraction {\n  constructor(client, data) {\n    super(client, data);\n    /**\n     * The target of the interaction, parsed into options\n     * @type {CommandInteractionOptionResolver}\n     */\n    this.options = new CommandInteractionOptionResolver(\n      this.client,\n      this.resolveContextMenuOptions(data.data),\n      this.transformResolved(data.data.resolved),\n    );\n\n    /**\n     * The id of the target of the interaction\n     * @type {Snowflake}\n     */\n    this.targetId = data.data.target_id;\n\n    /**\n     * The type of the target of the interaction; either USER or MESSAGE\n     * @type {ApplicationCommandType}\n     */\n    this.targetType = ApplicationCommandTypes[data.data.type];\n  }\n\n  /**\n   * Resolves and transforms options received from the API for a context menu interaction.\n   * @param {APIApplicationCommandInteractionData} data The interaction data\n   * @returns {CommandInteractionOption[]}\n   * @private\n   */\n  resolveContextMenuOptions({ target_id, resolved }) {\n    const result = [];\n\n    if (resolved.users?.[target_id]) {\n      result.push(\n        this.transformOption({ name: 'user', type: ApplicationCommandOptionTypes.USER, value: target_id }, resolved),\n      );\n    }\n\n    if (resolved.messages?.[target_id]) {\n      result.push({\n        name: 'message',\n        type: '_MESSAGE',\n        value: target_id,\n        message: this.channel?.messages._add(resolved.messages[target_id]) ?? resolved.messages[target_id],\n      });\n    }\n\n    return result;\n  }\n}\n\nmodule.exports = ContextMenuInteraction;\n","'use strict';\n\nconst Channel = require('./Channel');\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst MessageManager = require('../managers/MessageManager');\n\n/**\n * Represents a direct message channel between two users.\n * @extends {Channel}\n * @implements {TextBasedChannel}\n */\nclass DMChannel extends Channel {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIChannel} data The data for the DM channel\n   */\n  constructor(client, data) {\n    super(client, data);\n\n    // Override the channel type so partials have a known type\n    this.type = 'DM';\n\n    /**\n     * A manager of the messages belonging to this channel\n     * @type {MessageManager}\n     */\n    this.messages = new MessageManager(this);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if (data.recipients) {\n      /**\n       * The recipient on the other end of the DM\n       * @type {User}\n       */\n      this.recipient = this.client.users._add(data.recipients[0]);\n    }\n\n    /**\n     * The channel's last message id, if one was sent\n     * @type {?Snowflake}\n     */\n    this.lastMessageId = data.last_message_id;\n\n    /**\n     * The timestamp when the last pinned message was pinned, if there was one\n     * @type {?number}\n     */\n    this.lastPinTimestamp = data.last_pin_timestamp ? new Date(data.last_pin_timestamp).getTime() : null;\n  }\n\n  /**\n   * Whether this DMChannel is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return typeof this.lastMessageId === 'undefined';\n  }\n\n  /**\n   * Fetch this DMChannel.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<DMChannel>}\n   */\n  fetch(force = true) {\n    return this.recipient.createDM(force);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the recipient's mention instead of the\n   * DMChannel object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <@123456789012345678>!\n   * console.log(`Hello from ${channel}!`);\n   */\n  toString() {\n    return this.recipient.toString();\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  get lastMessage() {}\n  get lastPinAt() {}\n  send() {}\n  sendTyping() {}\n  createMessageCollector() {}\n  awaitMessages() {}\n  createMessageComponentCollector() {}\n  awaitMessageComponent() {}\n  // Doesn't work on DM channels; bulkDelete() {}\n}\n\nTextBasedChannel.applyToClass(DMChannel, true, ['bulkDelete']);\n\nmodule.exports = DMChannel;\n","'use strict';\n\nconst Base = require('./Base');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Represents raw emoji data from the API\n * @typedef {APIEmoji} RawEmoji\n * @property {?Snowflake} id The emoji's id\n * @property {?string} name The emoji's name\n * @property {?boolean} animated Whether the emoji is animated\n */\n\n/**\n * Represents an emoji, see {@link GuildEmoji} and {@link ReactionEmoji}.\n * @extends {Base}\n */\nclass Emoji extends Base {\n  constructor(client, emoji) {\n    super(client);\n    /**\n     * Whether or not the emoji is animated\n     * @type {?boolean}\n     */\n    this.animated = emoji.animated ?? null;\n\n    /**\n     * The emoji's name\n     * @type {?string}\n     */\n    this.name = emoji.name ?? null;\n\n    /**\n     * The emoji's id\n     * @type {?Snowflake}\n     */\n    this.id = emoji.id;\n\n    /**\n     * Whether this emoji has been deleted\n     * @type {boolean}\n     */\n    this.deleted = false;\n  }\n\n  /**\n   * The identifier of this emoji, used for message reactions\n   * @type {string}\n   * @readonly\n   */\n  get identifier() {\n    if (this.id) return `${this.animated ? 'a:' : ''}${this.name}:${this.id}`;\n    return encodeURIComponent(this.name);\n  }\n\n  /**\n   * The URL to the emoji file if its a custom emoji\n   * @type {?string}\n   * @readonly\n   */\n  get url() {\n    return this.id && this.client.rest.cdn.Emoji(this.id, this.animated ? 'gif' : 'png');\n  }\n\n  /**\n   * The timestamp the emoji was created at, or null if unicode\n   * @type {?number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return this.id && SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the emoji was created at, or null if unicode\n   * @type {?Date}\n   * @readonly\n   */\n  get createdAt() {\n    return this.id && new Date(this.createdTimestamp);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the text required to form a graphical emoji on Discord\n   * instead of the Emoji object.\n   * @returns {string}\n   * @example\n   * // Send a custom emoji from a guild:\n   * const emoji = guild.emojis.cache.first();\n   * msg.channel.send(`Hello! ${emoji}`);\n   * @example\n   * // Send the emoji used in a reaction to the channel the reaction is part of\n   * reaction.message.channel.send(`The emoji used was: ${reaction.emoji}`);\n   */\n  toString() {\n    return this.id ? `<${this.animated ? 'a' : ''}:${this.name}:${this.id}>` : this.name;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      guild: 'guildId',\n      createdTimestamp: true,\n      url: true,\n      identifier: true,\n    });\n  }\n}\n\nmodule.exports = Emoji;\n\n/**\n * @external APIEmoji\n * @see {@link https://discord.com/developers/docs/resources/emoji#emoji-object}\n */\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst AnonymousGuild = require('./AnonymousGuild');\nconst GuildAuditLogs = require('./GuildAuditLogs');\nconst GuildPreview = require('./GuildPreview');\nconst GuildTemplate = require('./GuildTemplate');\nconst Integration = require('./Integration');\nconst Webhook = require('./Webhook');\nconst WelcomeScreen = require('./WelcomeScreen');\nconst { Error } = require('../errors');\nconst GuildApplicationCommandManager = require('../managers/GuildApplicationCommandManager');\nconst GuildBanManager = require('../managers/GuildBanManager');\nconst GuildChannelManager = require('../managers/GuildChannelManager');\nconst GuildEmojiManager = require('../managers/GuildEmojiManager');\nconst GuildInviteManager = require('../managers/GuildInviteManager');\nconst GuildMemberManager = require('../managers/GuildMemberManager');\nconst GuildStickerManager = require('../managers/GuildStickerManager');\nconst PresenceManager = require('../managers/PresenceManager');\nconst RoleManager = require('../managers/RoleManager');\nconst StageInstanceManager = require('../managers/StageInstanceManager');\nconst VoiceStateManager = require('../managers/VoiceStateManager');\nconst {\n  ChannelTypes,\n  DefaultMessageNotificationLevels,\n  PartialTypes,\n  VerificationLevels,\n  ExplicitContentFilterLevels,\n  Status,\n  MFALevels,\n  PremiumTiers,\n} = require('../util/Constants');\nconst DataResolver = require('../util/DataResolver');\nconst SystemChannelFlags = require('../util/SystemChannelFlags');\nconst Util = require('../util/Util');\n\n/**\n * Represents a guild (or a server) on Discord.\n * <info>It's recommended to see if a guild is available before performing operations or reading data from it. You can\n * check this with {@link Guild#available}.</info>\n * @extends {AnonymousGuild}\n */\nclass Guild extends AnonymousGuild {\n  constructor(client, data) {\n    super(client, data, false);\n\n    /**\n     * A manager of the application commands belonging to this guild\n     * @type {GuildApplicationCommandManager}\n     */\n    this.commands = new GuildApplicationCommandManager(this);\n\n    /**\n     * A manager of the members belonging to this guild\n     * @type {GuildMemberManager}\n     */\n    this.members = new GuildMemberManager(this);\n\n    /**\n     * A manager of the channels belonging to this guild\n     * @type {GuildChannelManager}\n     */\n    this.channels = new GuildChannelManager(this);\n\n    /**\n     * A manager of the bans belonging to this guild\n     * @type {GuildBanManager}\n     */\n    this.bans = new GuildBanManager(this);\n\n    /**\n     * A manager of the roles belonging to this guild\n     * @type {RoleManager}\n     */\n    this.roles = new RoleManager(this);\n\n    /**\n     * A manager of the presences belonging to this guild\n     * @type {PresenceManager}\n     */\n    this.presences = new PresenceManager(this.client);\n\n    /**\n     * A manager of the voice states of this guild\n     * @type {VoiceStateManager}\n     */\n    this.voiceStates = new VoiceStateManager(this);\n\n    /**\n     * A manager of the stage instances of this guild\n     * @type {StageInstanceManager}\n     */\n    this.stageInstances = new StageInstanceManager(this);\n\n    /**\n     * A manager of the invites of this guild\n     * @type {GuildInviteManager}\n     */\n    this.invites = new GuildInviteManager(this);\n\n    /**\n     * Whether the bot has been removed from the guild\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    if (!data) return;\n    if (data.unavailable) {\n      /**\n       * Whether the guild is available to access. If it is not available, it indicates a server outage\n       * @type {boolean}\n       */\n      this.available = false;\n    } else {\n      this._patch(data);\n      if (!data.channels) this.available = false;\n    }\n\n    /**\n     * The id of the shard this Guild belongs to.\n     * @type {number}\n     */\n    this.shardId = data.shardId;\n  }\n\n  /**\n   * The Shard this Guild belongs to.\n   * @type {WebSocketShard}\n   * @readonly\n   */\n  get shard() {\n    return this.client.ws.shards.get(this.shardId);\n  }\n\n  /**\n   * Sets up the guild.\n   * @param {*} data The raw data of the guild\n   * @private\n   */\n  _patch(data) {\n    super._patch(data);\n    this.id = data.id;\n    this.name = data.name;\n    this.icon = data.icon;\n    this.available = !data.unavailable;\n\n    /**\n     * The hash of the guild discovery splash image\n     * @type {?string}\n     */\n    this.discoverySplash = data.discovery_splash;\n\n    /**\n     * The full amount of members in this guild\n     * @type {number}\n     */\n    this.memberCount = data.member_count ?? this.memberCount;\n\n    /**\n     * Whether the guild is \"large\" (has more than large_threshold members, 50 by default)\n     * @type {boolean}\n     */\n    this.large = Boolean(data.large ?? this.large);\n\n    /**\n     * An array of enabled guild features, here are the possible values:\n     * * ANIMATED_ICON\n     * * BANNER\n     * * COMMERCE\n     * * COMMUNITY\n     * * DISCOVERABLE\n     * * FEATURABLE\n     * * INVITE_SPLASH\n     * * MEMBER_VERIFICATION_GATE_ENABLED\n     * * NEWS\n     * * PARTNERED\n     * * PREVIEW_ENABLED\n     * * VANITY_URL\n     * * VERIFIED\n     * * VIP_REGIONS\n     * * WELCOME_SCREEN_ENABLED\n     * * TICKETED_EVENTS_ENABLED\n     * * MONETIZATION_ENABLED\n     * * MORE_STICKERS\n     * * THREE_DAY_THREAD_ARCHIVE\n     * * SEVEN_DAY_THREAD_ARCHIVE\n     * * PRIVATE_THREADS\n     * @typedef {string} Features\n     * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-guild-features}\n     */\n\n    /**\n     * The id of the application that created this guild (if applicable)\n     * @type {?Snowflake}\n     */\n    this.applicationId = data.application_id;\n\n    /**\n     * The time in seconds before a user is counted as \"away from keyboard\"\n     * @type {?number}\n     */\n    this.afkTimeout = data.afk_timeout;\n\n    /**\n     * The id of the voice channel where AFK members are moved\n     * @type {?Snowflake}\n     */\n    this.afkChannelId = data.afk_channel_id;\n\n    /**\n     * The system channel's id\n     * @type {?Snowflake}\n     */\n    this.systemChannelId = data.system_channel_id;\n\n    /**\n     * The premium tier of this guild\n     * @type {PremiumTier}\n     */\n    this.premiumTier = PremiumTiers[data.premium_tier];\n\n    if (typeof data.premium_subscription_count !== 'undefined') {\n      /**\n       * The total number of boosts for this server\n       * @type {?number}\n       */\n      this.premiumSubscriptionCount = data.premium_subscription_count;\n    }\n\n    if (typeof data.widget_enabled !== 'undefined') {\n      /**\n       * Whether widget images are enabled on this guild\n       * @type {?boolean}\n       */\n      this.widgetEnabled = data.widget_enabled;\n    }\n\n    if (typeof data.widget_channel_id !== 'undefined') {\n      /**\n       * The widget channel's id, if enabled\n       * @type {?string}\n       */\n      this.widgetChannelId = data.widget_channel_id;\n    }\n\n    /**\n     * The explicit content filter level of the guild\n     * @type {ExplicitContentFilterLevel}\n     */\n    this.explicitContentFilter = ExplicitContentFilterLevels[data.explicit_content_filter];\n\n    /**\n     * The required MFA level for this guild\n     * @type {MFALevel}\n     */\n    this.mfaLevel = MFALevels[data.mfa_level];\n\n    /**\n     * The timestamp the client user joined the guild at\n     * @type {number}\n     */\n    this.joinedTimestamp = data.joined_at ? new Date(data.joined_at).getTime() : this.joinedTimestamp;\n\n    /**\n     * The default message notification level of the guild\n     * @type {DefaultMessageNotificationLevel}\n     */\n    this.defaultMessageNotifications = DefaultMessageNotificationLevels[data.default_message_notifications];\n\n    /**\n     * The value set for the guild's system channel flags\n     * @type {Readonly<SystemChannelFlags>}\n     */\n    this.systemChannelFlags = new SystemChannelFlags(data.system_channel_flags).freeze();\n\n    if (typeof data.max_members !== 'undefined') {\n      /**\n       * The maximum amount of members the guild can have\n       * @type {?number}\n       */\n      this.maximumMembers = data.max_members;\n    } else if (typeof this.maximumMembers === 'undefined') {\n      this.maximumMembers = null;\n    }\n\n    if (typeof data.max_presences !== 'undefined') {\n      /**\n       * The maximum amount of presences the guild can have\n       * <info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>\n       * @type {?number}\n       */\n      this.maximumPresences = data.max_presences ?? 25000;\n    } else if (typeof this.maximumPresences === 'undefined') {\n      this.maximumPresences = null;\n    }\n\n    if (typeof data.approximate_member_count !== 'undefined') {\n      /**\n       * The approximate amount of members the guild has\n       * <info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>\n       * @type {?number}\n       */\n      this.approximateMemberCount = data.approximate_member_count;\n    } else if (typeof this.approximateMemberCount === 'undefined') {\n      this.approximateMemberCount = null;\n    }\n\n    if (typeof data.approximate_presence_count !== 'undefined') {\n      /**\n       * The approximate amount of presences the guild has\n       * <info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>\n       * @type {?number}\n       */\n      this.approximatePresenceCount = data.approximate_presence_count;\n    } else if (typeof this.approximatePresenceCount === 'undefined') {\n      this.approximatePresenceCount = null;\n    }\n\n    /**\n     * The use count of the vanity URL code of the guild, if any\n     * <info>You will need to fetch this parameter using {@link Guild#fetchVanityData} if you want to receive it</info>\n     * @type {?number}\n     */\n    this.vanityURLUses = null;\n\n    /**\n     * The rules channel's id for the guild\n     * @type {?Snowflake}\n     */\n    this.rulesChannelId = data.rules_channel_id;\n\n    /**\n     * The community updates channel's id for the guild\n     * @type {?Snowflake}\n     */\n    this.publicUpdatesChannelId = data.public_updates_channel_id;\n\n    /**\n     * The preferred locale of the guild, defaults to `en-US`\n     * @type {string}\n     * @see {@link https://discord.com/developers/docs/dispatch/field-values#predefined-field-values-accepted-locales}\n     */\n    this.preferredLocale = data.preferred_locale;\n\n    if (data.channels) {\n      this.channels.cache.clear();\n      for (const rawChannel of data.channels) {\n        this.client.channels._add(rawChannel, this);\n      }\n    }\n\n    if (data.threads) {\n      for (const rawThread of data.threads) {\n        this.client.channels._add(rawThread, this);\n      }\n    }\n\n    if (data.roles) {\n      this.roles.cache.clear();\n      for (const role of data.roles) this.roles._add(role);\n    }\n\n    if (data.members) {\n      this.members.cache.clear();\n      for (const guildUser of data.members) this.members._add(guildUser);\n    }\n\n    if (data.owner_id) {\n      /**\n       * The user id of this guild's owner\n       * @type {Snowflake}\n       */\n      this.ownerId = data.owner_id;\n    }\n\n    if (data.presences) {\n      for (const presence of data.presences) {\n        this.presences._add(Object.assign(presence, { guild: this }));\n      }\n    }\n\n    if (data.stage_instances) {\n      this.stageInstances.cache.clear();\n      for (const stageInstance of data.stage_instances) {\n        this.stageInstances._add(stageInstance);\n      }\n    }\n\n    if (data.voice_states) {\n      this.voiceStates.cache.clear();\n      for (const voiceState of data.voice_states) {\n        this.voiceStates._add(voiceState);\n      }\n    }\n\n    if (!this.emojis) {\n      /**\n       * A manager of the emojis belonging to this guild\n       * @type {GuildEmojiManager}\n       */\n      this.emojis = new GuildEmojiManager(this);\n      if (data.emojis) for (const emoji of data.emojis) this.emojis._add(emoji);\n    } else if (data.emojis) {\n      this.client.actions.GuildEmojisUpdate.handle({\n        guild_id: this.id,\n        emojis: data.emojis,\n      });\n    }\n\n    if (!this.stickers) {\n      /**\n       * A manager of the stickers belonging to this guild\n       * @type {GuildStickerManager}\n       */\n      this.stickers = new GuildStickerManager(this);\n      if (data.stickers) for (const sticker of data.stickers) this.stickers._add(sticker);\n    } else if (data.stickers) {\n      this.client.actions.GuildStickersUpdate.handle({\n        guild_id: this.id,\n        stickers: data.stickers,\n      });\n    }\n  }\n\n  /**\n   * The URL to this guild's banner.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  bannerURL({ format, size } = {}) {\n    return this.banner && this.client.rest.cdn.Banner(this.id, this.banner, format, size);\n  }\n\n  /**\n   * The time the client user joined the guild\n   * @type {Date}\n   * @readonly\n   */\n  get joinedAt() {\n    return new Date(this.joinedTimestamp);\n  }\n\n  /**\n   * The URL to this guild's invite splash image.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  splashURL({ format, size } = {}) {\n    return this.splash && this.client.rest.cdn.Splash(this.id, this.splash, format, size);\n  }\n\n  /**\n   * The URL to this guild's discovery splash image.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  discoverySplashURL({ format, size } = {}) {\n    return this.discoverySplash && this.client.rest.cdn.DiscoverySplash(this.id, this.discoverySplash, format, size);\n  }\n\n  /**\n   * Options used to fetch the owner of a guild or a thread.\n   * @typedef {Object} FetchOwnerOptions\n   * @property {boolean} [cache=true] Whether or not to cache the fetched member\n   * @property {boolean} [force=false] Whether to skip the cache check and request the API\n   */\n\n  /**\n   * Fetches the owner of the guild.\n   * If the member object isn't needed, use {@link Guild#ownerId} instead.\n   * @param {FetchOwnerOptions} [options] The options for fetching the member\n   * @returns {Promise<GuildMember>}\n   */\n  fetchOwner(options) {\n    return this.members.fetch({ ...options, user: this.ownerId });\n  }\n\n  /**\n   * AFK voice channel for this guild\n   * @type {?VoiceChannel}\n   * @readonly\n   */\n  get afkChannel() {\n    return this.client.channels.resolve(this.afkChannelId);\n  }\n\n  /**\n   * System channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get systemChannel() {\n    return this.client.channels.resolve(this.systemChannelId);\n  }\n\n  /**\n   * Widget channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get widgetChannel() {\n    return this.client.channels.resolve(this.widgetChannelId);\n  }\n\n  /**\n   * Rules channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get rulesChannel() {\n    return this.client.channels.resolve(this.rulesChannelId);\n  }\n\n  /**\n   * Public updates channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get publicUpdatesChannel() {\n    return this.client.channels.resolve(this.publicUpdatesChannelId);\n  }\n\n  /**\n   * The client user as a GuildMember of this guild\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get me() {\n    return (\n      this.members.resolve(this.client.user.id) ??\n      (this.client.options.partials.includes(PartialTypes.GUILD_MEMBER)\n        ? this.members._add({ user: { id: this.client.user.id } }, true)\n        : null)\n    );\n  }\n\n  /**\n   * Fetches a collection of integrations to this guild.\n   * Resolves with a collection mapping integrations by their ids.\n   * @returns {Promise<Collection<string, Integration>>}\n   * @example\n   * // Fetch integrations\n   * guild.fetchIntegrations()\n   *   .then(integrations => console.log(`Fetched ${integrations.size} integrations`))\n   *   .catch(console.error);\n   */\n  async fetchIntegrations() {\n    const data = await this.client.api.guilds(this.id).integrations.get();\n    return data.reduce(\n      (collection, integration) => collection.set(integration.id, new Integration(this.client, integration, this)),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Fetches a collection of templates from this guild.\n   * Resolves with a collection mapping templates by their codes.\n   * @returns {Promise<Collection<string, GuildTemplate>>}\n   */\n  async fetchTemplates() {\n    const templates = await this.client.api.guilds(this.id).templates.get();\n    return templates.reduce((col, data) => col.set(data.code, new GuildTemplate(this.client, data)), new Collection());\n  }\n\n  /**\n   * Fetches the welcome screen for this guild.\n   * @returns {Promise<WelcomeScreen>}\n   */\n  async fetchWelcomeScreen() {\n    const data = await this.client.api.guilds(this.id, 'welcome-screen').get();\n    return new WelcomeScreen(this, data);\n  }\n\n  /**\n   * Creates a template for the guild.\n   * @param {string} name The name for the template\n   * @param {string} [description] The description for the template\n   * @returns {Promise<GuildTemplate>}\n   */\n  async createTemplate(name, description) {\n    const data = await this.client.api.guilds(this.id).templates.post({ data: { name, description } });\n    return new GuildTemplate(this.client, data);\n  }\n\n  /**\n   * Obtains a guild preview for this guild from Discord.\n   * @returns {Promise<GuildPreview>}\n   */\n  async fetchPreview() {\n    const data = await this.client.api.guilds(this.id).preview.get();\n    return new GuildPreview(this.client, data);\n  }\n\n  /**\n   * An object containing information about a guild's vanity invite.\n   * @typedef {Object} Vanity\n   * @property {?string} code Vanity invite code\n   * @property {?number} uses How many times this invite has been used\n   */\n\n  /**\n   * Fetches the vanity url invite object to this guild.\n   * Resolves with an object containing the vanity url invite code and the use count\n   * @returns {Promise<Vanity>}\n   * @example\n   * // Fetch invite data\n   * guild.fetchVanityData()\n   *   .then(res => {\n   *     console.log(`Vanity URL: https://discord.gg/${res.code} with ${res.uses} uses`);\n   *   })\n   *   .catch(console.error);\n   */\n  async fetchVanityData() {\n    if (!this.features.includes('VANITY_URL')) {\n      throw new Error('VANITY_URL');\n    }\n    const data = await this.client.api.guilds(this.id, 'vanity-url').get();\n    this.vanityURLCode = data.code;\n    this.vanityURLUses = data.uses;\n\n    return data;\n  }\n\n  /**\n   * Fetches all webhooks for the guild.\n   * @returns {Promise<Collection<Snowflake, Webhook>>}\n   * @example\n   * // Fetch webhooks\n   * guild.fetchWebhooks()\n   *   .then(webhooks => console.log(`Fetched ${webhooks.size} webhooks`))\n   *   .catch(console.error);\n   */\n  async fetchWebhooks() {\n    const apiHooks = await this.client.api.guilds(this.id).webhooks.get();\n    const hooks = new Collection();\n    for (const hook of apiHooks) hooks.set(hook.id, new Webhook(this.client, hook));\n    return hooks;\n  }\n\n  /**\n   * Fetches the guild widget data, requires the widget to be enabled.\n   * @returns {Promise<Widget>}\n   * @example\n   * // Fetches the guild widget data\n   * guild.fetchWidget()\n   *   .then(widget => console.log(`The widget shows ${widget.channels.size} channels`))\n   *   .catch(console.error);\n   */\n  fetchWidget() {\n    return this.client.fetchGuildWidget(this.id);\n  }\n\n  /**\n   * Data for the Guild Widget Settings object\n   * @typedef {Object} GuildWidgetSettings\n   * @property {boolean} enabled Whether the widget is enabled\n   * @property {?GuildChannel} channel The widget invite channel\n   */\n\n  /**\n   * The Guild Widget Settings object\n   * @typedef {Object} GuildWidgetSettingsData\n   * @property {boolean} enabled Whether the widget is enabled\n   * @property {?GuildChannelResolvable} channel The widget invite channel\n   */\n\n  /**\n   * Fetches the guild widget settings.\n   * @returns {Promise<GuildWidgetSettings>}\n   * @example\n   * // Fetches the guild widget settings\n   * guild.fetchWidgetSettings()\n   *   .then(widget => console.log(`The widget is ${widget.enabled ? 'enabled' : 'disabled'}`))\n   *   .catch(console.error);\n   */\n  async fetchWidgetSettings() {\n    const data = await this.client.api.guilds(this.id).widget.get();\n    this.widgetEnabled = data.enabled;\n    this.widgetChannelId = data.channel_id;\n    return {\n      enabled: data.enabled,\n      channel: data.channel_id ? this.channels.cache.get(data.channel_id) : null,\n    };\n  }\n\n  /**\n   * Options used to fetch audit logs.\n   * @typedef {Object} GuildAuditLogsFetchOptions\n   * @property {Snowflake|GuildAuditLogsEntry} [before] Only return entries before this entry\n   * @property {number} [limit] The number of entries to return\n   * @property {UserResolvable} [user] Only return entries for actions made by this user\n   * @property {AuditLogAction|number} [type] Only return entries for this action type\n   */\n\n  /**\n   * Fetches audit logs for this guild.\n   * @param {GuildAuditLogsFetchOptions} [options={}] Options for fetching audit logs\n   * @returns {Promise<GuildAuditLogs>}\n   * @example\n   * // Output audit log entries\n   * guild.fetchAuditLogs()\n   *   .then(audit => console.log(audit.entries.first()))\n   *   .catch(console.error);\n   */\n  async fetchAuditLogs(options = {}) {\n    if (options.before && options.before instanceof GuildAuditLogs.Entry) options.before = options.before.id;\n    if (typeof options.type === 'string') options.type = GuildAuditLogs.Actions[options.type];\n\n    const data = await this.client.api.guilds(this.id)['audit-logs'].get({\n      query: {\n        before: options.before,\n        limit: options.limit,\n        user_id: this.client.users.resolveId(options.user),\n        action_type: options.type,\n      },\n    });\n    return GuildAuditLogs.build(this, data);\n  }\n\n  /**\n   * The data for editing a guild.\n   * @typedef {Object} GuildEditData\n   * @property {string} [name] The name of the guild\n   * @property {VerificationLevel|number} [verificationLevel] The verification level of the guild\n   * @property {ExplicitContentFilterLevel|number} [explicitContentFilter] The level of the explicit content filter\n   * @property {VoiceChannelResolvable} [afkChannel] The AFK channel of the guild\n   * @property {TextChannelResolvable} [systemChannel] The system channel of the guild\n   * @property {number} [afkTimeout] The AFK timeout of the guild\n   * @property {Base64Resolvable} [icon] The icon of the guild\n   * @property {GuildMemberResolvable} [owner] The owner of the guild\n   * @property {Base64Resolvable} [splash] The invite splash image of the guild\n   * @property {Base64Resolvable} [discoverySplash] The discovery splash image of the guild\n   * @property {Base64Resolvable} [banner] The banner of the guild\n   * @property {DefaultMessageNotificationLevel|number} [defaultMessageNotifications] The default message notification\n   * level of the guild\n   * @property {SystemChannelFlagsResolvable} [systemChannelFlags] The system channel flags of the guild\n   * @property {TextChannelResolvable} [rulesChannel] The rules channel of the guild\n   * @property {TextChannelResolvable} [publicUpdatesChannel] The community updates channel of the guild\n   * @property {string} [preferredLocale] The preferred locale of the guild\n   * @property {string} [description] The discovery description of the guild\n   * @property {Features[]} [features] The features of the guild\n   */\n\n  /**\n   * Data that can be resolved to a Text Channel object. This can be:\n   * * A TextChannel\n   * * A Snowflake\n   * @typedef {TextChannel|Snowflake} TextChannelResolvable\n   */\n\n  /**\n   * Data that can be resolved to a Voice Channel object. This can be:\n   * * A VoiceChannel\n   * * A Snowflake\n   * @typedef {VoiceChannel|Snowflake} VoiceChannelResolvable\n   */\n\n  /**\n   * Updates the guild with new information - e.g. a new name.\n   * @param {GuildEditData} data The data to update the guild with\n   * @param {string} [reason] Reason for editing this guild\n   * @returns {Promise<Guild>}\n   * @example\n   * // Set the guild name\n   * guild.edit({\n   *   name: 'Discord Guild',\n   * })\n   *   .then(updated => console.log(`New guild name ${updated}`))\n   *   .catch(console.error);\n   */\n  async edit(data, reason) {\n    const _data = {};\n    if (data.name) _data.name = data.name;\n    if (typeof data.verificationLevel !== 'undefined') {\n      _data.verification_level =\n        typeof data.verificationLevel === 'number'\n          ? data.verificationLevel\n          : VerificationLevels[data.verificationLevel];\n    }\n    if (typeof data.afkChannel !== 'undefined') {\n      _data.afk_channel_id = this.client.channels.resolveId(data.afkChannel);\n    }\n    if (typeof data.systemChannel !== 'undefined') {\n      _data.system_channel_id = this.client.channels.resolveId(data.systemChannel);\n    }\n    if (data.afkTimeout) _data.afk_timeout = Number(data.afkTimeout);\n    if (typeof data.icon !== 'undefined') _data.icon = data.icon;\n    if (data.owner) _data.owner_id = this.client.users.resolveId(data.owner);\n    if (data.splash) _data.splash = data.splash;\n    if (data.discoverySplash) _data.discovery_splash = data.discoverySplash;\n    if (data.banner) _data.banner = data.banner;\n    if (typeof data.explicitContentFilter !== 'undefined') {\n      _data.explicit_content_filter =\n        typeof data.explicitContentFilter === 'number'\n          ? data.explicitContentFilter\n          : ExplicitContentFilterLevels[data.explicitContentFilter];\n    }\n    if (typeof data.defaultMessageNotifications !== 'undefined') {\n      _data.default_message_notifications =\n        typeof data.defaultMessageNotifications === 'number'\n          ? data.defaultMessageNotifications\n          : DefaultMessageNotificationLevels[data.defaultMessageNotifications];\n    }\n    if (typeof data.systemChannelFlags !== 'undefined') {\n      _data.system_channel_flags = SystemChannelFlags.resolve(data.systemChannelFlags);\n    }\n    if (typeof data.rulesChannel !== 'undefined') {\n      _data.rules_channel_id = this.client.channels.resolveId(data.rulesChannel);\n    }\n    if (typeof data.publicUpdatesChannel !== 'undefined') {\n      _data.public_updates_channel_id = this.client.channels.resolveId(data.publicUpdatesChannel);\n    }\n    if (typeof data.features !== 'undefined') {\n      _data.features = data.features;\n    }\n    if (typeof data.description !== 'undefined') {\n      _data.description = data.description;\n    }\n    if (data.preferredLocale) _data.preferred_locale = data.preferredLocale;\n    const newData = await this.client.api.guilds(this.id).patch({ data: _data, reason });\n    return this.client.actions.GuildUpdate.handle(newData).updated;\n  }\n\n  /**\n   * Welcome channel data\n   * @typedef {Object} WelcomeChannelData\n   * @property {string} description The description to show for this welcome channel\n   * @property {GuildTextChannelResolvable} channel The channel to link for this welcome channel\n   * @property {EmojiIdentifierResolvable} [emoji] The emoji to display for this welcome channel\n   */\n\n  /**\n   * Welcome screen edit data\n   * @typedef {Object} WelcomeScreenEditData\n   * @property {boolean} [enabled] Whether the welcome screen is enabled\n   * @property {string} [description] The description for the welcome screen\n   * @property {WelcomeChannelData[]} [welcomeChannels] The welcome channel data for the welcome screen\n   */\n\n  /**\n   * Data that can be resolved to a GuildTextChannel object. This can be:\n   * * A TextChannel\n   * * A NewsChannel\n   * * A Snowflake\n   * @typedef {TextChannel|NewsChannel|Snowflake} GuildTextChannelResolvable\n   */\n\n  /**\n   * Data that can be resolved to a GuildVoiceChannel object. This can be:\n   * * A VoiceChannel\n   * * A StageChannel\n   * * A Snowflake\n   * @typedef {VoiceChannel|StageChannel|Snowflake} GuildVoiceChannelResolvable\n   */\n\n  /**\n   * Updates the guild's welcome screen\n   * @param {WelcomeScreenEditData} data Data to edit the welcome screen with\n   * @returns {Promise<WelcomeScreen>}\n   * @example\n   * guild.editWelcomeScreen({\n   *   description: 'Hello World',\n   *   enabled: true,\n   *   welcomeChannels: [\n   *     {\n   *       description: 'foobar',\n   *       channel: '222197033908436994',\n   *     }\n   *   ],\n   * })\n   */\n  async editWelcomeScreen(data) {\n    const { enabled, description, welcomeChannels } = data;\n    const welcome_channels = welcomeChannels?.map(welcomeChannelData => {\n      const emoji = this.emojis.resolve(welcomeChannelData.emoji);\n      return {\n        emoji_id: emoji && emoji.id,\n        emoji_name: emoji?.name ?? welcomeChannelData.emoji,\n        channel_id: this.channels.resolveId(welcomeChannelData.channel),\n        description: welcomeChannelData.description,\n      };\n    });\n\n    const patchData = await this.client.api.guilds(this.id, 'welcome-screen').patch({\n      data: {\n        welcome_channels,\n        description,\n        enabled,\n      },\n    });\n    return new WelcomeScreen(this, patchData);\n  }\n\n  /**\n   * Edits the level of the explicit content filter.\n   * @param {ExplicitContentFilterLevel|number} explicitContentFilter The new level of the explicit content filter\n   * @param {string} [reason] Reason for changing the level of the guild's explicit content filter\n   * @returns {Promise<Guild>}\n   */\n  setExplicitContentFilter(explicitContentFilter, reason) {\n    return this.edit({ explicitContentFilter }, reason);\n  }\n\n  /* eslint-disable max-len */\n  /**\n   * Edits the setting of the default message notifications of the guild.\n   * @param {DefaultMessageNotificationLevel|number} defaultMessageNotifications The new default message notification level of the guild\n   * @param {string} [reason] Reason for changing the setting of the default message notifications\n   * @returns {Promise<Guild>}\n   */\n  setDefaultMessageNotifications(defaultMessageNotifications, reason) {\n    return this.edit({ defaultMessageNotifications }, reason);\n  }\n  /* eslint-enable max-len */\n\n  /**\n   * Edits the flags of the default message notifications of the guild.\n   * @param {SystemChannelFlagsResolvable} systemChannelFlags The new flags for the default message notifications\n   * @param {string} [reason] Reason for changing the flags of the default message notifications\n   * @returns {Promise<Guild>}\n   */\n  setSystemChannelFlags(systemChannelFlags, reason) {\n    return this.edit({ systemChannelFlags }, reason);\n  }\n\n  /**\n   * Edits the name of the guild.\n   * @param {string} name The new name of the guild\n   * @param {string} [reason] Reason for changing the guild's name\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild name\n   * guild.setName('Discord Guild')\n   *  .then(updated => console.log(`Updated guild name to ${updated.name}`))\n   *  .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name }, reason);\n  }\n\n  /**\n   * Edits the verification level of the guild.\n   * @param {VerificationLevel|number} verificationLevel The new verification level of the guild\n   * @param {string} [reason] Reason for changing the guild's verification level\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild verification level\n   * guild.setVerificationLevel(1)\n   *  .then(updated => console.log(`Updated guild verification level to ${guild.verificationLevel}`))\n   *  .catch(console.error);\n   */\n  setVerificationLevel(verificationLevel, reason) {\n    return this.edit({ verificationLevel }, reason);\n  }\n\n  /**\n   * Edits the AFK channel of the guild.\n   * @param {VoiceChannelResolvable} afkChannel The new AFK channel\n   * @param {string} [reason] Reason for changing the guild's AFK channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild AFK channel\n   * guild.setAFKChannel(channel)\n   *  .then(updated => console.log(`Updated guild AFK channel to ${guild.afkChannel.name}`))\n   *  .catch(console.error);\n   */\n  setAFKChannel(afkChannel, reason) {\n    return this.edit({ afkChannel }, reason);\n  }\n\n  /**\n   * Edits the system channel of the guild.\n   * @param {TextChannelResolvable} systemChannel The new system channel\n   * @param {string} [reason] Reason for changing the guild's system channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild system channel\n   * guild.setSystemChannel(channel)\n   *  .then(updated => console.log(`Updated guild system channel to ${guild.systemChannel.name}`))\n   *  .catch(console.error);\n   */\n  setSystemChannel(systemChannel, reason) {\n    return this.edit({ systemChannel }, reason);\n  }\n\n  /**\n   * Edits the AFK timeout of the guild.\n   * @param {number} afkTimeout The time in seconds that a user must be idle to be considered AFK\n   * @param {string} [reason] Reason for changing the guild's AFK timeout\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild AFK channel\n   * guild.setAFKTimeout(60)\n   *  .then(updated => console.log(`Updated guild AFK timeout to ${guild.afkTimeout}`))\n   *  .catch(console.error);\n   */\n  setAFKTimeout(afkTimeout, reason) {\n    return this.edit({ afkTimeout }, reason);\n  }\n\n  /**\n   * Sets a new guild icon.\n   * @param {Base64Resolvable|BufferResolvable} icon The new icon of the guild\n   * @param {string} [reason] Reason for changing the guild's icon\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild icon\n   * guild.setIcon('./icon.png')\n   *  .then(updated => console.log('Updated the guild icon'))\n   *  .catch(console.error);\n   */\n  async setIcon(icon, reason) {\n    return this.edit({ icon: await DataResolver.resolveImage(icon) }, reason);\n  }\n\n  /**\n   * Sets a new owner of the guild.\n   * @param {GuildMemberResolvable} owner The new owner of the guild\n   * @param {string} [reason] Reason for setting the new owner\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild owner\n   * guild.setOwner(guild.members.cache.first())\n   *  .then(updated => console.log(`Updated the guild owner to ${updated.owner.displayName}`))\n   *  .catch(console.error);\n   */\n  setOwner(owner, reason) {\n    return this.edit({ owner }, reason);\n  }\n\n  /**\n   * Sets a new guild invite splash image.\n   * @param {Base64Resolvable|BufferResolvable} splash The new invite splash image of the guild\n   * @param {string} [reason] Reason for changing the guild's invite splash image\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild splash\n   * guild.setSplash('./splash.png')\n   *  .then(updated => console.log('Updated the guild splash'))\n   *  .catch(console.error);\n   */\n  async setSplash(splash, reason) {\n    return this.edit({ splash: await DataResolver.resolveImage(splash) }, reason);\n  }\n\n  /**\n   * Sets a new guild discovery splash image.\n   * @param {Base64Resolvable|BufferResolvable} discoverySplash The new discovery splash image of the guild\n   * @param {string} [reason] Reason for changing the guild's discovery splash image\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild discovery splash\n   * guild.setDiscoverySplash('./discoverysplash.png')\n   *   .then(updated => console.log('Updated the guild discovery splash'))\n   *   .catch(console.error);\n   */\n  async setDiscoverySplash(discoverySplash, reason) {\n    return this.edit({ discoverySplash: await DataResolver.resolveImage(discoverySplash) }, reason);\n  }\n\n  /**\n   * Sets a new guild banner.\n   * @param {Base64Resolvable|BufferResolvable} banner The new banner of the guild\n   * @param {string} [reason] Reason for changing the guild's banner\n   * @returns {Promise<Guild>}\n   * @example\n   * guild.setBanner('./banner.png')\n   *  .then(updated => console.log('Updated the guild banner'))\n   *  .catch(console.error);\n   */\n  async setBanner(banner, reason) {\n    return this.edit({ banner: await DataResolver.resolveImage(banner) }, reason);\n  }\n\n  /**\n   * Edits the rules channel of the guild.\n   * @param {TextChannelResolvable} rulesChannel The new rules channel\n   * @param {string} [reason] Reason for changing the guild's rules channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild rules channel\n   * guild.setRulesChannel(channel)\n   *  .then(updated => console.log(`Updated guild rules channel to ${guild.rulesChannel.name}`))\n   *  .catch(console.error);\n   */\n  setRulesChannel(rulesChannel, reason) {\n    return this.edit({ rulesChannel }, reason);\n  }\n\n  /**\n   * Edits the community updates channel of the guild.\n   * @param {TextChannelResolvable} publicUpdatesChannel The new community updates channel\n   * @param {string} [reason] Reason for changing the guild's community updates channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild community updates channel\n   * guild.setPublicUpdatesChannel(channel)\n   *  .then(updated => console.log(`Updated guild community updates channel to ${guild.publicUpdatesChannel.name}`))\n   *  .catch(console.error);\n   */\n  setPublicUpdatesChannel(publicUpdatesChannel, reason) {\n    return this.edit({ publicUpdatesChannel }, reason);\n  }\n\n  /**\n   * Edits the preferred locale of the guild.\n   * @param {string} preferredLocale The new preferred locale of the guild\n   * @param {string} [reason] Reason for changing the guild's preferred locale\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild preferred locale\n   * guild.setPreferredLocale('en-US')\n   *  .then(updated => console.log(`Updated guild preferred locale to ${guild.preferredLocale}`))\n   *  .catch(console.error);\n   */\n  setPreferredLocale(preferredLocale, reason) {\n    return this.edit({ preferredLocale }, reason);\n  }\n\n  /**\n   * Data that can be resolved to give a Category Channel object. This can be:\n   * * A CategoryChannel object\n   * * A Snowflake\n   * @typedef {CategoryChannel|Snowflake} CategoryChannelResolvable\n   */\n\n  /**\n   * The data needed for updating a channel's position.\n   * @typedef {Object} ChannelPosition\n   * @property {GuildChannel|Snowflake} channel Channel to update\n   * @property {number} [position] New position for the channel\n   * @property {CategoryChannelResolvable} [parent] Parent channel for this channel\n   * @property {boolean} [lockPermissions] If the overwrites should be locked to the parents overwrites\n   */\n\n  /**\n   * Batch-updates the guild's channels' positions.\n   * <info>Only one channel's parent can be changed at a time</info>\n   * @param {ChannelPosition[]} channelPositions Channel positions to update\n   * @returns {Promise<Guild>}\n   * @example\n   * guild.setChannelPositions([{ channel: channelId, position: newChannelIndex }])\n   *   .then(guild => console.log(`Updated channel positions for ${guild}`))\n   *   .catch(console.error);\n   */\n  async setChannelPositions(channelPositions) {\n    const updatedChannels = channelPositions.map(r => ({\n      id: this.client.channels.resolveId(r.channel),\n      position: r.position,\n      lock_permissions: r.lockPermissions,\n      parent_id: typeof r.parent !== 'undefined' ? this.channels.resolveId(r.parent) : undefined,\n    }));\n\n    await this.client.api.guilds(this.id).channels.patch({ data: updatedChannels });\n    return this.client.actions.GuildChannelsPositionUpdate.handle({\n      guild_id: this.id,\n      channels: updatedChannels,\n    }).guild;\n  }\n\n  /**\n   * The data needed for updating a guild role's position\n   * @typedef {Object} GuildRolePosition\n   * @property {RoleResolvable} role The role's id\n   * @property {number} position The position to update\n   */\n\n  /**\n   * Batch-updates the guild's role positions\n   * @param {GuildRolePosition[]} rolePositions Role positions to update\n   * @returns {Promise<Guild>}\n   * @example\n   * guild.setRolePositions([{ role: roleId, position: updatedRoleIndex }])\n   *  .then(guild => console.log(`Role positions updated for ${guild}`))\n   *  .catch(console.error);\n   */\n  async setRolePositions(rolePositions) {\n    // Make sure rolePositions are prepared for API\n    rolePositions = rolePositions.map(o => ({\n      id: this.roles.resolveId(o.role),\n      position: o.position,\n    }));\n\n    // Call the API to update role positions\n    await this.client.api.guilds(this.id).roles.patch({\n      data: rolePositions,\n    });\n    return this.client.actions.GuildRolesPositionUpdate.handle({\n      guild_id: this.id,\n      roles: rolePositions,\n    }).guild;\n  }\n\n  /**\n   * Edits the guild's widget settings.\n   * @param {GuildWidgetSettingsData} settings The widget settings for the guild\n   * @param {string} [reason] Reason for changing the guild's widget settings\n   * @returns {Promise<Guild>}\n   */\n  async setWidgetSettings(settings, reason) {\n    await this.client.api.guilds(this.id).widget.patch({\n      data: {\n        enabled: settings.enabled,\n        channel_id: this.channels.resolveId(settings.channel),\n      },\n      reason,\n    });\n    return this;\n  }\n\n  /**\n   * Leaves the guild.\n   * @returns {Promise<Guild>}\n   * @example\n   * // Leave a guild\n   * guild.leave()\n   *   .then(g => console.log(`Left the guild ${g}`))\n   *   .catch(console.error);\n   */\n  async leave() {\n    if (this.ownerId === this.client.user.id) throw new Error('GUILD_OWNED');\n    await this.client.api.users('@me').guilds(this.id).delete();\n    return this.client.actions.GuildDelete.handle({ id: this.id }).guild;\n  }\n\n  /**\n   * Deletes the guild.\n   * @returns {Promise<Guild>}\n   * @example\n   * // Delete a guild\n   * guild.delete()\n   *   .then(g => console.log(`Deleted the guild ${g}`))\n   *   .catch(console.error);\n   */\n  async delete() {\n    await this.client.api.guilds(this.id).delete();\n    return this.client.actions.GuildDelete.handle({ id: this.id }).guild;\n  }\n\n  /**\n   * Whether this guild equals another guild. It compares all properties, so for most operations\n   * it is advisable to just compare `guild.id === guild2.id` as it is much faster and is often\n   * what most users need.\n   * @param {Guild} guild The guild to compare with\n   * @returns {boolean}\n   */\n  equals(guild) {\n    return (\n      guild &&\n      guild instanceof this.constructor &&\n      this.id === guild.id &&\n      this.available === guild.available &&\n      this.splash === guild.splash &&\n      this.discoverySplash === guild.discoverySplash &&\n      this.name === guild.name &&\n      this.memberCount === guild.memberCount &&\n      this.large === guild.large &&\n      this.icon === guild.icon &&\n      this.ownerId === guild.ownerId &&\n      this.verificationLevel === guild.verificationLevel &&\n      (this.features === guild.features ||\n        (this.features.length === guild.features.length &&\n          this.features.every((feat, i) => feat === guild.features[i])))\n    );\n  }\n\n  toJSON() {\n    const json = super.toJSON({\n      available: false,\n      createdTimestamp: true,\n      nameAcronym: true,\n      presences: false,\n      voiceStates: false,\n    });\n    json.iconURL = this.iconURL();\n    json.splashURL = this.splashURL();\n    json.discoverySplashURL = this.discoverySplashURL();\n    json.bannerURL = this.bannerURL();\n    return json;\n  }\n\n  /**\n   * The voice state adapter for this guild that can be used with @discordjs/voice to play audio in voice\n   * and stage channels.\n   * @type {Function}\n   * @readonly\n   */\n  get voiceAdapterCreator() {\n    return methods => {\n      this.client.voice.adapters.set(this.id, methods);\n      return {\n        sendPayload: data => {\n          if (this.shard.status !== Status.READY) return false;\n          this.shard.send(data);\n          return true;\n        },\n        destroy: () => {\n          this.client.voice.adapters.delete(this.id);\n        },\n      };\n    };\n  }\n\n  /**\n   * Creates a collection of this guild's roles, sorted by their position and ids.\n   * @returns {Collection<Snowflake, Role>}\n   * @private\n   */\n  _sortedRoles() {\n    return Util.discordSort(this.roles.cache);\n  }\n\n  /**\n   * Creates a collection of this guild's or a specific category's channels, sorted by their position and ids.\n   * @param {GuildChannel} [channel] Category to get the channels of\n   * @returns {Collection<Snowflake, GuildChannel>}\n   * @private\n   */\n  _sortedChannels(channel) {\n    const category = channel.type === ChannelTypes.GUILD_CATEGORY;\n    return Util.discordSort(\n      this.channels.cache.filter(\n        c =>\n          (['GUILD_TEXT', 'GUILD_NEWS', 'GUILD_STORE'].includes(channel.type)\n            ? ['GUILD_TEXT', 'GUILD_NEWS', 'GUILD_STORE'].includes(c.type)\n            : c.type === channel.type) &&\n          (category || c.parent === channel.parent),\n      ),\n    );\n  }\n}\n\nmodule.exports = Guild;\n\n/**\n * @external APIGuild\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object}\n */\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Integration = require('./Integration');\nconst StageInstance = require('./StageInstance');\nconst Sticker = require('./Sticker');\nconst Webhook = require('./Webhook');\nconst { OverwriteTypes, PartialTypes } = require('../util/Constants');\nconst Permissions = require('../util/Permissions');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\nconst Util = require('../util/Util');\n\n/**\n * The target type of an entry. Here are the available types:\n * * GUILD\n * * CHANNEL\n * * USER\n * * ROLE\n * * INVITE\n * * WEBHOOK\n * * EMOJI\n * * MESSAGE\n * * INTEGRATION\n * * STAGE_INSTANCE\n * * STICKER\n * * THREAD\n * @typedef {string} AuditLogTargetType\n */\n\n/**\n * Key mirror of all available audit log targets.\n * @name GuildAuditLogs.Targets\n * @type {Object<string, string>}\n */\nconst Targets = {\n  ALL: 'ALL',\n  GUILD: 'GUILD',\n  CHANNEL: 'CHANNEL',\n  USER: 'USER',\n  ROLE: 'ROLE',\n  INVITE: 'INVITE',\n  WEBHOOK: 'WEBHOOK',\n  EMOJI: 'EMOJI',\n  MESSAGE: 'MESSAGE',\n  INTEGRATION: 'INTEGRATION',\n  STAGE_INSTANCE: 'STAGE_INSTANCE',\n  STICKER: 'STICKER',\n  THREAD: 'THREAD',\n  UNKNOWN: 'UNKNOWN',\n};\n\n/**\n * The action of an entry. Here are the available actions:\n * * ALL: null\n * * GUILD_UPDATE: 1\n * * CHANNEL_CREATE: 10\n * * CHANNEL_UPDATE: 11\n * * CHANNEL_DELETE: 12\n * * CHANNEL_OVERWRITE_CREATE: 13\n * * CHANNEL_OVERWRITE_UPDATE: 14\n * * CHANNEL_OVERWRITE_DELETE: 15\n * * MEMBER_KICK: 20\n * * MEMBER_PRUNE: 21\n * * MEMBER_BAN_ADD: 22\n * * MEMBER_BAN_REMOVE: 23\n * * MEMBER_UPDATE: 24\n * * MEMBER_ROLE_UPDATE: 25\n * * MEMBER_MOVE: 26\n * * MEMBER_DISCONNECT: 27\n * * BOT_ADD: 28,\n * * ROLE_CREATE: 30\n * * ROLE_UPDATE: 31\n * * ROLE_DELETE: 32\n * * INVITE_CREATE: 40\n * * INVITE_UPDATE: 41\n * * INVITE_DELETE: 42\n * * WEBHOOK_CREATE: 50\n * * WEBHOOK_UPDATE: 51\n * * WEBHOOK_DELETE: 52\n * * EMOJI_CREATE: 60\n * * EMOJI_UPDATE: 61\n * * EMOJI_DELETE: 62\n * * MESSAGE_DELETE: 72\n * * MESSAGE_BULK_DELETE: 73\n * * MESSAGE_PIN: 74\n * * MESSAGE_UNPIN: 75\n * * INTEGRATION_CREATE: 80\n * * INTEGRATION_UPDATE: 81\n * * INTEGRATION_DELETE: 82\n * * STAGE_INSTANCE_CREATE: 83\n * * STAGE_INSTANCE_UPDATE: 84\n * * STAGE_INSTANCE_DELETE: 85\n * * STICKER_CREATE: 90\n * * STICKER_UPDATE: 91\n * * STICKER_DELETE: 92\n * * THREAD_CREATE: 110\n * * THREAD_UPDATE: 111\n * * THREAD_DELETE: 112\n * @typedef {?(number|string)} AuditLogAction\n * @see {@link https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events}\n */\n\n/**\n * All available actions keyed under their names to their numeric values.\n * @name GuildAuditLogs.Actions\n * @type {Object<string, number>}\n */\nconst Actions = {\n  ALL: null,\n  GUILD_UPDATE: 1,\n  CHANNEL_CREATE: 10,\n  CHANNEL_UPDATE: 11,\n  CHANNEL_DELETE: 12,\n  CHANNEL_OVERWRITE_CREATE: 13,\n  CHANNEL_OVERWRITE_UPDATE: 14,\n  CHANNEL_OVERWRITE_DELETE: 15,\n  MEMBER_KICK: 20,\n  MEMBER_PRUNE: 21,\n  MEMBER_BAN_ADD: 22,\n  MEMBER_BAN_REMOVE: 23,\n  MEMBER_UPDATE: 24,\n  MEMBER_ROLE_UPDATE: 25,\n  MEMBER_MOVE: 26,\n  MEMBER_DISCONNECT: 27,\n  BOT_ADD: 28,\n  ROLE_CREATE: 30,\n  ROLE_UPDATE: 31,\n  ROLE_DELETE: 32,\n  INVITE_CREATE: 40,\n  INVITE_UPDATE: 41,\n  INVITE_DELETE: 42,\n  WEBHOOK_CREATE: 50,\n  WEBHOOK_UPDATE: 51,\n  WEBHOOK_DELETE: 52,\n  EMOJI_CREATE: 60,\n  EMOJI_UPDATE: 61,\n  EMOJI_DELETE: 62,\n  MESSAGE_DELETE: 72,\n  MESSAGE_BULK_DELETE: 73,\n  MESSAGE_PIN: 74,\n  MESSAGE_UNPIN: 75,\n  INTEGRATION_CREATE: 80,\n  INTEGRATION_UPDATE: 81,\n  INTEGRATION_DELETE: 82,\n  STAGE_INSTANCE_CREATE: 83,\n  STAGE_INSTANCE_UPDATE: 84,\n  STAGE_INSTANCE_DELETE: 85,\n  STICKER_CREATE: 90,\n  STICKER_UPDATE: 91,\n  STICKER_DELETE: 92,\n  THREAD_CREATE: 110,\n  THREAD_UPDATE: 111,\n  THREAD_DELETE: 112,\n};\n\n/**\n * Audit logs entries are held in this class.\n */\nclass GuildAuditLogs {\n  constructor(guild, data) {\n    if (data.users) for (const user of data.users) guild.client.users._add(user);\n    if (data.threads) for (const thread of data.threads) guild.client.channels._add(thread, guild);\n    /**\n     * Cached webhooks\n     * @type {Collection<Snowflake, Webhook>}\n     * @private\n     */\n    this.webhooks = new Collection();\n    if (data.webhooks) {\n      for (const hook of data.webhooks) {\n        this.webhooks.set(hook.id, new Webhook(guild.client, hook));\n      }\n    }\n\n    /**\n     * Cached integrations\n     * @type {Collection<Snowflake, Integration>}\n     * @private\n     */\n    this.integrations = new Collection();\n    if (data.integrations) {\n      for (const integration of data.integrations) {\n        this.integrations.set(integration.id, new Integration(guild.client, integration, guild));\n      }\n    }\n\n    /**\n     * The entries for this guild's audit logs\n     * @type {Collection<Snowflake, GuildAuditLogsEntry>}\n     */\n    this.entries = new Collection();\n    for (const item of data.audit_log_entries) {\n      const entry = new GuildAuditLogsEntry(this, guild, item);\n      this.entries.set(entry.id, entry);\n    }\n  }\n\n  /**\n   * Handles possible promises for entry targets.\n   * @returns {Promise<GuildAuditLogs>}\n   */\n  static async build(...args) {\n    const logs = new GuildAuditLogs(...args);\n    await Promise.all(logs.entries.map(e => e.target));\n    return logs;\n  }\n\n  /**\n   * The target of an entry. It can be one of:\n   * * A guild\n   * * A channel\n   * * A user\n   * * A role\n   * * An invite\n   * * A webhook\n   * * An emoji\n   * * A message\n   * * An integration\n   * * A stage instance\n   * * A sticker\n   * * A thread\n   * * An object with an id key if target was deleted\n   * * An object where the keys represent either the new value or the old value\n   * @typedef {?(Object|Guild|Channel|User|Role|Invite|Webhook|GuildEmoji|Message|Integration|StageInstance|Sticker)}\n   * AuditLogEntryTarget\n   */\n\n  /**\n   * Finds the target type from the entry action.\n   * @param {AuditLogAction} target The action target\n   * @returns {AuditLogTargetType}\n   */\n  static targetType(target) {\n    if (target < 10) return Targets.GUILD;\n    if (target < 20) return Targets.CHANNEL;\n    if (target < 30) return Targets.USER;\n    if (target < 40) return Targets.ROLE;\n    if (target < 50) return Targets.INVITE;\n    if (target < 60) return Targets.WEBHOOK;\n    if (target < 70) return Targets.EMOJI;\n    if (target < 80) return Targets.MESSAGE;\n    if (target < 83) return Targets.INTEGRATION;\n    if (target < 86) return Targets.STAGE_INSTANCE;\n    if (target < 100) return Targets.STICKER;\n    if (target < 110) return Targets.UNKNOWN;\n    if (target < 120) return Targets.THREAD;\n    return Targets.UNKNOWN;\n  }\n\n  /**\n   * The action type of an entry, e.g. `CREATE`. Here are the available types:\n   * * CREATE\n   * * DELETE\n   * * UPDATE\n   * * ALL\n   * @typedef {string} AuditLogActionType\n   */\n\n  /**\n   * Finds the action type from the entry action.\n   * @param {AuditLogAction} action The action target\n   * @returns {AuditLogActionType}\n   */\n  static actionType(action) {\n    if (\n      [\n        Actions.CHANNEL_CREATE,\n        Actions.CHANNEL_OVERWRITE_CREATE,\n        Actions.MEMBER_BAN_REMOVE,\n        Actions.BOT_ADD,\n        Actions.ROLE_CREATE,\n        Actions.INVITE_CREATE,\n        Actions.WEBHOOK_CREATE,\n        Actions.EMOJI_CREATE,\n        Actions.MESSAGE_PIN,\n        Actions.INTEGRATION_CREATE,\n        Actions.STAGE_INSTANCE_CREATE,\n        Actions.STICKER_CREATE,\n        Actions.THREAD_CREATE,\n      ].includes(action)\n    ) {\n      return 'CREATE';\n    }\n\n    if (\n      [\n        Actions.CHANNEL_DELETE,\n        Actions.CHANNEL_OVERWRITE_DELETE,\n        Actions.MEMBER_KICK,\n        Actions.MEMBER_PRUNE,\n        Actions.MEMBER_BAN_ADD,\n        Actions.MEMBER_DISCONNECT,\n        Actions.ROLE_DELETE,\n        Actions.INVITE_DELETE,\n        Actions.WEBHOOK_DELETE,\n        Actions.EMOJI_DELETE,\n        Actions.MESSAGE_DELETE,\n        Actions.MESSAGE_BULK_DELETE,\n        Actions.MESSAGE_UNPIN,\n        Actions.INTEGRATION_DELETE,\n        Actions.STAGE_INSTANCE_DELETE,\n        Actions.STICKER_DELETE,\n        Actions.THREAD_DELETE,\n      ].includes(action)\n    ) {\n      return 'DELETE';\n    }\n\n    if (\n      [\n        Actions.GUILD_UPDATE,\n        Actions.CHANNEL_UPDATE,\n        Actions.CHANNEL_OVERWRITE_UPDATE,\n        Actions.MEMBER_UPDATE,\n        Actions.MEMBER_ROLE_UPDATE,\n        Actions.MEMBER_MOVE,\n        Actions.ROLE_UPDATE,\n        Actions.INVITE_UPDATE,\n        Actions.WEBHOOK_UPDATE,\n        Actions.EMOJI_UPDATE,\n        Actions.INTEGRATION_UPDATE,\n        Actions.STAGE_INSTANCE_UPDATE,\n        Actions.STICKER_UPDATE,\n        Actions.THREAD_UPDATE,\n      ].includes(action)\n    ) {\n      return 'UPDATE';\n    }\n\n    return 'ALL';\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n}\n\n/**\n * Audit logs entry.\n */\nclass GuildAuditLogsEntry {\n  constructor(logs, guild, data) {\n    const targetType = GuildAuditLogs.targetType(data.action_type);\n    /**\n     * The target type of this entry\n     * @type {AuditLogTargetType}\n     */\n    this.targetType = targetType;\n\n    /**\n     * The action type of this entry\n     * @type {AuditLogActionType}\n     */\n    this.actionType = GuildAuditLogs.actionType(data.action_type);\n\n    /**\n     * Specific action type of this entry in its string presentation\n     * @type {AuditLogAction}\n     */\n    this.action = Object.keys(Actions).find(k => Actions[k] === data.action_type);\n\n    /**\n     * The reason of this entry\n     * @type {?string}\n     */\n    this.reason = data.reason ?? null;\n\n    /**\n     * The user that executed this entry\n     * @type {?User}\n     */\n    this.executor = data.user_id\n      ? guild.client.options.partials.includes(PartialTypes.USER)\n        ? guild.client.users._add({ id: data.user_id })\n        : guild.client.users.cache.get(data.user_id)\n      : null;\n\n    /**\n     * An entry in the audit log representing a specific change.\n     * @typedef {Object} AuditLogChange\n     * @property {string} key The property that was changed, e.g. `nick` for nickname changes\n     * @property {*} [old] The old value of the change, e.g. for nicknames, the old nickname\n     * @property {*} [new] The new value of the change, e.g. for nicknames, the new nickname\n     */\n\n    /**\n     * Specific property changes\n     * @type {?AuditLogChange[]}\n     */\n    this.changes = data.changes?.map(c => ({ key: c.key, old: c.old_value, new: c.new_value })) ?? null;\n\n    /**\n     * The entry's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * Any extra data from the entry\n     * @type {?(Object|Role|GuildMember)}\n     */\n    this.extra = null;\n    switch (data.action_type) {\n      case Actions.MEMBER_PRUNE:\n        this.extra = {\n          removed: Number(data.options.members_removed),\n          days: Number(data.options.delete_member_days),\n        };\n        break;\n\n      case Actions.MEMBER_MOVE:\n      case Actions.MESSAGE_DELETE:\n      case Actions.MESSAGE_BULK_DELETE:\n        this.extra = {\n          channel: guild.channels.cache.get(data.options.channel_id) ?? { id: data.options.channel_id },\n          count: Number(data.options.count),\n        };\n        break;\n\n      case Actions.MESSAGE_PIN:\n      case Actions.MESSAGE_UNPIN:\n        this.extra = {\n          channel: guild.client.channels.cache.get(data.options.channel_id) ?? { id: data.options.channel_id },\n          messageId: data.options.message_id,\n        };\n        break;\n\n      case Actions.MEMBER_DISCONNECT:\n        this.extra = {\n          count: Number(data.options.count),\n        };\n        break;\n\n      case Actions.CHANNEL_OVERWRITE_CREATE:\n      case Actions.CHANNEL_OVERWRITE_UPDATE:\n      case Actions.CHANNEL_OVERWRITE_DELETE:\n        switch (Number(data.options.type)) {\n          case OverwriteTypes.role:\n            this.extra = guild.roles.cache.get(data.options.id) ?? {\n              id: data.options.id,\n              name: data.options.role_name,\n              type: OverwriteTypes[OverwriteTypes.role],\n            };\n            break;\n\n          case OverwriteTypes.member:\n            this.extra = guild.members.cache.get(data.options.id) ?? {\n              id: data.options.id,\n              type: OverwriteTypes[OverwriteTypes.member],\n            };\n            break;\n\n          default:\n            break;\n        }\n        break;\n\n      case Actions.STAGE_INSTANCE_CREATE:\n      case Actions.STAGE_INSTANCE_DELETE:\n      case Actions.STAGE_INSTANCE_UPDATE:\n        this.extra = {\n          channel: guild.client.channels.cache.get(data.options?.channel_id) ?? { id: data.options?.channel_id },\n        };\n        break;\n\n      default:\n        break;\n    }\n\n    /**\n     * The target of this entry\n     * @type {?AuditLogEntryTarget}\n     */\n    this.target = null;\n    if (targetType === Targets.UNKNOWN) {\n      this.target = this.changes.reduce((o, c) => {\n        o[c.key] = c.new ?? c.old;\n        return o;\n      }, {});\n      this.target.id = data.target_id;\n      // MEMBER_DISCONNECT and similar types do not provide a target_id.\n    } else if (targetType === Targets.USER && data.target_id) {\n      this.target = guild.client.options.partials.includes(PartialTypes.USER)\n        ? guild.client.users._add({ id: data.target_id })\n        : guild.client.users.cache.get(data.target_id);\n    } else if (targetType === Targets.GUILD) {\n      this.target = guild.client.guilds.cache.get(data.target_id);\n    } else if (targetType === Targets.WEBHOOK) {\n      this.target =\n        logs.webhooks.get(data.target_id) ??\n        new Webhook(\n          guild.client,\n          this.changes.reduce(\n            (o, c) => {\n              o[c.key] = c.new ?? c.old;\n              return o;\n            },\n            {\n              id: data.target_id,\n              guild_id: guild.id,\n            },\n          ),\n        );\n    } else if (targetType === Targets.INVITE) {\n      this.target = guild.members.fetch(guild.client.user.id).then(async me => {\n        if (me.permissions.has(Permissions.FLAGS.MANAGE_GUILD)) {\n          let change = this.changes.find(c => c.key === 'code');\n          change = change.new ?? change.old;\n          const invites = await guild.invites.fetch();\n          this.target = invites.find(i => i.code === change) ?? null;\n        } else {\n          this.target = this.changes.reduce((o, c) => {\n            o[c.key] = c.new ?? c.old;\n            return o;\n          }, {});\n        }\n      });\n    } else if (targetType === Targets.MESSAGE) {\n      // Discord sends a channel id for the MESSAGE_BULK_DELETE action type.\n      this.target =\n        data.action_type === Actions.MESSAGE_BULK_DELETE\n          ? guild.channels.cache.get(data.target_id) ?? { id: data.target_id }\n          : guild.client.users.cache.get(data.target_id);\n    } else if (targetType === Targets.INTEGRATION) {\n      this.target =\n        logs.integrations.get(data.target_id) ??\n        new Integration(\n          guild.client,\n          this.changes.reduce(\n            (o, c) => {\n              o[c.key] = c.new ?? c.old;\n              return o;\n            },\n            { id: data.target_id },\n          ),\n          guild,\n        );\n    } else if (targetType === Targets.CHANNEL || targetType === Targets.THREAD) {\n      this.target =\n        guild.channels.cache.get(data.target_id) ??\n        this.changes.reduce(\n          (o, c) => {\n            o[c.key] = c.new ?? c.old;\n            return o;\n          },\n          { id: data.target_id },\n        );\n    } else if (targetType === Targets.STAGE_INSTANCE) {\n      this.target =\n        guild.stageInstances.cache.get(data.target_id) ??\n        new StageInstance(\n          guild.client,\n          this.changes.reduce(\n            (o, c) => {\n              o[c.key] = c.new ?? c.old;\n              return o;\n            },\n            {\n              id: data.target_id,\n              channel_id: data.options?.channel_id,\n              guild_id: guild.id,\n            },\n          ),\n        );\n    } else if (targetType === Targets.STICKER) {\n      this.target =\n        guild.stickers.cache.get(data.target_id) ??\n        new Sticker(\n          guild.client,\n          this.changes.reduce(\n            (o, c) => {\n              o[c.key] = c.new ?? c.old;\n              return o;\n            },\n            { id: data.target_id },\n          ),\n        );\n    } else if (data.target_id) {\n      this.target = guild[`${targetType.toLowerCase()}s`]?.cache.get(data.target_id) ?? { id: data.target_id };\n    }\n  }\n\n  /**\n   * The timestamp this entry was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time this entry was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  toJSON() {\n    return Util.flatten(this, { createdTimestamp: true });\n  }\n}\n\nGuildAuditLogs.Actions = Actions;\nGuildAuditLogs.Targets = Targets;\nGuildAuditLogs.Entry = GuildAuditLogsEntry;\n\nmodule.exports = GuildAuditLogs;\n","'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a ban in a guild on Discord.\n * @extends {Base}\n */\nclass GuildBan extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIBanData} data The data for the ban\n   * @param {Guild} guild The guild in which the ban is\n   */\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild in which the ban is\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The user this ban applies to\n     * @type {User}\n     */\n    this.user = this.client.users._add(data.user, true);\n\n    if ('reason' in data) {\n      /**\n       * The reason for the ban\n       * @type {?string}\n       */\n      this.reason = data.reason;\n    }\n  }\n\n  /**\n   * Whether this GuildBan is partial. If the reason is not provided the value is null\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !('reason' in this);\n  }\n\n  /**\n   * Fetches this GuildBan.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<GuildBan>}\n   */\n  fetch(force = true) {\n    return this.guild.bans.fetch({ user: this.user, cache: true, force });\n  }\n}\n\nmodule.exports = GuildBan;\n\n/**\n * @external APIBanData\n * @see {@link https://discord.com/developers/docs/resources/guild#create-guild-ban-json-params}\n */\n","'use strict';\n\nconst Channel = require('./Channel');\nconst PermissionOverwrites = require('./PermissionOverwrites');\nconst { Error } = require('../errors');\nconst PermissionOverwriteManager = require('../managers/PermissionOverwriteManager');\nconst { ChannelTypes, VoiceBasedChannelTypes } = require('../util/Constants');\nconst Permissions = require('../util/Permissions');\nconst Util = require('../util/Util');\n\n/**\n * Represents a guild channel from any of the following:\n * - {@link TextChannel}\n * - {@link VoiceChannel}\n * - {@link CategoryChannel}\n * - {@link NewsChannel}\n * - {@link StoreChannel}\n * - {@link StageChannel}\n * @extends {Channel}\n * @abstract\n */\nclass GuildChannel extends Channel {\n  /**\n   * @param {Guild} guild The guild the guild channel is part of\n   * @param {APIChannel} data The data for the guild channel\n   * @param {Client} [client] A safety parameter for the client that instantiated this\n   * @param {boolean} [immediatePatch=true] Control variable for patching\n   */\n  constructor(guild, data, client, immediatePatch = true) {\n    super(guild?.client ?? client, data, false);\n\n    /**\n     * The guild the channel is in\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The id of the guild the channel is in\n     * @type {Snowflake}\n     */\n    this.guildId = guild?.id ?? data.guild_id;\n\n    this.parentId = this.parentId ?? null;\n    /**\n     * A manager of permission overwrites that belong to this channel\n     * @type {PermissionOverwriteManager}\n     */\n    this.permissionOverwrites = new PermissionOverwriteManager(this);\n\n    if (data && immediatePatch) this._patch(data);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('name' in data) {\n      /**\n       * The name of the guild channel\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    if ('position' in data) {\n      /**\n       * The raw position of the channel from discord\n       * @type {number}\n       */\n      this.rawPosition = data.position;\n    }\n\n    if ('guild_id' in data) {\n      this.guildId = data.guild_id;\n    }\n\n    if ('parent_id' in data) {\n      /**\n       * The id of the category parent of this channel\n       * @type {?Snowflake}\n       */\n      this.parentId = data.parent_id;\n    }\n\n    if ('permission_overwrites' in data) {\n      this.permissionOverwrites.cache.clear();\n      for (const overwrite of data.permission_overwrites) {\n        this.permissionOverwrites._add(overwrite);\n      }\n    }\n  }\n\n  _clone() {\n    const clone = super._clone();\n    clone.permissionOverwrites = new PermissionOverwriteManager(clone, this.permissionOverwrites.cache.values());\n    return clone;\n  }\n\n  /**\n   * The category parent of this channel\n   * @type {?CategoryChannel}\n   * @readonly\n   */\n  get parent() {\n    return this.guild.channels.resolve(this.parentId);\n  }\n\n  /**\n   * If the permissionOverwrites match the parent channel, null if no parent\n   * @type {?boolean}\n   * @readonly\n   */\n  get permissionsLocked() {\n    if (!this.parent) return null;\n\n    // Get all overwrites\n    const overwriteIds = new Set([\n      ...this.permissionOverwrites.cache.keys(),\n      ...this.parent.permissionOverwrites.cache.keys(),\n    ]);\n\n    // Compare all overwrites\n    return [...overwriteIds].every(key => {\n      const channelVal = this.permissionOverwrites.cache.get(key);\n      const parentVal = this.parent.permissionOverwrites.cache.get(key);\n\n      // Handle empty overwrite\n      if (\n        (!channelVal &&\n          parentVal.deny.bitfield === Permissions.defaultBit &&\n          parentVal.allow.bitfield === Permissions.defaultBit) ||\n        (!parentVal &&\n          channelVal.deny.bitfield === Permissions.defaultBit &&\n          channelVal.allow.bitfield === Permissions.defaultBit)\n      ) {\n        return true;\n      }\n\n      // Compare overwrites\n      return (\n        typeof channelVal !== 'undefined' &&\n        typeof parentVal !== 'undefined' &&\n        channelVal.deny.bitfield === parentVal.deny.bitfield &&\n        channelVal.allow.bitfield === parentVal.allow.bitfield\n      );\n    });\n  }\n\n  /**\n   * The position of the channel\n   * @type {number}\n   * @readonly\n   */\n  get position() {\n    const sorted = this.guild._sortedChannels(this);\n    return [...sorted.values()].indexOf(sorted.get(this.id));\n  }\n\n  /**\n   * Gets the overall set of permissions for a member or role in this channel, taking into account channel overwrites.\n   * @param {GuildMemberResolvable|RoleResolvable} memberOrRole The member or role to obtain the overall permissions for\n   * @returns {?Readonly<Permissions>}\n   */\n  permissionsFor(memberOrRole) {\n    const member = this.guild.members.resolve(memberOrRole);\n    if (member) return this.memberPermissions(member);\n    const role = this.guild.roles.resolve(memberOrRole);\n    return role && this.rolePermissions(role);\n  }\n\n  overwritesFor(member, verified = false, roles = null) {\n    if (!verified) member = this.guild.members.resolve(member);\n    if (!member) return [];\n\n    if (!roles) roles = member.roles.cache;\n    const roleOverwrites = [];\n    let memberOverwrites;\n    let everyoneOverwrites;\n\n    for (const overwrite of this.permissionOverwrites.cache.values()) {\n      if (overwrite.id === this.guild.id) {\n        everyoneOverwrites = overwrite;\n      } else if (roles.has(overwrite.id)) {\n        roleOverwrites.push(overwrite);\n      } else if (overwrite.id === member.id) {\n        memberOverwrites = overwrite;\n      }\n    }\n\n    return {\n      everyone: everyoneOverwrites,\n      roles: roleOverwrites,\n      member: memberOverwrites,\n    };\n  }\n\n  /**\n   * Gets the overall set of permissions for a member in this channel, taking into account channel overwrites.\n   * @param {GuildMember} member The member to obtain the overall permissions for\n   * @returns {Readonly<Permissions>}\n   * @private\n   */\n  memberPermissions(member) {\n    if (member.id === this.guild.ownerId) return new Permissions(Permissions.ALL).freeze();\n\n    const roles = member.roles.cache;\n    const permissions = new Permissions(roles.map(role => role.permissions));\n\n    if (permissions.has(Permissions.FLAGS.ADMINISTRATOR)) return new Permissions(Permissions.ALL).freeze();\n\n    const overwrites = this.overwritesFor(member, true, roles);\n\n    return permissions\n      .remove(overwrites.everyone?.deny ?? Permissions.defaultBit)\n      .add(overwrites.everyone?.allow ?? Permissions.defaultBit)\n      .remove(overwrites.roles.length > 0 ? overwrites.roles.map(role => role.deny) : Permissions.defaultBit)\n      .add(overwrites.roles.length > 0 ? overwrites.roles.map(role => role.allow) : Permissions.defaultBit)\n      .remove(overwrites.member?.deny ?? Permissions.defaultBit)\n      .add(overwrites.member?.allow ?? Permissions.defaultBit)\n      .freeze();\n  }\n\n  /**\n   * Gets the overall set of permissions for a role in this channel, taking into account channel overwrites.\n   * @param {Role} role The role to obtain the overall permissions for\n   * @returns {Readonly<Permissions>}\n   * @private\n   */\n  rolePermissions(role) {\n    if (role.permissions.has(Permissions.FLAGS.ADMINISTRATOR)) return new Permissions(Permissions.ALL).freeze();\n\n    const everyoneOverwrites = this.permissionOverwrites.cache.get(this.guild.id);\n    const roleOverwrites = this.permissionOverwrites.cache.get(role.id);\n\n    return role.permissions\n      .remove(everyoneOverwrites?.deny ?? Permissions.defaultBit)\n      .add(everyoneOverwrites?.allow ?? Permissions.defaultBit)\n      .remove(roleOverwrites?.deny ?? Permissions.defaultBit)\n      .add(roleOverwrites?.allow ?? Permissions.defaultBit)\n      .freeze();\n  }\n\n  /**\n   * Locks in the permission overwrites from the parent channel.\n   * @returns {Promise<GuildChannel>}\n   */\n  lockPermissions() {\n    if (!this.parent) return Promise.reject(new Error('GUILD_CHANNEL_ORPHAN'));\n    const permissionOverwrites = this.parent.permissionOverwrites.cache.map(overwrite => overwrite.toJSON());\n    return this.edit({ permissionOverwrites });\n  }\n\n  /**\n   * A collection of cached members of this channel, mapped by their ids.\n   * Members that can view this channel, if the channel is text based.\n   * Members in the channel, if the channel is voice based.\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    return this.guild.members.cache.filter(m => this.permissionsFor(m).has(Permissions.FLAGS.VIEW_CHANNEL, false));\n  }\n\n  /**\n   * The data for a guild channel.\n   * @typedef {Object} ChannelData\n   * @property {string} [name] The name of the channel\n   * @property {ChannelType} [type] The type of the the channel (only conversion between text and news is supported)\n   * @property {number} [position] The position of the channel\n   * @property {string} [topic] The topic of the text channel\n   * @property {boolean} [nsfw] Whether the channel is NSFW\n   * @property {number} [bitrate] The bitrate of the voice channel\n   * @property {number} [userLimit] The user limit of the voice channel\n   * @property {?CategoryChannelResolvable} [parent] The parent of the channel\n   * @property {boolean} [lockPermissions]\n   * Lock the permissions of the channel to what the parent's permissions are\n   * @property {OverwriteResolvable[]|Collection<Snowflake, OverwriteResolvable>} [permissionOverwrites]\n   * Permission overwrites for the channel\n   * @property {number} [rateLimitPerUser] The ratelimit per user for the channel in seconds\n   * @property {ThreadAutoArchiveDuration} [defaultAutoArchiveDuration]\n   * The default auto archive duration for all new threads in this channel\n   * @property {?string} [rtcRegion] The RTC region of the channel\n   */\n\n  /**\n   * Edits the channel.\n   * @param {ChannelData} data The new data for the channel\n   * @param {string} [reason] Reason for editing this channel\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Edit a channel\n   * channel.edit({ name: 'new-channel' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async edit(data, reason) {\n    if (data.parent) data.parent = this.client.channels.resolveId(data.parent);\n\n    if (typeof data.position !== 'undefined') {\n      const updatedChannels = await Util.setPosition(\n        this,\n        data.position,\n        false,\n        this.guild._sortedChannels(this),\n        this.client.api.guilds(this.guild.id).channels,\n        reason,\n      );\n      this.client.actions.GuildChannelsPositionUpdate.handle({\n        guild_id: this.guild.id,\n        channels: updatedChannels,\n      });\n    }\n\n    let permission_overwrites;\n\n    if (data.permissionOverwrites) {\n      permission_overwrites = data.permissionOverwrites.map(o => PermissionOverwrites.resolve(o, this.guild));\n    }\n\n    if (data.lockPermissions) {\n      if (data.parent) {\n        const newParent = this.guild.channels.resolve(data.parent);\n        if (newParent?.type === 'GUILD_CATEGORY') {\n          permission_overwrites = newParent.permissionOverwrites.cache.map(o =>\n            PermissionOverwrites.resolve(o, this.guild),\n          );\n        }\n      } else if (this.parent) {\n        permission_overwrites = this.parent.permissionOverwrites.cache.map(o =>\n          PermissionOverwrites.resolve(o, this.guild),\n        );\n      }\n    }\n\n    const newData = await this.client.api.channels(this.id).patch({\n      data: {\n        name: (data.name ?? this.name).trim(),\n        type: ChannelTypes[data.type],\n        topic: data.topic,\n        nsfw: data.nsfw,\n        bitrate: data.bitrate ?? this.bitrate,\n        user_limit: data.userLimit ?? this.userLimit,\n        rtc_region: data.rtcRegion ?? this.rtcRegion,\n        parent_id: data.parent,\n        lock_permissions: data.lockPermissions,\n        rate_limit_per_user: data.rateLimitPerUser,\n        default_auto_archive_duration: data.defaultAutoArchiveDuration,\n        permission_overwrites,\n      },\n      reason,\n    });\n\n    return this.client.actions.ChannelUpdate.handle(newData).updated;\n  }\n\n  /**\n   * Sets a new name for the guild channel.\n   * @param {string} name The new name for the guild channel\n   * @param {string} [reason] Reason for changing the guild channel's name\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel name\n   * channel.setName('not_general')\n   *   .then(newChannel => console.log(`Channel's new name is ${newChannel.name}`))\n   *   .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name }, reason);\n  }\n\n  /**\n   * Options used to set parent of a channel.\n   * @typedef {Object} SetParentOptions\n   * @property {boolean} [lockPermissions=true] Whether to lock the permissions to what the parent's permissions are\n   * @property {string} [reason] The reason for modifying the parent of the channel\n   */\n\n  /**\n   * Sets the parent of this channel.\n   * @param {?CategoryChannelResolvable} channel The category channel to set as the parent\n   * @param {SetParentOptions} [options={}] The options for setting the parent\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Add a parent to a channel\n   * message.channel.setParent('355908108431917066', { lockPermissions: false })\n   *   .then(channel => console.log(`New parent of ${message.channel.name}: ${channel.name}`))\n   *   .catch(console.error);\n   */\n  setParent(channel, { lockPermissions = true, reason } = {}) {\n    return this.edit(\n      {\n        parent: channel ?? null,\n        lockPermissions,\n      },\n      reason,\n    );\n  }\n\n  /**\n   * Options used to set position of a channel.\n   * @typedef {Object} SetChannelPositionOptions\n   * @param {boolean} [relative=false] Whether or not to change the position relative to its current value\n   * @param {string} [reason] The reason for changing the position\n   */\n\n  /**\n   * Sets a new position for the guild channel.\n   * @param {number} position The new position for the guild channel\n   * @param {SetChannelPositionOptions} [options] Options for setting position\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel position\n   * channel.setPosition(2)\n   *   .then(newChannel => console.log(`Channel's new position is ${newChannel.position}`))\n   *   .catch(console.error);\n   */\n  async setPosition(position, { relative, reason } = {}) {\n    const updatedChannels = await Util.setPosition(\n      this,\n      position,\n      relative,\n      this.guild._sortedChannels(this),\n      this.client.api.guilds(this.guild.id).channels,\n      reason,\n    );\n    this.client.actions.GuildChannelsPositionUpdate.handle({\n      guild_id: this.guild.id,\n      channels: updatedChannels,\n    });\n    return this;\n  }\n\n  /**\n   * Data that can be resolved to an Application. This can be:\n   * * An Application\n   * * An Activity with associated Application\n   * * A Snowflake\n   * @typedef {Application|Snowflake} ApplicationResolvable\n   */\n\n  /**\n   * Options used to clone a guild channel.\n   * @typedef {GuildChannelCreateOptions} GuildChannelCloneOptions\n   * @property {string} [name=this.name] Name of the new channel\n   */\n\n  /**\n   * Clones this channel.\n   * @param {GuildChannelCloneOptions} [options] The options for cloning this channel\n   * @returns {Promise<GuildChannel>}\n   */\n  clone(options = {}) {\n    return this.guild.channels.create(options.name ?? this.name, {\n      permissionOverwrites: this.permissionOverwrites.cache,\n      topic: this.topic,\n      type: this.type,\n      nsfw: this.nsfw,\n      parent: this.parent,\n      bitrate: this.bitrate,\n      userLimit: this.userLimit,\n      rateLimitPerUser: this.rateLimitPerUser,\n      position: this.position,\n      reason: null,\n      ...options,\n    });\n  }\n\n  /**\n   * Checks if this channel has the same type, topic, position, name, overwrites, and id as another channel.\n   * In most cases, a simple `channel.id === channel2.id` will do, and is much faster too.\n   * @param {GuildChannel} channel Channel to compare with\n   * @returns {boolean}\n   */\n  equals(channel) {\n    let equal =\n      channel &&\n      this.id === channel.id &&\n      this.type === channel.type &&\n      this.topic === channel.topic &&\n      this.position === channel.position &&\n      this.name === channel.name;\n\n    if (equal) {\n      if (this.permissionOverwrites && channel.permissionOverwrites) {\n        equal = this.permissionOverwrites.cache.equals(channel.permissionOverwrites.cache);\n      } else {\n        equal = !this.permissionOverwrites && !channel.permissionOverwrites;\n      }\n    }\n\n    return equal;\n  }\n\n  /**\n   * Whether the channel is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    return (\n      this.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_CHANNELS, false) &&\n      this.guild.rulesChannelId !== this.id &&\n      this.guild.publicUpdatesChannelId !== this.id\n    );\n  }\n\n  /**\n   * Whether the channel is manageable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    if (this.client.user.id === this.guild.ownerId) return true;\n    if (VoiceBasedChannelTypes.includes(this.type)) {\n      if (!this.permissionsFor(this.client.user).has(Permissions.FLAGS.CONNECT, false)) {\n        return false;\n      }\n    } else if (!this.viewable) {\n      return false;\n    }\n    return this.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_CHANNELS, false);\n  }\n\n  /**\n   * Whether the channel is viewable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get viewable() {\n    if (this.client.user.id === this.guild.ownerId) return true;\n    const permissions = this.permissionsFor(this.client.user);\n    if (!permissions) return false;\n    return permissions.has(Permissions.FLAGS.VIEW_CHANNEL, false);\n  }\n\n  /**\n   * Deletes this channel.\n   * @param {string} [reason] Reason for deleting this channel\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Delete the channel\n   * channel.delete('making room for new channels')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.client.api.channels(this.id).delete({ reason });\n    return this;\n  }\n}\n\nmodule.exports = GuildChannel;\n","'use strict';\n\nconst BaseGuildEmoji = require('./BaseGuildEmoji');\nconst { Error } = require('../errors');\nconst GuildEmojiRoleManager = require('../managers/GuildEmojiRoleManager');\nconst Permissions = require('../util/Permissions');\n\n/**\n * Represents a custom emoji.\n * @extends {BaseGuildEmoji}\n */\nclass GuildEmoji extends BaseGuildEmoji {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIEmoji} data The data for the guild emoji\n   * @param {Guild} guild The guild the guild emoji is part of\n   */\n  constructor(client, data, guild) {\n    super(client, data, guild);\n\n    /**\n     * The user who created this emoji\n     * @type {?User}\n     */\n    this.author = null;\n\n    /**\n     * Array of role ids this emoji is active for\n     * @name GuildEmoji#_roles\n     * @type {Snowflake[]}\n     * @private\n     */\n    Object.defineProperty(this, '_roles', { value: [], writable: true });\n  }\n\n  /**\n   * The guild this emoji is part of\n   * @type {Guild}\n   * @name GuildEmoji#guild\n   */\n\n  _clone() {\n    const clone = super._clone();\n    clone._roles = this._roles.slice();\n    return clone;\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if (data.user) this.author = this.client.users._add(data.user);\n    if (data.roles) this._roles = data.roles;\n  }\n\n  /**\n   * Whether the emoji is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    if (!this.guild.me) throw new Error('GUILD_UNCACHED_ME');\n    return !this.managed && this.guild.me.permissions.has(Permissions.FLAGS.MANAGE_EMOJIS_AND_STICKERS);\n  }\n\n  /**\n   * A manager for roles this emoji is active for.\n   * @type {GuildEmojiRoleManager}\n   * @readonly\n   */\n  get roles() {\n    return new GuildEmojiRoleManager(this);\n  }\n\n  /**\n   * Fetches the author for this emoji\n   * @returns {Promise<User>}\n   */\n  async fetchAuthor() {\n    if (this.managed) {\n      throw new Error('EMOJI_MANAGED');\n    } else {\n      if (!this.guild.me) throw new Error('GUILD_UNCACHED_ME');\n      if (!this.guild.me.permissions.has(Permissions.FLAGS.MANAGE_EMOJIS_AND_STICKERS)) {\n        throw new Error('MISSING_MANAGE_EMOJIS_AND_STICKERS_PERMISSION', this.guild);\n      }\n    }\n    const data = await this.client.api.guilds(this.guild.id).emojis(this.id).get();\n    this._patch(data);\n    return this.author;\n  }\n\n  /**\n   * Data for editing an emoji.\n   * @typedef {Object} GuildEmojiEditData\n   * @property {string} [name] The name of the emoji\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] Roles to restrict emoji to\n   */\n\n  /**\n   * Edits the emoji.\n   * @param {GuildEmojiEditData} data The new data for the emoji\n   * @param {string} [reason] Reason for editing this emoji\n   * @returns {Promise<GuildEmoji>}\n   * @example\n   * // Edit an emoji\n   * emoji.edit({ name: 'newemoji' })\n   *   .then(e => console.log(`Edited emoji ${e}`))\n   *   .catch(console.error);\n   */\n  async edit(data, reason) {\n    const roles = data.roles?.map(r => r.id ?? r);\n    const newData = await this.client.api\n      .guilds(this.guild.id)\n      .emojis(this.id)\n      .patch({\n        data: {\n          name: data.name,\n          roles,\n        },\n        reason,\n      });\n    const clone = this._clone();\n    clone._patch(newData);\n    return clone;\n  }\n\n  /**\n   * Sets the name of the emoji.\n   * @param {string} name The new name for the emoji\n   * @param {string} [reason] Reason for changing the emoji's name\n   * @returns {Promise<GuildEmoji>}\n   */\n  setName(name, reason) {\n    return this.edit({ name }, reason);\n  }\n\n  /**\n   * Deletes the emoji.\n   * @param {string} [reason] Reason for deleting the emoji\n   * @returns {Promise<GuildEmoji>}\n   */\n  async delete(reason) {\n    await this.client.api.guilds(this.guild.id).emojis(this.id).delete({ reason });\n    return this;\n  }\n\n  /**\n   * Whether this emoji is the same as another one.\n   * @param {GuildEmoji|APIEmoji} other The emoji to compare it to\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (other instanceof GuildEmoji) {\n      return (\n        other.id === this.id &&\n        other.name === this.name &&\n        other.managed === this.managed &&\n        other.available === this.available &&\n        other.requiresColons === this.requiresColons &&\n        other.roles.cache.size === this.roles.cache.size &&\n        other.roles.cache.every(role => this.roles.cache.has(role.id))\n      );\n    } else {\n      return (\n        other.id === this.id &&\n        other.name === this.name &&\n        other.roles.length === this.roles.cache.size &&\n        other.roles.every(role => this.roles.cache.has(role))\n      );\n    }\n  }\n}\n\nmodule.exports = GuildEmoji;\n","'use strict';\n\nconst Base = require('./Base');\nconst VoiceState = require('./VoiceState');\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst { Error } = require('../errors');\nconst GuildMemberRoleManager = require('../managers/GuildMemberRoleManager');\nconst Permissions = require('../util/Permissions');\n\n/**\n * Represents a member of a guild on Discord.\n * @implements {TextBasedChannel}\n * @extends {Base}\n */\nclass GuildMember extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIGuildMember} data The data for the guild member\n   * @param {Guild} guild The guild the member is part of\n   */\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild that this member is part of\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The timestamp the member joined the guild at\n     * @type {?number}\n     */\n    this.joinedTimestamp = null;\n\n    /**\n     * The timestamp of when the member used their Nitro boost on the guild, if it was used\n     * @type {?number}\n     */\n    this.premiumSinceTimestamp = null;\n\n    /**\n     * Whether the member has been removed from the guild\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    /**\n     * The nickname of this member, if they have one\n     * @type {?string}\n     */\n    this.nickname = null;\n\n    /**\n     * Whether this member has yet to pass the guild's membership gate\n     * @type {boolean}\n     */\n    this.pending = false;\n\n    this._roles = [];\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    if ('user' in data) {\n      /**\n       * The user that this guild member instance represents\n       * @type {?User}\n       */\n      this.user = this.client.users._add(data.user, true);\n    }\n\n    if ('nick' in data) this.nickname = data.nick;\n    if ('joined_at' in data) this.joinedTimestamp = new Date(data.joined_at).getTime();\n    if ('premium_since' in data) {\n      this.premiumSinceTimestamp = data.premium_since ? new Date(data.premium_since).getTime() : null;\n    }\n    if ('roles' in data) this._roles = data.roles;\n    this.pending = data.pending ?? false;\n  }\n\n  _clone() {\n    const clone = super._clone();\n    clone._roles = this._roles.slice();\n    return clone;\n  }\n\n  /**\n   * Whether this GuildMember is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !this.joinedTimestamp;\n  }\n\n  /**\n   * A manager for the roles belonging to this member\n   * @type {GuildMemberRoleManager}\n   * @readonly\n   */\n  get roles() {\n    return new GuildMemberRoleManager(this);\n  }\n\n  /**\n   * The voice state of this member\n   * @type {VoiceState}\n   * @readonly\n   */\n  get voice() {\n    return this.guild.voiceStates.cache.get(this.id) ?? new VoiceState(this.guild, { user_id: this.id });\n  }\n\n  /**\n   * The time this member joined the guild\n   * @type {?Date}\n   * @readonly\n   */\n  get joinedAt() {\n    return this.joinedTimestamp ? new Date(this.joinedTimestamp) : null;\n  }\n\n  /**\n   * The time of when the member used their Nitro boost on the guild, if it was used\n   * @type {?Date}\n   * @readonly\n   */\n  get premiumSince() {\n    return this.premiumSinceTimestamp ? new Date(this.premiumSinceTimestamp) : null;\n  }\n\n  /**\n   * The presence of this guild member\n   * @type {?Presence}\n   * @readonly\n   */\n  get presence() {\n    return this.guild.presences.resolve(this.id);\n  }\n\n  /**\n   * The displayed color of this member in base 10\n   * @type {number}\n   * @readonly\n   */\n  get displayColor() {\n    return this.roles.color?.color ?? 0;\n  }\n\n  /**\n   * The displayed color of this member in hexadecimal\n   * @type {string}\n   * @readonly\n   */\n  get displayHexColor() {\n    return this.roles.color?.hexColor ?? '#000000';\n  }\n\n  /**\n   * The member's id\n   * @type {Snowflake}\n   * @readonly\n   */\n  get id() {\n    return this.user.id;\n  }\n\n  /**\n   * The nickname of this member, or their username if they don't have one\n   * @type {?string}\n   * @readonly\n   */\n  get displayName() {\n    return this.nickname ?? this.user.username;\n  }\n\n  /**\n   * The overall set of permissions for this member, taking only roles and owner status into account\n   * @type {Readonly<Permissions>}\n   * @readonly\n   */\n  get permissions() {\n    if (this.user.id === this.guild.ownerId) return new Permissions(Permissions.ALL).freeze();\n    return new Permissions(this.roles.cache.map(role => role.permissions)).freeze();\n  }\n\n  /**\n   * Whether the client user is above this user in the hierarchy, according to role position and guild ownership.\n   * This is a prerequisite for many moderative actions.\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    if (this.user.id === this.guild.ownerId) return false;\n    if (this.user.id === this.client.user.id) return false;\n    if (this.client.user.id === this.guild.ownerId) return true;\n    if (!this.guild.me) throw new Error('GUILD_UNCACHED_ME');\n    return this.guild.me.roles.highest.comparePositionTo(this.roles.highest) > 0;\n  }\n\n  /**\n   * Whether this member is kickable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get kickable() {\n    return this.manageable && this.guild.me.permissions.has(Permissions.FLAGS.KICK_MEMBERS);\n  }\n\n  /**\n   * Whether this member is bannable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get bannable() {\n    return this.manageable && this.guild.me.permissions.has(Permissions.FLAGS.BAN_MEMBERS);\n  }\n\n  /**\n   * Returns `channel.permissionsFor(guildMember)`. Returns permissions for a member in a guild channel,\n   * taking into account roles and permission overwrites.\n   * @param {GuildChannelResolvable} channel The guild channel to use as context\n   * @returns {Readonly<Permissions>}\n   */\n  permissionsIn(channel) {\n    channel = this.guild.channels.resolve(channel);\n    if (!channel) throw new Error('GUILD_CHANNEL_RESOLVE');\n    return channel.permissionsFor(this);\n  }\n\n  /**\n   * The data for editing a guild member.\n   * @typedef {Object} GuildMemberEditData\n   * @property {?string} [nick] The nickname to set for the member\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] The roles or role ids to apply\n   * @property {boolean} [mute] Whether or not the member should be muted\n   * @property {boolean} [deaf] Whether or not the member should be deafened\n   * @property {GuildVoiceChannelResolvable|null} [channel] Channel to move the member to\n   * (if they are connected to voice), or `null` if you want to disconnect them from voice\n   */\n\n  /**\n   * Edits this member.\n   * @param {GuildMemberEditData} data The data to edit the member with\n   * @param {string} [reason] Reason for editing this user\n   * @returns {Promise<GuildMember>}\n   */\n  edit(data, reason) {\n    return this.guild.members.edit(this, data, reason);\n  }\n\n  /**\n   * Sets the nickname for this member.\n   * @param {?string} nick The nickname for the guild member, or `null` if you want to reset their nickname\n   * @param {string} [reason] Reason for setting the nickname\n   * @returns {Promise<GuildMember>}\n   */\n  setNickname(nick, reason) {\n    return this.edit({ nick }, reason);\n  }\n\n  /**\n   * Creates a DM channel between the client and this member.\n   * @returns {Promise<DMChannel>}\n   */\n  createDM() {\n    return this.user.createDM();\n  }\n\n  /**\n   * Deletes any DMs with this member.\n   * @returns {Promise<DMChannel>}\n   */\n  deleteDM() {\n    return this.user.deleteDM();\n  }\n\n  /**\n   * Kicks this member from the guild.\n   * @param {string} [reason] Reason for kicking user\n   * @returns {Promise<GuildMember>}\n   */\n  kick(reason) {\n    return this.guild.members.kick(this, reason);\n  }\n\n  /**\n   * Bans this guild member.\n   * @param {BanOptions} [options] Options for the ban\n   * @returns {Promise<GuildMember>}\n   * @example\n   * // ban a guild member\n   * guildMember.ban({ days: 7, reason: 'They deserved it' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  ban(options) {\n    return this.guild.members.ban(this, options);\n  }\n\n  /**\n   * Fetches this GuildMember.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<GuildMember>}\n   */\n  fetch(force = true) {\n    return this.guild.members.fetch({ user: this.id, cache: true, force });\n  }\n\n  /**\n   * Whether this guild member equals another guild member. It compares all properties, so for most\n   * comparison it is advisable to just compare `member.id === member2.id` as it is significantly faster\n   * and is often what most users need.\n   * @param {GuildMember} member The member to compare with\n   * @returns {boolean}\n   */\n  equals(member) {\n    return (\n      member instanceof this.constructor &&\n      this.id === member.id &&\n      this.partial === member.partial &&\n      this.guild.id === member.guild.id &&\n      this.joinedTimestamp === member.joinedTimestamp &&\n      this.nickname === member.nickname &&\n      this.pending === member.pending &&\n      (this._roles === member._roles ||\n        (this._roles.length === member._roles.length && this._roles.every((role, i) => role === member._roles[i])))\n    );\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the user's mention instead of the GuildMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <@123456789012345678>!\n   * console.log(`Hello from ${member}!`);\n   */\n  toString() {\n    return `<@${this.nickname ? '!' : ''}${this.user.id}>`;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      guild: 'guildId',\n      user: 'userId',\n      displayName: true,\n      roles: true,\n    });\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  send() {}\n}\n\nTextBasedChannel.applyToClass(GuildMember);\n\nmodule.exports = GuildMember;\n\n/**\n * @external APIGuildMember\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-member-object}\n */\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst GuildPreviewEmoji = require('./GuildPreviewEmoji');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Represents the data about the guild any bot can preview, connected to the specified guild.\n * @extends {Base}\n */\nclass GuildPreview extends Base {\n  constructor(client, data) {\n    super(client);\n\n    if (!data) return;\n\n    this._patch(data);\n  }\n\n  /**\n   * Builds the guild with the provided data.\n   * @param {*} data The raw data of the guild\n   * @private\n   */\n  _patch(data) {\n    /**\n     * The id of this guild\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of this guild\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The icon of this guild\n     * @type {?string}\n     */\n    this.icon = data.icon;\n\n    /**\n     * The splash icon of this guild\n     * @type {?string}\n     */\n    this.splash = data.splash;\n\n    /**\n     * The discovery splash icon of this guild\n     * @type {?string}\n     */\n    this.discoverySplash = data.discovery_splash;\n\n    /**\n     * An array of enabled guild features\n     * @type {Features[]}\n     */\n    this.features = data.features;\n\n    /**\n     * The approximate count of members in this guild\n     * @type {number}\n     */\n    this.approximateMemberCount = data.approximate_member_count;\n\n    /**\n     * The approximate count of online members in this guild\n     * @type {number}\n     */\n    this.approximatePresenceCount = data.approximate_presence_count;\n\n    /**\n     * The description for this guild\n     * @type {?string}\n     */\n    this.description = data.description ?? null;\n\n    if (!this.emojis) {\n      /**\n       * Collection of emojis belonging to this guild\n       * @type {Collection<Snowflake, GuildPreviewEmoji>}\n       */\n      this.emojis = new Collection();\n    } else {\n      this.emojis.clear();\n    }\n    for (const emoji of data.emojis) {\n      this.emojis.set(emoji.id, new GuildPreviewEmoji(this.client, emoji, this));\n    }\n  }\n  /**\n   * The timestamp this guild was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time this guild was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The URL to this guild's splash.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  splashURL({ format, size } = {}) {\n    return this.splash && this.client.rest.cdn.Splash(this.id, this.splash, format, size);\n  }\n\n  /**\n   * The URL to this guild's discovery splash.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  discoverySplashURL({ format, size } = {}) {\n    return this.discoverySplash && this.client.rest.cdn.DiscoverySplash(this.id, this.discoverySplash, format, size);\n  }\n\n  /**\n   * The URL to this guild's icon.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  iconURL({ format, size, dynamic } = {}) {\n    return this.icon && this.client.rest.cdn.Icon(this.id, this.icon, format, size, dynamic);\n  }\n\n  /**\n   * Fetches this guild.\n   * @returns {Promise<GuildPreview>}\n   */\n  async fetch() {\n    const data = await this.client.api.guilds(this.id).preview.get();\n    this._patch(data);\n    return this;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the guild's name instead of the Guild object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from My Guild!\n   * console.log(`Hello from ${previewGuild}!`);\n   */\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.iconURL = this.iconURL();\n    json.splashURL = this.splashURL();\n    return json;\n  }\n}\n\nmodule.exports = GuildPreview;\n","'use strict';\n\nconst BaseGuildEmoji = require('./BaseGuildEmoji');\n\n/**\n * Represents an instance of an emoji belonging to a public guild obtained through Discord's preview endpoint.\n * @extends {BaseGuildEmoji}\n */\nclass GuildPreviewEmoji extends BaseGuildEmoji {\n  /**\n   * The public guild this emoji is part of\n   * @type {GuildPreview}\n   * @name GuildPreviewEmoji#guild\n   */\n\n  constructor(client, data, guild) {\n    super(client, data, guild);\n\n    /**\n     * The roles this emoji is active for\n     * @type {Snowflake[]}\n     */\n    this.roles = data.roles;\n  }\n}\n\nmodule.exports = GuildPreviewEmoji;\n","'use strict';\n\nconst Base = require('./Base');\nconst { Events } = require('../util/Constants');\nconst DataResolver = require('../util/DataResolver');\n\n/**\n * Represents the template for a guild.\n * @extends {Base}\n */\nclass GuildTemplate extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIGuildTemplate} data The raw data for the template\n   */\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  /**\n   * Builds or updates the template with the provided data.\n   * @param {APIGuildTemplate} data The raw data for the template\n   * @returns {GuildTemplate}\n   * @private\n   */\n  _patch(data) {\n    /**\n     * The unique code of this template\n     * @type {string}\n     */\n    this.code = data.code;\n\n    /**\n     * The name of this template\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The description of this template\n     * @type {?string}\n     */\n    this.description = data.description;\n\n    /**\n     * The amount of times this template has been used\n     * @type {number}\n     */\n    this.usageCount = data.usage_count;\n\n    /**\n     * The id of the user that created this template\n     * @type {Snowflake}\n     */\n    this.creatorId = data.creator_id;\n\n    /**\n     * The user that created this template\n     * @type {User}\n     */\n    this.creator = this.client.users._add(data.creator);\n\n    /**\n     * The time of when this template was created at\n     * @type {Date}\n     */\n    this.createdAt = new Date(data.created_at);\n\n    /**\n     * The time of when this template was last synced to the guild\n     * @type {Date}\n     */\n    this.updatedAt = new Date(data.updated_at);\n\n    /**\n     * The id of the guild that this template belongs to\n     * @type {Snowflake}\n     */\n    this.guildId = data.source_guild_id;\n\n    /**\n     * The data of the guild that this template would create\n     * @type {APIGuild}\n     */\n    this.serializedGuild = data.serialized_source_guild;\n\n    /**\n     * Whether this template has unsynced changes\n     * @type {?boolean}\n     */\n    this.unSynced = 'is_dirty' in data ? Boolean(data.is_dirty) : null;\n\n    return this;\n  }\n\n  /**\n   * Creates a guild based from this template.\n   * <warn>This is only available to bots in fewer than 10 guilds.</warn>\n   * @param {string} name The name of the guild\n   * @param {BufferResolvable|Base64Resolvable} [icon] The icon for the guild\n   * @returns {Promise<Guild>}\n   */\n  async createGuild(name, icon) {\n    const { client } = this;\n    const data = await client.api.guilds.templates(this.code).post({\n      data: {\n        name,\n        icon: await DataResolver.resolveImage(icon),\n      },\n    });\n\n    if (client.guilds.cache.has(data.id)) return client.guilds.cache.get(data.id);\n\n    return new Promise(resolve => {\n      const resolveGuild = guild => {\n        client.off(Events.GUILD_CREATE, handleGuild);\n        client.decrementMaxListeners();\n        resolve(guild);\n      };\n\n      const handleGuild = guild => {\n        if (guild.id === data.id) {\n          clearTimeout(timeout);\n          resolveGuild(guild);\n        }\n      };\n\n      client.incrementMaxListeners();\n      client.on(Events.GUILD_CREATE, handleGuild);\n\n      const timeout = setTimeout(() => resolveGuild(client.guilds._add(data)), 10000).unref();\n    });\n  }\n\n  /**\n   * Options used to edit a guild template.\n   * @typedef {Object} EditGuildTemplateOptions\n   * @property {string} [name] The name of this template\n   * @property {string} [description] The description of this template\n   */\n\n  /**\n   * Updates the metadata of this template.\n   * @param {EditGuildTemplateOptions} [options] Options for editing the template\n   * @returns {Promise<GuildTemplate>}\n   */\n  async edit({ name, description } = {}) {\n    const data = await this.client.api.guilds(this.guildId).templates(this.code).patch({ data: { name, description } });\n    return this._patch(data);\n  }\n\n  /**\n   * Deletes this template.\n   * @returns {Promise<GuildTemplate>}\n   */\n  async delete() {\n    await this.client.api.guilds(this.guildId).templates(this.code).delete();\n    return this;\n  }\n\n  /**\n   * Syncs this template to the current state of the guild.\n   * @returns {Promise<GuildTemplate>}\n   */\n  async sync() {\n    const data = await this.client.api.guilds(this.guildId).templates(this.code).put();\n    return this._patch(data);\n  }\n\n  /**\n   * The timestamp of when this template was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return this.createdAt.getTime();\n  }\n\n  /**\n   * The timestamp of when this template was last synced to the guild\n   * @type {number}\n   * @readonly\n   */\n  get updatedTimestamp() {\n    return this.updatedAt.getTime();\n  }\n\n  /**\n   * The guild that this template belongs to\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n\n  /**\n   * The URL of this template\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return `${this.client.options.http.template}/${this.code}`;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the template's code instead of the template object.\n   * @returns {string}\n   * @example\n   * // Logs: Template: FKvmczH2HyUf\n   * console.log(`Template: ${guildTemplate}!`);\n   */\n  toString() {\n    return this.code;\n  }\n}\n\n/**\n * Regular expression that globally matches guild template links\n * @type {RegExp}\n */\nGuildTemplate.GUILD_TEMPLATES_PATTERN = /discord(?:app)?\\.(?:com\\/template|new)\\/([\\w-]{2,255})/gi;\n\nmodule.exports = GuildTemplate;\n\n/* eslint-disable max-len */\n/**\n * @external APIGuildTemplate\n * @see {@link https://discord.com/developers/docs/resources/guild-template#guild-template-object-guild-template-structure}\n */\n","'use strict';\n\nconst Base = require('./Base');\nconst IntegrationApplication = require('./IntegrationApplication');\n\n/**\n * The information account for an integration\n * @typedef {Object} IntegrationAccount\n * @property {string} id The id of the account\n * @property {string} name The name of the account\n */\n\n/**\n *  Represents a guild integration.\n */\nclass Integration extends Base {\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild this integration belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The integration id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The integration name\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The integration type (twitch, youtube, etc)\n     * @type {string}\n     */\n    this.type = data.type;\n\n    /**\n     * Whether this integration is enabled\n     * @type {boolean}\n     */\n    this.enabled = data.enabled;\n\n    /**\n     * Whether this integration is syncing\n     * @type {boolean}\n     */\n    this.syncing = data.syncing;\n\n    /**\n     * The role that this integration uses for subscribers\n     * @type {Role}\n     */\n    this.role = this.guild.roles.cache.get(data.role_id);\n\n    if (data.user) {\n      /**\n       * The user for this integration\n       * @type {?User}\n       */\n      this.user = this.client.users._add(data.user);\n    } else {\n      this.user = null;\n    }\n\n    /**\n     * The account integration information\n     * @type {IntegrationAccount}\n     */\n    this.account = data.account;\n\n    /**\n     * The last time this integration was last synced\n     * @type {number}\n     */\n    this.syncedAt = data.synced_at;\n    this._patch(data);\n  }\n\n  /**\n   * All roles that are managed by this integration\n   * @type {Collection<Snowflake, Role>}\n   * @readonly\n   */\n  get roles() {\n    const roles = this.guild.roles.cache;\n    return roles.filter(role => role.tags?.integrationId === this.id);\n  }\n\n  _patch(data) {\n    /**\n     * The behavior of expiring subscribers\n     * @type {number}\n     */\n    this.expireBehavior = data.expire_behavior;\n\n    /**\n     * The grace period before expiring subscribers\n     * @type {number}\n     */\n    this.expireGracePeriod = data.expire_grace_period;\n\n    if ('application' in data) {\n      if (this.application) {\n        this.application._patch(data.application);\n      } else {\n        /**\n         * The application for this integration\n         * @type {?IntegrationApplication}\n         */\n        this.application = new IntegrationApplication(this.client, data.application);\n      }\n    } else if (!this.application) {\n      this.application = null;\n    }\n  }\n\n  /**\n   * Deletes this integration.\n   * @returns {Promise<Integration>}\n   * @param {string} [reason] Reason for deleting this integration\n   */\n  async delete(reason) {\n    await this.client.api.guilds(this.guild.id).integrations(this.id).delete({ reason });\n    return this;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      role: 'roleId',\n      guild: 'guildId',\n      user: 'userId',\n    });\n  }\n}\n\nmodule.exports = Integration;\n","'use strict';\n\nconst Application = require('./interfaces/Application');\n\n/**\n * Represents an Integration's OAuth2 Application.\n * @extends {Application}\n */\nclass IntegrationApplication extends Application {\n  _patch(data) {\n    super._patch(data);\n\n    /**\n     * The bot user for this application\n     * @type {?User}\n     */\n    this.bot = data.bot ? this.client.users._add(data.bot) : this.bot ?? null;\n\n    /**\n     * The url of the application's terms of service\n     * @type {?string}\n     */\n    this.termsOfServiceURL = data.terms_of_service_url ?? this.termsOfServiceURL ?? null;\n\n    /**\n     * The url of the application's privacy policy\n     * @type {?string}\n     */\n    this.privacyPolicyURL = data.privacy_policy_url ?? this.privacyPolicyURL ?? null;\n\n    /**\n     * The Array of RPC origin urls\n     * @type {string[]}\n     */\n    this.rpcOrigins = data.rpc_origins ?? this.rpcOrigins ?? [];\n\n    /**\n     * The application's summary\n     * @type {?string}\n     */\n    this.summary = data.summary ?? this.summary ?? null;\n\n    /**\n     * Whether the application can be default hooked by the client\n     * @type {?boolean}\n     */\n    this.hook = data.hook ?? this.hook ?? null;\n\n    /**\n     * The hash of the application's cover image\n     * @type {?string}\n     */\n    this.cover = data.cover_image ?? this.cover ?? null;\n\n    /**\n     * The hex-encoded key for verification in interactions and the GameSDK's GetTicket\n     * @type {?string}\n     */\n    this.verifyKey = data.verify_key ?? this.verifyKey ?? null;\n  }\n}\n\nmodule.exports = IntegrationApplication;\n","'use strict';\n\nconst Base = require('./Base');\nconst { InteractionTypes, MessageComponentTypes } = require('../util/Constants');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Represents an interaction.\n * @extends {Base}\n */\nclass Interaction extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The interaction's type\n     * @type {InteractionType}\n     */\n    this.type = InteractionTypes[data.type];\n\n    /**\n     * The interaction's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The interaction's token\n     * @type {string}\n     * @name Interaction#token\n     * @readonly\n     */\n    Object.defineProperty(this, 'token', { value: data.token });\n\n    /**\n     * The application's id\n     * @type {Snowflake}\n     */\n    this.applicationId = data.application_id;\n\n    /**\n     * The id of the channel this interaction was sent in\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel_id ?? null;\n\n    /**\n     * The id of the guild this interaction was sent in\n     * @type {?Snowflake}\n     */\n    this.guildId = data.guild_id ?? null;\n\n    /**\n     * The user which sent this interaction\n     * @type {User}\n     */\n    this.user = this.client.users._add(data.user ?? data.member.user);\n\n    /**\n     * If this interaction was sent in a guild, the member which sent it\n     * @type {?(GuildMember|APIGuildMember)}\n     */\n    this.member = data.member ? this.guild?.members._add(data.member) ?? data.member : null;\n\n    /**\n     * The version\n     * @type {number}\n     */\n    this.version = data.version;\n  }\n\n  /**\n   * The timestamp the interaction was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the interaction was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The channel this interaction was sent in\n   * @type {?TextBasedChannels}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.cache.get(this.channelId) ?? null;\n  }\n\n  /**\n   * The guild this interaction was sent in\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.cache.get(this.guildId) ?? null;\n  }\n\n  /**\n   * Indicates whether this interaction is received from a guild.\n   * @returns {boolean}\n   */\n  inGuild() {\n    return Boolean(this.guildId && this.member);\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link CommandInteraction}.\n   * @returns {boolean}\n   */\n  isCommand() {\n    return InteractionTypes[this.type] === InteractionTypes.APPLICATION_COMMAND && typeof this.targetId === 'undefined';\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link ContextMenuInteraction}\n   * @returns {boolean}\n   */\n  isContextMenu() {\n    return InteractionTypes[this.type] === InteractionTypes.APPLICATION_COMMAND && typeof this.targetId !== 'undefined';\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link MessageComponentInteraction}.\n   * @returns {boolean}\n   */\n  isMessageComponent() {\n    return InteractionTypes[this.type] === InteractionTypes.MESSAGE_COMPONENT;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link ButtonInteraction}.\n   * @returns {boolean}\n   */\n  isButton() {\n    return (\n      InteractionTypes[this.type] === InteractionTypes.MESSAGE_COMPONENT &&\n      MessageComponentTypes[this.componentType] === MessageComponentTypes.BUTTON\n    );\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link SelectMenuInteraction}.\n   * @returns {boolean}\n   */\n  isSelectMenu() {\n    return (\n      InteractionTypes[this.type] === InteractionTypes.MESSAGE_COMPONENT &&\n      MessageComponentTypes[this.componentType] === MessageComponentTypes.SELECT_MENU\n    );\n  }\n}\n\nmodule.exports = Interaction;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Collector = require('./interfaces/Collector');\nconst { Events } = require('../util/Constants');\nconst { InteractionTypes, MessageComponentTypes } = require('../util/Constants');\n\n/**\n * @typedef {CollectorOptions} InteractionCollectorOptions\n * @property {TextBasedChannels} [channel] The channel to listen to interactions from\n * @property {MessageComponentType} [componentType] The type of component to listen for\n * @property {Guild} [guild] The guild to listen to interactions from\n * @property {InteractionType} [interactionType] The type of interaction to listen for\n * @property {number} [max] The maximum total amount of interactions to collect\n * @property {number} [maxComponents] The maximum number of components to collect\n * @property {number} [maxUsers] The maximum number of users to interact\n * @property {Message|APIMessage} [message] The message to listen to interactions from\n */\n\n/**\n * Collects interactions.\n * Will automatically stop if the message ({@link Client#messageDelete messageDelete}),\n * channel ({@link Client#channelDelete channelDelete}), or guild ({@link Client#guildDelete guildDelete}) is deleted.\n * @extends {Collector}\n */\nclass InteractionCollector extends Collector {\n  /**\n   * @param {Client} client The client on which to collect interactions\n   * @param {InteractionCollectorOptions} [options={}] The options to apply to this collector\n   */\n  constructor(client, options = {}) {\n    super(client, options);\n\n    /**\n     * The message from which to collect interactions, if provided\n     * @type {?Snowflake}\n     */\n    this.messageId = options.message?.id ?? null;\n\n    /**\n     * The channel from which to collect interactions, if provided\n     * @type {?Snowflake}\n     */\n    this.channelId =\n      this.client.channels.resolveId(options.message?.channel) ??\n      options.message?.channel_id ??\n      this.client.channels.resolveId(options.channel);\n\n    /**\n     * The guild from which to collect interactions, if provided\n     * @type {?Snowflake}\n     */\n    this.guildId =\n      this.client.guilds.resolveId(options.message?.guild) ??\n      options.message?.guild_id ??\n      this.client.guilds.resolveId(options.channel?.guild) ??\n      this.client.guilds.resolveId(options.guild);\n\n    /**\n     * The the type of interaction to collect\n     * @type {?InteractionType}\n     */\n    this.interactionType =\n      typeof options.interactionType === 'number'\n        ? InteractionTypes[options.interactionType]\n        : options.interactionType ?? null;\n\n    /**\n     * The the type of component to collect\n     * @type {?MessageComponentType}\n     */\n    this.componentType =\n      typeof options.componentType === 'number'\n        ? MessageComponentTypes[options.componentType]\n        : options.componentType ?? null;\n\n    /**\n     * The users which have interacted to this collector\n     * @type {Collection<Snowflake, User>}\n     */\n    this.users = new Collection();\n\n    /**\n     * The total number of interactions collected\n     * @type {number}\n     */\n    this.total = 0;\n\n    this.empty = this.empty.bind(this);\n    this.client.incrementMaxListeners();\n\n    if (this.messageId) {\n      this._handleMessageDeletion = this._handleMessageDeletion.bind(this);\n      this.client.on(Events.MESSAGE_DELETE, this._handleMessageDeletion);\n    }\n\n    if (this.channelId) {\n      this._handleChannelDeletion = this._handleChannelDeletion.bind(this);\n      this.client.on(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n    }\n\n    if (this.guildId) {\n      this._handleGuildDeletion = this._handleGuildDeletion.bind(this);\n      this.client.on(Events.GUILD_DELETE, this._handleGuildDeletion);\n    }\n\n    this.client.on(Events.INTERACTION_CREATE, this.handleCollect);\n\n    this.once('end', () => {\n      this.client.removeListener(Events.INTERACTION_CREATE, this.handleCollect);\n      this.client.removeListener(Events.MESSAGE_DELETE, this._handleMessageDeletion);\n      this.client.removeListener(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n      this.client.removeListener(Events.GUILD_DELETE, this._handleGuildDeletion);\n      this.client.decrementMaxListeners();\n    });\n\n    this.on('collect', interaction => {\n      this.total++;\n      this.users.set(interaction.user.id, interaction.user);\n    });\n  }\n\n  /**\n   * Handles an incoming interaction for possible collection.\n   * @param {Interaction} interaction The interaction to possibly collect\n   * @returns {?Snowflake}\n   * @private\n   */\n  collect(interaction) {\n    /**\n     * Emitted whenever an interaction is collected.\n     * @event InteractionCollector#collect\n     * @param {Interaction} interaction The interaction that was collected\n     */\n    if (this.interactionType && interaction.type !== this.interactionType) return null;\n    if (this.componentType && interaction.componentType !== this.componentType) return null;\n    if (this.messageId && interaction.message?.id !== this.messageId) return null;\n    if (this.channelId && interaction.channelId !== this.channelId) return null;\n    if (this.guildId && interaction.guildId !== this.guildId) return null;\n\n    return interaction.id;\n  }\n\n  /**\n   * Handles an interaction for possible disposal.\n   * @param {Interaction} interaction The interaction that could be disposed of\n   * @returns {?Snowflake}\n   */\n  dispose(interaction) {\n    /**\n     * Emitted whenever an interaction is disposed of.\n     * @event InteractionCollector#dispose\n     * @param {Interaction} interaction The interaction that was disposed of\n     */\n    if (this.type && interaction.type !== this.type) return null;\n    if (this.componentType && interaction.componentType !== this.componentType) return null;\n    if (this.messageId && interaction.message?.id !== this.messageId) return null;\n    if (this.channelId && interaction.channelId !== this.channelId) return null;\n    if (this.guildId && interaction.guildId !== this.guildId) return null;\n\n    return interaction.id;\n  }\n\n  /**\n   * Empties this interaction collector.\n   */\n  empty() {\n    this.total = 0;\n    this.collected.clear();\n    this.users.clear();\n    this.checkEnd();\n  }\n\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   */\n  get endReason() {\n    if (this.options.max && this.total >= this.options.max) return 'limit';\n    if (this.options.maxComponents && this.collected.size >= this.options.maxComponents) return 'componentLimit';\n    if (this.options.maxUsers && this.users.size >= this.options.maxUsers) return 'userLimit';\n    return null;\n  }\n\n  /**\n   * Handles checking if the message has been deleted, and if so, stops the collector with the reason 'messageDelete'.\n   * @private\n   * @param {Message} message The message that was deleted\n   * @returns {void}\n   */\n  _handleMessageDeletion(message) {\n    if (message.id === this.messageId) {\n      this.stop('messageDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the channel has been deleted, and if so, stops the collector with the reason 'channelDelete'.\n   * @private\n   * @param {GuildChannel} channel The channel that was deleted\n   * @returns {void}\n   */\n  _handleChannelDeletion(channel) {\n    if (channel.id === this.channelId) {\n      this.stop('channelDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the guild has been deleted, and if so, stops the collector with the reason 'guildDelete'.\n   * @private\n   * @param {Guild} guild The guild that was deleted\n   * @returns {void}\n   */\n  _handleGuildDeletion(guild) {\n    if (guild.id === this.guildId) {\n      this.stop('guildDelete');\n    }\n  }\n}\n\nmodule.exports = InteractionCollector;\n","'use strict';\n\nconst Webhook = require('./Webhook');\n\n/**\n * Represents a webhook for an Interaction\n * @implements {Webhook}\n */\nclass InteractionWebhook {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Snowflake} id The application's id\n   * @param {string} token The interaction's token\n   */\n  constructor(client, id, token) {\n    /**\n     * The client that instantiated the interaction webhook\n     * @name InteractionWebhook#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n    this.id = id;\n    Object.defineProperty(this, 'token', { value: token, writable: true, configurable: true });\n  }\n\n  // These are here only for documentation purposes - they are implemented by Webhook\n  /* eslint-disable no-empty-function, valid-jsdoc */\n  /**\n   * Sends a message with this webhook.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The content for the reply\n   * @returns {Promise<Message|APIMessage>}\n   */\n  send() {}\n  fetchMessage() {}\n  editMessage() {}\n  deleteMessage() {}\n  get url() {}\n}\n\nWebhook.applyToClass(InteractionWebhook, ['sendSlackMessage', 'edit', 'delete', 'createdTimestamp', 'createdAt']);\n\nmodule.exports = InteractionWebhook;\n","'use strict';\n\nconst Base = require('./Base');\nconst IntegrationApplication = require('./IntegrationApplication');\nconst InviteStageInstance = require('./InviteStageInstance');\nconst { Error } = require('../errors');\nconst { Endpoints } = require('../util/Constants');\nconst Permissions = require('../util/Permissions');\n\n/**\n * Represents an invitation to a guild channel.\n * <warn>The only guaranteed properties are `code`, `channel`, and `url`. Other properties can be missing.</warn>\n * @extends {Base}\n */\nclass Invite extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    const InviteGuild = require('./InviteGuild');\n    const Guild = require('./Guild');\n    /**\n     * The guild the invite is for including welcome screen data if present\n     * @type {?(Guild|InviteGuild)}\n     */\n    this.guild = null;\n    if (data.guild) {\n      this.guild = data.guild instanceof Guild ? data.guild : new InviteGuild(this.client, data.guild);\n    }\n\n    /**\n     * The code for this invite\n     * @type {string}\n     */\n    this.code = data.code;\n\n    /**\n     * The approximate number of online members of the guild this invite is for\n     * @type {?number}\n     */\n    this.presenceCount = data.approximate_presence_count ?? null;\n\n    /**\n     * The approximate total number of members of the guild this invite is for\n     * @type {?number}\n     */\n    this.memberCount = data.approximate_member_count ?? null;\n\n    /**\n     * Whether or not this invite is temporary\n     * @type {?boolean}\n     */\n    this.temporary = data.temporary ?? null;\n\n    /**\n     * The maximum age of the invite, in seconds, 0 if never expires\n     * @type {?number}\n     */\n    this.maxAge = data.max_age ?? null;\n\n    /**\n     * How many times this invite has been used\n     * @type {?number}\n     */\n    this.uses = data.uses ?? null;\n\n    /**\n     * The maximum uses of this invite\n     * @type {?number}\n     */\n    this.maxUses = data.max_uses ?? null;\n\n    /**\n     * The user who created this invite\n     * @type {?User}\n     */\n    this.inviter = data.inviter ? this.client.users._add(data.inviter) : null;\n\n    /**\n     * The user whose stream to display for this voice channel stream invite\n     * @type {?User}\n     */\n    this.targetUser = data.target_user ? this.client.users._add(data.target_user) : null;\n\n    /**\n     * The embedded application to open for this voice channel embedded application invite\n     * @type {?IntegrationApplication}\n     */\n    this.targetApplication = data.target_application\n      ? new IntegrationApplication(this.client, data.target_application)\n      : null;\n\n    /**\n     * The type of the invite target:\n     * * 1: STREAM\n     * * 2: EMBEDDED_APPLICATION\n     * @typedef {number} TargetType\n     * @see {@link https://discord.com/developers/docs/resources/invite#invite-object-invite-target-types}\n     */\n\n    /**\n     * The target type\n     * @type {?TargetType}\n     */\n    this.targetType = data.target_type ?? null;\n\n    /**\n     * The channel the invite is for\n     * @type {Channel}\n     */\n    this.channel = this.client.channels._add(data.channel, this.guild, { cache: false });\n\n    /**\n     * The timestamp the invite was created at\n     * @type {?number}\n     */\n    this.createdTimestamp = 'created_at' in data ? new Date(data.created_at).getTime() : null;\n\n    this._expiresTimestamp = 'expires_at' in data ? new Date(data.expires_at).getTime() : null;\n\n    /**\n     * The stage instance data if there is a public {@link StageInstance} in the stage channel this invite is for\n     * @type {?InviteStageInstance}\n     */\n    this.stageInstance =\n      'stage_instance' in data\n        ? new InviteStageInstance(this.client, data.stage_instance, this.channel.id, this.guild.id)\n        : null;\n  }\n\n  /**\n   * The time the invite was created at\n   * @type {?Date}\n   * @readonly\n   */\n  get createdAt() {\n    return this.createdTimestamp ? new Date(this.createdTimestamp) : null;\n  }\n\n  /**\n   * Whether the invite is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    const guild = this.guild;\n    if (!guild || !this.client.guilds.cache.has(guild.id)) return false;\n    if (!guild.me) throw new Error('GUILD_UNCACHED_ME');\n    return (\n      this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_CHANNELS, false) ||\n      guild.me.permissions.has(Permissions.FLAGS.MANAGE_GUILD)\n    );\n  }\n\n  /**\n   * The timestamp the invite will expire at\n   * @type {?number}\n   * @readonly\n   */\n  get expiresTimestamp() {\n    return (\n      this._expiresTimestamp ??\n      (this.createdTimestamp && this.maxAge ? this.createdTimestamp + this.maxAge * 1000 : null)\n    );\n  }\n\n  /**\n   * The time the invite will expire at\n   * @type {?Date}\n   * @readonly\n   */\n  get expiresAt() {\n    const { expiresTimestamp } = this;\n    return expiresTimestamp ? new Date(expiresTimestamp) : null;\n  }\n\n  /**\n   * The URL to the invite\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return Endpoints.invite(this.client.options.http.invite, this.code);\n  }\n\n  /**\n   * Deletes this invite.\n   * @param {string} [reason] Reason for deleting this invite\n   * @returns {Promise<Invite>}\n   */\n  async delete(reason) {\n    await this.client.api.invites[this.code].delete({ reason });\n    return this;\n  }\n\n  /**\n   * When concatenated with a string, this automatically concatenates the invite's URL instead of the object.\n   * @returns {string}\n   * @example\n   * // Logs: Invite: https://discord.gg/A1b2C3\n   * console.log(`Invite: ${invite}`);\n   */\n  toString() {\n    return this.url;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      url: true,\n      expiresTimestamp: true,\n      presenceCount: false,\n      memberCount: false,\n      uses: false,\n      channel: 'channelId',\n      inviter: 'inviterId',\n      guild: 'guildId',\n    });\n  }\n\n  valueOf() {\n    return this.code;\n  }\n}\n\n/**\n * Regular expression that globally matches Discord invite links\n * @type {RegExp}\n */\nInvite.INVITES_PATTERN = /discord(?:(?:app)?\\.com\\/invite|\\.gg(?:\\/invite)?)\\/([\\w-]{2,255})/gi;\n\nmodule.exports = Invite;\n","'use strict';\n\nconst AnonymousGuild = require('./AnonymousGuild');\nconst WelcomeScreen = require('./WelcomeScreen');\n\n/**\n * Represents a guild received from an invite, includes welcome screen data if available.\n * @extends {AnonymousGuild}\n */\nclass InviteGuild extends AnonymousGuild {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The welcome screen for this invite guild\n     * @type {?WelcomeScreen}\n     */\n    this.welcomeScreen =\n      typeof data.welcome_screen !== 'undefined' ? new WelcomeScreen(this, data.welcome_screen) : null;\n  }\n}\n\nmodule.exports = InviteGuild;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\n\n/**\n * Represents the data about a public {@link StageInstance} in an {@link Invite}.\n * @extends {Base}\n */\nclass InviteStageInstance extends Base {\n  constructor(client, data, channelId, guildId) {\n    super(client);\n\n    /**\n     * The id of the stage channel this invite is for\n     * @type {Snowflake}\n     */\n    this.channelId = channelId;\n\n    /**\n     * The stage channel's guild id\n     * @type {Snowflake}\n     */\n    this.guildId = guildId;\n\n    /**\n     * The members speaking in the stage channel\n     * @type {Collection<Snowflake, GuildMember>}\n     */\n    this.members = new Collection();\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The topic of the stage instance\n     * @type {string}\n     */\n    this.topic = data.topic;\n\n    /**\n     * The number of users in the stage channel\n     * @type {number}\n     */\n    this.participantCount = data.participant_count;\n\n    /**\n     * The number of users speaking in the stage channel\n     * @type {number}\n     */\n    this.speakerCount = data.speaker_count;\n\n    this.members.clear();\n    for (const rawMember of data.members) {\n      const member = this.guild.members._add(rawMember);\n      this.members.set(member.id, member);\n    }\n  }\n\n  /**\n   * The stage channel this invite is for\n   * @type {?StageChannel}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * The guild of the stage channel this invite is for\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n}\n\nmodule.exports = InviteStageInstance;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst BaseMessageComponent = require('./BaseMessageComponent');\nconst ClientApplication = require('./ClientApplication');\nconst InteractionCollector = require('./InteractionCollector');\nconst MessageAttachment = require('./MessageAttachment');\nconst Embed = require('./MessageEmbed');\nconst Mentions = require('./MessageMentions');\nconst MessagePayload = require('./MessagePayload');\nconst ReactionCollector = require('./ReactionCollector');\nconst Sticker = require('./Sticker');\nconst { Error } = require('../errors');\nconst ReactionManager = require('../managers/ReactionManager');\nconst { InteractionTypes, MessageTypes, SystemMessageTypes } = require('../util/Constants');\nconst MessageFlags = require('../util/MessageFlags');\nconst Permissions = require('../util/Permissions');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\nconst Util = require('../util/Util');\n\n/**\n * Represents a message on Discord.\n * @extends {Base}\n */\nclass Message extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIMessage} data The data for the message\n   */\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the channel the message was sent in\n     * @type {Snowflake}\n     */\n    this.channelId = data.channel_id;\n\n    /**\n     * The id of the guild the message was sent in, if any\n     * @type {?Snowflake}\n     */\n    this.guildId = data.guild_id ?? this.channel?.guild?.id ?? null;\n\n    /**\n     * Whether this message has been deleted\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    if (data) this._patch(data);\n  }\n\n  _patch(data, partial = false) {\n    /**\n     * The message's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    if ('type' in data) {\n      /**\n       * The type of the message\n       * @type {?MessageType}\n       */\n      this.type = MessageTypes[data.type];\n\n      /**\n       * Whether or not this message was sent by Discord, not actually a user (e.g. pin notifications)\n       * @type {?boolean}\n       */\n      this.system = SystemMessageTypes.includes(this.type);\n    } else if (typeof this.type !== 'string') {\n      this.system = null;\n      this.type = null;\n    }\n\n    if ('content' in data) {\n      /**\n       * The content of the message\n       * @type {?string}\n       */\n      this.content = data.content;\n    } else if (typeof this.content !== 'string') {\n      this.content = null;\n    }\n\n    if ('author' in data) {\n      /**\n       * The author of the message\n       * @type {?User}\n       */\n      this.author = this.client.users._add(data.author, !data.webhook_id);\n    } else if (!this.author) {\n      this.author = null;\n    }\n\n    if ('pinned' in data) {\n      /**\n       * Whether or not this message is pinned\n       * @type {?boolean}\n       */\n      this.pinned = Boolean(data.pinned);\n    } else if (typeof this.pinned !== 'boolean') {\n      this.pinned = null;\n    }\n\n    if ('tts' in data) {\n      /**\n       * Whether or not the message was Text-To-Speech\n       * @type {?boolean}\n       */\n      this.tts = data.tts;\n    } else if (typeof this.tts !== 'boolean') {\n      this.tts = null;\n    }\n\n    if (!partial) {\n      /**\n       * A random number or string used for checking message delivery\n       * <warn>This is only received after the message was sent successfully, and\n       * lost if re-fetched</warn>\n       * @type {?string}\n       */\n      this.nonce = 'nonce' in data ? data.nonce : null;\n    }\n\n    if ('embeds' in data || !partial) {\n      /**\n       * A list of embeds in the message - e.g. YouTube Player\n       * @type {MessageEmbed[]}\n       */\n      this.embeds = data.embeds?.map(e => new Embed(e, true)) ?? [];\n    } else {\n      this.embeds = this.embeds.slice();\n    }\n\n    if ('components' in data || !partial) {\n      /**\n       * A list of MessageActionRows in the message\n       * @type {MessageActionRow[]}\n       */\n      this.components = data.components?.map(c => BaseMessageComponent.create(c, this.client)) ?? [];\n    } else {\n      this.components = this.components.slice();\n    }\n\n    if ('attachments' in data || !partial) {\n      /**\n       * A collection of attachments in the message - e.g. Pictures - mapped by their ids\n       * @type {Collection<Snowflake, MessageAttachment>}\n       */\n      this.attachments = new Collection();\n      if (data.attachments) {\n        for (const attachment of data.attachments) {\n          this.attachments.set(attachment.id, new MessageAttachment(attachment.url, attachment.filename, attachment));\n        }\n      }\n    } else {\n      this.attachments = new Collection(this.attachemnts);\n    }\n\n    if ('sticker_items' in data || 'stickers' in data || !partial) {\n      /**\n       * A collection of stickers in the message\n       * @type {Collection<Snowflake, Sticker>}\n       */\n      this.stickers = new Collection(\n        (data.sticker_items ?? data.stickers)?.map(s => [s.id, new Sticker(this.client, s)]),\n      );\n    } else {\n      this.stickers = new Collection(this.stickers);\n    }\n\n    if (!partial) {\n      /**\n       * The timestamp the message was sent at\n       * @type {number}\n       */\n      this.createdTimestamp = SnowflakeUtil.deconstruct(this.id).timestamp;\n    }\n\n    if ('edited_timestamp' in data || !partial) {\n      /**\n       * The timestamp the message was last edited at (if applicable)\n       * @type {?number}\n       */\n      this.editedTimestamp = data.edited_timestamp ? new Date(data.edited_timestamp).getTime() : null;\n    }\n\n    if ('reactions' in data || !partial) {\n      /**\n       * A manager of the reactions belonging to this message\n       * @type {ReactionManager}\n       */\n      this.reactions = new ReactionManager(this);\n      if (data.reactions?.length > 0) {\n        for (const reaction of data.reactions) {\n          this.reactions._add(reaction);\n        }\n      }\n    }\n\n    if (!partial) {\n      /**\n       * All valid mentions that the message contains\n       * @type {MessageMentions}\n       */\n      this.mentions = new Mentions(\n        this,\n        data.mentions,\n        data.mention_roles,\n        data.mention_everyone,\n        data.mention_channels,\n        data.referenced_message?.author,\n      );\n    } else {\n      this.mentions = new Mentions(\n        this,\n        data.mentions ?? this.mentions.users,\n        data.mention_roles ?? this.mentions.roles,\n        data.mention_everyone ?? this.mentions.everyone,\n        data.mention_channels ?? this.mentions.crosspostedChannels,\n        data.referenced_message?.author ?? this.mentions.repliedUser,\n      );\n    }\n\n    if ('webhook_id' in data || !partial) {\n      /**\n       * The id of the webhook that sent the message, if applicable\n       * @type {?Snowflake}\n       */\n      this.webhookId = data.webhook_id ?? null;\n    }\n\n    if ('application' in data || !partial) {\n      /**\n       * Supplemental application information for group activities\n       * @type {?ClientApplication}\n       */\n      this.groupActivityApplication = data.application ? new ClientApplication(this.client, data.application) : null;\n    }\n\n    if ('application_id' in data || !partial) {\n      /**\n       * The id of the application of the interaction that sent this message, if any\n       * @type {?Snowflake}\n       */\n      this.applicationId = data.application_id ?? null;\n    }\n\n    if ('activity' in data || !partial) {\n      /**\n       * Group activity\n       * @type {?MessageActivity}\n       */\n      this.activity = data.activity\n        ? {\n            partyId: data.activity.party_id,\n            type: data.activity.type,\n          }\n        : null;\n    }\n    if ('thread' in data) {\n      this.client.channels._add(data.thread, this.guild);\n    }\n    if (this.member && data.member) {\n      this.member._patch(data.member);\n    } else if (data.member && this.guild && this.author) {\n      this.guild.members._add(Object.assign(data.member, { user: this.author }));\n    }\n\n    if ('flags' in data || !partial) {\n      /**\n       * Flags that are applied to the message\n       * @type {Readonly<MessageFlags>}\n       */\n      this.flags = new MessageFlags(data.flags).freeze();\n    } else {\n      this.flags = new MessageFlags(this.flags).freeze();\n    }\n\n    /**\n     * Reference data sent in a message that contains ids identifying the referenced message\n     * @typedef {Object} MessageReference\n     * @property {Snowflake} channelId The channel's id the message was referenced\n     * @property {?Snowflake} guildId The guild's id the message was referenced\n     * @property {?Snowflake} messageId The message's id that was referenced\n     */\n\n    if ('message_reference' in data || !partial) {\n      /**\n       * Message reference data\n       * @type {?MessageReference}\n       */\n      this.reference = data.message_reference\n        ? {\n            channelId: data.message_reference.channel_id,\n            guildId: data.message_reference.guild_id,\n            messageId: data.message_reference.message_id,\n          }\n        : null;\n    }\n\n    if (data.referenced_message) {\n      this.channel?.messages._add({ guild_id: data.message_reference?.guild_id, ...data.referenced_message });\n    }\n\n    /**\n     * Partial data of the interaction that a message is a reply to\n     * @typedef {Object} MessageInteraction\n     * @property {Snowflake} id The interaction's id\n     * @property {InteractionType} type The type of the interaction\n     * @property {string} commandName The name of the interaction's application command\n     * @property {User} user The user that invoked the interaction\n     */\n\n    if (data.interaction) {\n      /**\n       * Partial data of the interaction that this message is a reply to\n       * @type {?MessageInteraction}\n       */\n      this.interaction = {\n        id: data.interaction.id,\n        type: InteractionTypes[data.interaction.type],\n        commandName: data.interaction.name,\n        user: this.client.users._add(data.interaction.user),\n      };\n    } else if (!this.interaction) {\n      this.interaction = null;\n    }\n  }\n\n  _update(data, partial = false) {\n    const clone = this._clone();\n    this._patch(data, partial);\n    return clone;\n  }\n\n  /**\n   * The channel that the message was sent in\n   * @type {TextChannel|DMChannel|NewsChannel|ThreadChannel}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * Whether or not this message is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return typeof this.content !== 'string' || !this.author;\n  }\n\n  /**\n   * Represents the author of the message as a guild member.\n   * Only available if the message comes from a guild where the author is still a member\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild?.members.resolve(this.author) ?? null;\n  }\n\n  /**\n   * The time the message was sent at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The time the message was last edited at (if applicable)\n   * @type {?Date}\n   * @readonly\n   */\n  get editedAt() {\n    return this.editedTimestamp ? new Date(this.editedTimestamp) : null;\n  }\n\n  /**\n   * The guild the message was sent in (if in a guild channel)\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId) ?? this.channel?.guild ?? null;\n  }\n\n  /**\n   * Whether this message has a thread associated with it\n   * @type {boolean}\n   * @readonly\n   */\n  get hasThread() {\n    return this.flags.has(MessageFlags.FLAGS.HAS_THREAD);\n  }\n\n  /**\n   * The thread started by this message\n   * <info>This property is not suitable for checking whether a message has a thread,\n   * use {@link Message#hasThread} instead.</info>\n   * @type {?ThreadChannel}\n   * @readonly\n   */\n  get thread() {\n    return this.channel?.threads?.resolve(this.id) ?? null;\n  }\n\n  /**\n   * The url to jump to this message\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return `https://discord.com/channels/${this.guildId ?? '@me'}/${this.channelId}/${this.id}`;\n  }\n\n  /**\n   * The message contents with all mentions replaced by the equivalent text.\n   * If mentions cannot be resolved to a name, the relevant mention in the message content will not be converted.\n   * @type {?string}\n   * @readonly\n   */\n  get cleanContent() {\n    // eslint-disable-next-line eqeqeq\n    return this.content != null ? Util.cleanContent(this.content, this.channel) : null;\n  }\n\n  /**\n   * Creates a reaction collector.\n   * @param {ReactionCollectorOptions} [options={}] Options to send to the collector\n   * @returns {ReactionCollector}\n   * @example\n   * // Create a reaction collector\n   * const filter = (reaction, user) => reaction.emoji.name === '👌' && user.id === 'someId';\n   * const collector = message.createReactionCollector({ filter, time: 15000 });\n   * collector.on('collect', r => console.log(`Collected ${r.emoji.name}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createReactionCollector(options = {}) {\n    return new ReactionCollector(this, options);\n  }\n\n  /**\n   * An object containing the same properties as CollectorOptions, but a few more:\n   * @typedef {ReactionCollectorOptions} AwaitReactionsOptions\n   * @property {string[]} [errors] Stop/end reasons that cause the promise to reject\n   */\n\n  /**\n   * Similar to createReactionCollector but in promise form.\n   * Resolves with a collection of reactions that pass the specified filter.\n   * @param {AwaitReactionsOptions} [options={}] Optional options to pass to the internal collector\n   * @returns {Promise<Collection<string, MessageReaction>>}\n   * @example\n   * // Create a reaction collector\n   * const filter = (reaction, user) => reaction.emoji.name === '👌' && user.id === 'someId'\n   * message.awaitReactions({ filter, time: 15000 })\n   *   .then(collected => console.log(`Collected ${collected.size} reactions`))\n   *   .catch(console.error);\n   */\n  awaitReactions(options = {}) {\n    return new Promise((resolve, reject) => {\n      const collector = this.createReactionCollector(options);\n      collector.once('end', (reactions, reason) => {\n        if (options.errors?.includes(reason)) reject(reactions);\n        else resolve(reactions);\n      });\n    });\n  }\n\n  /**\n   * @typedef {CollectorOptions} MessageComponentCollectorOptions\n   * @property {MessageComponentType} [componentType] The type of component to listen for\n   * @property {number} [max] The maximum total amount of interactions to collect\n   * @property {number} [maxComponents] The maximum number of components to collect\n   * @property {number} [maxUsers] The maximum number of users to interact\n   */\n\n  /**\n   * Creates a message component interaction collector.\n   * @param {MessageComponentCollectorOptions} [options={}] Options to send to the collector\n   * @returns {InteractionCollector}\n   * @example\n   * // Create a message component interaction collector\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * const collector = message.createMessageComponentCollector({ filter, time: 15000 });\n   * collector.on('collect', i => console.log(`Collected ${i.customId}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createMessageComponentCollector(options = {}) {\n    return new InteractionCollector(this.client, {\n      ...options,\n      interactionType: InteractionTypes.MESSAGE_COMPONENT,\n      message: this,\n    });\n  }\n\n  /**\n   * An object containing the same properties as CollectorOptions, but a few more:\n   * @typedef {Object} AwaitMessageComponentOptions\n   * @property {CollectorFilter} [filter] The filter applied to this collector\n   * @property {number} [time] Time to wait for an interaction before rejecting\n   * @property {MessageComponentType} [componentType] The type of component interaction to collect\n   */\n\n  /**\n   * Collects a single component interaction that passes the filter.\n   * The Promise will reject if the time expires.\n   * @param {AwaitMessageComponentOptions} [options={}] Options to pass to the internal collector\n   * @returns {Promise<MessageComponentInteraction>}\n   * @example\n   * // Collect a message component interaction\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * message.awaitMessageComponent({ filter, time: 15000 })\n   *   .then(interaction => console.log(`${interaction.customId} was clicked!`))\n   *   .catch(console.error);\n   */\n  awaitMessageComponent(options = {}) {\n    const _options = { ...options, max: 1 };\n    return new Promise((resolve, reject) => {\n      const collector = this.createMessageComponentCollector(_options);\n      collector.once('end', (interactions, reason) => {\n        const interaction = interactions.first();\n        if (interaction) resolve(interaction);\n        else reject(new Error('INTERACTION_COLLECTOR_ERROR', reason));\n      });\n    });\n  }\n\n  /**\n   * Whether the message is editable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get editable() {\n    return this.author.id === this.client.user.id;\n  }\n\n  /**\n   * Whether the message is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    return Boolean(\n      !this.deleted &&\n        (this.author.id === this.client.user.id ||\n          this.channel.permissionsFor?.(this.client.user)?.has(Permissions.FLAGS.MANAGE_MESSAGES)),\n    );\n  }\n\n  /**\n   * Whether the message is pinnable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get pinnable() {\n    return (\n      this.type === 'DEFAULT' &&\n      (!this.guild || this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_MESSAGES, false))\n    );\n  }\n\n  /**\n   * Fetches the Message this crosspost/reply/pin-add references, if available to the client\n   * @returns {Promise<Message>}\n   */\n  async fetchReference() {\n    if (!this.reference) throw new Error('MESSAGE_REFERENCE_MISSING');\n    const { channelId, messageId } = this.reference;\n    const channel = this.client.channels.resolve(channelId);\n    if (!channel) throw new Error('GUILD_CHANNEL_RESOLVE');\n    const message = await channel.messages.fetch(messageId);\n    return message;\n  }\n\n  /**\n   * Whether the message is crosspostable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get crosspostable() {\n    return (\n      this.channel.type === 'GUILD_NEWS' &&\n      !this.flags.has(MessageFlags.FLAGS.CROSSPOSTED) &&\n      this.type === 'DEFAULT' &&\n      this.channel.viewable &&\n      this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.SEND_MESSAGES) &&\n      (this.author.id === this.client.user.id ||\n        this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_MESSAGES))\n    );\n  }\n\n  /**\n   * Options that can be passed into {@link Message#edit}.\n   * @typedef {Object} MessageEditOptions\n   * @property {?string} [content] Content to be edited\n   * @property {MessageEmbed[]|APIEmbed[]} [embeds] Embeds to be added/edited\n   * @property {MessageMentionOptions} [allowedMentions] Which mentions should be parsed from the message content\n   * @property {MessageFlags} [flags] Which flags to set for the message. Only `SUPPRESS_EMBEDS` can be edited.\n   * @property {MessageAttachment[]} [attachments] An array of attachments to keep,\n   * all attachments will be kept if omitted\n   * @property {FileOptions[]|BufferResolvable[]|MessageAttachment[]} [files] Files to add to the message\n   * @property {MessageActionRow[]|MessageActionRowOptions[]} [components]\n   * Action rows containing interactive components for the message (buttons, select menus)\n   */\n\n  /**\n   * Edits the content of the message.\n   * @param {string|MessagePayload|MessageEditOptions} options The options to provide\n   * @returns {Promise<Message>}\n   * @example\n   * // Update the content of a message\n   * message.edit('This is my new content!')\n   *   .then(msg => console.log(`Updated the content of a message to ${msg.content}`))\n   *   .catch(console.error);\n   */\n  edit(options) {\n    return this.channel.messages.edit(this, options);\n  }\n\n  /**\n   * Publishes a message in an announcement channel to all channels following it.\n   * @returns {Promise<Message>}\n   * @example\n   * // Crosspost a message\n   * if (message.channel.type === 'GUILD_NEWS') {\n   *   message.crosspost()\n   *     .then(() => console.log('Crossposted message'))\n   *     .catch(console.error);\n   * }\n   */\n  crosspost() {\n    return this.channel.messages.crosspost(this.id);\n  }\n\n  /**\n   * Pins this message to the channel's pinned messages.\n   * @returns {Promise<Message>}\n   * @example\n   * // Pin a message\n   * message.pin()\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  async pin() {\n    await this.channel.messages.pin(this.id);\n    return this;\n  }\n\n  /**\n   * Unpins this message from the channel's pinned messages.\n   * @returns {Promise<Message>}\n   * @example\n   * // Unpin a message\n   * message.unpin()\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  async unpin() {\n    await this.channel.messages.unpin(this.id);\n    return this;\n  }\n\n  /**\n   * Adds a reaction to the message.\n   * @param {EmojiIdentifierResolvable} emoji The emoji to react with\n   * @returns {Promise<MessageReaction>}\n   * @example\n   * // React to a message with a unicode emoji\n   * message.react('🤔')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // React to a message with a custom emoji\n   * message.react(message.guild.emojis.cache.get('123456789012345678'))\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async react(emoji) {\n    emoji = this.client.emojis.resolveIdentifier(emoji);\n    await this.channel.messages.react(this.id, emoji);\n    return this.client.actions.MessageReactionAdd.handle({\n      user: this.client.user,\n      channel: this.channel,\n      message: this,\n      emoji: Util.parseEmoji(emoji),\n    }).reaction;\n  }\n\n  /**\n   * Deletes the message.\n   * @returns {Promise<Message>}\n   * @example\n   * // Delete a message\n   * message.delete()\n   *   .then(msg => console.log(`Deleted message from ${msg.author.username}`))\n   *   .catch(console.error);\n   */\n  async delete() {\n    await this.channel.messages.delete(this.id);\n    return this;\n  }\n\n  /**\n   * Options provided when sending a message as an inline reply.\n   * @typedef {BaseMessageOptions} ReplyMessageOptions\n   * @property {boolean} [failIfNotExists=true] Whether to error if the referenced message\n   * does not exist (creates a standard message in this case when false)\n   */\n\n  /**\n   * Send an inline reply to this message.\n   * @param {string|MessagePayload|ReplyMessageOptions} options The options to provide\n   * @returns {Promise<Message|Message[]>}\n   * @example\n   * // Reply to a message\n   * message.reply('This is a reply!')\n   *   .then(() => console.log(`Replied to message \"${message.content}\"`))\n   *   .catch(console.error);\n   */\n  reply(options) {\n    let data;\n\n    if (options instanceof MessagePayload) {\n      data = options;\n    } else {\n      data = MessagePayload.create(this, options, {\n        reply: {\n          messageReference: this,\n          failIfNotExists: options?.failIfNotExists ?? this.client.options.failIfNotExists,\n        },\n      });\n    }\n    return this.channel.send(data);\n  }\n\n  /**\n   * Options for starting a thread on a message.\n   * @typedef {Object} StartThreadOptions\n   * @property {string} name The name of the new thread\n   * @property {ThreadAutoArchiveDuration} autoArchiveDuration The amount of time (in minutes) after which the thread\n   * should automatically archive in case of no recent activity\n   * @property {string} [reason] Reason for creating the thread\n   */\n\n  /**\n   * Create a new public thread from this message\n   * @see ThreadManager#create\n   * @param {StartThreadOptions} [options] Options for starting a thread on this message\n   * @returns {Promise<ThreadChannel>}\n   */\n  startThread(options = {}) {\n    if (!['GUILD_TEXT', 'GUILD_NEWS'].includes(this.channel.type)) {\n      return Promise.reject(new Error('MESSAGE_THREAD_PARENT'));\n    }\n    if (this.hasThread) return Promise.reject(new Error('MESSAGE_EXISTING_THREAD'));\n    return this.channel.threads.create({ ...options, startMessage: this });\n  }\n\n  /**\n   * Fetch this message.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<Message>}\n   */\n  fetch(force = true) {\n    return this.channel.messages.fetch(this.id, { force });\n  }\n\n  /**\n   * Fetches the webhook used to create this message.\n   * @returns {Promise<?Webhook>}\n   */\n  fetchWebhook() {\n    if (!this.webhookId) return Promise.reject(new Error('WEBHOOK_MESSAGE'));\n    return this.client.fetchWebhook(this.webhookId);\n  }\n\n  /**\n   * Suppresses or unsuppresses embeds on a message.\n   * @param {boolean} [suppress=true] If the embeds should be suppressed or not\n   * @returns {Promise<Message>}\n   */\n  suppressEmbeds(suppress = true) {\n    const flags = new MessageFlags(this.flags.bitfield);\n\n    if (suppress) {\n      flags.add(MessageFlags.FLAGS.SUPPRESS_EMBEDS);\n    } else {\n      flags.remove(MessageFlags.FLAGS.SUPPRESS_EMBEDS);\n    }\n\n    return this.edit({ flags });\n  }\n\n  /**\n   * Removes the attachments from this message.\n   * @returns {Promise<Message>}\n   */\n  removeAttachments() {\n    return this.edit({ attachments: [] });\n  }\n\n  /**\n   * Used mainly internally. Whether two messages are identical in properties. If you want to compare messages\n   * without checking all the properties, use `message.id === message2.id`, which is much more efficient. This\n   * method allows you to see if there are differences in content, embeds, attachments, nonce and tts properties.\n   * @param {Message} message The message to compare it to\n   * @param {APIMessage} rawData Raw data passed through the WebSocket about this message\n   * @returns {boolean}\n   */\n  equals(message, rawData) {\n    if (!message) return false;\n    const embedUpdate = !message.author && !message.attachments;\n    if (embedUpdate) return this.id === message.id && this.embeds.length === message.embeds.length;\n\n    let equal =\n      this.id === message.id &&\n      this.author.id === message.author.id &&\n      this.content === message.content &&\n      this.tts === message.tts &&\n      this.nonce === message.nonce &&\n      this.embeds.length === message.embeds.length &&\n      this.attachments.length === message.attachments.length;\n\n    if (equal && rawData) {\n      equal =\n        this.mentions.everyone === message.mentions.everyone &&\n        this.createdTimestamp === new Date(rawData.timestamp).getTime() &&\n        this.editedTimestamp === new Date(rawData.edited_timestamp).getTime();\n    }\n\n    return equal;\n  }\n\n  /**\n   * When concatenated with a string, this automatically concatenates the message's content instead of the object.\n   * @returns {string}\n   * @example\n   * // Logs: Message: This is a message!\n   * console.log(`Message: ${message}`);\n   */\n  toString() {\n    return this.content;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      channel: 'channelId',\n      author: 'authorId',\n      groupActivityApplication: 'groupActivityApplicationId',\n      guild: 'guildId',\n      cleanContent: true,\n      member: false,\n      reactions: false,\n    });\n  }\n}\n\nmodule.exports = Message;\n","'use strict';\n\nconst BaseMessageComponent = require('./BaseMessageComponent');\nconst { MessageComponentTypes } = require('../util/Constants');\n\n/**\n * Represents an action row containing message components.\n * @extends {BaseMessageComponent}\n */\nclass MessageActionRow extends BaseMessageComponent {\n  /**\n   * Components that can be placed in an action row\n   * * MessageButton\n   * * MessageSelectMenu\n   * @typedef {MessageButton|MessageSelectMenu} MessageActionRowComponent\n   */\n\n  /**\n   * Options for components that can be placed in an action row\n   * * MessageButtonOptions\n   * * MessageSelectMenuOptions\n   * @typedef {MessageButtonOptions|MessageSelectMenuOptions} MessageActionRowComponentOptions\n   */\n\n  /**\n   * Data that can be resolved into components that can be placed in an action row\n   * * MessageActionRowComponent\n   * * MessageActionRowComponentOptions\n   * @typedef {MessageActionRowComponent|MessageActionRowComponentOptions} MessageActionRowComponentResolvable\n   */\n\n  /**\n   * @typedef {BaseMessageComponentOptions} MessageActionRowOptions\n   * @property {MessageActionRowComponentResolvable[]} [components]\n   * The components to place in this action row\n   */\n\n  /**\n   * @param {MessageActionRow|MessageActionRowOptions} [data={}] MessageActionRow to clone or raw data\n   * @param {Client} [client] The client constructing this MessageActionRow, if provided\n   */\n  constructor(data = {}, client = null) {\n    super({ type: 'ACTION_ROW' });\n\n    /**\n     * The components in this action row\n     * @type {MessageActionRowComponent[]}\n     */\n    this.components = data.components?.map(c => BaseMessageComponent.create(c, client)) ?? [];\n  }\n\n  /**\n   * Adds components to the action row.\n   * @param {...MessageActionRowComponentResolvable[]} components The components to add\n   * @returns {MessageActionRow}\n   */\n  addComponents(...components) {\n    this.components.push(...components.flat(Infinity).map(c => BaseMessageComponent.create(c)));\n    return this;\n  }\n\n  /**\n   * Removes, replaces, and inserts components in the action row.\n   * @param {number} index The index to start at\n   * @param {number} deleteCount The number of components to remove\n   * @param {...MessageActionRowComponentResolvable[]} [components] The replacing components\n   * @returns {MessageActionRow}\n   */\n  spliceComponents(index, deleteCount, ...components) {\n    this.components.splice(index, deleteCount, ...components.flat(Infinity).map(c => BaseMessageComponent.create(c)));\n    return this;\n  }\n\n  /**\n   * Transforms the action row to a plain object.\n   * @returns {APIMessageComponent} The raw data of this action row\n   */\n  toJSON() {\n    return {\n      components: this.components.map(c => c.toJSON()),\n      type: MessageComponentTypes[this.type],\n    };\n  }\n}\n\nmodule.exports = MessageActionRow;\n\n/**\n * @external APIMessageComponent\n * @see {@link https://discord.com/developers/docs/interactions/message-components#component-object}\n */\n","'use strict';\n\nconst Util = require('../util/Util');\n\n/**\n * Represents an attachment in a message.\n */\nclass MessageAttachment {\n  /**\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @param {APIAttachment} [data] Extra data\n   */\n  constructor(attachment, name = null, data) {\n    this.attachment = attachment;\n    /**\n     * The name of this attachment\n     * @type {?string}\n     */\n    this.name = name;\n    if (data) this._patch(data);\n  }\n\n  /**\n   * Sets the file of this attachment.\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @returns {MessageAttachment} This attachment\n   */\n  setFile(attachment, name = null) {\n    this.attachment = attachment;\n    this.name = name;\n    return this;\n  }\n\n  /**\n   * Sets the name of this attachment.\n   * @param {string} name The name of the file\n   * @returns {MessageAttachment} This attachment\n   */\n  setName(name) {\n    this.name = name;\n    return this;\n  }\n\n  _patch(data) {\n    /**\n     * The attachment's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The size of this attachment in bytes\n     * @type {number}\n     */\n    this.size = data.size;\n\n    /**\n     * The URL to this attachment\n     * @type {string}\n     */\n    this.url = data.url;\n\n    /**\n     * The Proxy URL to this attachment\n     * @type {string}\n     */\n    this.proxyURL = data.proxy_url;\n\n    /**\n     * The height of this attachment (if an image or video)\n     * @type {?number}\n     */\n    this.height = data.height ?? null;\n\n    /**\n     * The width of this attachment (if an image or video)\n     * @type {?number}\n     */\n    this.width = data.width ?? null;\n\n    /**\n     * This media type of this attachment\n     * @type {?string}\n     */\n    this.contentType = data.content_type ?? null;\n  }\n\n  /**\n   * Whether or not this attachment has been marked as a spoiler\n   * @type {boolean}\n   * @readonly\n   */\n  get spoiler() {\n    return Util.basename(this.url).startsWith('SPOILER_');\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n}\n\nmodule.exports = MessageAttachment;\n\n/**\n * @external APIAttachment\n * @see {@link https://discord.com/developers/docs/resources/channel#attachment-object}\n */\n","'use strict';\n\nconst BaseMessageComponent = require('./BaseMessageComponent');\nconst { RangeError } = require('../errors');\nconst { MessageButtonStyles, MessageComponentTypes } = require('../util/Constants');\nconst Util = require('../util/Util');\n\n/**\n * Represents a button message component.\n * @extends {BaseMessageComponent}\n */\nclass MessageButton extends BaseMessageComponent {\n  /**\n   * @typedef {BaseMessageComponentOptions} MessageButtonOptions\n   * @property {string} [label] The text to be displayed on this button\n   * @property {string} [customId] A unique string to be sent in the interaction when clicked\n   * @property {MessageButtonStyleResolvable} [style] The style of this button\n   * @property {EmojiIdentifierResolvable} [emoji] The emoji to be displayed to the left of the text\n   * @property {string} [url] Optional URL for link-style buttons\n   * @property {boolean} [disabled=false] Disables the button to prevent interactions\n   */\n\n  /**\n   * @param {MessageButton|MessageButtonOptions} [data={}] MessageButton to clone or raw data\n   */\n  constructor(data = {}) {\n    super({ type: 'BUTTON' });\n\n    this.setup(data);\n  }\n\n  setup(data) {\n    /**\n     * The text to be displayed on this button\n     * @type {?string}\n     */\n    this.label = data.label ?? null;\n\n    /**\n     * A unique string to be sent in the interaction when clicked\n     * @type {?string}\n     */\n    this.customId = data.custom_id ?? data.customId ?? null;\n\n    /**\n     * The style of this button\n     * @type {?MessageButtonStyle}\n     */\n    this.style = data.style ? MessageButton.resolveStyle(data.style) : null;\n\n    /**\n     * Emoji for this button\n     * @type {?RawEmoji}\n     */\n    this.emoji = data.emoji ? Util.resolvePartialEmoji(data.emoji) : null;\n\n    /**\n     * The URL this button links to, if it is a Link style button\n     * @type {?string}\n     */\n    this.url = data.url ?? null;\n\n    /**\n     * Whether this button is currently disabled\n     * @type {boolean}\n     */\n    this.disabled = data.disabled ?? false;\n  }\n\n  /**\n   * Sets the custom id for this button\n   * @param {string} customId A unique string to be sent in the interaction when clicked\n   * @returns {MessageButton}\n   */\n  setCustomId(customId) {\n    this.customId = Util.verifyString(customId, RangeError, 'BUTTON_CUSTOM_ID');\n    return this;\n  }\n\n  /**\n   * Sets the interactive status of the button\n   * @param {boolean} [disabled=true] Whether this button should be disabled\n   * @returns {MessageButton}\n   */\n  setDisabled(disabled = true) {\n    this.disabled = disabled;\n    return this;\n  }\n\n  /**\n   * Set the emoji of this button\n   * @param {EmojiIdentifierResolvable} emoji The emoji to be displayed on this button\n   * @returns {MessageButton}\n   */\n  setEmoji(emoji) {\n    this.emoji = Util.resolvePartialEmoji(emoji);\n    return this;\n  }\n\n  /**\n   * Sets the label of this button\n   * @param {string} label The text to be displayed on this button\n   * @returns {MessageButton}\n   */\n  setLabel(label) {\n    this.label = Util.verifyString(label, RangeError, 'BUTTON_LABEL');\n    return this;\n  }\n\n  /**\n   * Sets the style of this button\n   * @param {MessageButtonStyleResolvable} style The style of this button\n   * @returns {MessageButton}\n   */\n  setStyle(style) {\n    this.style = MessageButton.resolveStyle(style);\n    return this;\n  }\n\n  /**\n   * Sets the URL of this button.\n   * <note>MessageButton#style must be LINK when setting a URL</note>\n   * @param {string} url The URL of this button\n   * @returns {MessageButton}\n   */\n  setURL(url) {\n    this.url = Util.verifyString(url, RangeError, 'BUTTON_URL');\n    return this;\n  }\n\n  /**\n   * Transforms the button to a plain object.\n   * @returns {APIMessageComponent} The raw data of this button\n   */\n  toJSON() {\n    return {\n      custom_id: this.customId,\n      disabled: this.disabled,\n      emoji: this.emoji,\n      label: this.label,\n      style: MessageButtonStyles[this.style],\n      type: MessageComponentTypes[this.type],\n      url: this.url,\n    };\n  }\n\n  /**\n   * Data that can be resolved to a MessageButtonStyle. This can be\n   * * MessageButtonStyle\n   * * number\n   * @typedef {number|MessageButtonStyle} MessageButtonStyleResolvable\n   */\n\n  /**\n   * Resolves the style of a button\n   * @param {MessageButtonStyleResolvable} style The style to resolve\n   * @returns {MessageButtonStyle}\n   * @private\n   */\n  static resolveStyle(style) {\n    return typeof style === 'string' ? style : MessageButtonStyles[style];\n  }\n}\n\nmodule.exports = MessageButton;\n","'use strict';\n\nconst Collector = require('./interfaces/Collector');\nconst { Events } = require('../util/Constants');\n\n/**\n * @typedef {CollectorOptions} MessageCollectorOptions\n * @property {number} max The maximum amount of messages to collect\n * @property {number} maxProcessed The maximum amount of messages to process\n */\n\n/**\n * Collects messages on a channel.\n * Will automatically stop if the channel (`'channelDelete'`) or guild (`'guildDelete'`) are deleted.\n * @extends {Collector}\n */\nclass MessageCollector extends Collector {\n  /**\n   * @param {TextBasedChannels} channel The channel\n   * @param {MessageCollectorOptions} options The options to be applied to this collector\n   * @emits MessageCollector#message\n   */\n  constructor(channel, options = {}) {\n    super(channel.client, options);\n\n    /**\n     * The channel\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n\n    /**\n     * Total number of messages that were received in the channel during message collection\n     * @type {number}\n     */\n    this.received = 0;\n\n    const bulkDeleteListener = messages => {\n      for (const message of messages.values()) this.handleDispose(message);\n    };\n    this._handleChannelDeletion = this._handleChannelDeletion.bind(this);\n    this._handleGuildDeletion = this._handleGuildDeletion.bind(this);\n\n    this.client.incrementMaxListeners();\n    this.client.on(Events.MESSAGE_CREATE, this.handleCollect);\n    this.client.on(Events.MESSAGE_DELETE, this.handleDispose);\n    this.client.on(Events.MESSAGE_BULK_DELETE, bulkDeleteListener);\n    this.client.on(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n    this.client.on(Events.GUILD_DELETE, this._handleGuildDeletion);\n\n    this.once('end', () => {\n      this.client.removeListener(Events.MESSAGE_CREATE, this.handleCollect);\n      this.client.removeListener(Events.MESSAGE_DELETE, this.handleDispose);\n      this.client.removeListener(Events.MESSAGE_BULK_DELETE, bulkDeleteListener);\n      this.client.removeListener(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n      this.client.removeListener(Events.GUILD_DELETE, this._handleGuildDeletion);\n      this.client.decrementMaxListeners();\n    });\n  }\n\n  /**\n   * Handles a message for possible collection.\n   * @param {Message} message The message that could be collected\n   * @returns {?Snowflake}\n   * @private\n   */\n  collect(message) {\n    /**\n     * Emitted whenever a message is collected.\n     * @event MessageCollector#collect\n     * @param {Message} message The message that was collected\n     */\n    if (message.channelId !== this.channel.id) return null;\n    this.received++;\n    return message.id;\n  }\n\n  /**\n   * Handles a message for possible disposal.\n   * @param {Message} message The message that could be disposed of\n   * @returns {?Snowflake}\n   */\n  dispose(message) {\n    /**\n     * Emitted whenever a message is disposed of.\n     * @event MessageCollector#dispose\n     * @param {Message} message The message that was disposed of\n     */\n    return message.channelId === this.channel.id ? message.id : null;\n  }\n\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   */\n  get endReason() {\n    if (this.options.max && this.collected.size >= this.options.max) return 'limit';\n    if (this.options.maxProcessed && this.received === this.options.maxProcessed) return 'processedLimit';\n    return null;\n  }\n\n  /**\n   * Handles checking if the channel has been deleted, and if so, stops the collector with the reason 'channelDelete'.\n   * @private\n   * @param {GuildChannel} channel The channel that was deleted\n   * @returns {void}\n   */\n  _handleChannelDeletion(channel) {\n    if (channel.id === this.channel.id) {\n      this.stop('channelDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the guild has been deleted, and if so, stops the collector with the reason 'guildDelete'.\n   * @private\n   * @param {Guild} guild The guild that was deleted\n   * @returns {void}\n   */\n  _handleGuildDeletion(guild) {\n    if (guild.id === this.channel.guild?.id) {\n      this.stop('guildDelete');\n    }\n  }\n}\n\nmodule.exports = MessageCollector;\n","'use strict';\n\nconst Interaction = require('./Interaction');\nconst InteractionWebhook = require('./InteractionWebhook');\nconst InteractionResponses = require('./interfaces/InteractionResponses');\nconst { MessageComponentTypes } = require('../util/Constants');\n\n/**\n * Represents a message component interaction.\n * @extends {Interaction}\n * @implements {InteractionResponses}\n */\nclass MessageComponentInteraction extends Interaction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The message to which the component was attached\n     * @type {Message|APIMessage}\n     */\n    this.message = this.channel?.messages._add(data.message) ?? data.message;\n\n    /**\n     * The custom id of the component which was interacted with\n     * @type {string}\n     */\n    this.customId = data.data.custom_id;\n\n    /**\n     * The type of component which was interacted with\n     * @type {string}\n     */\n    this.componentType = MessageComponentInteraction.resolveType(data.data.component_type);\n\n    /**\n     * Whether the reply to this interaction has been deferred\n     * @type {boolean}\n     */\n    this.deferred = false;\n\n    /**\n     * Whether the reply to this interaction is ephemeral\n     * @type {?boolean}\n     */\n    this.ephemeral = null;\n\n    /**\n     * Whether this interaction has already been replied to\n     * @type {boolean}\n     */\n    this.replied = false;\n\n    /**\n     * An associated interaction webhook, can be used to further interact with this interaction\n     * @type {InteractionWebhook}\n     */\n    this.webhook = new InteractionWebhook(this.client, this.applicationId, this.token);\n  }\n\n  /**\n   * Raw message components from the API\n   * * APIMessageButton\n   * * APIMessageSelectMenu\n   * @typedef {APIMessageButton|APIMessageSelectMenu} APIMessageActionRowComponent\n   */\n\n  /**\n   * The component which was interacted with\n   * @type {?(MessageActionRowComponent|APIMessageActionRowComponent)}\n   * @readonly\n   */\n  get component() {\n    return (\n      this.message.components\n        .flatMap(row => row.components)\n        .find(component => (component.customId ?? component.custom_id) === this.customId) ?? null\n    );\n  }\n\n  /**\n   * Resolves the type of a MessageComponent\n   * @param {MessageComponentTypeResolvable} type The type to resolve\n   * @returns {MessageComponentType}\n   * @private\n   */\n  static resolveType(type) {\n    return typeof type === 'string' ? type : MessageComponentTypes[type];\n  }\n\n  // These are here only for documentation purposes - they are implemented by InteractionResponses\n  /* eslint-disable no-empty-function */\n  deferReply() {}\n  reply() {}\n  fetchReply() {}\n  editReply() {}\n  deleteReply() {}\n  followUp() {}\n  deferUpdate() {}\n  update() {}\n}\n\nInteractionResponses.applyToClass(MessageComponentInteraction);\n\nmodule.exports = MessageComponentInteraction;\n\n/**\n * @external APIMessageSelectMenu\n * @see {@link https://discord.com/developers/docs/interactions/message-components#select-menu-object}\n */\n\n/**\n * @external APIMessageButton\n * @see {@link https://discord.com/developers/docs/interactions/message-components#button-object}\n */\n","'use strict';\n\nconst { RangeError } = require('../errors');\nconst Util = require('../util/Util');\n\n/**\n * Represents an embed in a message (image/video preview, rich embed, etc.)\n */\nclass MessageEmbed {\n  /**\n   * @name MessageEmbed\n   * @kind constructor\n   * @memberof MessageEmbed\n   * @param {MessageEmbed|MessageEmbedOptions} [data={}] MessageEmbed to clone or raw embed data\n   */\n\n  /**\n   * A `Partial` object is a representation of any existing object.\n   * This object contains between 0 and all of the original objects parameters.\n   * This is true regardless of whether the parameters are optional in the base object.\n   * @typedef {Object} Partial\n   */\n\n  /**\n   * Represents the possible options for a MessageEmbed\n   * @typedef {Object} MessageEmbedOptions\n   * @property {string} [title] The title of this embed\n   * @property {string} [description] The description of this embed\n   * @property {string} [url] The URL of this embed\n   * @property {Date|number} [timestamp] The timestamp of this embed\n   * @property {ColorResolvable} [color] The color of this embed\n   * @property {EmbedFieldData[]} [fields] The fields of this embed\n   * @property {Partial<MessageEmbedAuthor>} [author] The author of this embed\n   * @property {Partial<MessageEmbedThumbnail>} [thumbnail] The thumbnail of this embed\n   * @property {Partial<MessageEmbedImage>} [image] The image of this embed\n   * @property {Partial<MessageEmbedVideo>} [video] The video of this embed\n   * @property {Partial<MessageEmbedFooter>} [footer] The footer of this embed\n   */\n\n  constructor(data = {}, skipValidation = false) {\n    this.setup(data, skipValidation);\n  }\n\n  setup(data, skipValidation) {\n    /**\n     * The type of this embed, either:\n     * * `rich` - a generic embed rendered from embed attributes\n     * * `image` - an image embed\n     * * `video` - a video embed\n     * * `gifv` - an animated gif image embed rendered as a video embed\n     * * `article` - an article embed\n     * * `link` - a link embed\n     * @type {string}\n     * @see {@link https://discord.com/developers/docs/resources/channel#embed-object-embed-types}\n     * @deprecated\n     */\n    this.type = data.type ?? 'rich';\n\n    /**\n     * The title of this embed\n     * @type {?string}\n     */\n    this.title = data.title ?? null;\n\n    /**\n     * The description of this embed\n     * @type {?string}\n     */\n    this.description = data.description ?? null;\n\n    /**\n     * The URL of this embed\n     * @type {?string}\n     */\n    this.url = data.url ?? null;\n\n    /**\n     * The color of this embed\n     * @type {?number}\n     */\n    this.color = 'color' in data ? Util.resolveColor(data.color) : null;\n\n    /**\n     * The timestamp of this embed\n     * @type {?number}\n     */\n    this.timestamp = 'timestamp' in data ? new Date(data.timestamp).getTime() : null;\n\n    /**\n     * Represents a field of a MessageEmbed\n     * @typedef {Object} EmbedField\n     * @property {string} name The name of this field\n     * @property {string} value The value of this field\n     * @property {boolean} inline If this field will be displayed inline\n     */\n\n    /**\n     * The fields of this embed\n     * @type {EmbedField[]}\n     */\n    this.fields = [];\n    if (data.fields) {\n      this.fields = skipValidation ? data.fields.map(Util.cloneObject) : this.constructor.normalizeFields(data.fields);\n    }\n\n    /**\n     * Represents the thumbnail of a MessageEmbed\n     * @typedef {Object} MessageEmbedThumbnail\n     * @property {string} url URL for this thumbnail\n     * @property {string} proxyURL ProxyURL for this thumbnail\n     * @property {number} height Height of this thumbnail\n     * @property {number} width Width of this thumbnail\n     */\n\n    /**\n     * The thumbnail of this embed (if there is one)\n     * @type {?MessageEmbedThumbnail}\n     */\n    this.thumbnail = data.thumbnail\n      ? {\n          url: data.thumbnail.url,\n          proxyURL: data.thumbnail.proxyURL ?? data.thumbnail.proxy_url,\n          height: data.thumbnail.height,\n          width: data.thumbnail.width,\n        }\n      : null;\n\n    /**\n     * Represents the image of a MessageEmbed\n     * @typedef {Object} MessageEmbedImage\n     * @property {string} url URL for this image\n     * @property {string} proxyURL ProxyURL for this image\n     * @property {number} height Height of this image\n     * @property {number} width Width of this image\n     */\n\n    /**\n     * The image of this embed, if there is one\n     * @type {?MessageEmbedImage}\n     */\n    this.image = data.image\n      ? {\n          url: data.image.url,\n          proxyURL: data.image.proxyURL ?? data.image.proxy_url,\n          height: data.image.height,\n          width: data.image.width,\n        }\n      : null;\n\n    /**\n     * Represents the video of a MessageEmbed\n     * @typedef {Object} MessageEmbedVideo\n     * @property {string} url URL of this video\n     * @property {string} proxyURL ProxyURL for this video\n     * @property {number} height Height of this video\n     * @property {number} width Width of this video\n     */\n\n    /**\n     * The video of this embed (if there is one)\n     * @type {?MessageEmbedVideo}\n     * @readonly\n     */\n    this.video = data.video\n      ? {\n          url: data.video.url,\n          proxyURL: data.video.proxyURL ?? data.video.proxy_url,\n          height: data.video.height,\n          width: data.video.width,\n        }\n      : null;\n\n    /**\n     * Represents the author field of a MessageEmbed\n     * @typedef {Object} MessageEmbedAuthor\n     * @property {string} name The name of this author\n     * @property {string} url URL of this author\n     * @property {string} iconURL URL of the icon for this author\n     * @property {string} proxyIconURL Proxied URL of the icon for this author\n     */\n\n    /**\n     * The author of this embed (if there is one)\n     * @type {?MessageEmbedAuthor}\n     */\n    this.author = data.author\n      ? {\n          name: data.author.name,\n          url: data.author.url,\n          iconURL: data.author.iconURL ?? data.author.icon_url,\n          proxyIconURL: data.author.proxyIconURL ?? data.author.proxy_icon_url,\n        }\n      : null;\n\n    /**\n     * Represents the provider of a MessageEmbed\n     * @typedef {Object} MessageEmbedProvider\n     * @property {string} name The name of this provider\n     * @property {string} url URL of this provider\n     */\n\n    /**\n     * The provider of this embed (if there is one)\n     * @type {?MessageEmbedProvider}\n     */\n    this.provider = data.provider\n      ? {\n          name: data.provider.name,\n          url: data.provider.name,\n        }\n      : null;\n\n    /**\n     * Represents the footer field of a MessageEmbed\n     * @typedef {Object} MessageEmbedFooter\n     * @property {string} text The text of this footer\n     * @property {string} iconURL URL of the icon for this footer\n     * @property {string} proxyIconURL Proxied URL of the icon for this footer\n     */\n\n    /**\n     * The footer of this embed\n     * @type {?MessageEmbedFooter}\n     */\n    this.footer = data.footer\n      ? {\n          text: data.footer.text,\n          iconURL: data.footer.iconURL ?? data.footer.icon_url,\n          proxyIconURL: data.footer.proxyIconURL ?? data.footer.proxy_icon_url,\n        }\n      : null;\n  }\n\n  /**\n   * The date displayed on this embed\n   * @type {?Date}\n   * @readonly\n   */\n  get createdAt() {\n    return this.timestamp ? new Date(this.timestamp) : null;\n  }\n\n  /**\n   * The hexadecimal version of the embed color, with a leading hash\n   * @type {?string}\n   * @readonly\n   */\n  get hexColor() {\n    return this.color ? `#${this.color.toString(16).padStart(6, '0')}` : null;\n  }\n\n  /**\n   * The accumulated length for the embed title, description, fields, footer text, and author name\n   * @type {number}\n   * @readonly\n   */\n  get length() {\n    return (\n      (this.title?.length ?? 0) +\n      (this.description?.length ?? 0) +\n      (this.fields.length >= 1\n        ? this.fields.reduce((prev, curr) => prev + curr.name.length + curr.value.length, 0)\n        : 0) +\n      (this.footer?.text.length ?? 0) +\n      (this.author?.name.length ?? 0)\n    );\n  }\n\n  /**\n   * Adds a field to the embed (max 25).\n   * @param {string} name The name of this field\n   * @param {string} value The value of this field\n   * @param {boolean} [inline=false] If this field will be displayed inline\n   * @returns {MessageEmbed}\n   */\n  addField(name, value, inline) {\n    return this.addFields({ name, value, inline });\n  }\n\n  /**\n   * Adds fields to the embed (max 25).\n   * @param {...EmbedFieldData|EmbedFieldData[]} fields The fields to add\n   * @returns {MessageEmbed}\n   */\n  addFields(...fields) {\n    this.fields.push(...this.constructor.normalizeFields(fields));\n    return this;\n  }\n\n  /**\n   * Removes, replaces, and inserts fields in the embed (max 25).\n   * @param {number} index The index to start at\n   * @param {number} deleteCount The number of fields to remove\n   * @param {...EmbedFieldData|EmbedFieldData[]} [fields] The replacing field objects\n   * @returns {MessageEmbed}\n   */\n  spliceFields(index, deleteCount, ...fields) {\n    this.fields.splice(index, deleteCount, ...this.constructor.normalizeFields(...fields));\n    return this;\n  }\n\n  /**\n   * Sets the embed's fields (max 25).\n   * @param {...EmbedFieldData|EmbedFieldData[]} fields The fields to set\n   * @returns {MessageEmbed}\n   */\n  setFields(...fields) {\n    this.spliceFields(0, this.fields.length, fields);\n    return this;\n  }\n\n  /**\n   * Sets the author of this embed.\n   * @param {string} name The name of the author\n   * @param {string} [iconURL] The icon URL of the author\n   * @param {string} [url] The URL of the author\n   * @returns {MessageEmbed}\n   */\n  setAuthor(name, iconURL, url) {\n    this.author = { name: Util.verifyString(name, RangeError, 'EMBED_AUTHOR_NAME'), iconURL, url };\n    return this;\n  }\n\n  /**\n   * Sets the color of this embed.\n   * @param {ColorResolvable} color The color of the embed\n   * @returns {MessageEmbed}\n   */\n  setColor(color) {\n    this.color = Util.resolveColor(color);\n    return this;\n  }\n\n  /**\n   * Sets the description of this embed.\n   * @param {string} description The description\n   * @returns {MessageEmbed}\n   */\n  setDescription(description) {\n    this.description = Util.verifyString(description, RangeError, 'EMBED_DESCRIPTION');\n    return this;\n  }\n\n  /**\n   * Sets the footer of this embed.\n   * @param {string} text The text of the footer\n   * @param {string} [iconURL] The icon URL of the footer\n   * @returns {MessageEmbed}\n   */\n  setFooter(text, iconURL) {\n    this.footer = { text: Util.verifyString(text, RangeError, 'EMBED_FOOTER_TEXT'), iconURL };\n    return this;\n  }\n\n  /**\n   * Sets the image of this embed.\n   * @param {string} url The URL of the image\n   * @returns {MessageEmbed}\n   */\n  setImage(url) {\n    this.image = { url };\n    return this;\n  }\n\n  /**\n   * Sets the thumbnail of this embed.\n   * @param {string} url The URL of the thumbnail\n   * @returns {MessageEmbed}\n   */\n  setThumbnail(url) {\n    this.thumbnail = { url };\n    return this;\n  }\n\n  /**\n   * Sets the timestamp of this embed.\n   * @param {Date|number} [timestamp=Date.now()] The timestamp or date\n   * @returns {MessageEmbed}\n   */\n  setTimestamp(timestamp = Date.now()) {\n    if (timestamp instanceof Date) timestamp = timestamp.getTime();\n    this.timestamp = timestamp;\n    return this;\n  }\n\n  /**\n   * Sets the title of this embed.\n   * @param {string} title The title\n   * @returns {MessageEmbed}\n   */\n  setTitle(title) {\n    this.title = Util.verifyString(title, RangeError, 'EMBED_TITLE');\n    return this;\n  }\n\n  /**\n   * Sets the URL of this embed.\n   * @param {string} url The URL\n   * @returns {MessageEmbed}\n   */\n  setURL(url) {\n    this.url = url;\n    return this;\n  }\n\n  /**\n   * Transforms the embed to a plain object.\n   * @returns {APIEmbed} The raw data of this embed\n   */\n  toJSON() {\n    return {\n      title: this.title,\n      type: 'rich',\n      description: this.description,\n      url: this.url,\n      timestamp: this.timestamp && new Date(this.timestamp),\n      color: this.color,\n      fields: this.fields,\n      thumbnail: this.thumbnail,\n      image: this.image,\n      author: this.author && {\n        name: this.author.name,\n        url: this.author.url,\n        icon_url: this.author.iconURL,\n      },\n      footer: this.footer && {\n        text: this.footer.text,\n        icon_url: this.footer.iconURL,\n      },\n    };\n  }\n\n  /**\n   * Normalizes field input and verifies strings.\n   * @param {string} name The name of the field\n   * @param {string} value The value of the field\n   * @param {boolean} [inline=false] Set the field to display inline\n   * @returns {EmbedField}\n   */\n  static normalizeField(name, value, inline = false) {\n    return {\n      name: Util.verifyString(name, RangeError, 'EMBED_FIELD_NAME', false),\n      value: Util.verifyString(value, RangeError, 'EMBED_FIELD_VALUE', false),\n      inline,\n    };\n  }\n\n  /**\n   * @typedef {Object} EmbedFieldData\n   * @property {string} name The name of this field\n   * @property {string} value The value of this field\n   * @property {boolean} [inline] If this field will be displayed inline\n   */\n\n  /**\n   * Normalizes field input and resolves strings.\n   * @param  {...EmbedFieldData|EmbedFieldData[]} fields Fields to normalize\n   * @returns {EmbedField[]}\n   */\n  static normalizeFields(...fields) {\n    return fields\n      .flat(2)\n      .map(field =>\n        this.normalizeField(field.name, field.value, typeof field.inline === 'boolean' ? field.inline : false),\n      );\n  }\n}\n\nmodule.exports = MessageEmbed;\n\n/**\n * @external APIEmbed\n * @see {@link https://discord.com/developers/docs/resources/channel#embed-object}\n */\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { ChannelTypes } = require('../util/Constants');\nconst Util = require('../util/Util');\n\n/**\n * Keeps track of mentions in a {@link Message}.\n */\nclass MessageMentions {\n  constructor(message, users, roles, everyone, crosspostedChannels, repliedUser) {\n    /**\n     * The client the message is from\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: message.client });\n\n    /**\n     * The guild the message is in\n     * @type {?Guild}\n     * @readonly\n     */\n    Object.defineProperty(this, 'guild', { value: message.guild });\n\n    /**\n     * The initial message content\n     * @type {string}\n     * @readonly\n     * @private\n     */\n    Object.defineProperty(this, '_content', { value: message.content });\n\n    /**\n     * Whether `@everyone` or `@here` were mentioned\n     * @type {boolean}\n     */\n    this.everyone = Boolean(everyone);\n\n    if (users) {\n      if (users instanceof Collection) {\n        /**\n         * Any users that were mentioned\n         * <info>Order as received from the API, not as they appear in the message content</info>\n         * @type {Collection<Snowflake, User>}\n         */\n        this.users = new Collection(users);\n      } else {\n        this.users = new Collection();\n        for (const mention of users) {\n          if (mention.member && message.guild) {\n            message.guild.members._add(Object.assign(mention.member, { user: mention }));\n          }\n          const user = message.client.users._add(mention);\n          this.users.set(user.id, user);\n        }\n      }\n    } else {\n      this.users = new Collection();\n    }\n\n    if (roles instanceof Collection) {\n      /**\n       * Any roles that were mentioned\n       * <info>Order as received from the API, not as they appear in the message content</info>\n       * @type {Collection<Snowflake, Role>}\n       */\n      this.roles = new Collection(roles);\n    } else if (roles) {\n      this.roles = new Collection();\n      const guild = message.guild;\n      if (guild) {\n        for (const mention of roles) {\n          const role = guild.roles.cache.get(mention);\n          if (role) this.roles.set(role.id, role);\n        }\n      }\n    } else {\n      this.roles = new Collection();\n    }\n\n    /**\n     * Cached members for {@link MessageMentions#members}\n     * @type {?Collection<Snowflake, GuildMember>}\n     * @private\n     */\n    this._members = null;\n\n    /**\n     * Cached channels for {@link MessageMentions#channels}\n     * @type {?Collection<Snowflake, Channel>}\n     * @private\n     */\n    this._channels = null;\n\n    /**\n     * Crossposted channel data.\n     * @typedef {Object} CrosspostedChannel\n     * @property {Snowflake} channelId The mentioned channel's id\n     * @property {Snowflake} guildId The id of the guild that has the channel\n     * @property {ChannelType} type The channel's type\n     * @property {string} name The channel's name\n     */\n\n    if (crosspostedChannels) {\n      if (crosspostedChannels instanceof Collection) {\n        /**\n         * A collection of crossposted channels\n         * <info>Order as received from the API, not as they appear in the message content</info>\n         * @type {Collection<Snowflake, CrosspostedChannel>}\n         */\n        this.crosspostedChannels = new Collection(crosspostedChannels);\n      } else {\n        this.crosspostedChannels = new Collection();\n        const channelTypes = Object.keys(ChannelTypes);\n        for (const d of crosspostedChannels) {\n          const type = channelTypes[d.type];\n          this.crosspostedChannels.set(d.id, {\n            channelId: d.id,\n            guildId: d.guild_id,\n            type: type ?? 'UNKNOWN',\n            name: d.name,\n          });\n        }\n      }\n    } else {\n      this.crosspostedChannels = new Collection();\n    }\n\n    /**\n     * The author of the message that this message is a reply to\n     * @type {?User}\n     */\n    this.repliedUser = repliedUser ? this.client.users._add(repliedUser) : null;\n  }\n\n  /**\n   * Any members that were mentioned (only in {@link Guild}s)\n   * <info>Order as received from the API, not as they appear in the message content</info>\n   * @type {?Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    if (this._members) return this._members;\n    if (!this.guild) return null;\n    this._members = new Collection();\n    this.users.forEach(user => {\n      const member = this.guild.members.resolve(user);\n      if (member) this._members.set(member.user.id, member);\n    });\n    return this._members;\n  }\n\n  /**\n   * Any channels that were mentioned\n   * <info>Order as they appear first in the message content</info>\n   * @type {Collection<Snowflake, Channel>}\n   * @readonly\n   */\n  get channels() {\n    if (this._channels) return this._channels;\n    this._channels = new Collection();\n    let matches;\n    while ((matches = this.constructor.CHANNELS_PATTERN.exec(this._content)) !== null) {\n      const chan = this.client.channels.cache.get(matches[1]);\n      if (chan) this._channels.set(chan.id, chan);\n    }\n    return this._channels;\n  }\n\n  /**\n   * Options used to check for a mention.\n   * @typedef {Object} MessageMentionsHasOptions\n   * @property {boolean} [ignoreDirect=false] Whether to ignore direct mentions to the item\n   * @property {boolean} [ignoreRoles=false] Whether to ignore role mentions to a guild member\n   * @property {boolean} [ignoreEveryone=false] Whether to ignore everyone/here mentions\n   */\n\n  /**\n   * Checks if a user, guild member, role, or channel is mentioned.\n   * Takes into account user mentions, role mentions, and `@everyone`/`@here` mentions.\n   * @param {UserResolvable|RoleResolvable|ChannelResolvable} data The User/Role/Channel to check for\n   * @param {MessageMentionsHasOptions} [options] The options for the check\n   * @returns {boolean}\n   */\n  has(data, { ignoreDirect = false, ignoreRoles = false, ignoreEveryone = false } = {}) {\n    if (!ignoreEveryone && this.everyone) return true;\n    const GuildMember = require('./GuildMember');\n    if (!ignoreRoles && data instanceof GuildMember) {\n      for (const role of this.roles.values()) if (data.roles.cache.has(role.id)) return true;\n    }\n\n    if (!ignoreDirect) {\n      const id =\n        this.guild?.roles.resolveId(data) ?? this.client.channels.resolveId(data) ?? this.client.users.resolveId(data);\n\n      return typeof id === 'string' && (this.users.has(id) || this.channels.has(id) || this.roles.has(id));\n    }\n\n    return false;\n  }\n\n  toJSON() {\n    return Util.flatten(this, {\n      members: true,\n      channels: true,\n    });\n  }\n}\n\n/**\n * Regular expression that globally matches `@everyone` and `@here`\n * @type {RegExp}\n */\nMessageMentions.EVERYONE_PATTERN = /@(everyone|here)/g;\n\n/**\n * Regular expression that globally matches user mentions like `<@81440962496172032>`\n * @type {RegExp}\n */\nMessageMentions.USERS_PATTERN = /<@!?(\\d{17,19})>/g;\n\n/**\n * Regular expression that globally matches role mentions like `<@&297577916114403338>`\n * @type {RegExp}\n */\nMessageMentions.ROLES_PATTERN = /<@&(\\d{17,19})>/g;\n\n/**\n * Regular expression that globally matches channel mentions like `<#222079895583457280>`\n * @type {RegExp}\n */\nMessageMentions.CHANNELS_PATTERN = /<#(\\d{17,19})>/g;\n\nmodule.exports = MessageMentions;\n","'use strict';\n\nconst BaseMessageComponent = require('./BaseMessageComponent');\nconst MessageEmbed = require('./MessageEmbed');\nconst { RangeError } = require('../errors');\nconst DataResolver = require('../util/DataResolver');\nconst MessageFlags = require('../util/MessageFlags');\nconst Util = require('../util/Util');\n\n/**\n * Represents a message to be sent to the API.\n */\nclass MessagePayload {\n  /**\n   * @param {MessageTarget} target - The target for this message to be sent to\n   * @param {MessageOptions|WebhookMessageOptions} options - Options passed in from send\n   */\n  constructor(target, options) {\n    /**\n     * The target for this message to be sent to\n     * @type {MessageTarget}\n     */\n    this.target = target;\n\n    /**\n     * Options passed in from send\n     * @type {MessageOptions|WebhookMessageOptions}\n     */\n    this.options = options;\n\n    /**\n     * Data sendable to the API\n     * @type {?APIMessage}\n     */\n    this.data = null;\n\n    /**\n     * @typedef {Object} MessageFile\n     * @property {Buffer|string|Stream} attachment The original attachment that generated this file\n     * @property {string} name The name of this file\n     * @property {Buffer|Stream} file The file to be sent to the API\n     */\n\n    /**\n     * Files sendable to the API\n     * @type {?MessageFile[]}\n     */\n    this.files = null;\n  }\n\n  /**\n   * Whether or not the target is a {@link Webhook} or a {@link WebhookClient}\n   * @type {boolean}\n   * @readonly\n   */\n  get isWebhook() {\n    const Webhook = require('./Webhook');\n    const WebhookClient = require('../client/WebhookClient');\n    return this.target instanceof Webhook || this.target instanceof WebhookClient;\n  }\n\n  /**\n   * Whether or not the target is a {@link User}\n   * @type {boolean}\n   * @readonly\n   */\n  get isUser() {\n    const User = require('./User');\n    const GuildMember = require('./GuildMember');\n    return this.target instanceof User || this.target instanceof GuildMember;\n  }\n\n  /**\n   * Whether or not the target is a {@link Message}\n   * @type {boolean}\n   * @readonly\n   */\n  get isMessage() {\n    const Message = require('./Message');\n    return this.target instanceof Message;\n  }\n\n  /**\n   * Wether or not the target is a {@link MessageManager}\n   * @type {boolean}\n   * @readonly\n   */\n  get isMessageManager() {\n    const MessageManager = require('../managers/MessageManager');\n    return this.target instanceof MessageManager;\n  }\n\n  /**\n   * Whether or not the target is an {@link Interaction} or an {@link InteractionWebhook}\n   * @type {boolean}\n   * @readonly\n   */\n  get isInteraction() {\n    const Interaction = require('./Interaction');\n    const InteractionWebhook = require('./InteractionWebhook');\n    return this.target instanceof Interaction || this.target instanceof InteractionWebhook;\n  }\n\n  /**\n   * Makes the content of this message.\n   * @returns {?string}\n   */\n  makeContent() {\n    let content;\n    if (this.options.content === null) {\n      content = '';\n    } else if (typeof this.options.content !== 'undefined') {\n      content = Util.verifyString(this.options.content, RangeError, 'MESSAGE_CONTENT_TYPE', false);\n    }\n\n    return content;\n  }\n\n  /**\n   * Resolves data.\n   * @returns {MessagePayload}\n   */\n  resolveData() {\n    if (this.data) return this;\n    const isInteraction = this.isInteraction;\n    const isWebhook = this.isWebhook;\n\n    const content = this.makeContent();\n    const tts = Boolean(this.options.tts);\n\n    let nonce;\n    if (typeof this.options.nonce !== 'undefined') {\n      nonce = this.options.nonce;\n      // eslint-disable-next-line max-len\n      if (typeof nonce === 'number' ? !Number.isInteger(nonce) : typeof nonce !== 'string') {\n        throw new RangeError('MESSAGE_NONCE_TYPE');\n      }\n    }\n\n    const components = this.options.components?.map(c => BaseMessageComponent.create(c).toJSON());\n\n    let username;\n    let avatarURL;\n    if (isWebhook) {\n      username = this.options.username ?? this.target.name;\n      if (this.options.avatarURL) avatarURL = this.options.avatarURL;\n    }\n\n    let flags;\n    if (this.isMessage || this.isMessageManager) {\n      // eslint-disable-next-line eqeqeq\n      flags = this.options.flags != null ? new MessageFlags(this.options.flags).bitfield : this.target.flags?.bitfield;\n    } else if (isInteraction && this.options.ephemeral) {\n      flags = MessageFlags.FLAGS.EPHEMERAL;\n    }\n\n    let allowedMentions =\n      typeof this.options.allowedMentions === 'undefined'\n        ? this.target.client.options.allowedMentions\n        : this.options.allowedMentions;\n\n    if (allowedMentions) {\n      allowedMentions = Util.cloneObject(allowedMentions);\n      allowedMentions.replied_user = allowedMentions.repliedUser;\n      delete allowedMentions.repliedUser;\n    }\n\n    let message_reference;\n    if (typeof this.options.reply === 'object') {\n      const reference = this.options.reply.messageReference;\n      const message_id = this.isMessage ? reference.id ?? reference : this.target.messages.resolveId(reference);\n      if (message_id) {\n        message_reference = {\n          message_id,\n          fail_if_not_exists: this.options.reply.failIfNotExists ?? this.target.client.options.failIfNotExists,\n        };\n      }\n    }\n\n    this.data = {\n      content,\n      tts,\n      nonce,\n      embeds: this.options.embeds?.map(embed => new MessageEmbed(embed).toJSON()),\n      components,\n      username,\n      avatar_url: avatarURL,\n      allowed_mentions:\n        typeof content === 'undefined' && typeof message_reference === 'undefined' ? undefined : allowedMentions,\n      flags,\n      message_reference,\n      attachments: this.options.attachments,\n      sticker_ids: this.options.stickers?.map(sticker => sticker.id ?? sticker),\n    };\n    return this;\n  }\n\n  /**\n   * Resolves files.\n   * @returns {Promise<MessagePayload>}\n   */\n  async resolveFiles() {\n    if (this.files) return this;\n\n    this.files = await Promise.all(this.options.files?.map(file => this.constructor.resolveFile(file)) ?? []);\n    return this;\n  }\n\n  /**\n   * Resolves a single file into an object sendable to the API.\n   * @param {BufferResolvable|Stream|FileOptions|MessageAttachment} fileLike Something that could be resolved to a file\n   * @returns {MessageFile}\n   */\n  static async resolveFile(fileLike) {\n    let attachment;\n    let name;\n\n    const findName = thing => {\n      if (typeof thing === 'string') {\n        return Util.basename(thing);\n      }\n\n      if (thing.path) {\n        return Util.basename(thing.path);\n      }\n\n      return 'file.jpg';\n    };\n\n    const ownAttachment =\n      typeof fileLike === 'string' || fileLike instanceof Buffer || typeof fileLike.pipe === 'function';\n    if (ownAttachment) {\n      attachment = fileLike;\n      name = findName(attachment);\n    } else {\n      attachment = fileLike.attachment;\n      name = fileLike.name ?? findName(attachment);\n    }\n\n    const resource = await DataResolver.resolveFile(attachment);\n    return { attachment, name, file: resource };\n  }\n\n  /**\n   * Creates a {@link MessagePayload} from user-level arguments.\n   * @param {MessageTarget} target Target to send to\n   * @param {string|MessageOptions|WebhookMessageOptions} options Options or content to use\n   * @param {MessageOptions|WebhookMessageOptions} [extra={}] - Extra options to add onto specified options\n   * @returns {MessagePayload}\n   */\n  static create(target, options, extra = {}) {\n    return new this(\n      target,\n      typeof options !== 'object' || options === null ? { content: options, ...extra } : { ...options, ...extra },\n    );\n  }\n}\n\nmodule.exports = MessagePayload;\n\n/**\n * A target for a message.\n * @typedef {TextChannel|DMChannel|User|GuildMember|Webhook|WebhookClient|Interaction|InteractionWebhook|\n * Message|MessageManager} MessageTarget\n */\n\n/**\n * @external APIMessage\n * @see {@link https://discord.com/developers/docs/resources/channel#message-object}\n */\n","'use strict';\n\nconst GuildEmoji = require('./GuildEmoji');\nconst ReactionEmoji = require('./ReactionEmoji');\nconst ReactionUserManager = require('../managers/ReactionUserManager');\nconst Util = require('../util/Util');\n\n/**\n * Represents a reaction to a message.\n */\nclass MessageReaction {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIReaction} data The data for the message reaction\n   * @param {Message} message The message the reaction refers to\n   */\n  constructor(client, data, message) {\n    /**\n     * The client that instantiated this message reaction\n     * @name MessageReaction#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The message that this reaction refers to\n     * @type {Message}\n     */\n    this.message = message;\n\n    /**\n     * Whether the client has given this reaction\n     * @type {boolean}\n     */\n    this.me = data.me;\n\n    /**\n     * A manager of the users that have given this reaction\n     * @type {ReactionUserManager}\n     */\n    this.users = new ReactionUserManager(this);\n\n    this._emoji = new ReactionEmoji(this, data.emoji);\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    // eslint-disable-next-line eqeqeq\n    if (this.count == undefined) {\n      /**\n       * The number of people that have given the same reaction\n       * @type {?number}\n       */\n      this.count = data.count;\n    }\n  }\n\n  /**\n   * Removes all users from this reaction.\n   * @returns {Promise<MessageReaction>}\n   */\n  async remove() {\n    await this.client.api\n      .channels(this.message.channelId)\n      .messages(this.message.id)\n      .reactions(this._emoji.identifier)\n      .delete();\n    return this;\n  }\n\n  /**\n   * The emoji of this reaction. Either a {@link GuildEmoji} object for known custom emojis, or a {@link ReactionEmoji}\n   * object which has fewer properties. Whatever the prototype of the emoji, it will still have\n   * `name`, `id`, `identifier` and `toString()`\n   * @type {GuildEmoji|ReactionEmoji}\n   * @readonly\n   */\n  get emoji() {\n    if (this._emoji instanceof GuildEmoji) return this._emoji;\n    // Check to see if the emoji has become known to the client\n    if (this._emoji.id) {\n      const emojis = this.message.client.emojis.cache;\n      if (emojis.has(this._emoji.id)) {\n        const emoji = emojis.get(this._emoji.id);\n        this._emoji = emoji;\n        return emoji;\n      }\n    }\n    return this._emoji;\n  }\n\n  /**\n   * Whether or not this reaction is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return this.count === null;\n  }\n\n  /**\n   * Fetch this reaction.\n   * @returns {Promise<MessageReaction>}\n   */\n  async fetch() {\n    const message = await this.message.fetch();\n    const existing = message.reactions.cache.get(this.emoji.id ?? this.emoji.name);\n    // The reaction won't get set when it has been completely removed\n    this._patch(existing ?? { count: 0 });\n    return this;\n  }\n\n  toJSON() {\n    return Util.flatten(this, { emoji: 'emojiId', message: 'messageId' });\n  }\n\n  _add(user) {\n    if (this.partial) return;\n    this.users.cache.set(user.id, user);\n    if (!this.me || user.id !== this.message.client.user.id || this.count === 0) this.count++;\n    if (!this.me) this.me = user.id === this.message.client.user.id;\n  }\n\n  _remove(user) {\n    if (this.partial) return;\n    this.users.cache.delete(user.id);\n    if (!this.me || user.id !== this.message.client.user.id) this.count--;\n    if (user.id === this.message.client.user.id) this.me = false;\n    if (this.count <= 0 && this.users.cache.size === 0) {\n      this.message.reactions.cache.delete(this.emoji.id ?? this.emoji.name);\n    }\n  }\n}\n\nmodule.exports = MessageReaction;\n\n/**\n * @external APIReaction\n * @see {@link https://discord.com/developers/docs/resources/channel#reaction-object}\n */\n","'use strict';\n\nconst BaseMessageComponent = require('./BaseMessageComponent');\nconst { MessageComponentTypes } = require('../util/Constants');\nconst Util = require('../util/Util');\n\n/**\n * Represents a select menu message component\n * @extends {BaseMessageComponent}\n */\nclass MessageSelectMenu extends BaseMessageComponent {\n  /**\n   * @typedef {BaseMessageComponentOptions} MessageSelectMenuOptions\n   * @property {string} [customId] A unique string to be sent in the interaction when clicked\n   * @property {string} [placeholder] Custom placeholder text to display when nothing is selected\n   * @property {number} [minValues] The minimum number of selections required\n   * @property {number} [maxValues] The maximum number of selections allowed\n   * @property {MessageSelectOption[]} [options] Options for the select menu\n   * @property {boolean} [disabled=false] Disables the select menu to prevent interactions\n   */\n\n  /**\n   * @typedef {Object} MessageSelectOption\n   * @property {string} label The text to be displayed on this option\n   * @property {string} value The value to be sent for this option\n   * @property {?string} description Optional description to show for this option\n   * @property {?RawEmoji} emoji Emoji to display for this option\n   * @property {boolean} default Render this option as the default selection\n   */\n\n  /**\n   * @typedef {Object} MessageSelectOptionData\n   * @property {string} label The text to be displayed on this option\n   * @property {string} value The value to be sent for this option\n   * @property {string} [description] Optional description to show for this option\n   * @property {EmojiIdentifierResolvable} [emoji] Emoji to display for this option\n   * @property {boolean} [default] Render this option as the default selection\n   */\n\n  /**\n   * @param {MessageSelectMenu|MessageSelectMenuOptions} [data={}] MessageSelectMenu to clone or raw data\n   */\n  constructor(data = {}) {\n    super({ type: 'SELECT_MENU' });\n\n    this.setup(data);\n  }\n\n  setup(data) {\n    /**\n     * A unique string to be sent in the interaction when clicked\n     * @type {?string}\n     */\n    this.customId = data.custom_id ?? data.customId ?? null;\n\n    /**\n     * Custom placeholder text to display when nothing is selected\n     * @type {?string}\n     */\n    this.placeholder = data.placeholder ?? null;\n\n    /**\n     * The minimum number of selections required\n     * @type {?number}\n     */\n    this.minValues = data.min_values ?? data.minValues ?? null;\n\n    /**\n     * The maximum number of selections allowed\n     * @type {?number}\n     */\n    this.maxValues = data.max_values ?? data.maxValues ?? null;\n\n    /**\n     * Options for the select menu\n     * @type {MessageSelectOption[]}\n     */\n    this.options = this.constructor.normalizeOptions(data.options ?? []);\n\n    /**\n     * Whether this select menu is currently disabled\n     * @type {boolean}\n     */\n    this.disabled = data.disabled ?? false;\n  }\n\n  /**\n   * Sets the custom id of this select menu\n   * @param {string} customId A unique string to be sent in the interaction when clicked\n   * @returns {MessageSelectMenu}\n   */\n  setCustomId(customId) {\n    this.customId = Util.verifyString(customId, RangeError, 'SELECT_MENU_CUSTOM_ID');\n    return this;\n  }\n\n  /**\n   * Sets the interactive status of the select menu\n   * @param {boolean} [disabled=true] Whether this select menu should be disabled\n   * @returns {MessageSelectMenu}\n   */\n  setDisabled(disabled = true) {\n    this.disabled = disabled;\n    return this;\n  }\n\n  /**\n   * Sets the maximum number of selections allowed for this select menu\n   * @param {number} maxValues Number of selections to be allowed\n   * @returns {MessageSelectMenu}\n   */\n  setMaxValues(maxValues) {\n    this.maxValues = maxValues;\n    return this;\n  }\n\n  /**\n   * Sets the minimum number of selections required for this select menu\n   * <info>This will default the maxValues to the number of options, unless manually set</info>\n   * @param {number} minValues Number of selections to be required\n   * @returns {MessageSelectMenu}\n   */\n  setMinValues(minValues) {\n    this.minValues = minValues;\n    return this;\n  }\n\n  /**\n   * Sets the placeholder of this select menu\n   * @param {string} placeholder Custom placeholder text to display when nothing is selected\n   * @returns {MessageSelectMenu}\n   */\n  setPlaceholder(placeholder) {\n    this.placeholder = Util.verifyString(placeholder, RangeError, 'SELECT_MENU_PLACEHOLDER');\n    return this;\n  }\n\n  /**\n   * Adds options to the select menu.\n   * @param {...MessageSelectOptionData|MessageSelectOptionData[]} options The options to add\n   * @returns {MessageSelectMenu}\n   */\n  addOptions(...options) {\n    this.options.push(...this.constructor.normalizeOptions(options));\n    return this;\n  }\n\n  /**\n   * Removes, replaces, and inserts options in the select menu.\n   * @param {number} index The index to start at\n   * @param {number} deleteCount The number of options to remove\n   * @param {...MessageSelectOptionData|MessageSelectOptionData[]} [options] The replacing option objects\n   * @returns {MessageSelectMenu}\n   */\n  spliceOptions(index, deleteCount, ...options) {\n    this.options.splice(index, deleteCount, ...this.constructor.normalizeOptions(...options));\n    return this;\n  }\n\n  /**\n   * Transforms this select menu to a plain object\n   * @returns {Object} The raw data of this select menu\n   */\n  toJSON() {\n    return {\n      custom_id: this.customId,\n      disabled: this.disabled,\n      placeholder: this.placeholder,\n      min_values: this.minValues,\n      max_values: this.maxValues ?? (this.minValues ? this.options.length : undefined),\n      options: this.options,\n      type: typeof this.type === 'string' ? MessageComponentTypes[this.type] : this.type,\n    };\n  }\n\n  /**\n   * Normalizes option input and resolves strings and emojis.\n   * @param {MessageSelectOptionData} option The select menu option to normalize\n   * @returns {MessageSelectOption}\n   */\n  static normalizeOption(option) {\n    let { label, value, description, emoji } = option;\n\n    label = Util.verifyString(label, RangeError, 'SELECT_OPTION_LABEL');\n    value = Util.verifyString(value, RangeError, 'SELECT_OPTION_VALUE');\n    emoji = emoji ? Util.resolvePartialEmoji(emoji) : null;\n    description = description ? Util.verifyString(description, RangeError, 'SELECT_OPTION_DESCRIPTION', true) : null;\n\n    return { label, value, description, emoji, default: option.default ?? false };\n  }\n\n  /**\n   * Normalizes option input and resolves strings and emojis.\n   * @param {...MessageSelectOptionData|MessageSelectOptionData[]} options The select menu options to normalize\n   * @returns {MessageSelectOption[]}\n   */\n  static normalizeOptions(...options) {\n    return options.flat(Infinity).map(option => this.normalizeOption(option));\n  }\n}\n\nmodule.exports = MessageSelectMenu;\n","'use strict';\n\nconst BaseGuildTextChannel = require('./BaseGuildTextChannel');\nconst { Error } = require('../errors');\n\n/**\n * Represents a guild news channel on Discord.\n * @extends {BaseGuildTextChannel}\n */\nclass NewsChannel extends BaseGuildTextChannel {\n  /**\n   * Adds the target to this channel's followers.\n   * @param {GuildChannelResolvable} channel The channel where the webhook should be created\n   * @param {string} [reason] Reason for creating the webhook\n   * @returns {Promise<NewsChannel>}\n   * @example\n   * if (channel.type === 'GUILD_NEWS') {\n   *   channel.addFollower('222197033908436994', 'Important announcements')\n   *     .then(() => console.log('Added follower'))\n   *     .catch(console.error);\n   * }\n   */\n  async addFollower(channel, reason) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new Error('GUILD_CHANNEL_RESOLVE');\n    await this.client.api.channels(this.id).followers.post({ data: { webhook_channel_id: channelId }, reason });\n    return this;\n  }\n}\n\nmodule.exports = NewsChannel;\n","'use strict';\n\nconst BaseGuild = require('./BaseGuild');\nconst Permissions = require('../util/Permissions');\n\n/**\n * A partial guild received when using {@link GuildManager#fetch} to fetch multiple guilds.\n * @extends {BaseGuild}\n */\nclass OAuth2Guild extends BaseGuild {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * Whether the client user is the owner of the guild\n     * @type {boolean}\n     */\n    this.owner = data.owner;\n\n    /**\n     * The permissions that the client user has in this guild\n     * @type {Readonly<Permissions>}\n     */\n    this.permissions = new Permissions(BigInt(data.permissions)).freeze();\n  }\n}\n\nmodule.exports = OAuth2Guild;\n","'use strict';\n\nconst Channel = require('./Channel');\nconst { Error } = require('../errors');\n\n/**\n * Represents a Partial Group DM Channel on Discord.\n * @extends {Channel}\n */\nclass PartialGroupDMChannel extends Channel {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The name of this Group DM Channel\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The hash of the channel icon\n     * @type {?string}\n     */\n    this.icon = data.icon;\n  }\n\n  /**\n   * The URL to this channel's icon.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  iconURL({ format, size } = {}) {\n    return this.icon && this.client.rest.cdn.GDMIcon(this.id, this.icon, format, size);\n  }\n\n  delete() {\n    return Promise.reject(new Error('DELETE_GROUP_DM_CHANNEL'));\n  }\n\n  fetch() {\n    return Promise.reject(new Error('FETCH_GROUP_DM_CHANNEL'));\n  }\n}\n\nmodule.exports = PartialGroupDMChannel;\n","'use strict';\n\nconst Base = require('./Base');\nconst Role = require('./Role');\nconst { TypeError } = require('../errors');\nconst { OverwriteTypes } = require('../util/Constants');\nconst Permissions = require('../util/Permissions');\n\n/**\n * Represents a permission overwrite for a role or member in a guild channel.\n * @extends {Base}\n */\nclass PermissionOverwrites extends Base {\n  constructor(client, data, channel) {\n    super(client);\n\n    /**\n     * The GuildChannel this overwrite is for\n     * @name PermissionOverwrites#channel\n     * @type {GuildChannel}\n     * @readonly\n     */\n    Object.defineProperty(this, 'channel', { value: channel });\n\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The overwrite's id, either a {@link User} or a {@link Role} id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The type of this overwrite\n     * @type {OverwriteType}\n     */\n    this.type = typeof data.type === 'number' ? OverwriteTypes[data.type] : data.type;\n\n    /**\n     * The permissions that are denied for the user or role.\n     * @type {Readonly<Permissions>}\n     */\n    this.deny = new Permissions(BigInt(data.deny)).freeze();\n\n    /**\n     * The permissions that are allowed for the user or role.\n     * @type {Readonly<Permissions>}\n     */\n    this.allow = new Permissions(BigInt(data.allow)).freeze();\n  }\n\n  /**\n   * Edits this Permission Overwrite.\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {string} [reason] Reason for creating/editing this overwrite\n   * @returns {Promise<PermissionOverwrites>}\n   * @example\n   * // Update permission overwrites\n   * permissionOverwrites.edit({\n   *   SEND_MESSAGES: false\n   * })\n   *   .then(channel => console.log(channel.permissionOverwrites.get(message.author.id)))\n   *   .catch(console.error);\n   */\n  async edit(options, reason) {\n    await this.channel.permissionOverwrites.upsert(this.id, options, { type: OverwriteTypes[this.type], reason }, this);\n    return this;\n  }\n\n  /**\n   * Deletes this Permission Overwrite.\n   * @param {string} [reason] Reason for deleting this overwrite\n   * @returns {Promise<PermissionOverwrites>}\n   */\n  async delete(reason) {\n    await this.channel.permissionOverwrites.delete(this.id, reason);\n    return this;\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      type: OverwriteTypes[this.type],\n      allow: this.allow,\n      deny: this.deny,\n    };\n  }\n\n  /**\n   * An object mapping permission flags to `true` (enabled), `null` (unset) or `false` (disabled).\n   * ```js\n   * {\n   *  'SEND_MESSAGES': true,\n   *  'EMBED_LINKS': null,\n   *  'ATTACH_FILES': false,\n   * }\n   * ```\n   * @typedef {Object} PermissionOverwriteOptions\n   */\n\n  /**\n   * @typedef {Object} ResolvedOverwriteOptions\n   * @property {Permissions} allow The allowed permissions\n   * @property {Permissions} deny The denied permissions\n   */\n\n  /**\n   * Resolves bitfield permissions overwrites from an object.\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {ResolvedOverwriteOptions} initialPermissions The initial permissions\n   * @returns {ResolvedOverwriteOptions}\n   */\n  static resolveOverwriteOptions(options, { allow, deny } = {}) {\n    allow = new Permissions(allow);\n    deny = new Permissions(deny);\n\n    for (const [perm, value] of Object.entries(options)) {\n      if (value === true) {\n        allow.add(perm);\n        deny.remove(perm);\n      } else if (value === false) {\n        allow.remove(perm);\n        deny.add(perm);\n      } else if (value === null) {\n        allow.remove(perm);\n        deny.remove(perm);\n      }\n    }\n\n    return { allow, deny };\n  }\n\n  /**\n   * The raw data for a permission overwrite\n   * @typedef {Object} RawOverwriteData\n   * @property {Snowflake} id The id of the {@link Role} or {@link User} this overwrite belongs to\n   * @property {string} allow The permissions to allow\n   * @property {string} deny The permissions to deny\n   * @property {number} type The type of this OverwriteData\n   */\n\n  /**\n   * Data that can be resolved into {@link RawOverwriteData}. This can be:\n   * * PermissionOverwrites\n   * * OverwriteData\n   * @typedef {PermissionOverwrites|OverwriteData} OverwriteResolvable\n   */\n\n  /**\n   * Data that can be used for a permission overwrite\n   * @typedef {Object} OverwriteData\n   * @property {GuildMemberResolvable|RoleResolvable} id Member or role this overwrite is for\n   * @property {PermissionResolvable} [allow] The permissions to allow\n   * @property {PermissionResolvable} [deny] The permissions to deny\n   * @property {OverwriteType} [type] The type of this OverwriteData\n   */\n\n  /**\n   * Resolves an overwrite into {@link RawOverwriteData}.\n   * @param {OverwriteResolvable} overwrite The overwrite-like data to resolve\n   * @param {Guild} [guild] The guild to resolve from\n   * @returns {RawOverwriteData}\n   */\n  static resolve(overwrite, guild) {\n    if (overwrite instanceof this) return overwrite.toJSON();\n    if (typeof overwrite.id === 'string' && overwrite.type in OverwriteTypes) {\n      return {\n        id: overwrite.id,\n        type: OverwriteTypes[overwrite.type],\n        allow: Permissions.resolve(overwrite.allow ?? Permissions.defaultBit).toString(),\n        deny: Permissions.resolve(overwrite.deny ?? Permissions.defaultBit).toString(),\n      };\n    }\n\n    const userOrRole = guild.roles.resolve(overwrite.id) ?? guild.client.users.resolve(overwrite.id);\n    if (!userOrRole) throw new TypeError('INVALID_TYPE', 'parameter', 'User nor a Role');\n    const type = userOrRole instanceof Role ? OverwriteTypes.role : OverwriteTypes.member;\n\n    return {\n      id: userOrRole.id,\n      type,\n      allow: Permissions.resolve(overwrite.allow ?? Permissions.defaultBit).toString(),\n      deny: Permissions.resolve(overwrite.deny ?? Permissions.defaultBit).toString(),\n    };\n  }\n}\n\nmodule.exports = PermissionOverwrites;\n","'use strict';\n\nconst Base = require('./Base');\nconst Emoji = require('./Emoji');\nconst ActivityFlags = require('../util/ActivityFlags');\nconst { ActivityTypes } = require('../util/Constants');\nconst Util = require('../util/Util');\n\n/**\n * Activity sent in a message.\n * @typedef {Object} MessageActivity\n * @property {string} [partyId] Id of the party represented in activity\n * @property {number} [type] Type of activity sent\n */\n\n/**\n * The status of this presence:\n * * **`online`** - user is online\n * * **`idle`** - user is AFK\n * * **`offline`** - user is offline or invisible\n * * **`dnd`** - user is in Do Not Disturb\n * @typedef {string} PresenceStatus\n */\n\n/**\n * The status of this presence:\n * * **`online`** - user is online\n * * **`idle`** - user is AFK\n * * **`dnd`** - user is in Do Not Disturb\n * @typedef {string} ClientPresenceStatus\n */\n\n/**\n * Represents a user's presence.\n * @extends {Base}\n */\nclass Presence extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIPresence} [data={}] The data for the presence\n   */\n  constructor(client, data = {}) {\n    super(client);\n\n    /**\n     * The presence's user id\n     * @type {Snowflake}\n     */\n    this.userId = data.user.id;\n\n    /**\n     * The guild this presence is in\n     * @type {?Guild}\n     */\n    this.guild = data.guild ?? null;\n\n    this._patch(data);\n  }\n\n  /**\n   * The user of this presence\n   * @type {?User}\n   * @readonly\n   */\n  get user() {\n    return this.client.users.resolve(this.userId);\n  }\n\n  /**\n   * The member of this presence\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild.members.resolve(this.userId);\n  }\n\n  _patch(data) {\n    /**\n     * The status of this presence\n     * @type {PresenceStatus}\n     */\n    this.status = data.status ?? this.status ?? 'offline';\n\n    /**\n     * The activities of this presence\n     * @type {Activity[]}\n     */\n    this.activities = data.activities?.map(activity => new Activity(this, activity)) ?? [];\n\n    /**\n     * The devices this presence is on\n     * @type {?Object}\n     * @property {?ClientPresenceStatus} web The current presence in the web application\n     * @property {?ClientPresenceStatus} mobile The current presence in the mobile application\n     * @property {?ClientPresenceStatus} desktop The current presence in the desktop application\n     */\n    this.clientStatus = data.client_status ?? null;\n\n    return this;\n  }\n\n  _clone() {\n    const clone = Object.assign(Object.create(this), this);\n    clone.activities = this.activities.map(activity => activity._clone());\n    return clone;\n  }\n\n  /**\n   * Whether this presence is equal to another.\n   * @param {Presence} presence The presence to compare with\n   * @returns {boolean}\n   */\n  equals(presence) {\n    return (\n      this === presence ||\n      (presence &&\n        this.status === presence.status &&\n        this.activities.length === presence.activities.length &&\n        this.activities.every((activity, index) => activity.equals(presence.activities[index])) &&\n        this.clientStatus?.web === presence.clientStatus?.web &&\n        this.clientStatus?.mobile === presence.clientStatus?.mobile &&\n        this.clientStatus?.desktop === presence.clientStatus?.desktop)\n    );\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n}\n\n/**\n * The platform of this activity:\n * * **`desktop`**\n * * **`samsung`** - playing on Samsung Galaxy\n * * **`xbox`** - playing on Xbox Live\n * @typedef {string} ActivityPlatform\n */\n\n/**\n * Represents an activity that is part of a user's presence.\n */\nclass Activity {\n  constructor(presence, data) {\n    Object.defineProperty(this, 'presence', { value: presence });\n\n    /**\n     * The activity's id\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * The activity's name\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The activity status's type\n     * @type {ActivityType}\n     */\n    this.type = typeof data.type === 'number' ? ActivityTypes[data.type] : data.type;\n\n    /**\n     * If the activity is being streamed, a link to the stream\n     * @type {?string}\n     */\n    this.url = data.url ?? null;\n\n    /**\n     * Details about the activity\n     * @type {?string}\n     */\n    this.details = data.details ?? null;\n\n    /**\n     * State of the activity\n     * @type {?string}\n     */\n    this.state = data.state ?? null;\n\n    /**\n     * The id of the application associated with this activity\n     * @type {?Snowflake}\n     */\n    this.applicationId = data.application_id ?? null;\n\n    /**\n     * Represents timestamps of an activity\n     * @typedef {Object} ActivityTimestamps\n     * @property {?Date} start When the activity started\n     * @property {?Date} end When the activity will end\n     */\n\n    /**\n     * Timestamps for the activity\n     * @type {?ActivityTimestamps}\n     */\n    this.timestamps = data.timestamps\n      ? {\n          start: data.timestamps.start ? new Date(Number(data.timestamps.start)) : null,\n          end: data.timestamps.end ? new Date(Number(data.timestamps.end)) : null,\n        }\n      : null;\n\n    /**\n     * The Spotify song's id\n     * @type {?string}\n     */\n    this.syncId = data.sync_id ?? null;\n\n    /**\n     * The platform the game is being played on\n     * @type {?ActivityPlatform}\n     */\n    this.platform = data.platform ?? null;\n\n    /**\n     * Represents a party of an activity\n     * @typedef {Object} ActivityParty\n     * @property {?string} id The party's id\n     * @property {number[]} size Size of the party as `[current, max]`\n     */\n\n    /**\n     * Party of the activity\n     * @type {?ActivityParty}\n     */\n    this.party = data.party ?? null;\n\n    /**\n     * Assets for rich presence\n     * @type {?RichPresenceAssets}\n     */\n    this.assets = data.assets ? new RichPresenceAssets(this, data.assets) : null;\n\n    /**\n     * Flags that describe the activity\n     * @type {Readonly<ActivityFlags>}\n     */\n    this.flags = new ActivityFlags(data.flags).freeze();\n\n    /**\n     * Emoji for a custom activity\n     * @type {?Emoji}\n     */\n    this.emoji = data.emoji ? new Emoji(presence.client, data.emoji) : null;\n\n    /**\n     * The game's or Spotify session's id\n     * @type {?string}\n     */\n    this.sessionId = data.session_id ?? null;\n\n    /**\n     * The labels of the buttons of this rich presence\n     * @type {string[]}\n     */\n    this.buttons = data.buttons ?? [];\n\n    /**\n     * Creation date of the activity\n     * @type {number}\n     */\n    this.createdTimestamp = new Date(data.created_at).getTime();\n  }\n\n  /**\n   * Whether this activity is equal to another activity.\n   * @param {Activity} activity The activity to compare with\n   * @returns {boolean}\n   */\n  equals(activity) {\n    return (\n      this === activity ||\n      (activity &&\n        this.name === activity.name &&\n        this.type === activity.type &&\n        this.url === activity.url &&\n        this.state === activity.state &&\n        this.details === activity.details)\n    );\n  }\n\n  /**\n   * The time the activity was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the activities' name instead of the Activity object.\n   * @returns {string}\n   */\n  toString() {\n    return this.name;\n  }\n\n  _clone() {\n    return Object.assign(Object.create(this), this);\n  }\n}\n\n/**\n * Assets for a rich presence\n */\nclass RichPresenceAssets {\n  constructor(activity, assets) {\n    Object.defineProperty(this, 'activity', { value: activity });\n\n    /**\n     * Hover text for the large image\n     * @type {?string}\n     */\n    this.largeText = assets.large_text ?? null;\n\n    /**\n     * Hover text for the small image\n     * @type {?string}\n     */\n    this.smallText = assets.small_text ?? null;\n\n    /**\n     * The large image asset's id\n     * @type {?Snowflake}\n     */\n    this.largeImage = assets.large_image ?? null;\n\n    /**\n     * The small image asset's id\n     * @type {?Snowflake}\n     */\n    this.smallImage = assets.small_image ?? null;\n  }\n\n  /**\n   * Gets the URL of the small image asset\n   * @param {StaticImageURLOptions} [options] Options for the image url\n   * @returns {?string}\n   */\n  smallImageURL({ format, size } = {}) {\n    return (\n      this.smallImage &&\n      this.activity.presence.client.rest.cdn.AppAsset(this.activity.applicationId, this.smallImage, {\n        format,\n        size,\n      })\n    );\n  }\n\n  /**\n   * Gets the URL of the large image asset\n   * @param {StaticImageURLOptions} [options] Options for the image url\n   * @returns {?string}\n   */\n  largeImageURL({ format, size } = {}) {\n    if (!this.largeImage) return null;\n    if (/^spotify:/.test(this.largeImage)) {\n      return `https://i.scdn.co/image/${this.largeImage.slice(8)}`;\n    } else if (/^twitch:/.test(this.largeImage)) {\n      return `https://static-cdn.jtvnw.net/previews-ttv/live_user_${this.largeImage.slice(7)}.png`;\n    }\n    return this.activity.presence.client.rest.cdn.AppAsset(this.activity.applicationId, this.largeImage, {\n      format,\n      size,\n    });\n  }\n}\n\nexports.Presence = Presence;\nexports.Activity = Activity;\nexports.RichPresenceAssets = RichPresenceAssets;\n\n/* eslint-disable max-len */\n/**\n * @external APIPresence\n * @see {@link https://discord.com/developers/docs/rich-presence/how-to#updating-presence-update-presence-payload-fields}\n */\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Collector = require('./interfaces/Collector');\nconst { Events } = require('../util/Constants');\n\n/**\n * @typedef {CollectorOptions} ReactionCollectorOptions\n * @property {number} max The maximum total amount of reactions to collect\n * @property {number} maxEmojis The maximum number of emojis to collect\n * @property {number} maxUsers The maximum number of users to react\n */\n\n/**\n * Collects reactions on messages.\n * Will automatically stop if the message (`'messageDelete'`),\n * channel (`'channelDelete'`), or guild (`'guildDelete'`) are deleted.\n * @extends {Collector}\n */\nclass ReactionCollector extends Collector {\n  /**\n   * @param {Message} message The message upon which to collect reactions\n   * @param {ReactionCollectorOptions} [options={}] The options to apply to this collector\n   */\n  constructor(message, options = {}) {\n    super(message.client, options);\n\n    /**\n     * The message upon which to collect reactions\n     * @type {Message}\n     */\n    this.message = message;\n\n    /**\n     * The users which have reacted to this message\n     * @type {Collection}\n     */\n    this.users = new Collection();\n\n    /**\n     * The total number of reactions collected\n     * @type {number}\n     */\n    this.total = 0;\n\n    this.empty = this.empty.bind(this);\n    this._handleChannelDeletion = this._handleChannelDeletion.bind(this);\n    this._handleGuildDeletion = this._handleGuildDeletion.bind(this);\n    this._handleMessageDeletion = this._handleMessageDeletion.bind(this);\n\n    this.client.incrementMaxListeners();\n    this.client.on(Events.MESSAGE_REACTION_ADD, this.handleCollect);\n    this.client.on(Events.MESSAGE_REACTION_REMOVE, this.handleDispose);\n    this.client.on(Events.MESSAGE_REACTION_REMOVE_ALL, this.empty);\n    this.client.on(Events.MESSAGE_DELETE, this._handleMessageDeletion);\n    this.client.on(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n    this.client.on(Events.GUILD_DELETE, this._handleGuildDeletion);\n\n    this.once('end', () => {\n      this.client.removeListener(Events.MESSAGE_REACTION_ADD, this.handleCollect);\n      this.client.removeListener(Events.MESSAGE_REACTION_REMOVE, this.handleDispose);\n      this.client.removeListener(Events.MESSAGE_REACTION_REMOVE_ALL, this.empty);\n      this.client.removeListener(Events.MESSAGE_DELETE, this._handleMessageDeletion);\n      this.client.removeListener(Events.CHANNEL_DELETE, this._handleChannelDeletion);\n      this.client.removeListener(Events.GUILD_DELETE, this._handleGuildDeletion);\n      this.client.decrementMaxListeners();\n    });\n\n    this.on('collect', (reaction, user) => {\n      this.total++;\n      this.users.set(user.id, user);\n    });\n\n    this.on('remove', (reaction, user) => {\n      this.total--;\n      if (!this.collected.some(r => r.users.cache.has(user.id))) this.users.delete(user.id);\n    });\n  }\n\n  /**\n   * Handles an incoming reaction for possible collection.\n   * @param {MessageReaction} reaction The reaction to possibly collect\n   * @param {User} user The user that added the reaction\n   * @returns {Promise<?(Snowflake|string)>}\n   * @private\n   */\n  async collect(reaction, user) {\n    /**\n     * Emitted whenever a reaction is collected.\n     * @event ReactionCollector#collect\n     * @param {MessageReaction} reaction The reaction that was collected\n     * @param {User} user The user that added the reaction\n     */\n    if (reaction.message.id !== this.message.id) return null;\n\n    /**\n     * Emitted whenever a reaction is newly created on a message. Will emit only when a new reaction is\n     * added to the message, as opposed to {@link Collector#collect} which which will\n     * be emitted even when a reaction has already been added to the message.\n     * @event ReactionCollector#create\n     * @param {MessageReaction} reaction The reaction that was added\n     * @param {User} user The user that added the reaction\n     */\n    if (reaction.count === 1 && (await this.filter(reaction, user, this.collected))) {\n      this.emit('create', reaction, user);\n    }\n\n    return ReactionCollector.key(reaction);\n  }\n\n  /**\n   * Handles a reaction deletion for possible disposal.\n   * @param {MessageReaction} reaction The reaction to possibly dispose of\n   * @param {User} user The user that removed the reaction\n   * @returns {?(Snowflake|string)}\n   */\n  dispose(reaction, user) {\n    /**\n     * Emitted when the reaction had all the users removed and the `dispose` option is set to true.\n     * @event ReactionCollector#dispose\n     * @param {MessageReaction} reaction The reaction that was disposed of\n     * @param {User} user The user that removed the reaction\n     */\n    if (reaction.message.id !== this.message.id) return null;\n\n    /**\n     * Emitted when the reaction had one user removed and the `dispose` option is set to true.\n     * @event ReactionCollector#remove\n     * @param {MessageReaction} reaction The reaction that was removed\n     * @param {User} user The user that removed the reaction\n     */\n    if (this.collected.has(ReactionCollector.key(reaction)) && this.users.has(user.id)) {\n      this.emit('remove', reaction, user);\n    }\n    return reaction.count ? null : ReactionCollector.key(reaction);\n  }\n\n  /**\n   * Empties this reaction collector.\n   */\n  empty() {\n    this.total = 0;\n    this.collected.clear();\n    this.users.clear();\n    this.checkEnd();\n  }\n\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   */\n  get endReason() {\n    if (this.options.max && this.total >= this.options.max) return 'limit';\n    if (this.options.maxEmojis && this.collected.size >= this.options.maxEmojis) return 'emojiLimit';\n    if (this.options.maxUsers && this.users.size >= this.options.maxUsers) return 'userLimit';\n    return null;\n  }\n\n  /**\n   * Handles checking if the message has been deleted, and if so, stops the collector with the reason 'messageDelete'.\n   * @private\n   * @param {Message} message The message that was deleted\n   * @returns {void}\n   */\n  _handleMessageDeletion(message) {\n    if (message.id === this.message.id) {\n      this.stop('messageDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the channel has been deleted, and if so, stops the collector with the reason 'channelDelete'.\n   * @private\n   * @param {GuildChannel} channel The channel that was deleted\n   * @returns {void}\n   */\n  _handleChannelDeletion(channel) {\n    if (channel.id === this.message.channelId) {\n      this.stop('channelDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the guild has been deleted, and if so, stops the collector with the reason 'guildDelete'.\n   * @private\n   * @param {Guild} guild The guild that was deleted\n   * @returns {void}\n   */\n  _handleGuildDeletion(guild) {\n    if (guild.id === this.message.guild?.id) {\n      this.stop('guildDelete');\n    }\n  }\n\n  /**\n   * Gets the collector key for a reaction.\n   * @param {MessageReaction} reaction The message reaction to get the key for\n   * @returns {Snowflake|string}\n   */\n  static key(reaction) {\n    return reaction.emoji.id ?? reaction.emoji.name;\n  }\n}\n\nmodule.exports = ReactionCollector;\n","'use strict';\n\nconst Emoji = require('./Emoji');\nconst Util = require('../util/Util');\n\n/**\n * Represents a limited emoji set used for both custom and unicode emojis. Custom emojis\n * will use this class opposed to the Emoji class when the client doesn't know enough\n * information about them.\n * @extends {Emoji}\n */\nclass ReactionEmoji extends Emoji {\n  constructor(reaction, emoji) {\n    super(reaction.message.client, emoji);\n    /**\n     * The message reaction this emoji refers to\n     * @type {MessageReaction}\n     */\n    this.reaction = reaction;\n  }\n\n  toJSON() {\n    return Util.flatten(this, { identifier: true });\n  }\n\n  valueOf() {\n    return this.id;\n  }\n}\n\nmodule.exports = ReactionEmoji;\n","'use strict';\n\nconst Base = require('./Base');\nconst { Error, TypeError } = require('../errors');\nconst Permissions = require('../util/Permissions');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\nconst Util = require('../util/Util');\n\n/**\n * Represents a role on Discord.\n * @extends {Base}\n */\nclass Role extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIRole} data The data for the role\n   * @param {Guild} guild The guild the role is part of\n   */\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild that the role belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The role's id (unique to the guild it is part of)\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of the role\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The base 10 color of the role\n     * @type {number}\n     */\n    this.color = data.color;\n\n    /**\n     * If true, users that are part of this role will appear in a separate category in the users list\n     * @type {boolean}\n     */\n    this.hoist = data.hoist;\n\n    /**\n     * The raw position of the role from the API\n     * @type {number}\n     */\n    this.rawPosition = data.position;\n\n    /**\n     * The permissions of the role\n     * @type {Readonly<Permissions>}\n     */\n    this.permissions = new Permissions(BigInt(data.permissions)).freeze();\n\n    /**\n     * Whether or not the role is managed by an external service\n     * @type {boolean}\n     */\n    this.managed = data.managed;\n\n    /**\n     * Whether or not the role can be mentioned by anyone\n     * @type {boolean}\n     */\n    this.mentionable = data.mentionable;\n\n    /**\n     * Whether the role has been deleted\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    /**\n     * The tags this role has\n     * @type {?Object}\n     * @property {Snowflake} [botId] The id of the bot this role belongs to\n     * @property {Snowflake} [integrationId] The id of the integration this role belongs to\n     * @property {true} [premiumSubscriberRole] Whether this is the guild's premium subscription role\n     */\n    this.tags = data.tags ? {} : null;\n    if (data.tags) {\n      if ('bot_id' in data.tags) {\n        this.tags.botId = data.tags.bot_id;\n      }\n      if ('integration_id' in data.tags) {\n        this.tags.integrationId = data.tags.integration_id;\n      }\n      if ('premium_subscriber' in data.tags) {\n        this.tags.premiumSubscriberRole = true;\n      }\n    }\n  }\n\n  /**\n   * The timestamp the role was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the role was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The hexadecimal version of the role color, with a leading hashtag\n   * @type {string}\n   * @readonly\n   */\n  get hexColor() {\n    return `#${this.color.toString(16).padStart(6, '0')}`;\n  }\n\n  /**\n   * The cached guild members that have this role\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    return this.guild.members.cache.filter(m => m.roles.cache.has(this.id));\n  }\n\n  /**\n   * Whether the role is editable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get editable() {\n    if (this.managed) return false;\n    const clientMember = this.guild.members.resolve(this.client.user);\n    if (!clientMember.permissions.has(Permissions.FLAGS.MANAGE_ROLES)) return false;\n    return clientMember.roles.highest.comparePositionTo(this) > 0;\n  }\n\n  /**\n   * The position of the role in the role manager\n   * @type {number}\n   * @readonly\n   */\n  get position() {\n    const sorted = this.guild._sortedRoles();\n    return [...sorted.values()].indexOf(sorted.get(this.id));\n  }\n\n  /**\n   * Compares this role's position to another role's.\n   * @param {RoleResolvable} role Role to compare to this one\n   * @returns {number} Negative number if this role's position is lower (other role's is higher),\n   * positive number if this one is higher (other's is lower), 0 if equal\n   */\n  comparePositionTo(role) {\n    role = this.guild.roles.resolve(role);\n    if (!role) throw new TypeError('INVALID_TYPE', 'role', 'Role nor a Snowflake');\n    return this.constructor.comparePositions(this, role);\n  }\n\n  /**\n   * The data for a role.\n   * @typedef {Object} RoleData\n   * @property {string} [name] The name of the role\n   * @property {ColorResolvable} [color] The color of the role, either a hex string or a base 10 number\n   * @property {boolean} [hoist] Whether or not the role should be hoisted\n   * @property {number} [position] The position of the role\n   * @property {PermissionResolvable} [permissions] The permissions of the role\n   * @property {boolean} [mentionable] Whether or not the role should be mentionable\n   */\n\n  /**\n   * Edits the role.\n   * @param {RoleData} data The new data for the role\n   * @param {string} [reason] Reason for editing this role\n   * @returns {Promise<Role>}\n   * @example\n   * // Edit a role\n   * role.edit({ name: 'new role' })\n   *   .then(updated => console.log(`Edited role name to ${updated.name}`))\n   *   .catch(console.error);\n   */\n  edit(data, reason) {\n    return this.guild.roles.edit(this, data, reason);\n  }\n\n  /**\n   * Returns `channel.permissionsFor(role)`. Returns permissions for a role in a guild channel,\n   * taking into account permission overwrites.\n   * @param {GuildChannel|Snowflake} channel The guild channel to use as context\n   * @returns {Readonly<Permissions>}\n   */\n  permissionsIn(channel) {\n    channel = this.guild.channels.resolve(channel);\n    if (!channel) throw new Error('GUILD_CHANNEL_RESOLVE');\n    return channel.rolePermissions(this);\n  }\n\n  /**\n   * Sets a new name for the role.\n   * @param {string} name The new name of the role\n   * @param {string} [reason] Reason for changing the role's name\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the name of the role\n   * role.setName('new role')\n   *   .then(updated => console.log(`Updated role name to ${updated.name}`))\n   *   .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name }, reason);\n  }\n\n  /**\n   * Sets a new color for the role.\n   * @param {ColorResolvable} color The color of the role\n   * @param {string} [reason] Reason for changing the role's color\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the color of a role\n   * role.setColor('#FF0000')\n   *   .then(updated => console.log(`Set color of role to ${updated.color}`))\n   *   .catch(console.error);\n   */\n  setColor(color, reason) {\n    return this.edit({ color }, reason);\n  }\n\n  /**\n   * Sets whether or not the role should be hoisted.\n   * @param {boolean} hoist Whether or not to hoist the role\n   * @param {string} [reason] Reason for setting whether or not the role should be hoisted\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the hoist of the role\n   * role.setHoist(true)\n   *   .then(updated => console.log(`Role hoisted: ${updated.hoist}`))\n   *   .catch(console.error);\n   */\n  setHoist(hoist, reason) {\n    return this.edit({ hoist }, reason);\n  }\n\n  /**\n   * Sets the permissions of the role.\n   * @param {PermissionResolvable} permissions The permissions of the role\n   * @param {string} [reason] Reason for changing the role's permissions\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the permissions of the role\n   * role.setPermissions([Permissions.FLAGS.KICK_MEMBERS, Permissions.FLAGS.BAN_MEMBERS])\n   *   .then(updated => console.log(`Updated permissions to ${updated.permissions.bitfield}`))\n   *   .catch(console.error);\n   * @example\n   * // Remove all permissions from a role\n   * role.setPermissions(0n)\n   *   .then(updated => console.log(`Updated permissions to ${updated.permissions.bitfield}`))\n   *   .catch(console.error);\n   */\n  setPermissions(permissions, reason) {\n    return this.edit({ permissions }, reason);\n  }\n\n  /**\n   * Sets whether this role is mentionable.\n   * @param {boolean} mentionable Whether this role should be mentionable\n   * @param {string} [reason] Reason for setting whether or not this role should be mentionable\n   * @returns {Promise<Role>}\n   * @example\n   * // Make the role mentionable\n   * role.setMentionable(true)\n   *   .then(updated => console.log(`Role updated ${updated.name}`))\n   *   .catch(console.error);\n   */\n  setMentionable(mentionable, reason) {\n    return this.edit({ mentionable }, reason);\n  }\n\n  /**\n   * Options used to set position of a role.\n   * @typedef {Object} SetRolePositionOptions\n   * @property {boolean} [relative=false] Whether to change the position relative to its current value or not\n   * @property {string} [reason] The reason for changing the position\n   */\n\n  /**\n   * Sets the new position of the role.\n   * @param {number} position The new position for the role\n   * @param {SetRolePositionOptions} [options] Options for setting the position\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the position of the role\n   * role.setPosition(1)\n   *   .then(updated => console.log(`Role position: ${updated.position}`))\n   *   .catch(console.error);\n   */\n  async setPosition(position, { relative, reason } = {}) {\n    const updatedRoles = await Util.setPosition(\n      this,\n      position,\n      relative,\n      this.guild._sortedRoles(),\n      this.client.api.guilds(this.guild.id).roles,\n      reason,\n    );\n    this.client.actions.GuildRolesPositionUpdate.handle({\n      guild_id: this.guild.id,\n      roles: updatedRoles,\n    });\n    return this;\n  }\n\n  /**\n   * Deletes the role.\n   * @param {string} [reason] Reason for deleting this role\n   * @returns {Promise<Role>}\n   * @example\n   * // Delete a role\n   * role.delete('The role needed to go')\n   *   .then(deleted => console.log(`Deleted role ${deleted.name}`))\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.client.api.guilds[this.guild.id].roles[this.id].delete({ reason });\n    this.client.actions.GuildRoleDelete.handle({ guild_id: this.guild.id, role_id: this.id });\n    return this;\n  }\n\n  /**\n   * Whether this role equals another role. It compares all properties, so for most operations\n   * it is advisable to just compare `role.id === role2.id` as it is much faster and is often\n   * what most users need.\n   * @param {Role} role Role to compare with\n   * @returns {boolean}\n   */\n  equals(role) {\n    return (\n      role &&\n      this.id === role.id &&\n      this.name === role.name &&\n      this.color === role.color &&\n      this.hoist === role.hoist &&\n      this.position === role.position &&\n      this.permissions.bitfield === role.permissions.bitfield &&\n      this.managed === role.managed\n    );\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the role's mention instead of the Role object.\n   * @returns {string}\n   * @example\n   * // Logs: Role: <@&123456789012345678>\n   * console.log(`Role: ${role}`);\n   */\n  toString() {\n    if (this.id === this.guild.id) return '@everyone';\n    return `<@&${this.id}>`;\n  }\n\n  toJSON() {\n    return super.toJSON({ createdTimestamp: true });\n  }\n\n  /**\n   * Compares the positions of two roles.\n   * @param {Role} role1 First role to compare\n   * @param {Role} role2 Second role to compare\n   * @returns {number} Negative number if the first role's position is lower (second role's is higher),\n   * positive number if the first's is higher (second's is lower), 0 if equal\n   */\n  static comparePositions(role1, role2) {\n    if (role1.position === role2.position) return role2.id - role1.id;\n    return role1.position - role2.position;\n  }\n}\n\nmodule.exports = Role;\n\n/**\n * @external APIRole\n * @see {@link https://discord.com/developers/docs/topics/permissions#role-object}\n */\n","'use strict';\n\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\n\n/**\n * Represents a select menu interaction.\n * @extends {MessageComponentInteraction}\n */\nclass SelectMenuInteraction extends MessageComponentInteraction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The values selected, if the component which was interacted with was a select menu\n     * @type {string[]}\n     */\n    this.values = data.data.values ?? [];\n  }\n}\n\nmodule.exports = SelectMenuInteraction;\n","'use strict';\n\nconst BaseGuildVoiceChannel = require('./BaseGuildVoiceChannel');\n\n/**\n * Represents a guild stage channel on Discord.\n * @extends {BaseGuildVoiceChannel}\n */\nclass StageChannel extends BaseGuildVoiceChannel {\n  _patch(data) {\n    super._patch(data);\n\n    if ('topic' in data) {\n      /**\n       * The topic of the stage channel\n       * @type {?string}\n       */\n      this.topic = data.topic;\n    }\n  }\n\n  /**\n   * The stage instance of this stage channel, if it exists\n   * @type {?StageInstance}\n   * @readonly\n   */\n  get stageInstance() {\n    return this.guild.stageInstances.cache.find(stageInstance => stageInstance.channelId === this.id) ?? null;\n  }\n\n  /**\n   * Creates a stage instance associated to this stage channel.\n   * @param {StageInstanceCreateOptions} options The options to create the stage instance\n   * @returns {Promise<StageInstance>}\n   */\n  createStageInstance(options) {\n    return this.guild.stageInstances.create(this.id, options);\n  }\n\n  /**\n   * Sets a new topic for the guild channel.\n   * @param {?string} topic The new topic for the guild channel\n   * @param {string} [reason] Reason for changing the guild channel's topic\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel topic\n   * channel.setTopic('needs more rate limiting')\n   *   .then(newChannel => console.log(`Channel's new topic is ${newChannel.topic}`))\n   *   .catch(console.error);\n   */\n  setTopic(topic, reason) {\n    return this.edit({ topic }, reason);\n  }\n\n  /**\n   * Sets the RTC region of the channel.\n   * @name StageChannel#setRTCRegion\n   * @param {?string} region The new region of the channel. Set to `null` to remove a specific region for the channel\n   * @returns {Promise<StageChannel>}\n   * @example\n   * // Set the RTC region to europe\n   * stageChannel.setRTCRegion('europe');\n   * @example\n   * // Remove a fixed region for this channel - let Discord decide automatically\n   * stageChannel.setRTCRegion(null);\n   */\n}\n\nmodule.exports = StageChannel;\n","'use strict';\n\nconst Base = require('./Base');\nconst { PrivacyLevels } = require('../util/Constants');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Represents a stage instance.\n * @extends {Base}\n */\nclass StageInstance extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The stage instance's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * Whether the stage instance has been deleted\n     * @type {boolean}\n     */\n    this.deleted = false;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The id of the guild associated with the stage channel\n     * @type {Snowflake}\n     */\n    this.guildId = data.guild_id;\n\n    /**\n     * The id of the channel associated with the stage channel\n     * @type {Snowflake}\n     */\n    this.channelId = data.channel_id;\n\n    /**\n     * The topic of the stage instance\n     * @type {string}\n     */\n    this.topic = data.topic;\n\n    /**\n     * The privacy level of the stage instance\n     * @type {PrivacyLevel}\n     */\n    this.privacyLevel = PrivacyLevels[data.privacy_level];\n\n    /**\n     * Whether or not stage discovery is disabled\n     * @type {?boolean}\n     */\n    this.discoverableDisabled = data.discoverable_disabled ?? null;\n  }\n\n  /**\n   * The stage channel associated with this stage instance\n   * @type {?StageChannel}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * The guild this stage instance belongs to\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n\n  /**\n   * Edits this stage instance.\n   * @param {StageInstanceEditOptions} options The options to edit the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Edit a stage instance\n   * stageInstance.edit({ topic: 'new topic' })\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error)\n   */\n  edit(options) {\n    return this.guild.stageInstances.edit(this.channelId, options);\n  }\n\n  /**\n   * Deletes this stage instance.\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Delete a stage instance\n   * stageInstance.delete()\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async delete() {\n    await this.guild.stageInstances.delete(this.channelId);\n    const clone = this._clone();\n    clone.deleted = true;\n    return clone;\n  }\n\n  /**\n   * Sets the topic of this stage instance.\n   * @param {string} topic The topic for the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Set topic of a stage instance\n   * stageInstance.setTopic('new topic')\n   *  .then(stageInstance => console.log(`Set the topic to: ${stageInstance.topic}`))\n   *  .catch(console.error);\n   */\n  setTopic(topic) {\n    return this.guild.stageInstances.edit(this.channelId, { topic });\n  }\n\n  /**\n   * The timestamp this stage instances was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time this stage instance was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n}\n\nmodule.exports = StageInstance;\n","'use strict';\n\nconst Base = require('./Base');\nconst { StickerFormatTypes, StickerTypes } = require('../util/Constants');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Represents a Sticker.\n * @extends {Base}\n */\nclass Sticker extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APISticker | APIStickerItem} sticker The data for the sticker\n   */\n  constructor(client, sticker) {\n    super(client);\n\n    this._patch(sticker);\n  }\n\n  _patch(sticker) {\n    /**\n     * The sticker's id\n     * @type {Snowflake}\n     */\n    this.id = sticker.id;\n\n    /**\n     * The description of the sticker\n     * @type {?string}\n     */\n    this.description = sticker.description ?? null;\n\n    /**\n     * The type of the sticker\n     * @type {?StickerType}\n     */\n    this.type = StickerTypes[sticker.type] ?? null;\n\n    /**\n     * The format of the sticker\n     * @type {StickerFormatType}\n     */\n    this.format = StickerFormatTypes[sticker.format_type];\n\n    /**\n     * The name of the sticker\n     * @type {string}\n     */\n    this.name = sticker.name;\n\n    /**\n     * The id of the pack the sticker is from, for standard stickers\n     * @type {?Snowflake}\n     */\n    this.packId = sticker.pack_id ?? null;\n\n    /**\n     * An array of tags for the sticker\n     * @type {?string[]}\n     */\n    this.tags = sticker.tags?.split(', ') ?? null;\n\n    /**\n     * Whether or not the guild sticker is available\n     * @type {?boolean}\n     */\n    this.available = sticker.available ?? null;\n\n    /**\n     * The id of the guild that owns this sticker\n     * @type {?Snowflake}\n     */\n    this.guildId = sticker.guild_id ?? null;\n\n    /**\n     * The user that uploaded the guild sticker\n     * @type {?User}\n     */\n    this.user = sticker.user ? this.client.users.add(sticker.user) : null;\n\n    /**\n     * The standard sticker's sort order within its pack\n     * @type {?number}\n     */\n    this.sortValue = sticker.sort_value ?? null;\n  }\n\n  /**\n   * The timestamp the sticker was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the sticker was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * Whether this sticker is partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !this.type;\n  }\n\n  /**\n   * The guild that owns this sticker\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n\n  /**\n   * A link to the sticker\n   * <info>If the sticker's format is LOTTIE, it returns the URL of the Lottie json file.</info>\n   * @type {string}\n   */\n  get url() {\n    return this.client.rest.cdn.Sticker(this.id, this.format);\n  }\n\n  /**\n   * Fetches this sticker.\n   * @returns {Promise<Sticker>}\n   */\n  async fetch() {\n    const data = await this.client.api.stickers(this.id).get();\n    this._patch(data);\n    return this;\n  }\n\n  /**\n   * Fetches the pack this sticker is part of from Discord, if this is a Nitro sticker.\n   * @returns {Promise<?StickerPack>}\n   */\n  async fetchPack() {\n    return (this.packId && (await this.client.fetchPremiumStickerPacks()).get(this.packId)) ?? null;\n  }\n\n  /**\n   * Fetches the user who uploaded this sticker, if this is a guild sticker.\n   * @returns {Promise<?User>}\n   */\n  async fetchUser() {\n    if (this.partial) await this.fetch();\n    if (!this.guildId) throw new Error('NOT_GUILD_STICKER');\n\n    const data = await this.client.api.guilds(this.guildId).stickers(this.id).get();\n    this._patch(data);\n    return this.user;\n  }\n\n  /**\n   * Data for editing a sticker.\n   * @typedef {Object} GuildStickerEditData\n   * @property {string} [name] The name of the sticker\n   * @property {?string} [description] The description of the sticker\n   * @property {string} [tags] The Discord name of a unicode emoji representing the sticker's expression\n   */\n\n  /**\n   * Edits the sticker.\n   * @param {GuildStickerEditData} [data] The new data for the sticker\n   * @param {string} [reason] Reason for editing this sticker\n   * @returns {Promise<Sticker>}\n   * @example\n   * // Update the name of a sticker\n   * sticker.edit({ name: 'new name' })\n   *   .then(s => console.log(`Updated the name of the sticker to ${s.name}`))\n   *   .catch(console.error);\n   */\n  edit(data, reason) {\n    return this.guild.stickers.edit(this, data, reason);\n  }\n\n  /**\n   * Deletes the sticker.\n   * @returns {Promise<Sticker>}\n   * @param {string} [reason] Reason for deleting this sticker\n   * @example\n   * // Delete a message\n   * sticker.delete()\n   *   .then(s => console.log(`Deleted sticker ${s.name}`))\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.guild.stickers.delete(this, reason);\n    return this;\n  }\n\n  /**\n   * Whether this sticker is the same as another one.\n   * @param {Sticker|APISticker} other The sticker to compare it to\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (other instanceof Sticker) {\n      return (\n        other.id === this.id &&\n        other.description === this.description &&\n        other.type === this.type &&\n        other.format === this.format &&\n        other.name === this.name &&\n        other.packId === this.packId &&\n        other.tags.length === this.tags.length &&\n        other.tags.every(tag => this.tags.includes(tag)) &&\n        other.available === this.available &&\n        other.guildId === this.guildId &&\n        other.sortValue === this.sortValue\n      );\n    } else {\n      return (\n        other.id === this.id &&\n        other.description === this.description &&\n        other.name === this.name &&\n        other.tags === this.tags.join(', ')\n      );\n    }\n  }\n}\n\nmodule.exports = Sticker;\n\n/**\n * @external APISticker\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-object}\n */\n\n/**\n * @external APIStickerItem\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-item-object}\n */\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst Sticker = require('./Sticker');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Represents a pack of standard stickers.\n * @extends {Base}\n */\nclass StickerPack extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIStickerPack} pack The data for the sticker pack\n   */\n  constructor(client, pack) {\n    super(client);\n    /**\n     * The Sticker pack's id\n     * @type {Snowflake}\n     */\n    this.id = pack.id;\n\n    /**\n     * The stickers in the pack\n     * @type {Collection<Snowflake, Sticker>}\n     */\n    this.stickers = new Collection(pack.stickers.map(s => [s.id, new Sticker(client, s)]));\n\n    /**\n     * The name of the sticker pack\n     * @type {string}\n     */\n    this.name = pack.name;\n\n    /**\n     * The id of the pack's SKU\n     * @type {Snowflake}\n     */\n    this.skuId = pack.sku_id;\n\n    /**\n     * The id of a sticker in the pack which is shown as the pack's icon\n     * @type {?Snowflake}\n     */\n    this.coverStickerId = pack.cover_sticker_id ?? null;\n\n    /**\n     * The description of the sticker pack\n     * @type {string}\n     */\n    this.description = pack.description;\n\n    /**\n     * The id of the sticker pack's banner image\n     * @type {Snowflake}\n     */\n    this.bannerId = pack.banner_asset_id;\n  }\n\n  /**\n   * The timestamp the sticker was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the sticker was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The sticker which is shown as the pack's icon\n   * @type {?Sticker}\n   * @readonly\n   */\n  get coverSticker() {\n    return this.coverStickerId && this.stickers.get(this.coverStickerId);\n  }\n\n  /**\n   * The URL to this sticker pack's banner.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {string}\n   */\n  bannerURL({ format, size } = {}) {\n    return this.client.rest.cdn.StickerPackBanner(this.bannerId, format, size);\n  }\n}\n\nmodule.exports = StickerPack;\n\n/**\n * @external APIStickerPack\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-pack-object}\n */\n","'use strict';\n\nconst GuildChannel = require('./GuildChannel');\n\n/**\n * Represents a guild store channel on Discord.\n * @extends {GuildChannel}\n */\nclass StoreChannel extends GuildChannel {\n  /**\n   * @param {Guild} guild The guild the store channel is part of\n   * @param {APIChannel} data The data for the store channel\n   * @param {Client} [client] A safety parameter for the client that instantiated this\n   */\n  constructor(guild, data, client) {\n    super(guild, data, client);\n\n    /**\n     * If the guild considers this channel NSFW\n     * @type {boolean}\n     */\n    this.nsfw = Boolean(data.nsfw);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('nsfw' in data) {\n      this.nsfw = Boolean(data.nsfw);\n    }\n  }\n\n  /**\n   * Creates an invite to this guild channel.\n   * @param {CreateInviteOptions} [options={}] The options for creating the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a channel\n   * channel.createInvite()\n   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n   *   .catch(console.error);\n   */\n  createInvite(options) {\n    return this.guild.invites.create(this.id, options);\n  }\n\n  /**\n   * Fetches a collection of invites to this guild channel.\n   * Resolves with a collection mapping invites by their codes.\n   * @param {boolean} [cache=true] Whether or not to cache the fetched invites\n   * @returns {Promise<Collection<string, Invite>>}\n   */\n  fetchInvites(cache = true) {\n    return this.guild.invites.fetch({ channelId: this.id, cache });\n  }\n}\n\nmodule.exports = StoreChannel;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst TeamMember = require('./TeamMember');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Represents a Client OAuth2 Application Team.\n * @extends {Base}\n */\nclass Team extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The Team's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of the Team\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The Team's icon hash\n     * @type {?string}\n     */\n    this.icon = data.icon ?? null;\n\n    /**\n     * The Team's owner id\n     * @type {?Snowflake}\n     */\n    this.ownerId = data.owner_user_id ?? null;\n\n    /**\n     * The Team's members\n     * @type {Collection<Snowflake, TeamMember>}\n     */\n    this.members = new Collection();\n\n    for (const memberData of data.members) {\n      const member = new TeamMember(this, memberData);\n      this.members.set(member.id, member);\n    }\n  }\n\n  /**\n   * The owner of this team\n   * @type {?TeamMember}\n   * @readonly\n   */\n  get owner() {\n    return this.members.get(this.ownerId) ?? null;\n  }\n\n  /**\n   * The timestamp the team was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the team was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the team's icon.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  iconURL({ format, size } = {}) {\n    if (!this.icon) return null;\n    return this.client.rest.cdn.TeamIcon(this.id, this.icon, { format, size });\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the Team's name instead of the\n   * Team object.\n   * @returns {string}\n   * @example\n   * // Logs: Team name: My Team\n   * console.log(`Team name: ${team}`);\n   */\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return super.toJSON({ createdTimestamp: true });\n  }\n}\n\nmodule.exports = Team;\n","'use strict';\n\nconst Base = require('./Base');\nconst { MembershipStates } = require('../util/Constants');\n\n/**\n * Represents a Client OAuth2 Application Team Member.\n * @extends {Base}\n */\nclass TeamMember extends Base {\n  constructor(team, data) {\n    super(team.client);\n\n    /**\n     * The Team this member is part of\n     * @type {Team}\n     */\n    this.team = team;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {string[]}\n     */\n    this.permissions = data.permissions;\n\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {MembershipState}\n     */\n    this.membershipState = MembershipStates[data.membership_state];\n\n    /**\n     * The user for this Team Member\n     * @type {User}\n     */\n    this.user = this.client.users._add(data.user);\n  }\n\n  /**\n   * The Team Member's id\n   * @type {Snowflake}\n   * @readonly\n   */\n  get id() {\n    return this.user.id;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the team member's mention instead of the\n   * TeamMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Team Member's mention: <@123456789012345678>\n   * console.log(`Team Member's mention: ${teamMember}`);\n   */\n  toString() {\n    return this.user.toString();\n  }\n}\n\nmodule.exports = TeamMember;\n","'use strict';\n\nconst BaseGuildTextChannel = require('./BaseGuildTextChannel');\n\n/**\n * Represents a guild text channel on Discord.\n * @extends {BaseGuildTextChannel}\n */\nclass TextChannel extends BaseGuildTextChannel {\n  _patch(data) {\n    super._patch(data);\n\n    if ('rate_limit_per_user' in data) {\n      /**\n       * The ratelimit per user for this channel in seconds\n       * @type {number}\n       */\n      this.rateLimitPerUser = data.rate_limit_per_user;\n    }\n  }\n\n  /**\n   * Sets the rate limit per user for this channel.\n   * @param {number} rateLimitPerUser The new ratelimit in seconds\n   * @param {string} [reason] Reason for changing the channel's ratelimits\n   * @returns {Promise<TextChannel>}\n   */\n  setRateLimitPerUser(rateLimitPerUser, reason) {\n    return this.edit({ rateLimitPerUser }, reason);\n  }\n}\n\nmodule.exports = TextChannel;\n","'use strict';\n\nconst Channel = require('./Channel');\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst MessageManager = require('../managers/MessageManager');\nconst ThreadMemberManager = require('../managers/ThreadMemberManager');\nconst Permissions = require('../util/Permissions');\n\n/**\n * Represents a thread channel on Discord.\n * @extends {Channel}\n * @implements {TextBasedChannel}\n */\nclass ThreadChannel extends Channel {\n  /**\n   * @param {Guild} guild The guild the thread channel is part of\n   * @param {APIChannel} data The data for the thread channel\n   * @param {Client} [client] A safety parameter for the client that instantiated this\n   * @param {boolean} [fromInteraction=false] Whether the data was from an interaction (partial)\n   */\n  constructor(guild, data, client, fromInteraction = false) {\n    super(guild?.client ?? client, data, false);\n\n    /**\n     * The guild the thread is in\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The id of the guild the channel is in\n     * @type {Snowflake}\n     */\n    this.guildId = guild?.id ?? data.guild_id;\n\n    /**\n     * A manager of the messages sent to this thread\n     * @type {MessageManager}\n     */\n    this.messages = new MessageManager(this);\n\n    /**\n     * A manager of the members that are part of this thread\n     * @type {ThreadMemberManager}\n     */\n    this.members = new ThreadMemberManager(this);\n    if (data) this._patch(data, fromInteraction);\n  }\n\n  _patch(data, partial = false) {\n    super._patch(data);\n\n    /**\n     * The name of the thread\n     * @type {string}\n     */\n    this.name = data.name;\n\n    if ('guild_id' in data) {\n      this.guildId = data.guild_id;\n    }\n\n    if ('parent_id' in data) {\n      /**\n       * The id of the parent channel of this thread\n       * @type {?Snowflake}\n       */\n      this.parentId = data.parent_id;\n    } else if (!this.parentId) {\n      this.parentId = null;\n    }\n\n    if ('thread_metadata' in data) {\n      /**\n       * Whether the thread is locked\n       * @type {?boolean}\n       */\n      this.locked = data.thread_metadata.locked ?? false;\n\n      /**\n       * Whether the thread is archived\n       * @type {?boolean}\n       */\n      this.archived = data.thread_metadata.archived;\n\n      /**\n       * The amount of time (in minutes) after which the thread will automatically archive in case of no recent activity\n       * @type {?number}\n       */\n      this.autoArchiveDuration = data.thread_metadata.auto_archive_duration;\n\n      /**\n       * The timestamp when the thread's archive status was last changed\n       * <info>If the thread was never archived or unarchived, this is the timestamp at which the thread was\n       * created</info>\n       * @type {?number}\n       */\n      this.archiveTimestamp = new Date(data.thread_metadata.archive_timestamp).getTime();\n    } else {\n      if (!this.locked) {\n        this.locked = null;\n      }\n      if (!this.archived) {\n        this.archived = null;\n      }\n      if (!this.autoArchiveDuration) {\n        this.autoArchiveDuration = null;\n      }\n      if (!this.archiveTimestamp) {\n        this.archiveTimestamp = null;\n      }\n    }\n\n    if ('owner_id' in data) {\n      /**\n       * The id of the member who created this thread\n       * @type {?Snowflake}\n       */\n      this.ownerId = data.owner_id;\n    } else if (!this.ownerId) {\n      this.ownerId = null;\n    }\n\n    if ('last_message_id' in data) {\n      /**\n       * The last message id sent in this thread, if one was sent\n       * @type {?Snowflake}\n       */\n      this.lastMessageId = data.last_message_id;\n    } else if (!this.lastMessageId) {\n      this.lastMessageId = null;\n    }\n\n    if ('last_pin_timestamp' in data) {\n      /**\n       * The timestamp when the last pinned message was pinned, if there was one\n       * @type {?number}\n       */\n      this.lastPinTimestamp = data.last_pin_timestamp ? new Date(data.last_pin_timestamp).getTime() : null;\n    } else if (!this.lastPinTimestamp) {\n      this.lastPinTimestamp = null;\n    }\n\n    if ('rate_limit_per_user' in data || !partial) {\n      /**\n       * The ratelimit per user for this thread (in seconds)\n       * @type {?number}\n       */\n      this.rateLimitPerUser = data.rate_limit_per_user ?? 0;\n    } else if (!this.rateLimitPerUser) {\n      this.rateLimitPerUser = null;\n    }\n\n    if ('message_count' in data) {\n      /**\n       * The approximate count of messages in this thread\n       * <info>This stops counting at 50. If you need an approximate value higher than that, use\n       * `ThreadChannel#messages.cache.size`</info>\n       * @type {?number}\n       */\n      this.messageCount = data.message_count;\n    } else if (!this.messageCount) {\n      this.messageCount = null;\n    }\n\n    if ('member_count' in data) {\n      /**\n       * The approximate count of users in this thread\n       * <info>This stops counting at 50. If you need an approximate value higher than that, use\n       * `ThreadChannel#members.cache.size`</info>\n       * @type {?number}\n       */\n      this.memberCount = data.member_count;\n    } else if (!this.memberCount) {\n      this.memberCount = null;\n    }\n\n    if (data.member && this.client.user) this.members._add({ user_id: this.client.user.id, ...data.member });\n    if (data.messages) for (const message of data.messages) this.messages._add(message);\n  }\n\n  /**\n   * A collection of associated guild member objects of this thread's members\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get guildMembers() {\n    return this.members.cache.mapValues(member => member.guildMember);\n  }\n\n  /**\n   * The time at which this thread's archive status was last changed\n   * <info>If the thread was never archived or unarchived, this is the time at which the thread was created</info>\n   * @type {?Date}\n   * @readonly\n   */\n  get archivedAt() {\n    if (!this.archiveTimestamp) return null;\n    return new Date(this.archiveTimestamp);\n  }\n\n  /**\n   * The parent channel of this thread\n   * @type {?(NewsChannel|TextChannel)}\n   * @readonly\n   */\n  get parent() {\n    return this.guild.channels.resolve(this.parentId);\n  }\n\n  /**\n   * Makes the client user join the thread.\n   * @returns {Promise<ThreadChannel>}\n   */\n  async join() {\n    await this.members.add('@me');\n    return this;\n  }\n\n  /**\n   * Makes the client user leave the thread.\n   * @returns {Promise<ThreadChannel>}\n   */\n  async leave() {\n    await this.members.remove('@me');\n    return this;\n  }\n\n  /**\n   * Gets the overall set of permissions for a member or role in this thread's parent channel, taking overwrites into\n   * account.\n   * @param {GuildMemberResolvable|RoleResolvable} memberOrRole The member or role to obtain the overall permissions for\n   * @returns {?Readonly<Permissions>}\n   */\n  permissionsFor(memberOrRole) {\n    return this.parent?.permissionsFor(memberOrRole) ?? null;\n  }\n\n  /**\n   * Fetches the owner of this thread. If the thread member object isn't needed,\n   * use {@link ThreadChannel#ownerId} instead.\n   * @param {FetchOwnerOptions} [options] The options for fetching the member\n   * @returns {Promise<?ThreadMember>}\n   */\n  async fetchOwner({ cache = true, force = false } = {}) {\n    if (!force) {\n      const existing = this.members.cache.get(this.ownerId);\n      if (existing) return existing;\n    }\n\n    // We cannot fetch a single thread member, as of this commit's date, Discord API responds with 405\n    const members = await this.members.fetch(cache);\n    return members.get(this.ownerId) ?? null;\n  }\n\n  /**\n   * The options used to edit a thread channel\n   * @typedef {Object} ThreadEditData\n   * @property {string} [name] The new name for the thread\n   * @property {boolean} [archived] Whether the thread is archived\n   * @property {ThreadAutoArchiveDuration} [autoArchiveDuration] The amount of time (in minutes) after which the thread\n   * should automatically archive in case of no recent activity\n   * @property {number} [rateLimitPerUser] The ratelimit per user for the thread in seconds\n   * @property {boolean} [locked] Whether the thread is locked\n   */\n\n  /**\n   * Edits this thread.\n   * @param {ThreadEditData} data The new data for this thread\n   * @param {string} [reason] Reason for editing this thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Edit a thread\n   * thread.edit({ name: 'new-thread' })\n   *   .then(editedThread => console.log(editedThread))\n   *   .catch(console.error);\n   */\n  async edit(data, reason) {\n    let autoArchiveDuration = data.autoArchiveDuration;\n    if (data.autoArchiveDuration === 'MAX') {\n      autoArchiveDuration = 1440;\n      if (this.guild.features.includes('SEVEN_DAY_THREAD_ARCHIVE')) {\n        autoArchiveDuration = 10080;\n      } else if (this.guild.features.includes('THREE_DAY_THREAD_ARCHIVE')) {\n        autoArchiveDuration = 4320;\n      }\n    }\n    const newData = await this.client.api.channels(this.id).patch({\n      data: {\n        name: (data.name ?? this.name).trim(),\n        archived: data.archived,\n        auto_archive_duration: autoArchiveDuration,\n        rate_limit_per_user: data.rateLimitPerUser,\n        locked: data.locked,\n      },\n      reason,\n    });\n\n    return this.client.actions.ChannelUpdate.handle(newData).updated;\n  }\n\n  /**\n   * Sets whether the thread is archived.\n   * @param {boolean} [archived=true] Whether the thread is archived\n   * @param {string} [reason] Reason for archiving or unarchiving\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Archive the thread\n   * thread.setArchived(true)\n   *   .then(newThread => console.log(`Thread is now ${newThread.archived ? 'archived' : 'active'}`))\n   *   .catch(console.error);\n   */\n  setArchived(archived = true, reason) {\n    return this.edit({ archived }, reason);\n  }\n\n  /**\n   * Sets the duration after which the thread will automatically archive in case of no recent activity.\n   * @param {ThreadAutoArchiveDuration} autoArchiveDuration The amount of time (in minutes) after which the thread\n   * should automatically archive in case of no recent activity\n   * @param {string} [reason] Reason for changing the auto archive duration\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Set the thread's auto archive time to 1 hour\n   * thread.setAutoArchiveDuration(60)\n   *   .then(newThread => {\n   *     console.log(`Thread will now archive after ${newThread.autoArchiveDuration} minutes of inactivity`);\n   *    });\n   *   .catch(console.error);\n   */\n  setAutoArchiveDuration(autoArchiveDuration, reason) {\n    return this.edit({ autoArchiveDuration }, reason);\n  }\n\n  /**\n   * Sets whether the thread can be **unarchived** by anyone with `SEND_MESSAGES` permission.\n   * When a thread is locked only members with `MANAGE_THREADS` can unarchive it.\n   * @param {boolean} [locked=true] Whether the thread is locked\n   * @param {string} [reason] Reason for locking or unlocking the thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Set the thread to locked\n   * thread.setLocked(true)\n   *   .then(newThread => console.log(`Thread is now ${newThread.locked ? 'locked' : 'unlocked'}`))\n   *   .catch(console.error);\n   */\n  setLocked(locked = true, reason) {\n    return this.edit({ locked }, reason);\n  }\n\n  /**\n   * Sets a new name for this thread.\n   * @param {string} name The new name for the thread\n   * @param {string} [reason] Reason for changing the thread's name\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Change the thread's name\n   * thread.setName('not_general')\n   *   .then(newThread => console.log(`Thread's new name is ${newThread.name}`))\n   *   .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name }, reason);\n  }\n\n  /**\n   * Sets the rate limit per user for this thread.\n   * @param {number} rateLimitPerUser The new ratelimit in seconds\n   * @param {string} [reason] Reason for changing the thread's ratelimits\n   * @returns {Promise<ThreadChannel>}\n   */\n  setRateLimitPerUser(rateLimitPerUser, reason) {\n    return this.edit({ rateLimitPerUser }, reason);\n  }\n\n  /**\n   * Whether the client user is a member of the thread.\n   * @type {boolean}\n   * @readonly\n   */\n  get joined() {\n    return this.members.cache.has(this.client.user?.id);\n  }\n\n  /**\n   * Whether the thread is editable by the client user (name, archived, autoArchiveDuration)\n   * @type {boolean}\n   * @readonly\n   */\n  get editable() {\n    return (this.ownerId === this.client.user.id && (this.type !== 'private_thread' || this.joined)) || this.manageable;\n  }\n\n  /**\n   * Whether the thread is joinable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get joinable() {\n    return (\n      !this.archived &&\n      !this.joined &&\n      this.permissionsFor(this.client.user)?.has(\n        this.type === 'GUILD_PRIVATE_THREAD' ? Permissions.FLAGS.MANAGE_THREADS : Permissions.FLAGS.VIEW_CHANNEL,\n        false,\n      )\n    );\n  }\n\n  /**\n   * Whether the thread is manageable by the client user, for deleting or editing rateLimitPerUser or locked.\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    return this.permissionsFor(this.client.user)?.has(Permissions.FLAGS.MANAGE_THREADS, false);\n  }\n\n  /**\n   * Whether the client user can send messages in this thread\n   * @type {boolean}\n   * @readonly\n   */\n  get sendable() {\n    return (\n      !this.archived &&\n      (this.type !== 'private_thread' || this.joined || this.manageable) &&\n      this.permissionsFor(this.client.user)?.any(\n        [\n          Permissions.FLAGS.SEND_MESSAGES,\n          this.type === 'GUILD_PRIVATE_THREAD'\n            ? Permissions.FLAGS.USE_PRIVATE_THREADS\n            : Permissions.FLAGS.USE_PUBLIC_THREADS,\n        ],\n        false,\n      )\n    );\n  }\n\n  /**\n   * Whether the thread is unarchivable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get unarchivable() {\n    return this.archived && (this.locked ? this.manageable : this.sendable);\n  }\n\n  /**\n   * Deletes this thread.\n   * @param {string} [reason] Reason for deleting this thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Delete the thread\n   * thread.delete('cleaning out old threads')\n   *   .then(deletedThread => console.log(deletedThread))\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.client.api.channels(this.id).delete({ reason });\n    return this;\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  get lastMessage() {}\n  get lastPinAt() {}\n  send() {}\n  sendTyping() {}\n  createMessageCollector() {}\n  awaitMessages() {}\n  createMessageComponentCollector() {}\n  awaitMessageComponent() {}\n  bulkDelete() {}\n}\n\nTextBasedChannel.applyToClass(ThreadChannel, true);\n\nmodule.exports = ThreadChannel;\n","'use strict';\n\nconst Base = require('./Base');\nconst ThreadMemberFlags = require('../util/ThreadMemberFlags');\n\n/**\n * Represents a Member for a Thread.\n * @extends {Base}\n */\nclass ThreadMember extends Base {\n  /**\n   * @param {ThreadChannel} thread The thread that this member is associated with\n   * @param {APIThreadMember} data The data for the thread member\n   */\n  constructor(thread, data) {\n    super(thread.client);\n\n    /**\n     * The thread that this member is a part of\n     * @type {ThreadChannel}\n     */\n    this.thread = thread;\n\n    /**\n     * The timestamp the member last joined the thread at\n     * @type {?number}\n     */\n    this.joinedTimestamp = null;\n\n    /**\n     * The id of the thread member\n     * @type {Snowflake}\n     */\n    this.id = data.user_id;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    this.joinedTimestamp = new Date(data.join_timestamp).getTime();\n\n    /**\n     * The flags for this thread member\n     * @type {ThreadMemberFlags}\n     */\n    this.flags = new ThreadMemberFlags(data.flags).freeze();\n  }\n\n  /**\n   * The guild member associated with this thread member\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get guildMember() {\n    return this.thread.guild.members.resolve(this.id);\n  }\n\n  /**\n   * The last time this member joined the thread\n   * @type {?Date}\n   * @readonly\n   */\n  get joinedAt() {\n    return this.joinedTimestamp ? new Date(this.joinedTimestamp) : null;\n  }\n\n  /**\n   * The user associated with this thread member\n   * @type {?User}\n   * @readonly\n   */\n  get user() {\n    return this.client.users.resolve(this.id);\n  }\n\n  /**\n   * Whether the client user can manage this thread member\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    return !this.thread.archived && this.thread.editable;\n  }\n\n  /**\n   * Removes this member from the thread.\n   * @param {string} [reason] Reason for removing the member\n   * @returns {ThreadMember}\n   */\n  async remove(reason) {\n    await this.thread.members.remove(this.id, reason);\n    return this;\n  }\n}\n\nmodule.exports = ThreadMember;\n\n/**\n * @external APIThreadMember\n * @see {@link https://discord.com/developers/docs/resources/channel#thread-member-object}\n */\n","'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a typing state for a user in a channel.\n * @extends {Base}\n */\nclass Typing extends Base {\n  /**\n   * @param {TextBasedChannels} channel The channel this typing came from\n   * @param {User} user The user that started typing\n   * @param {APITypingStart} data The raw data received\n   */\n  constructor(channel, user, data) {\n    super(channel.client);\n\n    /**\n     * The channel the status is from\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n\n    /**\n     * The user who is typing\n     * @type {User}\n     */\n    this.user = user;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The UNIX timestamp in milliseconds the user started typing at\n     * @type {number}\n     */\n    this.startedTimestamp = data.timestamp * 1000;\n  }\n\n  /**\n   * Indicates whether the status is received from a guild.\n   * @returns {boolean}\n   */\n  inGuild() {\n    return this.guild !== null;\n  }\n\n  /**\n   * The time the user started typing at\n   * @type {Date}\n   * @readonly\n   */\n  get startedAt() {\n    return new Date(this.startedTimestamp);\n  }\n\n  /**\n   * The guild the status is from\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.channel.guild ?? null;\n  }\n\n  /**\n   * The member who is typing\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild?.members.resolve(this.user) ?? null;\n  }\n}\n\nmodule.exports = Typing;\n\n/**\n * @external APITypingStart\n * @see {@link https://discord.com/developers/docs/topics/gateway#typing-start-typing-start-event-fields}\n */\n","'use strict';\n\nconst Base = require('./Base');\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst { Error } = require('../errors');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\nconst UserFlags = require('../util/UserFlags');\n\n/**\n * Represents a user on Discord.\n * @implements {TextBasedChannel}\n * @extends {Base}\n */\nclass User extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIUser} data The data for the user\n   */\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The user's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    this.bot = null;\n\n    this.system = null;\n\n    this.flags = null;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('username' in data) {\n      /**\n       * The username of the user\n       * @type {?string}\n       */\n      this.username = data.username;\n    } else if (typeof this.username !== 'string') {\n      this.username = null;\n    }\n\n    if ('bot' in data) {\n      /**\n       * Whether or not the user is a bot\n       * @type {?boolean}\n       */\n      this.bot = Boolean(data.bot);\n    } else if (!this.partial && typeof this.bot !== 'boolean') {\n      this.bot = false;\n    }\n\n    if ('discriminator' in data) {\n      /**\n       * A discriminator based on username for the user\n       * @type {?string}\n       */\n      this.discriminator = data.discriminator;\n    } else if (typeof this.discriminator !== 'string') {\n      this.discriminator = null;\n    }\n\n    if ('avatar' in data) {\n      /**\n       * The user avatar's hash\n       * @type {?string}\n       */\n      this.avatar = data.avatar;\n    } else if (typeof this.avatar !== 'string') {\n      this.avatar = null;\n    }\n\n    if ('system' in data) {\n      /**\n       * Whether the user is an Official Discord System user (part of the urgent message system)\n       * @type {?boolean}\n       */\n      this.system = Boolean(data.system);\n    } else if (!this.partial && typeof this.system !== 'boolean') {\n      this.system = false;\n    }\n\n    if ('public_flags' in data) {\n      /**\n       * The flags for this user\n       * @type {?UserFlags}\n       */\n      this.flags = new UserFlags(data.public_flags);\n    }\n  }\n\n  /**\n   * Whether this User is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return typeof this.username !== 'string';\n  }\n\n  /**\n   * The timestamp the user was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the user was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the user's avatar.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  avatarURL({ format, size, dynamic } = {}) {\n    if (!this.avatar) return null;\n    return this.client.rest.cdn.Avatar(this.id, this.avatar, format, size, dynamic);\n  }\n\n  /**\n   * A link to the user's default avatar\n   * @type {string}\n   * @readonly\n   */\n  get defaultAvatarURL() {\n    return this.client.rest.cdn.DefaultAvatar(this.discriminator % 5);\n  }\n\n  /**\n   * A link to the user's avatar if they have one.\n   * Otherwise a link to their default avatar will be returned.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {string}\n   */\n  displayAvatarURL(options) {\n    return this.avatarURL(options) ?? this.defaultAvatarURL;\n  }\n\n  /**\n   * The Discord \"tag\" (e.g. `hydrabolt#0001`) for this user\n   * @type {?string}\n   * @readonly\n   */\n  get tag() {\n    return typeof this.username === 'string' ? `${this.username}#${this.discriminator}` : null;\n  }\n\n  /**\n   * The DM between the client's user and this user\n   * @type {?DMChannel}\n   * @readonly\n   */\n  get dmChannel() {\n    return this.client.channels.cache.find(c => c.type === 'DM' && c.recipient.id === this.id) ?? null;\n  }\n\n  /**\n   * Creates a DM channel between the client and the user.\n   * @param {boolean} [force=false] Whether to skip the cache check and request the API\n   * @returns {Promise<DMChannel>}\n   */\n  async createDM(force = false) {\n    if (!force) {\n      const { dmChannel } = this;\n      if (dmChannel && !dmChannel.partial) return dmChannel;\n    }\n\n    const data = await this.client.api.users(this.client.user.id).channels.post({\n      data: {\n        recipient_id: this.id,\n      },\n    });\n    return this.client.channels._add(data);\n  }\n\n  /**\n   * Deletes a DM channel (if one exists) between the client and the user. Resolves with the channel if successful.\n   * @returns {Promise<DMChannel>}\n   */\n  async deleteDM() {\n    const { dmChannel } = this;\n    if (!dmChannel) throw new Error('USER_NO_DMCHANNEL');\n    await this.client.api.channels(dmChannel.id).delete();\n    this.client.channels._remove(dmChannel.id);\n    return dmChannel;\n  }\n\n  /**\n   * Checks if the user is equal to another. It compares id, username, discriminator, avatar, and bot flags.\n   * It is recommended to compare equality by using `user.id === user2.id` unless you want to compare all properties.\n   * @param {User} user User to compare with\n   * @returns {boolean}\n   */\n  equals(user) {\n    let equal =\n      user &&\n      this.id === user.id &&\n      this.username === user.username &&\n      this.discriminator === user.discriminator &&\n      this.avatar === user.avatar;\n\n    return equal;\n  }\n\n  /**\n   * Fetches this user's flags.\n   * @param {boolean} [force=false] Whether to skip the cache check and request the API\n   * @returns {Promise<UserFlags>}\n   */\n  async fetchFlags(force = false) {\n    if (this.flags && !force) return this.flags;\n    const data = await this.client.api.users(this.id).get();\n    this._patch(data);\n    return this.flags;\n  }\n\n  /**\n   * Fetches this user.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<User>}\n   */\n  fetch(force = true) {\n    return this.client.users.fetch(this.id, { force });\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the user's mention instead of the User object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <@123456789012345678>!\n   * console.log(`Hello from ${user}!`);\n   */\n  toString() {\n    return `<@${this.id}>`;\n  }\n\n  toJSON(...props) {\n    const json = super.toJSON(\n      {\n        createdTimestamp: true,\n        defaultAvatarURL: true,\n        tag: true,\n      },\n      ...props,\n    );\n    json.avatarURL = this.avatarURL();\n    json.displayAvatarURL = this.displayAvatarURL();\n    return json;\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  send() {}\n}\n\nTextBasedChannel.applyToClass(User);\n\nmodule.exports = User;\n\n/**\n * @external APIUser\n * @see {@link https://discord.com/developers/docs/resources/user#user-object}\n */\n","'use strict';\n\nconst BaseGuildVoiceChannel = require('./BaseGuildVoiceChannel');\nconst Permissions = require('../util/Permissions');\n\n/**\n * Represents a guild voice channel on Discord.\n * @extends {BaseGuildVoiceChannel}\n */\nclass VoiceChannel extends BaseGuildVoiceChannel {\n  /**\n   * Whether the channel is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    return super.deletable && this.permissionsFor(this.client.user).has(Permissions.FLAGS.CONNECT, false);\n  }\n\n  /**\n   * Whether the channel is editable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get editable() {\n    return this.manageable && this.permissionsFor(this.client.user).has(Permissions.FLAGS.CONNECT, false);\n  }\n\n  /**\n   * Whether the channel is joinable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get joinable() {\n    if (!super.joinable) return false;\n    if (this.full && !this.permissionsFor(this.client.user).has(Permissions.FLAGS.MOVE_MEMBERS, false)) return false;\n    return true;\n  }\n\n  /**\n   * Checks if the client has permission to send audio to the voice channel\n   * @type {boolean}\n   * @readonly\n   */\n  get speakable() {\n    return this.permissionsFor(this.client.user).has(Permissions.FLAGS.SPEAK, false);\n  }\n\n  /**\n   * Sets the bitrate of the channel.\n   * @param {number} bitrate The new bitrate\n   * @param {string} [reason] Reason for changing the channel's bitrate\n   * @returns {Promise<VoiceChannel>}\n   * @example\n   * // Set the bitrate of a voice channel\n   * voiceChannel.setBitrate(48000)\n   *   .then(vc => console.log(`Set bitrate to ${vc.bitrate}bps for ${vc.name}`))\n   *   .catch(console.error);\n   */\n  setBitrate(bitrate, reason) {\n    return this.edit({ bitrate }, reason);\n  }\n\n  /**\n   * Sets the user limit of the channel.\n   * @param {number} userLimit The new user limit\n   * @param {string} [reason] Reason for changing the user limit\n   * @returns {Promise<VoiceChannel>}\n   * @example\n   * // Set the user limit of a voice channel\n   * voiceChannel.setUserLimit(42)\n   *   .then(vc => console.log(`Set user limit to ${vc.userLimit} for ${vc.name}`))\n   *   .catch(console.error);\n   */\n  setUserLimit(userLimit, reason) {\n    return this.edit({ userLimit }, reason);\n  }\n\n  /**\n   * Sets the RTC region of the channel.\n   * @name VoiceChannel#setRTCRegion\n   * @param {?string} region The new region of the channel. Set to `null` to remove a specific region for the channel\n   * @returns {Promise<VoiceChannel>}\n   * @example\n   * // Set the RTC region to europe\n   * voiceChannel.setRTCRegion('europe');\n   * @example\n   * // Remove a fixed region for this channel - let Discord decide automatically\n   * voiceChannel.setRTCRegion(null);\n   */\n}\n\nmodule.exports = VoiceChannel;\n","'use strict';\n\nconst Util = require('../util/Util');\n\n/**\n * Represents a Discord voice region for guilds.\n */\nclass VoiceRegion {\n  constructor(data) {\n    /**\n     * The region's id\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * Name of the region\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * Whether the region is VIP-only\n     * @type {boolean}\n     */\n    this.vip = data.vip;\n\n    /**\n     * Whether the region is deprecated\n     * @type {boolean}\n     */\n    this.deprecated = data.deprecated;\n\n    /**\n     * Whether the region is optimal\n     * @type {boolean}\n     */\n    this.optimal = data.optimal;\n\n    /**\n     * Whether the region is custom\n     * @type {boolean}\n     */\n    this.custom = data.custom;\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n}\n\nmodule.exports = VoiceRegion;\n","'use strict';\n\nconst Base = require('./Base');\nconst { Error, TypeError } = require('../errors');\n\n/**\n * Represents the voice state for a Guild Member.\n */\nclass VoiceState extends Base {\n  /**\n   * @param {Guild} guild The guild the voice state is part of\n   * @param {APIVoiceState} data The data for the voice state\n   */\n  constructor(guild, data) {\n    super(guild.client);\n    /**\n     * The guild of this voice state\n     * @type {Guild}\n     */\n    this.guild = guild;\n    /**\n     * The id of the member of this voice state\n     * @type {Snowflake}\n     */\n    this.id = data.user_id;\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * Whether this member is deafened server-wide\n     * @type {?boolean}\n     */\n    this.serverDeaf = data.deaf ?? null;\n    /**\n     * Whether this member is muted server-wide\n     * @type {?boolean}\n     */\n    this.serverMute = data.mute ?? null;\n    /**\n     * Whether this member is self-deafened\n     * @type {?boolean}\n     */\n    this.selfDeaf = data.self_deaf ?? null;\n    /**\n     * Whether this member is self-muted\n     * @type {?boolean}\n     */\n    this.selfMute = data.self_mute ?? null;\n    /**\n     * Whether this member's camera is enabled\n     * @type {?boolean}\n     */\n    this.selfVideo = data.self_video ?? null;\n    /**\n     * The session id for this member's connection\n     * @type {?string}\n     */\n    this.sessionId = data.session_id ?? null;\n    /**\n     * Whether this member is streaming using \"Screen Share\"\n     * @type {boolean}\n     */\n    this.streaming = data.self_stream ?? false;\n    /**\n     * The {@link VoiceChannel} or {@link StageChannel} id the member is in\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel_id ?? null;\n    /**\n     * Whether this member is suppressed from speaking. This property is specific to stage channels only.\n     * @type {boolean}\n     */\n    this.suppress = data.suppress;\n    /**\n     * The time at which the member requested to speak. This property is specific to stage channels only.\n     * @type {?number}\n     */\n    this.requestToSpeakTimestamp = data.request_to_speak_timestamp\n      ? new Date(data.request_to_speak_timestamp).getTime()\n      : null;\n    return this;\n  }\n\n  /**\n   * The member that this voice state belongs to\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild.members.cache.get(this.id) ?? null;\n  }\n\n  /**\n   * The channel that the member is connected to\n   * @type {?(VoiceChannel|StageChannel)}\n   * @readonly\n   */\n  get channel() {\n    return this.guild.channels.cache.get(this.channelId) ?? null;\n  }\n\n  /**\n   * Whether this member is either self-deafened or server-deafened\n   * @type {?boolean}\n   * @readonly\n   */\n  get deaf() {\n    return this.serverDeaf || this.selfDeaf;\n  }\n\n  /**\n   * Whether this member is either self-muted or server-muted\n   * @type {?boolean}\n   * @readonly\n   */\n  get mute() {\n    return this.serverMute || this.selfMute;\n  }\n\n  /**\n   * Mutes/unmutes the member of this voice state.\n   * @param {boolean} mute Whether or not the member should be muted\n   * @param {string} [reason] Reason for muting or unmuting\n   * @returns {Promise<GuildMember>}\n   */\n  setMute(mute, reason) {\n    return this.member?.edit({ mute }, reason) ?? Promise.reject(new Error('VOICE_STATE_UNCACHED_MEMBER'));\n  }\n\n  /**\n   * Deafens/undeafens the member of this voice state.\n   * @param {boolean} deaf Whether or not the member should be deafened\n   * @param {string} [reason] Reason for deafening or undeafening\n   * @returns {Promise<GuildMember>}\n   */\n  setDeaf(deaf, reason) {\n    return this.member?.edit({ deaf }, reason) ?? Promise.reject(new Error('VOICE_STATE_UNCACHED_MEMBER'));\n  }\n\n  /**\n   * Disconnects the member from the channel.\n   * @param {string} [reason] Reason for disconnecting the member from the channel\n   * @returns {Promise<GuildMember>}\n   */\n  disconnect(reason) {\n    return this.setChannel(null, reason);\n  }\n\n  /**\n   * Moves the member to a different channel, or disconnects them from the one they're in.\n   * @param {VoiceChannelResolvable|null} channel Channel to move the member to, or `null` if you want to disconnect\n   * them from voice.\n   * @param {string} [reason] Reason for moving member to another channel or disconnecting\n   * @returns {Promise<GuildMember>}\n   */\n  setChannel(channel, reason) {\n    return this.member?.edit({ channel }, reason) ?? Promise.reject(new Error('VOICE_STATE_UNCACHED_MEMBER'));\n  }\n\n  /**\n   * Toggles the request to speak in the channel.\n   * Only applicable for stage channels and for the client's own voice state.\n   * @param {boolean} request Whether or not the client is requesting to become a speaker.\n   * @example\n   * // Making the client request to speak in a stage channel (raise its hand)\n   * guild.me.voice.setRequestToSpeak(true);\n   * @example\n   * // Making the client cancel a request to speak\n   * guild.me.voice.setRequestToSpeak(false);\n   * @returns {Promise<void>}\n   */\n  async setRequestToSpeak(request) {\n    if (this.channel?.type !== 'GUILD_STAGE_VOICE') throw new Error('VOICE_NOT_STAGE_CHANNEL');\n\n    if (this.client.user.id !== this.id) throw new Error('VOICE_STATE_NOT_OWN');\n\n    await this.client.api.guilds(this.guild.id, 'voice-states', '@me').patch({\n      data: {\n        channel_id: this.channelId,\n        request_to_speak_timestamp: request ? new Date().toISOString() : null,\n      },\n    });\n  }\n\n  /**\n   * Suppress/unsuppress the user. Only applicable for stage channels.\n   * @param {boolean} suppressed - Whether or not the user should be suppressed.\n   * @example\n   * // Making the client a speaker\n   * guild.me.voice.setSuppressed(false);\n   * @example\n   * // Making the client an audience member\n   * guild.me.voice.setSuppressed(true);\n   * @example\n   * // Inviting another user to speak\n   * voiceState.setSuppressed(false);\n   * @example\n   * // Moving another user to the audience, or cancelling their invite to speak\n   * voiceState.setSuppressed(true);\n   * @returns {Promise<void>}\n   */\n  async setSuppressed(suppressed) {\n    if (typeof suppressed !== 'boolean') throw new TypeError('VOICE_STATE_INVALID_TYPE', 'suppressed');\n\n    if (this.channel?.type !== 'GUILD_STAGE_VOICE') throw new Error('VOICE_NOT_STAGE_CHANNEL');\n\n    const target = this.client.user.id === this.id ? '@me' : this.id;\n\n    await this.client.api.guilds(this.guild.id, 'voice-states', target).patch({\n      data: {\n        channel_id: this.channelId,\n        suppress: suppressed,\n      },\n    });\n  }\n\n  toJSON() {\n    return super.toJSON({\n      id: true,\n      serverDeaf: true,\n      serverMute: true,\n      selfDeaf: true,\n      selfMute: true,\n      sessionId: true,\n      channelId: 'channel',\n    });\n  }\n}\n\nmodule.exports = VoiceState;\n\n/**\n * @external APIVoiceState\n * @see {@link https://discord.com/developers/docs/resources/voice#voice-state-object}\n */\n","'use strict';\n\nconst MessagePayload = require('./MessagePayload');\nconst { Error } = require('../errors');\nconst { WebhookTypes } = require('../util/Constants');\nconst DataResolver = require('../util/DataResolver');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Represents a webhook.\n */\nclass Webhook {\n  constructor(client, data) {\n    /**\n     * The client that instantiated the webhook\n     * @name Webhook#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The name of the webhook\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The token for the webhook, unavailable for follower webhooks and webhooks owned by another application.\n     * @name Webhook#token\n     * @type {?string}\n     */\n    Object.defineProperty(this, 'token', { value: data.token ?? null, writable: true, configurable: true });\n\n    /**\n     * The avatar for the webhook\n     * @type {?string}\n     */\n    this.avatar = data.avatar;\n\n    /**\n     * The webhook's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The type of the webhook\n     * @type {WebhookType}\n     */\n    this.type = WebhookTypes[data.type];\n\n    /**\n     * The guild the webhook belongs to\n     * @type {Snowflake}\n     */\n    this.guildId = data.guild_id;\n\n    /**\n     * The channel the webhook belongs to\n     * @type {Snowflake}\n     */\n    this.channelId = data.channel_id;\n\n    /**\n     * The owner of the webhook\n     * @type {?(User|APIUser)}\n     */\n    this.owner = data.user ? this.client.users?._add(data.user) ?? data.user : null;\n\n    /**\n     * The source guild of the webhook\n     * @type {?(Guild|APIGuild)}\n     */\n    this.sourceGuild = data.source_guild\n      ? this.client.guilds?._add(data.source_guild, false) ?? data.source_guild\n      : null;\n\n    /**\n     * The source channel of the webhook\n     * @type {?(Channel|APIChannel)}\n     */\n    this.sourceChannel = this.client.channels?.resolve(data.source_channel?.id) ?? data.source_channel ?? null;\n  }\n\n  /**\n   * Options that can be passed into send.\n   * @typedef {BaseMessageOptions} WebhookMessageOptions\n   * @property {string} [username=this.name] Username override for the message\n   * @property {string} [avatarURL] Avatar URL override for the message\n   * @property {Snowflake} [threadId] The id of the thread in the channel to send to.\n   * <info>For interaction webhooks, this property is ignored</info>\n   */\n\n  /**\n   * Options that can be passed into editMessage.\n   * @typedef {Object} WebhookEditMessageOptions\n   * @property {MessageEmbed[]|APIEmbed[]} [embeds] See {@link WebhookMessageOptions#embeds}\n   * @property {string} [content] See {@link BaseMessageOptions#content}\n   * @property {FileOptions[]|BufferResolvable[]|MessageAttachment[]} [files] See {@link BaseMessageOptions#files}\n   * @property {MessageMentionOptions} [allowedMentions] See {@link BaseMessageOptions#allowedMentions}\n   * @property {MessageActionRow[]|MessageActionRowOptions[]} [components]\n   * Action rows containing interactive components for the message (buttons, select menus)\n   */\n\n  /**\n   * Sends a message with this webhook.\n   * @param {string|MessagePayload|WebhookMessageOptions} options The options to provide\n   * @returns {Promise<Message|APIMessage>}\n   * @example\n   * // Send a basic message\n   * webhook.send('hello!')\n   *   .then(message => console.log(`Sent message: ${message.content}`))\n   *   .catch(console.error);\n   * @example\n   * // Send a basic message in a thread\n   * webhook.send({ content: 'hello!', threadId: '836856309672348295' })\n   *   .then(message => console.log(`Sent message: ${message.content}`))\n   *   .catch(console.error);\n   * @example\n   * // Send a remote file\n   * webhook.send({\n   *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048']\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Send a local file\n   * webhook.send({\n   *   files: [{\n   *     attachment: 'entire/path/to/file.jpg',\n   *     name: 'file.jpg'\n   *   }]\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Send an embed with a local image inside\n   * webhook.send({\n   *   content: 'This is an embed',\n   *   embeds: [{\n   *     thumbnail: {\n   *          url: 'attachment://file.jpg'\n   *       }\n   *    }],\n   *    files: [{\n   *       attachment: 'entire/path/to/file.jpg',\n   *       name: 'file.jpg'\n   *    }]\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async send(options) {\n    if (!this.token) throw new Error('WEBHOOK_TOKEN_UNAVAILABLE');\n\n    let messagePayload;\n\n    if (options instanceof MessagePayload) {\n      messagePayload = options.resolveData();\n    } else {\n      messagePayload = MessagePayload.create(this, options).resolveData();\n    }\n\n    const { data, files } = await messagePayload.resolveFiles();\n    const d = await this.client.api.webhooks(this.id, this.token).post({\n      data,\n      files,\n      query: { thread_id: messagePayload.options.threadId, wait: true },\n      auth: false,\n    });\n    return this.client.channels?.cache.get(d.channel_id)?.messages._add(d, false) ?? d;\n  }\n\n  /**\n   * Sends a raw slack message with this webhook.\n   * @param {Object} body The raw body to send\n   * @returns {Promise<boolean>}\n   * @example\n   * // Send a slack message\n   * webhook.sendSlackMessage({\n   *   'username': 'Wumpus',\n   *   'attachments': [{\n   *     'pretext': 'this looks pretty cool',\n   *     'color': '#F0F',\n   *     'footer_icon': 'http://snek.s3.amazonaws.com/topSnek.png',\n   *     'footer': 'Powered by sneks',\n   *     'ts': Date.now() / 1000\n   *   }]\n   * }).catch(console.error);\n   * @see {@link https://api.slack.com/messaging/webhooks}\n   */\n  async sendSlackMessage(body) {\n    if (!this.token) throw new Error('WEBHOOK_TOKEN_UNAVAILABLE');\n\n    const data = await this.client.api.webhooks(this.id, this.token).slack.post({\n      query: { wait: true },\n      auth: false,\n      data: body,\n    });\n    return data.toString() === 'ok';\n  }\n\n  /**\n   * Options used to edit a {@link Webhook}.\n   * @typedef {Object} WebhookEditData\n   * @property {string} [name=this.name] The new name for the webhook\n   * @property {BufferResolvable} [avatar] The new avatar for the webhook\n   * @property {GuildTextChannelResolvable} [channel] The new channel for the webhook\n   */\n\n  /**\n   * Edits this webhook.\n   * @param {WebhookEditData} options Options for editing the webhook\n   * @param {string} [reason] Reason for editing the webhook\n   * @returns {Promise<Webhook>}\n   */\n  async edit({ name = this.name, avatar, channel }, reason) {\n    if (avatar && !(typeof avatar === 'string' && avatar.startsWith('data:'))) {\n      avatar = await DataResolver.resolveImage(avatar);\n    }\n    if (channel) channel = channel?.id ?? channel;\n    const data = await this.client.api.webhooks(this.id, channel ? undefined : this.token).patch({\n      data: { name, avatar, channel_id: channel },\n      reason,\n    });\n\n    this.name = data.name;\n    this.avatar = data.avatar;\n    this.channelId = data.channel_id;\n    return this;\n  }\n\n  /**\n   * Gets a message that was sent by this webhook.\n   * @param {Snowflake|'@original'} message The id of the message to fetch\n   * @param {boolean} [cache=true] Whether to cache the message\n   * @returns {Promise<Message|APIMessage>} Returns the raw message data if the webhook was instantiated as a\n   * {@link WebhookClient} or if the channel is uncached, otherwise a {@link Message} will be returned\n   */\n  async fetchMessage(message, cache = true) {\n    if (!this.token) throw new Error('WEBHOOK_TOKEN_UNAVAILABLE');\n\n    const data = await this.client.api.webhooks(this.id, this.token).messages(message).get();\n    return this.client.channels?.cache.get(data.channel_id)?.messages._add(data, cache) ?? data;\n  }\n\n  /**\n   * Edits a message that was sent by this webhook.\n   * @param {MessageResolvable|'@original'} message The message to edit\n   * @param {string|MessagePayload|WebhookEditMessageOptions} options The options to provide\n   * @returns {Promise<Message|APIMessage>} Returns the raw message data if the webhook was instantiated as a\n   * {@link WebhookClient} or if the channel is uncached, otherwise a {@link Message} will be returned\n   */\n  async editMessage(message, options) {\n    if (!this.token) throw new Error('WEBHOOK_TOKEN_UNAVAILABLE');\n\n    let messagePayload;\n\n    if (options instanceof MessagePayload) messagePayload = options;\n    else messagePayload = MessagePayload.create(this, options);\n\n    const { data, files } = await messagePayload.resolveData().resolveFiles();\n\n    const d = await this.client.api\n      .webhooks(this.id, this.token)\n      .messages(typeof message === 'string' ? message : message.id)\n      .patch({ data, files });\n\n    const messageManager = this.client.channels?.cache.get(d.channel_id)?.messages;\n    if (!messageManager) return d;\n\n    const existing = messageManager.cache.get(d.id);\n    if (!existing) return messageManager._add(d);\n\n    const clone = existing._clone();\n    clone._patch(d);\n    return clone;\n  }\n\n  /**\n   * Deletes the webhook.\n   * @param {string} [reason] Reason for deleting this webhook\n   * @returns {Promise<void>}\n   */\n  async delete(reason) {\n    await this.client.api.webhooks(this.id, this.token).delete({ reason });\n  }\n\n  /**\n   * Delete a message that was sent by this webhook.\n   * @param {MessageResolvable|'@original'} message The message to delete\n   * @returns {Promise<void>}\n   */\n  async deleteMessage(message) {\n    if (!this.token) throw new Error('WEBHOOK_TOKEN_UNAVAILABLE');\n\n    await this.client.api\n      .webhooks(this.id, this.token)\n      .messages(typeof message === 'string' ? message : message.id)\n      .delete();\n  }\n\n  /**\n   * The timestamp the webhook was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the webhook was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The url of this webhook\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return this.client.options.http.api + this.client.api.webhooks(this.id, this.token);\n  }\n\n  /**\n   * A link to the webhook's avatar.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  avatarURL({ format, size } = {}) {\n    if (!this.avatar) return null;\n    return this.client.rest.cdn.Avatar(this.id, this.avatar, format, size);\n  }\n\n  static applyToClass(structure, ignore = []) {\n    for (const prop of [\n      'send',\n      'sendSlackMessage',\n      'fetchMessage',\n      'edit',\n      'editMessage',\n      'delete',\n      'deleteMessage',\n      'createdTimestamp',\n      'createdAt',\n      'url',\n    ]) {\n      if (ignore.includes(prop)) continue;\n      Object.defineProperty(structure.prototype, prop, Object.getOwnPropertyDescriptor(Webhook.prototype, prop));\n    }\n  }\n}\n\nmodule.exports = Webhook;\n","'use strict';\n\nconst Base = require('./Base');\nconst Emoji = require('./Emoji');\n\n/**\n * Represents a channel link in a guild's welcome screen.\n * @extends {Base}\n */\nclass WelcomeChannel extends Base {\n  constructor(guild, data) {\n    super(guild.client);\n\n    /**\n     * The guild for this welcome channel\n     * @type {Guild|InviteGuild}\n     */\n    this.guild = guild;\n\n    /**\n     * The description of this welcome channel\n     * @type {string}\n     */\n    this.description = data.description;\n\n    /**\n     * The raw emoji data\n     * @type {Object}\n     * @private\n     */\n    this._emoji = {\n      name: data.emoji_name,\n      id: data.emoji_id,\n    };\n\n    /**\n     * The id of this welcome channel\n     * @type {Snowflake}\n     */\n    this.channelId = data.channel_id;\n  }\n\n  /**\n   * The channel of this welcome channel\n   * @type {?(TextChannel|NewsChannel)}\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * The emoji of this welcome channel\n   * @type {GuildEmoji|Emoji}\n   */\n  get emoji() {\n    return this.client.emojis.resolve(this._emoji.id) ?? new Emoji(this.client, this._emoji);\n  }\n}\n\nmodule.exports = WelcomeChannel;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst WelcomeChannel = require('./WelcomeChannel');\n\n/**\n * Represents a welcome screen.\n * @extends {Base}\n */\nclass WelcomeScreen extends Base {\n  constructor(guild, data) {\n    super(guild.client);\n\n    /**\n     * The guild for this welcome screen\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The description of this welcome screen\n     * @type {?string}\n     */\n    this.description = data.description ?? null;\n\n    /**\n     * Collection of welcome channels belonging to this welcome screen\n     * @type {Collection<Snowflake, WelcomeChannel>}\n     */\n    this.welcomeChannels = new Collection();\n\n    for (const channel of data.welcome_channels) {\n      const welcomeChannel = new WelcomeChannel(this.guild, channel);\n      this.welcomeChannels.set(welcomeChannel.channelId, welcomeChannel);\n    }\n  }\n\n  /**\n   * Whether the welcome screen is enabled on the guild or not\n   * @type {boolean}\n   */\n  get enabled() {\n    return this.guild.features.includes('WELCOME_SCREEN_ENABLED');\n  }\n}\n\nmodule.exports = WelcomeScreen;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst WidgetMember = require('./WidgetMember');\n\n/**\n * Represents a Widget.\n */\nclass Widget extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Object} data The raw data\n   */\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  /**\n   * Represents a channel in a Widget\n   * @typedef {Object} WidgetChannel\n   * @property {Snowflake} id Id of the channel\n   * @property {string} name Name of the channel\n   * @property {number} position Position of the channel\n   */\n\n  /**\n   * Builds the widget with the provided data.\n   * @param {*} data The raw data of the widget\n   * @private\n   */\n  _patch(data) {\n    /**\n     * The id of the guild.\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of the guild.\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The invite of the guild.\n     * @type {?string}\n     */\n    this.instantInvite = data.instant_invite;\n\n    /**\n     * The list of channels in the guild.\n     * @type {Collection<Snowflake, WidgetChannel>}\n     */\n    this.channels = new Collection();\n    for (const channel of data.channels) {\n      this.channels.set(channel.id, channel);\n    }\n\n    /**\n     * The list of members in the guild.\n     * These strings are just arbitrary numbers, they aren't Snowflakes.\n     * @type {Collection<string, WidgetMember>}\n     */\n    this.members = new Collection();\n    for (const member of data.members) {\n      this.members.set(member.id, new WidgetMember(this.client, member));\n    }\n\n    /**\n     * The number of the members online.\n     * @type {number}\n     */\n    this.presenceCount = data.presence_count;\n  }\n\n  /**\n   * Update the Widget.\n   * @returns {Promise<Widget>}\n   */\n  async fetch() {\n    const data = await this.client.api.guilds(this.id, 'widget.json').get();\n    this._patch(data);\n    return this;\n  }\n}\n\nmodule.exports = Widget;\n","'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a WidgetMember.\n */\nclass WidgetMember extends Base {\n  /**\n   * Activity sent in a {@link WidgetMember}.\n   * @typedef {Object} WidgetActivity\n   * @property {string} name The name of the activity\n   */\n\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Object} data The raw data\n   */\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the user. It's an arbitrary number.\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * The username of the member.\n     * @type {string}\n     */\n    this.username = data.username;\n\n    /**\n     * The discriminator of the member.\n     * @type {string}\n     */\n    this.discriminator = data.discriminator;\n\n    /**\n     * The avatar of the member.\n     * @type {?string}\n     */\n    this.avatar = data.avatar;\n\n    /**\n     * The status of the member.\n     * @type {PresenceStatus}\n     */\n    this.status = data.status;\n\n    /**\n     * IIf the member is server deafened\n     * @type {?boolean}\n     */\n    this.deaf = data.deaf ?? null;\n\n    /**\n     * If the member is server muted\n     * @type {?boolean}\n     */\n    this.mute = data.mute ?? null;\n\n    /**\n     * If the member is self deafened\n     * @type {?boolean}\n     */\n    this.selfDeaf = data.self_deaf ?? null;\n\n    /**\n     * If the member is self muted\n     * @type {?boolean}\n     */\n    this.selfMute = data.self_mute ?? null;\n\n    /**\n     * If the member is suppressed\n     * @type {?boolean}\n     */\n    this.suppress = data.suppress ?? null;\n\n    /**\n     * The id of the voice channel the member is in, if any\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel_id ?? null;\n\n    /**\n     * The avatar URL of the member.\n     * @type {string}\n     */\n    this.avatarURL = data.avatar_url;\n\n    /**\n     * The activity of the member.\n     * @type {?WidgetActivity}\n     */\n    this.activity = data.activity ?? null;\n  }\n}\n\nmodule.exports = WidgetMember;\n","'use strict';\n\nconst { ClientApplicationAssetTypes, Endpoints } = require('../../util/Constants');\nconst SnowflakeUtil = require('../../util/SnowflakeUtil');\nconst Base = require('../Base');\n\nconst AssetTypes = Object.keys(ClientApplicationAssetTypes);\n\n/**\n * Represents an OAuth2 Application.\n * @abstract\n */\nclass Application extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The application's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of the application\n     * @type {?string}\n     */\n    this.name = data.name ?? this.name ?? null;\n\n    /**\n     * The application's description\n     * @type {?string}\n     */\n    this.description = data.description ?? this.description ?? null;\n\n    /**\n     * The application's icon hash\n     * @type {?string}\n     */\n    this.icon = data.icon ?? this.icon ?? null;\n  }\n\n  /**\n   * The timestamp the application was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the application was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the application's icon.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  iconURL({ format, size } = {}) {\n    if (!this.icon) return null;\n    return this.client.rest.cdn.AppIcon(this.id, this.icon, { format, size });\n  }\n\n  /**\n   * A link to this application's cover image.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  coverURL({ format, size } = {}) {\n    if (!this.cover) return null;\n    return Endpoints.CDN(this.client.options.http.cdn).AppIcon(this.id, this.cover, { format, size });\n  }\n\n  /**\n   * Asset data.\n   * @typedef {Object} ApplicationAsset\n   * @property {Snowflake} id The asset's id\n   * @property {string} name The asset's name\n   * @property {string} type The asset's type\n   */\n\n  /**\n   * Gets the application's rich presence assets.\n   * @returns {Promise<Array<ApplicationAsset>>}\n   */\n  async fetchAssets() {\n    const assets = await this.client.api.oauth2.applications(this.id).assets.get();\n    return assets.map(a => ({\n      id: a.id,\n      name: a.name,\n      type: AssetTypes[a.type - 1],\n    }));\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the application's name instead of the\n   * Oauth2Application object.\n   * @returns {?string}\n   * @example\n   * // Logs: Application name: My App\n   * console.log(`Application name: ${application}`);\n   */\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return super.toJSON({ createdTimestamp: true });\n  }\n}\n\nmodule.exports = Application;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst { Collection } = require('@discordjs/collection');\nconst { TypeError } = require('../../errors');\nconst Util = require('../../util/Util');\n\n/**\n * Filter to be applied to the collector.\n * @typedef {Function} CollectorFilter\n * @param {...*} args Any arguments received by the listener\n * @param {Collection} collection The items collected by this collector\n * @returns {boolean|Promise<boolean>}\n */\n\n/**\n * Options to be applied to the collector.\n * @typedef {Object} CollectorOptions\n * @property {CollectorFilter} [filter] The filter applied to this collector\n * @property {number} [time] How long to run the collector for in milliseconds\n * @property {number} [idle] How long to stop the collector after inactivity in milliseconds\n * @property {boolean} [dispose=false] Whether to dispose data when it's deleted\n */\n\n/**\n * Abstract class for defining a new Collector.\n * @abstract\n */\nclass Collector extends EventEmitter {\n  constructor(client, options = {}) {\n    super();\n\n    /**\n     * The client that instantiated this Collector\n     * @name Collector#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The filter applied to this collector\n     * @type {CollectorFilter}\n     * @returns {boolean|Promise<boolean>}\n     */\n    this.filter = options.filter ?? (() => true);\n\n    /**\n     * The options of this collector\n     * @type {CollectorOptions}\n     */\n    this.options = options;\n\n    /**\n     * The items collected by this collector\n     * @type {Collection}\n     */\n    this.collected = new Collection();\n\n    /**\n     * Whether this collector has finished collecting\n     * @type {boolean}\n     */\n    this.ended = false;\n\n    /**\n     * Timeout for cleanup\n     * @type {?Timeout}\n     * @private\n     */\n    this._timeout = null;\n\n    /**\n     * Timeout for cleanup due to inactivity\n     * @type {?Timeout}\n     * @private\n     */\n    this._idletimeout = null;\n\n    if (typeof this.filter !== 'function') {\n      throw new TypeError('INVALID_TYPE', 'options.filter', 'function');\n    }\n\n    this.handleCollect = this.handleCollect.bind(this);\n    this.handleDispose = this.handleDispose.bind(this);\n\n    if (options.time) this._timeout = setTimeout(() => this.stop('time'), options.time).unref();\n    if (options.idle) this._idletimeout = setTimeout(() => this.stop('idle'), options.idle).unref();\n  }\n\n  /**\n   * Call this to handle an event as a collectable element. Accepts any event data as parameters.\n   * @param {...*} args The arguments emitted by the listener\n   * @returns {Promise<void>}\n   * @emits Collector#collect\n   */\n  async handleCollect(...args) {\n    const collect = await this.collect(...args);\n\n    if (collect && (await this.filter(...args, this.collected))) {\n      this.collected.set(collect, args[0]);\n\n      /**\n       * Emitted whenever an element is collected.\n       * @event Collector#collect\n       * @param {...*} args The arguments emitted by the listener\n       */\n      this.emit('collect', ...args);\n\n      if (this._idletimeout) {\n        clearTimeout(this._idletimeout);\n        this._idletimeout = setTimeout(() => this.stop('idle'), this.options.idle).unref();\n      }\n    }\n    this.checkEnd();\n  }\n\n  /**\n   * Call this to remove an element from the collection. Accepts any event data as parameters.\n   * @param {...*} args The arguments emitted by the listener\n   * @returns {Promise<void>}\n   * @emits Collector#dispose\n   */\n  async handleDispose(...args) {\n    if (!this.options.dispose) return;\n\n    const dispose = this.dispose(...args);\n    if (!dispose || !(await this.filter(...args)) || !this.collected.has(dispose)) return;\n    this.collected.delete(dispose);\n\n    /**\n     * Emitted whenever an element is disposed of.\n     * @event Collector#dispose\n     * @param {...*} args The arguments emitted by the listener\n     */\n    this.emit('dispose', ...args);\n    this.checkEnd();\n  }\n\n  /**\n   * Returns a promise that resolves with the next collected element;\n   * rejects with collected elements if the collector finishes without receiving a next element\n   * @type {Promise}\n   * @readonly\n   */\n  get next() {\n    return new Promise((resolve, reject) => {\n      if (this.ended) {\n        reject(this.collected);\n        return;\n      }\n\n      const cleanup = () => {\n        this.removeListener('collect', onCollect);\n        this.removeListener('end', onEnd);\n      };\n\n      const onCollect = item => {\n        cleanup();\n        resolve(item);\n      };\n\n      const onEnd = () => {\n        cleanup();\n        reject(this.collected); // eslint-disable-line prefer-promise-reject-errors\n      };\n\n      this.on('collect', onCollect);\n      this.on('end', onEnd);\n    });\n  }\n\n  /**\n   * Stops this collector and emits the `end` event.\n   * @param {string} [reason='user'] The reason this collector is ending\n   * @emits Collector#end\n   */\n  stop(reason = 'user') {\n    if (this.ended) return;\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this._timeout = null;\n    }\n    if (this._idletimeout) {\n      clearTimeout(this._idletimeout);\n      this._idletimeout = null;\n    }\n    this.ended = true;\n\n    /**\n     * Emitted when the collector is finished collecting.\n     * @event Collector#end\n     * @param {Collection} collected The elements collected by the collector\n     * @param {string} reason The reason the collector ended\n     */\n    this.emit('end', this.collected, reason);\n  }\n\n  /**\n   * Options used to reset timeout and idle timer of a {@link Collector}.\n   * @typedef {Object} CollectorResetTimerOptions\n   * @property {number} [time] How long to run the collector for (in milliseconds)\n   * @property {number} [idle] How long to wait to stop the collector after inactivity (in milliseconds)\n   */\n\n  /**\n   * Resets the collector's timeout and idle timer.\n   * @param {CollectorResetTimerOptions} [options] Options for reseting\n   */\n  resetTimer({ time, idle } = {}) {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this._timeout = setTimeout(() => this.stop('time'), time ?? this.options.time).unref();\n    }\n    if (this._idletimeout) {\n      clearTimeout(this._idletimeout);\n      this._idletimeout = setTimeout(() => this.stop('idle'), idle ?? this.options.idle).unref();\n    }\n  }\n\n  /**\n   * Checks whether the collector should end, and if so, ends it.\n   * @returns {boolean} Whether the collector ended or not\n   */\n  checkEnd() {\n    const reason = this.endReason;\n    if (reason) this.stop(reason);\n    return Boolean(reason);\n  }\n\n  /**\n   * Allows collectors to be consumed with for-await-of loops\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of}\n   */\n  async *[Symbol.asyncIterator]() {\n    const queue = [];\n    const onCollect = item => queue.push(item);\n    this.on('collect', onCollect);\n\n    try {\n      while (queue.length || !this.ended) {\n        if (queue.length) {\n          yield queue.shift();\n        } else {\n          // eslint-disable-next-line no-await-in-loop\n          await new Promise(resolve => {\n            const tick = () => {\n              this.removeListener('collect', tick);\n              this.removeListener('end', tick);\n              return resolve();\n            };\n            this.on('collect', tick);\n            this.on('end', tick);\n          });\n        }\n      }\n    } finally {\n      this.removeListener('collect', onCollect);\n    }\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n\n  /* eslint-disable no-empty-function */\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   * @abstract\n   */\n  get endReason() {}\n\n  /**\n   * Handles incoming events from the `handleCollect` function. Returns null if the event should not\n   * be collected, or returns an object describing the data that should be stored.\n   * @see Collector#handleCollect\n   * @param {...*} args Any args the event listener emits\n   * @returns {?(*|Promise<?*>)} Data to insert into collection, if any\n   * @abstract\n   */\n  collect() {}\n\n  /**\n   * Handles incoming events from the `handleDispose`. Returns null if the event should not\n   * be disposed, or returns the key that should be removed.\n   * @see Collector#handleDispose\n   * @param {...*} args Any args the event listener emits\n   * @returns {?*} Key to remove from the collection, if any\n   * @abstract\n   */\n  dispose() {}\n  /* eslint-enable no-empty-function */\n}\n\nmodule.exports = Collector;\n","'use strict';\n\nconst { Error } = require('../../errors');\nconst { InteractionResponseTypes } = require('../../util/Constants');\nconst MessageFlags = require('../../util/MessageFlags');\nconst MessagePayload = require('../MessagePayload');\n\n/**\n * Interface for classes that support shared interaction response types.\n * @interface\n */\nclass InteractionResponses {\n  /**\n   * Options for deferring the reply to an {@link Interaction}.\n   * @typedef {Object} InteractionDeferReplyOptions\n   * @property {boolean} [ephemeral] Whether the reply should be ephemeral\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   */\n\n  /**\n   * Options for deferring and updating the reply to a {@link ButtonInteraction}.\n   * @typedef {Object} InteractionDeferUpdateOptions\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   */\n\n  /**\n   * Options for a reply to an {@link Interaction}.\n   * @typedef {BaseMessageOptions} InteractionReplyOptions\n   * @property {boolean} [ephemeral] Whether the reply should be ephemeral\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   */\n\n  /**\n   * Options for updating the message received from a {@link ButtonInteraction}.\n   * @typedef {MessageEditOptions} InteractionUpdateOptions\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   */\n\n  /**\n   * Defers the reply to this interaction.\n   * @param {InteractionDeferReplyOptions} [options] Options for deferring the reply to this interaction\n   * @returns {Promise<Message|APIMessage|void>}\n   * @example\n   * // Defer the reply to this interaction\n   * interaction.deferReply()\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Defer to send an ephemeral reply later\n   * interaction.deferReply({ ephemeral: true })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async deferReply(options = {}) {\n    if (this.deferred || this.replied) throw new Error('INTERACTION_ALREADY_REPLIED');\n    if (options.fetchReply && options.ephemeral) throw new Error('INTERACTION_FETCH_EPHEMERAL');\n    this.ephemeral = options.ephemeral ?? false;\n    await this.client.api.interactions(this.id, this.token).callback.post({\n      data: {\n        type: InteractionResponseTypes.DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE,\n        data: {\n          flags: options.ephemeral ? MessageFlags.FLAGS.EPHEMERAL : undefined,\n        },\n      },\n    });\n    this.deferred = true;\n\n    return options.fetchReply ? this.fetchReply() : undefined;\n  }\n\n  /**\n   * Creates a reply to this interaction.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The options for the reply\n   * @returns {Promise<Message|APIMessage|void>}\n   * @example\n   * // Reply to the interaction with an embed\n   * const embed = new MessageEmbed().setDescription('Pong!');\n   *\n   * interaction.reply({ embeds: [embed] })\n   *   .then(() => console.log('Reply sent.'))\n   *   .catch(console.error);\n   * @example\n   * // Create an ephemeral reply\n   * interaction.reply({ content: 'Pong!', ephemeral: true })\n   *   .then(() => console.log('Reply sent.'))\n   *   .catch(console.error);\n   */\n  async reply(options) {\n    if (this.deferred || this.replied) throw new Error('INTERACTION_ALREADY_REPLIED');\n    if (options.fetchReply && options.ephemeral) throw new Error('INTERACTION_FETCH_EPHEMERAL');\n    this.ephemeral = options.ephemeral ?? false;\n\n    let messagePayload;\n    if (options instanceof MessagePayload) messagePayload = options;\n    else messagePayload = MessagePayload.create(this, options);\n\n    const { data, files } = await messagePayload.resolveData().resolveFiles();\n\n    await this.client.api.interactions(this.id, this.token).callback.post({\n      data: {\n        type: InteractionResponseTypes.CHANNEL_MESSAGE_WITH_SOURCE,\n        data,\n      },\n      files,\n    });\n    this.replied = true;\n\n    return options.fetchReply ? this.fetchReply() : undefined;\n  }\n\n  /**\n   * Fetches the initial reply to this interaction.\n   * @see Webhook#fetchMessage\n   * @returns {Promise<Message|APIMessage>}\n   * @example\n   * // Fetch the reply to this interaction\n   * interaction.fetchReply()\n   *   .then(reply => console.log(`Replied with ${reply.content}`))\n   *   .catch(console.error);\n   */\n  fetchReply() {\n    if (this.ephemeral) throw new Error('INTERACTION_EPHEMERAL_REPLIED');\n    return this.webhook.fetchMessage('@original');\n  }\n\n  /**\n   * Edits the initial reply to this interaction.\n   * @see Webhook#editMessage\n   * @param {string|MessagePayload|WebhookEditMessageOptions} options The new options for the message\n   * @returns {Promise<Message|APIMessage>}\n   * @example\n   * // Edit the reply to this interaction\n   * interaction.editReply('New content')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async editReply(options) {\n    if (!this.deferred && !this.replied) throw new Error('INTERACTION_NOT_REPLIED');\n    const message = await this.webhook.editMessage('@original', options);\n    this.replied = true;\n    return message;\n  }\n\n  /**\n   * Deletes the initial reply to this interaction.\n   * @see Webhook#deleteMessage\n   * @returns {Promise<void>}\n   * @example\n   * // Delete the reply to this interaction\n   * interaction.deleteReply()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async deleteReply() {\n    if (this.ephemeral) throw new Error('INTERACTION_EPHEMERAL_REPLIED');\n    await this.webhook.deleteMessage('@original');\n  }\n\n  /**\n   * Send a follow-up message to this interaction.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The options for the reply\n   * @returns {Promise<Message|APIMessage>}\n   */\n  followUp(options) {\n    return this.webhook.send(options);\n  }\n\n  /**\n   * Defers an update to the message to which the component was attached.\n   * @param {InteractionDeferUpdateOptions} [options] Options for deferring the update to this interaction\n   * @returns {Promise<Message|APIMessage|void>}\n   * @example\n   * // Defer updating and reset the component's loading state\n   * interaction.deferUpdate()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async deferUpdate(options = {}) {\n    if (this.deferred || this.replied) throw new Error('INTERACTION_ALREADY_REPLIED');\n    if (options.fetchReply && new MessageFlags(this.message.flags).has(MessageFlags.FLAGS.EPHEMERAL)) {\n      throw new Error('INTERACTION_FETCH_EPHEMERAL');\n    }\n    await this.client.api.interactions(this.id, this.token).callback.post({\n      data: {\n        type: InteractionResponseTypes.DEFERRED_MESSAGE_UPDATE,\n      },\n    });\n    this.deferred = true;\n\n    return options.fetchReply ? this.fetchReply() : undefined;\n  }\n\n  /**\n   * Updates the original message of the component on which the interaction was received on.\n   * @param {string|MessagePayload|InteractionUpdateOptions} options The options for the updated message\n   * @returns {Promise<Message|APIMessage|void>}\n   * @example\n   * // Remove the components from the message\n   * interaction.update({\n   *   content: \"A component interaction was received\",\n   *   components: []\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async update(options) {\n    if (this.deferred || this.replied) throw new Error('INTERACTION_ALREADY_REPLIED');\n    if (options.fetchReply && new MessageFlags(this.message.flags).has(MessageFlags.FLAGS.EPHEMERAL)) {\n      throw new Error('INTERACTION_FETCH_EPHEMERAL');\n    }\n\n    let messagePayload;\n    if (options instanceof MessagePayload) messagePayload = options;\n    else messagePayload = MessagePayload.create(this, options);\n\n    const { data, files } = await messagePayload.resolveData().resolveFiles();\n\n    await this.client.api.interactions(this.id, this.token).callback.post({\n      data: {\n        type: InteractionResponseTypes.UPDATE_MESSAGE,\n        data,\n      },\n      files,\n    });\n    this.replied = true;\n\n    return options.fetchReply ? this.fetchReply() : undefined;\n  }\n\n  static applyToClass(structure, ignore = []) {\n    const props = [\n      'deferReply',\n      'reply',\n      'fetchReply',\n      'editReply',\n      'deleteReply',\n      'followUp',\n      'deferUpdate',\n      'update',\n    ];\n\n    for (const prop of props) {\n      if (ignore.includes(prop)) continue;\n      Object.defineProperty(\n        structure.prototype,\n        prop,\n        Object.getOwnPropertyDescriptor(InteractionResponses.prototype, prop),\n      );\n    }\n  }\n}\n\nmodule.exports = InteractionResponses;\n","'use strict';\n\n/* eslint-disable import/order */\nconst MessageCollector = require('../MessageCollector');\nconst MessagePayload = require('../MessagePayload');\nconst SnowflakeUtil = require('../../util/SnowflakeUtil');\nconst { Collection } = require('@discordjs/collection');\nconst { InteractionTypes } = require('../../util/Constants');\nconst { TypeError, Error } = require('../../errors');\nconst InteractionCollector = require('../InteractionCollector');\n\n/**\n * Interface for classes that have text-channel-like features.\n * @interface\n */\nclass TextBasedChannel {\n  constructor() {\n    /**\n     * A manager of the messages sent to this channel\n     * @type {MessageManager}\n     */\n    this.messages = new MessageManager(this);\n\n    /**\n     * The channel's last message id, if one was sent\n     * @type {?Snowflake}\n     */\n    this.lastMessageId = null;\n\n    /**\n     * The timestamp when the last pinned message was pinned, if there was one\n     * @type {?number}\n     */\n    this.lastPinTimestamp = null;\n  }\n\n  /**\n   * The Message object of the last message in the channel, if one was sent\n   * @type {?Message}\n   * @readonly\n   */\n  get lastMessage() {\n    return this.messages.resolve(this.lastMessageId);\n  }\n\n  /**\n   * The date when the last pinned message was pinned, if there was one\n   * @type {?Date}\n   * @readonly\n   */\n  get lastPinAt() {\n    return this.lastPinTimestamp ? new Date(this.lastPinTimestamp) : null;\n  }\n\n  /**\n   * Base options provided when sending.\n   * @typedef {Object} BaseMessageOptions\n   * @property {boolean} [tts=false] Whether or not the message should be spoken aloud\n   * @property {string} [nonce=''] The nonce for the message\n   * @property {string} [content=''] The content for the message\n   * @property {MessageEmbed[]|APIEmbed[]} [embeds] The embeds for the message\n   * (see [here](https://discord.com/developers/docs/resources/channel#embed-object) for more details)\n   * @property {MessageMentionOptions} [allowedMentions] Which mentions should be parsed from the message content\n   * (see [here](https://discord.com/developers/docs/resources/channel#allowed-mentions-object) for more details)\n   * @property {FileOptions[]|BufferResolvable[]|MessageAttachment[]} [files] Files to send with the message\n   * @property {MessageActionRow[]|MessageActionRowOptions[]} [components]\n   * Action rows containing interactive components for the message (buttons, select menus)\n   * @property {StickerResolvable[]} [stickers=[]] Stickers to send in the message\n   */\n\n  /**\n   * Options provided when sending or editing a message.\n   * @typedef {BaseMessageOptions} MessageOptions\n   * @property {ReplyOptions} [reply] The options for replying to a message\n   */\n\n  /**\n   * Options provided to control parsing of mentions by Discord\n   * @typedef {Object} MessageMentionOptions\n   * @property {MessageMentionTypes[]} [parse] Types of mentions to be parsed\n   * @property {Snowflake[]} [users] Snowflakes of Users to be parsed as mentions\n   * @property {Snowflake[]} [roles] Snowflakes of Roles to be parsed as mentions\n   * @property {boolean} [repliedUser=true] Whether the author of the Message being replied to should be pinged\n   */\n\n  /**\n   * Types of mentions to enable in MessageMentionOptions.\n   * - `roles`\n   * - `users`\n   * - `everyone`\n   * @typedef {string} MessageMentionTypes\n   */\n\n  /**\n   * @typedef {Object} FileOptions\n   * @property {BufferResolvable} attachment File to attach\n   * @property {string} [name='file.jpg'] Filename of the attachment\n   */\n\n  /**\n   * Options for sending a message with a reply.\n   * @typedef {Object} ReplyOptions\n   * @param {MessageResolvable} messageReference The message to reply to (must be in the same channel and not system)\n   * @param {boolean} [failIfNotExists=true] Whether to error if the referenced message\n   * does not exist (creates a standard message in this case when false)\n   */\n\n  /**\n   * Sends a message to this channel.\n   * @param {string|MessagePayload|MessageOptions} options The options to provide\n   * @returns {Promise<Message>}\n   * @example\n   * // Send a basic message\n   * channel.send('hello!')\n   *   .then(message => console.log(`Sent message: ${message.content}`))\n   *   .catch(console.error);\n   * @example\n   * // Send a remote file\n   * channel.send({\n   *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048']\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Send a local file\n   * channel.send({\n   *   files: [{\n   *     attachment: 'entire/path/to/file.jpg',\n   *     name: 'file.jpg'\n   *   }]\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Send an embed with a local image inside\n   * channel.send({\n   *   content: 'This is an embed',\n   *   embeds: [\n   *     {\n   *       thumbnail: {\n   *         url: 'attachment://file.jpg'\n   *       }\n   *     }\n   *   ],\n   *   files: [{\n   *     attachment: 'entire/path/to/file.jpg',\n   *     name: 'file.jpg'\n   *   }]\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async send(options) {\n    const User = require('../User');\n    const GuildMember = require('../GuildMember');\n\n    if (this instanceof User || this instanceof GuildMember) {\n      const dm = await this.createDM();\n      return dm.send(options);\n    }\n\n    let messagePayload;\n\n    if (options instanceof MessagePayload) {\n      messagePayload = options.resolveData();\n    } else {\n      messagePayload = MessagePayload.create(this, options).resolveData();\n    }\n\n    const { data, files } = await messagePayload.resolveFiles();\n    const d = await this.client.api.channels[this.id].messages.post({ data, files });\n\n    const existing = this.messages.cache.get(d.id);\n    if (existing) {\n      const clone = existing._clone();\n      clone._patch(d);\n      return clone;\n    }\n    return this.messages._add(d);\n  }\n\n  /**\n   * Sends a typing indicator in the channel.\n   * @returns {Promise<void>} Resolves upon the typing status being sent\n   * @example\n   * // Start typing in a channel\n   * channel.sendTyping();\n   */\n  async sendTyping() {\n    await this.client.api.channels(this.id).typing.post();\n  }\n\n  /**\n   * Creates a Message Collector.\n   * @param {MessageCollectorOptions} [options={}] The options to pass to the collector\n   * @returns {MessageCollector}\n   * @example\n   * // Create a message collector\n   * const filter = m => m.content.includes('discord');\n   * const collector = channel.createMessageCollector({ filter, time: 15000 });\n   * collector.on('collect', m => console.log(`Collected ${m.content}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createMessageCollector(options = {}) {\n    return new MessageCollector(this, options);\n  }\n\n  /**\n   * An object containing the same properties as CollectorOptions, but a few more:\n   * @typedef {MessageCollectorOptions} AwaitMessagesOptions\n   * @property {string[]} [errors] Stop/end reasons that cause the promise to reject\n   */\n\n  /**\n   * Similar to createMessageCollector but in promise form.\n   * Resolves with a collection of messages that pass the specified filter.\n   * @param {AwaitMessagesOptions} [options={}] Optional options to pass to the internal collector\n   * @returns {Promise<Collection<Snowflake, Message>>}\n   * @example\n   * // Await !vote messages\n   * const filter = m => m.content.startsWith('!vote');\n   * // Errors: ['time'] treats ending because of the time limit as an error\n   * channel.awaitMessages({ filter, max: 4, time: 60000, errors: ['time'] })\n   *   .then(collected => console.log(collected.size))\n   *   .catch(collected => console.log(`After a minute, only ${collected.size} out of 4 voted.`));\n   */\n  awaitMessages(options = {}) {\n    return new Promise((resolve, reject) => {\n      const collector = this.createMessageCollector(options);\n      collector.once('end', (collection, reason) => {\n        if (options.errors?.includes(reason)) {\n          reject(collection);\n        } else {\n          resolve(collection);\n        }\n      });\n    });\n  }\n\n  /**\n   * Creates a button interaction collector.\n   * @param {MessageComponentCollectorOptions} [options={}] Options to send to the collector\n   * @returns {InteractionCollector}\n   * @example\n   * // Create a button interaction collector\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * const collector = channel.createMessageComponentCollector({ filter, time: 15000 });\n   * collector.on('collect', i => console.log(`Collected ${i.customId}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createMessageComponentCollector(options = {}) {\n    return new InteractionCollector(this.client, {\n      ...options,\n      interactionType: InteractionTypes.MESSAGE_COMPONENT,\n      channel: this,\n    });\n  }\n\n  /**\n   * Collects a single component interaction that passes the filter.\n   * The Promise will reject if the time expires.\n   * @param {AwaitMessageComponentOptions} [options={}] Options to pass to the internal collector\n   * @returns {Promise<MessageComponentInteraction>}\n   * @example\n   * // Collect a message component interaction\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * channel.awaitMessageComponent({ filter, time: 15000 })\n   *   .then(interaction => console.log(`${interaction.customId} was clicked!`))\n   *   .catch(console.error);\n   */\n  awaitMessageComponent(options = {}) {\n    const _options = { ...options, max: 1 };\n    return new Promise((resolve, reject) => {\n      const collector = this.createMessageComponentCollector(_options);\n      collector.once('end', (interactions, reason) => {\n        const interaction = interactions.first();\n        if (interaction) resolve(interaction);\n        else reject(new Error('INTERACTION_COLLECTOR_ERROR', reason));\n      });\n    });\n  }\n\n  /**\n   * Bulk deletes given messages that are newer than two weeks.\n   * @param {Collection<Snowflake, Message>|MessageResolvable[]|number} messages\n   * Messages or number of messages to delete\n   * @param {boolean} [filterOld=false] Filter messages to remove those which are older than two weeks automatically\n   * @returns {Promise<Collection<Snowflake, Message>>} Returns the deleted messages\n   * @example\n   * // Bulk delete messages\n   * channel.bulkDelete(5)\n   *   .then(messages => console.log(`Bulk deleted ${messages.size} messages`))\n   *   .catch(console.error);\n   */\n  async bulkDelete(messages, filterOld = false) {\n    if (Array.isArray(messages) || messages instanceof Collection) {\n      let messageIds = messages instanceof Collection ? [...messages.keys()] : messages.map(m => m.id ?? m);\n      if (filterOld) {\n        messageIds = messageIds.filter(id => Date.now() - SnowflakeUtil.deconstruct(id).timestamp < 1209600000);\n      }\n      if (messageIds.length === 0) return new Collection();\n      if (messageIds.length === 1) {\n        await this.client.api.channels(this.id).messages(messageIds[0]).delete();\n        const message = this.client.actions.MessageDelete.getMessage(\n          {\n            message_id: messageIds[0],\n          },\n          this,\n        );\n        return message ? new Collection([[message.id, message]]) : new Collection();\n      }\n      await this.client.api.channels[this.id].messages['bulk-delete'].post({ data: { messages: messageIds } });\n      return messageIds.reduce(\n        (col, id) =>\n          col.set(\n            id,\n            this.client.actions.MessageDeleteBulk.getMessage(\n              {\n                message_id: id,\n              },\n              this,\n            ),\n          ),\n        new Collection(),\n      );\n    }\n    if (!isNaN(messages)) {\n      const msgs = await this.messages.fetch({ limit: messages });\n      return this.bulkDelete(msgs, filterOld);\n    }\n    throw new TypeError('MESSAGE_BULK_DELETE_TYPE');\n  }\n\n  static applyToClass(structure, full = false, ignore = []) {\n    const props = ['send'];\n    if (full) {\n      props.push(\n        'lastMessage',\n        'lastPinAt',\n        'bulkDelete',\n        'sendTyping',\n        'createMessageCollector',\n        'awaitMessages',\n        'createMessageComponentCollector',\n        'awaitMessageComponent',\n      );\n    }\n    for (const prop of props) {\n      if (ignore.includes(prop)) continue;\n      Object.defineProperty(\n        structure.prototype,\n        prop,\n        Object.getOwnPropertyDescriptor(TextBasedChannel.prototype, prop),\n      );\n    }\n  }\n}\n\nmodule.exports = TextBasedChannel;\n\n// Fixes Circular\nconst MessageManager = require('../../managers/MessageManager');\n","'use strict';\n\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with an {@link Activity#flags} bitfield.\n * @extends {BitField}\n */\nclass ActivityFlags extends BitField {}\n\n/**\n * @name ActivityFlags\n * @kind constructor\n * @memberof ActivityFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Numeric activity flags. All available properties:\n * * `INSTANCE`\n * * `JOIN`\n * * `SPECTATE`\n * * `JOIN_REQUEST`\n * * `SYNC`\n * * `PLAY`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/topics/gateway#activity-object-activity-flags}\n */\nActivityFlags.FLAGS = {\n  INSTANCE: 1 << 0,\n  JOIN: 1 << 1,\n  SPECTATE: 1 << 2,\n  JOIN_REQUEST: 1 << 3,\n  SYNC: 1 << 4,\n  PLAY: 1 << 5,\n};\n\nmodule.exports = ActivityFlags;\n","'use strict';\n\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link ClientApplication#flags} bitfield.\n * @extends {BitField}\n */\nclass ApplicationFlags extends BitField {}\n\n/**\n * @name ApplicationFlags\n * @kind constructor\n * @memberof ApplicationFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name ApplicationFlags#bitfield\n */\n\n/**\n * Numeric application flags. All available properties:\n * * `GATEWAY_PRESENCE`\n * * `GATEWAY_PRESENCE_LIMITED`\n * * `GATEWAY_GUILD_MEMBERS`\n * * `GATEWAY_GUILD_MEMBERS_LIMITED`\n * * `VERIFICATION_PENDING_GUILD_LIMIT`\n * * `EMBEDDED`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/application#application-object-application-flags}\n */\nApplicationFlags.FLAGS = {\n  GATEWAY_PRESENCE: 1 << 12,\n  GATEWAY_PRESENCE_LIMITED: 1 << 13,\n  GATEWAY_GUILD_MEMBERS: 1 << 14,\n  GATEWAY_GUILD_MEMBERS_LIMITED: 1 << 15,\n  VERIFICATION_PENDING_GUILD_LIMIT: 1 << 16,\n  EMBEDDED: 1 << 17,\n};\n\nmodule.exports = ApplicationFlags;\n","'use strict';\n\nconst { RangeError } = require('../errors');\n\n/**\n * Data structure that makes it easy to interact with a bitfield.\n */\nclass BitField {\n  /**\n   * @param {BitFieldResolvable} [bits=this.constructor.defaultBit] Bit(s) to read from\n   */\n  constructor(bits = this.constructor.defaultBit) {\n    /**\n     * Bitfield of the packed bits\n     * @type {number|bigint}\n     */\n    this.bitfield = this.constructor.resolve(bits);\n  }\n\n  /**\n   * Checks whether the bitfield has a bit, or any of multiple bits.\n   * @param {BitFieldResolvable} bit Bit(s) to check for\n   * @returns {boolean}\n   */\n  any(bit) {\n    return (this.bitfield & this.constructor.resolve(bit)) !== this.constructor.defaultBit;\n  }\n\n  /**\n   * Checks if this bitfield equals another\n   * @param {BitFieldResolvable} bit Bit(s) to check for\n   * @returns {boolean}\n   */\n  equals(bit) {\n    return this.bitfield === this.constructor.resolve(bit);\n  }\n\n  /**\n   * Checks whether the bitfield has a bit, or multiple bits.\n   * @param {BitFieldResolvable} bit Bit(s) to check for\n   * @returns {boolean}\n   */\n  has(bit) {\n    bit = this.constructor.resolve(bit);\n    return (this.bitfield & bit) === bit;\n  }\n\n  /**\n   * Gets all given bits that are missing from the bitfield.\n   * @param {BitFieldResolvable} bits Bit(s) to check for\n   * @param {...*} hasParams Additional parameters for the has method, if any\n   * @returns {string[]}\n   */\n  missing(bits, ...hasParams) {\n    return new this.constructor(bits).remove(this).toArray(...hasParams);\n  }\n\n  /**\n   * Freezes these bits, making them immutable.\n   * @returns {Readonly<BitField>}\n   */\n  freeze() {\n    return Object.freeze(this);\n  }\n\n  /**\n   * Adds bits to these ones.\n   * @param {...BitFieldResolvable} [bits] Bits to add\n   * @returns {BitField} These bits or new BitField if the instance is frozen.\n   */\n  add(...bits) {\n    let total = this.constructor.defaultBit;\n    for (const bit of bits) {\n      total |= this.constructor.resolve(bit);\n    }\n    if (Object.isFrozen(this)) return new this.constructor(this.bitfield | total);\n    this.bitfield |= total;\n    return this;\n  }\n\n  /**\n   * Removes bits from these.\n   * @param {...BitFieldResolvable} [bits] Bits to remove\n   * @returns {BitField} These bits or new BitField if the instance is frozen.\n   */\n  remove(...bits) {\n    let total = this.constructor.defaultBit;\n    for (const bit of bits) {\n      total |= this.constructor.resolve(bit);\n    }\n    if (Object.isFrozen(this)) return new this.constructor(this.bitfield & ~total);\n    this.bitfield &= ~total;\n    return this;\n  }\n\n  /**\n   * Gets an object mapping field names to a {@link boolean} indicating whether the\n   * bit is available.\n   * @param {...*} hasParams Additional parameters for the has method, if any\n   * @returns {Object}\n   */\n  serialize(...hasParams) {\n    const serialized = {};\n    for (const [flag, bit] of Object.entries(this.constructor.FLAGS)) serialized[flag] = this.has(bit, ...hasParams);\n    return serialized;\n  }\n\n  /**\n   * Gets an {@link Array} of bitfield names based on the bits available.\n   * @param {...*} hasParams Additional parameters for the has method, if any\n   * @returns {string[]}\n   */\n  toArray(...hasParams) {\n    return Object.keys(this.constructor.FLAGS).filter(bit => this.has(bit, ...hasParams));\n  }\n\n  toJSON() {\n    return typeof this.bitfield === 'number' ? this.bitfield : this.bitfield.toString();\n  }\n\n  valueOf() {\n    return this.bitfield;\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.toArray();\n  }\n\n  /**\n   * Data that can be resolved to give a bitfield. This can be:\n   * * A bit number (this can be a number literal or a value taken from {@link BitField.FLAGS})\n   * * A string bit number\n   * * An instance of BitField\n   * * An Array of BitFieldResolvable\n   * @typedef {number|string|bigint|BitField|BitFieldResolvable[]} BitFieldResolvable\n   */\n\n  /**\n   * Resolves bitfields to their numeric form.\n   * @param {BitFieldResolvable} [bit] - bit(s) to resolve\n   * @returns {number|bigint}\n   */\n  static resolve(bit) {\n    const { defaultBit } = this;\n    if (typeof defaultBit === typeof bit && bit >= defaultBit) return bit;\n    if (bit instanceof BitField) return bit.bitfield;\n    if (Array.isArray(bit)) return bit.map(p => this.resolve(p)).reduce((prev, p) => prev | p, defaultBit);\n    if (typeof bit === 'string') {\n      if (typeof this.FLAGS[bit] !== 'undefined') return this.FLAGS[bit];\n      if (!isNaN(bit)) return typeof defaultBit === 'bigint' ? BigInt(bit) : Number(bit);\n    }\n    throw new RangeError('BITFIELD_INVALID', bit);\n  }\n}\n\n/**\n * Numeric bitfield flags.\n * <info>Defined in extension classes</info>\n * @type {Object}\n * @abstract\n */\nBitField.FLAGS = {};\n\n/**\n * @type {number|bigint}\n * @private\n */\nBitField.defaultBit = 0;\n\nmodule.exports = BitField;\n","'use strict';\n\nconst Package = (exports.Package = require('../../package.json'));\nconst { Error, RangeError } = require('../errors');\n\nexports.UserAgent = `DiscordBot (${Package.homepage.split('#')[0]}, ${Package.version}) Node.js/${process.version}`;\n\nexports.WSCodes = {\n  1000: 'WS_CLOSE_REQUESTED',\n  4004: 'TOKEN_INVALID',\n  4010: 'SHARDING_INVALID',\n  4011: 'SHARDING_REQUIRED',\n  4013: 'INVALID_INTENTS',\n  4014: 'DISALLOWED_INTENTS',\n};\n\nconst AllowedImageFormats = ['webp', 'png', 'jpg', 'jpeg', 'gif'];\n\nconst AllowedImageSizes = Array.from({ length: 9 }, (e, i) => 2 ** (i + 4));\n\nfunction makeImageUrl(root, { format = 'webp', size } = {}) {\n  if (format && !AllowedImageFormats.includes(format)) throw new Error('IMAGE_FORMAT', format);\n  if (size && !AllowedImageSizes.includes(size)) throw new RangeError('IMAGE_SIZE', size);\n  return `${root}.${format}${size ? `?size=${size}` : ''}`;\n}\n\n/**\n * Options for Image URLs.\n * @typedef {StaticImageURLOptions} ImageURLOptions\n * @property {boolean} [dynamic] If true, the format will dynamically change to `gif` for\n * animated avatars; the default is false\n */\n\n/**\n * Options for static Image URLs.\n * @typedef {Object} StaticImageURLOptions\n * @property {string} [format='webp'] One of `webp`, `png`, `jpg`, `jpeg`.\n * @property {number} [size] One of `16`, `32`, `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`\n */\n\n// https://discord.com/developers/docs/reference#image-formatting-cdn-endpoints\nexports.Endpoints = {\n  CDN(root) {\n    return {\n      Emoji: (emojiId, format = 'webp') => `${root}/emojis/${emojiId}.${format}`,\n      Asset: name => `${root}/assets/${name}`,\n      DefaultAvatar: discriminator => `${root}/embed/avatars/${discriminator}.png`,\n      Avatar: (userId, hash, format = 'webp', size, dynamic = false) => {\n        if (dynamic) format = hash.startsWith('a_') ? 'gif' : format;\n        return makeImageUrl(`${root}/avatars/${userId}/${hash}`, { format, size });\n      },\n      Banner: (guildId, hash, format = 'webp', size) =>\n        makeImageUrl(`${root}/banners/${guildId}/${hash}`, { format, size }),\n      Icon: (guildId, hash, format = 'webp', size, dynamic = false) => {\n        if (dynamic) format = hash.startsWith('a_') ? 'gif' : format;\n        return makeImageUrl(`${root}/icons/${guildId}/${hash}`, { format, size });\n      },\n      AppIcon: (appId, hash, { format = 'webp', size } = {}) =>\n        makeImageUrl(`${root}/app-icons/${appId}/${hash}`, { size, format }),\n      AppAsset: (appId, hash, { format = 'webp', size } = {}) =>\n        makeImageUrl(`${root}/app-assets/${appId}/${hash}`, { size, format }),\n      StickerPackBanner: (bannerId, format = 'webp', size) =>\n        makeImageUrl(`${root}/app-assets/710982414301790216/store/${bannerId}`, { size, format }),\n      GDMIcon: (channelId, hash, format = 'webp', size) =>\n        makeImageUrl(`${root}/channel-icons/${channelId}/${hash}`, { size, format }),\n      Splash: (guildId, hash, format = 'webp', size) =>\n        makeImageUrl(`${root}/splashes/${guildId}/${hash}`, { size, format }),\n      DiscoverySplash: (guildId, hash, format = 'webp', size) =>\n        makeImageUrl(`${root}/discovery-splashes/${guildId}/${hash}`, { size, format }),\n      TeamIcon: (teamId, hash, { format = 'webp', size } = {}) =>\n        makeImageUrl(`${root}/team-icons/${teamId}/${hash}`, { size, format }),\n      Sticker: (stickerId, stickerFormat) =>\n        `${root}/stickers/${stickerId}.${stickerFormat === 'LOTTIE' ? 'json' : 'png'}`,\n    };\n  },\n  invite: (root, code) => `${root}/${code}`,\n  botGateway: '/gateway/bot',\n};\n\n/**\n * The current status of the client. Here are the available statuses:\n * * READY: 0\n * * CONNECTING: 1\n * * RECONNECTING: 2\n * * IDLE: 3\n * * NEARLY: 4\n * * DISCONNECTED: 5\n * * WAITING_FOR_GUILDS: 6\n * * IDENTIFYING: 7\n * * RESUMING: 8\n * @typedef {number} Status\n */\nexports.Status = {\n  READY: 0,\n  CONNECTING: 1,\n  RECONNECTING: 2,\n  IDLE: 3,\n  NEARLY: 4,\n  DISCONNECTED: 5,\n  WAITING_FOR_GUILDS: 6,\n  IDENTIFYING: 7,\n  RESUMING: 8,\n};\n\nexports.Opcodes = {\n  DISPATCH: 0,\n  HEARTBEAT: 1,\n  IDENTIFY: 2,\n  STATUS_UPDATE: 3,\n  VOICE_STATE_UPDATE: 4,\n  VOICE_GUILD_PING: 5,\n  RESUME: 6,\n  RECONNECT: 7,\n  REQUEST_GUILD_MEMBERS: 8,\n  INVALID_SESSION: 9,\n  HELLO: 10,\n  HEARTBEAT_ACK: 11,\n};\n\nexports.Events = {\n  RATE_LIMIT: 'rateLimit',\n  INVALID_REQUEST_WARNING: 'invalidRequestWarning',\n  CLIENT_READY: 'ready',\n  APPLICATION_COMMAND_CREATE: 'applicationCommandCreate',\n  APPLICATION_COMMAND_DELETE: 'applicationCommandDelete',\n  APPLICATION_COMMAND_UPDATE: 'applicationCommandUpdate',\n  GUILD_CREATE: 'guildCreate',\n  GUILD_DELETE: 'guildDelete',\n  GUILD_UPDATE: 'guildUpdate',\n  GUILD_UNAVAILABLE: 'guildUnavailable',\n  GUILD_MEMBER_ADD: 'guildMemberAdd',\n  GUILD_MEMBER_REMOVE: 'guildMemberRemove',\n  GUILD_MEMBER_UPDATE: 'guildMemberUpdate',\n  GUILD_MEMBER_AVAILABLE: 'guildMemberAvailable',\n  GUILD_MEMBERS_CHUNK: 'guildMembersChunk',\n  GUILD_INTEGRATIONS_UPDATE: 'guildIntegrationsUpdate',\n  GUILD_ROLE_CREATE: 'roleCreate',\n  GUILD_ROLE_DELETE: 'roleDelete',\n  INVITE_CREATE: 'inviteCreate',\n  INVITE_DELETE: 'inviteDelete',\n  GUILD_ROLE_UPDATE: 'roleUpdate',\n  GUILD_EMOJI_CREATE: 'emojiCreate',\n  GUILD_EMOJI_DELETE: 'emojiDelete',\n  GUILD_EMOJI_UPDATE: 'emojiUpdate',\n  GUILD_BAN_ADD: 'guildBanAdd',\n  GUILD_BAN_REMOVE: 'guildBanRemove',\n  CHANNEL_CREATE: 'channelCreate',\n  CHANNEL_DELETE: 'channelDelete',\n  CHANNEL_UPDATE: 'channelUpdate',\n  CHANNEL_PINS_UPDATE: 'channelPinsUpdate',\n  MESSAGE_CREATE: 'messageCreate',\n  MESSAGE_DELETE: 'messageDelete',\n  MESSAGE_UPDATE: 'messageUpdate',\n  MESSAGE_BULK_DELETE: 'messageDeleteBulk',\n  MESSAGE_REACTION_ADD: 'messageReactionAdd',\n  MESSAGE_REACTION_REMOVE: 'messageReactionRemove',\n  MESSAGE_REACTION_REMOVE_ALL: 'messageReactionRemoveAll',\n  MESSAGE_REACTION_REMOVE_EMOJI: 'messageReactionRemoveEmoji',\n  THREAD_CREATE: 'threadCreate',\n  THREAD_DELETE: 'threadDelete',\n  THREAD_UPDATE: 'threadUpdate',\n  THREAD_LIST_SYNC: 'threadListSync',\n  THREAD_MEMBER_UPDATE: 'threadMemberUpdate',\n  THREAD_MEMBERS_UPDATE: 'threadMembersUpdate',\n  USER_UPDATE: 'userUpdate',\n  PRESENCE_UPDATE: 'presenceUpdate',\n  VOICE_SERVER_UPDATE: 'voiceServerUpdate',\n  VOICE_STATE_UPDATE: 'voiceStateUpdate',\n  TYPING_START: 'typingStart',\n  WEBHOOKS_UPDATE: 'webhookUpdate',\n  INTERACTION_CREATE: 'interactionCreate',\n  ERROR: 'error',\n  WARN: 'warn',\n  DEBUG: 'debug',\n  SHARD_DISCONNECT: 'shardDisconnect',\n  SHARD_ERROR: 'shardError',\n  SHARD_RECONNECTING: 'shardReconnecting',\n  SHARD_READY: 'shardReady',\n  SHARD_RESUME: 'shardResume',\n  INVALIDATED: 'invalidated',\n  RAW: 'raw',\n  STAGE_INSTANCE_CREATE: 'stageInstanceCreate',\n  STAGE_INSTANCE_UPDATE: 'stageInstanceUpdate',\n  STAGE_INSTANCE_DELETE: 'stageInstanceDelete',\n  GUILD_STICKER_CREATE: 'stickerCreate',\n  GUILD_STICKER_DELETE: 'stickerDelete',\n  GUILD_STICKER_UPDATE: 'stickerUpdate',\n};\n\nexports.ShardEvents = {\n  CLOSE: 'close',\n  DESTROYED: 'destroyed',\n  INVALID_SESSION: 'invalidSession',\n  READY: 'ready',\n  RESUMED: 'resumed',\n  ALL_READY: 'allReady',\n};\n\n/**\n * The type of Structure allowed to be a partial:\n * * USER\n * * CHANNEL (only affects DMChannels)\n * * GUILD_MEMBER\n * * MESSAGE\n * * REACTION\n * <warn>Partials require you to put checks in place when handling data. See the \"Partial Structures\" topic on the\n * [guide](https://discordjs.guide/popular-topics/partials.html) for more information.</warn>\n * @typedef {string} PartialType\n */\nexports.PartialTypes = keyMirror(['USER', 'CHANNEL', 'GUILD_MEMBER', 'MESSAGE', 'REACTION']);\n\n/**\n * The type of a websocket message event, e.g. `MESSAGE_CREATE`. Here are the available events:\n * * READY\n * * RESUMED\n * * APPLICATION_COMMAND_CREATE\n * * APPLICATION_COMMAND_DELETE\n * * APPLICATION_COMMAND_UPDATE\n * * GUILD_CREATE\n * * GUILD_DELETE\n * * GUILD_UPDATE\n * * INVITE_CREATE\n * * INVITE_DELETE\n * * GUILD_MEMBER_ADD\n * * GUILD_MEMBER_REMOVE\n * * GUILD_MEMBER_UPDATE\n * * GUILD_MEMBERS_CHUNK\n * * GUILD_INTEGRATIONS_UPDATE\n * * GUILD_ROLE_CREATE\n * * GUILD_ROLE_DELETE\n * * GUILD_ROLE_UPDATE\n * * GUILD_BAN_ADD\n * * GUILD_BAN_REMOVE\n * * GUILD_EMOJIS_UPDATE\n * * CHANNEL_CREATE\n * * CHANNEL_DELETE\n * * CHANNEL_UPDATE\n * * CHANNEL_PINS_UPDATE\n * * MESSAGE_CREATE\n * * MESSAGE_DELETE\n * * MESSAGE_UPDATE\n * * MESSAGE_DELETE_BULK\n * * MESSAGE_REACTION_ADD\n * * MESSAGE_REACTION_REMOVE\n * * MESSAGE_REACTION_REMOVE_ALL\n * * MESSAGE_REACTION_REMOVE_EMOJI\n * * THREAD_CREATE\n * * THREAD_UPDATE\n * * THREAD_DELETE\n * * THREAD_LIST_SYNC\n * * THREAD_MEMBER_UPDATE\n * * THREAD_MEMBERS_UPDATE\n * * USER_UPDATE\n * * PRESENCE_UPDATE\n * * TYPING_START\n * * VOICE_STATE_UPDATE\n * * VOICE_SERVER_UPDATE\n * * WEBHOOKS_UPDATE\n * * INTERACTION_CREATE\n * * STAGE_INSTANCE_CREATE\n * * STAGE_INSTANCE_UPDATE\n * * STAGE_INSTANCE_DELETE\n * * GUILD_STICKERS_UPDATE\n * @typedef {string} WSEventType\n * @see {@link https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-events}\n */\nexports.WSEvents = keyMirror([\n  'READY',\n  'RESUMED',\n  'APPLICATION_COMMAND_CREATE',\n  'APPLICATION_COMMAND_DELETE',\n  'APPLICATION_COMMAND_UPDATE',\n  'GUILD_CREATE',\n  'GUILD_DELETE',\n  'GUILD_UPDATE',\n  'INVITE_CREATE',\n  'INVITE_DELETE',\n  'GUILD_MEMBER_ADD',\n  'GUILD_MEMBER_REMOVE',\n  'GUILD_MEMBER_UPDATE',\n  'GUILD_MEMBERS_CHUNK',\n  'GUILD_INTEGRATIONS_UPDATE',\n  'GUILD_ROLE_CREATE',\n  'GUILD_ROLE_DELETE',\n  'GUILD_ROLE_UPDATE',\n  'GUILD_BAN_ADD',\n  'GUILD_BAN_REMOVE',\n  'GUILD_EMOJIS_UPDATE',\n  'CHANNEL_CREATE',\n  'CHANNEL_DELETE',\n  'CHANNEL_UPDATE',\n  'CHANNEL_PINS_UPDATE',\n  'MESSAGE_CREATE',\n  'MESSAGE_DELETE',\n  'MESSAGE_UPDATE',\n  'MESSAGE_DELETE_BULK',\n  'MESSAGE_REACTION_ADD',\n  'MESSAGE_REACTION_REMOVE',\n  'MESSAGE_REACTION_REMOVE_ALL',\n  'MESSAGE_REACTION_REMOVE_EMOJI',\n  'THREAD_CREATE',\n  'THREAD_UPDATE',\n  'THREAD_DELETE',\n  'THREAD_LIST_SYNC',\n  'THREAD_MEMBER_UPDATE',\n  'THREAD_MEMBERS_UPDATE',\n  'USER_UPDATE',\n  'PRESENCE_UPDATE',\n  'TYPING_START',\n  'VOICE_STATE_UPDATE',\n  'VOICE_SERVER_UPDATE',\n  'WEBHOOKS_UPDATE',\n  'INTERACTION_CREATE',\n  'STAGE_INSTANCE_CREATE',\n  'STAGE_INSTANCE_UPDATE',\n  'STAGE_INSTANCE_DELETE',\n  'GUILD_STICKERS_UPDATE',\n]);\n\n/**\n * A valid scope to request when generating an invite link.\n * <warn>Scopes that require whitelist are not considered valid for this generator</warn>\n * * `applications.builds.read`: allows reading build data for a users applications\n * * `applications.commands`: allows this bot to create commands in the server\n * * `applications.entitlements`: allows reading entitlements for a users applications\n * * `applications.store.update`: allows reading and updating of store data for a users applications\n * * `bot`: makes the bot join the selected guild\n * * `connections`: makes the endpoint for getting a users connections available\n * * `email`: allows the `/users/@me` endpoint return with an email\n * * `identify`: allows the `/users/@me` endpoint without an email\n * * `guilds`: makes the `/users/@me/guilds` endpoint available for a user\n * * `guilds.join`: allows the bot to join the user to any guild it is in using Guild#addMember\n * * `gdm.join`: allows joining the user to a group dm\n * * `webhook.incoming`: generates a webhook to a channel\n * @typedef {string} InviteScope\n * @see {@link https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes}\n */\nexports.InviteScopes = [\n  'applications.builds.read',\n  'applications.commands',\n  'applications.entitlements',\n  'applications.store.update',\n  'bot',\n  'connections',\n  'email',\n  'identify',\n  'guilds',\n  'guilds.join',\n  'gdm.join',\n  'webhook.incoming',\n];\n\n/**\n * The type of a message, e.g. `DEFAULT`. Here are the available types:\n * * DEFAULT\n * * RECIPIENT_ADD\n * * RECIPIENT_REMOVE\n * * CALL\n * * CHANNEL_NAME_CHANGE\n * * CHANNEL_ICON_CHANGE\n * * CHANNEL_PINNED_MESSAGE\n * * GUILD_MEMBER_JOIN\n * * USER_PREMIUM_GUILD_SUBSCRIPTION\n * * USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_1\n * * USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_2\n * * USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_3\n * * CHANNEL_FOLLOW_ADD\n * * GUILD_DISCOVERY_DISQUALIFIED\n * * GUILD_DISCOVERY_REQUALIFIED\n * * GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING\n * * GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING\n * * THREAD_CREATED\n * * REPLY\n * * APPLICATION_COMMAND\n * * THREAD_STARTER_MESSAGE\n * * GUILD_INVITE_REMINDER\n * @typedef {string} MessageType\n * @see {@link https://discord.com/developers/docs/resources/channel#message-object-message-types}\n */\nexports.MessageTypes = [\n  'DEFAULT',\n  'RECIPIENT_ADD',\n  'RECIPIENT_REMOVE',\n  'CALL',\n  'CHANNEL_NAME_CHANGE',\n  'CHANNEL_ICON_CHANGE',\n  'CHANNEL_PINNED_MESSAGE',\n  'GUILD_MEMBER_JOIN',\n  'USER_PREMIUM_GUILD_SUBSCRIPTION',\n  'USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_1',\n  'USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_2',\n  'USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_3',\n  'CHANNEL_FOLLOW_ADD',\n  null,\n  'GUILD_DISCOVERY_DISQUALIFIED',\n  'GUILD_DISCOVERY_REQUALIFIED',\n  'GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING',\n  'GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING',\n  'THREAD_CREATED',\n  'REPLY',\n  'APPLICATION_COMMAND',\n  'THREAD_STARTER_MESSAGE',\n  'GUILD_INVITE_REMINDER',\n];\n\n/**\n * The types of messages that are `System`. The available types are `MessageTypes` excluding:\n * * DEFAULT\n * * REPLY\n * * APPLICATION_COMMAND\n * @typedef {string} SystemMessageType\n */\nexports.SystemMessageTypes = exports.MessageTypes.filter(\n  type => type && !['DEFAULT', 'REPLY', 'APPLICATION_COMMAND'].includes(type),\n);\n\n/**\n * <info>Bots cannot set a `CUSTOM` activity type, it is only for custom statuses received from users</info>\n * The type of an activity of a user's presence. Here are the available types:\n * * PLAYING\n * * STREAMING\n * * LISTENING\n * * WATCHING\n * * CUSTOM\n * * COMPETING\n * @typedef {string} ActivityType\n * @see {@link https://discord.com/developers/docs/game-sdk/activities#data-models-activitytype-enum}\n */\nexports.ActivityTypes = createEnum(['PLAYING', 'STREAMING', 'LISTENING', 'WATCHING', 'CUSTOM', 'COMPETING']);\n\n/**\n * All available channel types:\n * * `GUILD_TEXT` - a guild text channel\n * * `DM` - a DM channel\n * * `GUILD_VOICE` - a guild voice channel\n * * `GROUP_DM` - a group DM channel\n * * `GUILD_CATEGORY` - a guild category channel\n * * `GUILD_NEWS` - a guild news channel\n * * `GUILD_STORE` - a guild store channel\n * * `GUILD_NEWS_THREAD` - a guild news channel's public thread channel\n * * `GUILD_PUBLIC_THREAD` - a guild text channel's public thread channel\n * * `GUILD_PRIVATE_THREAD` - a guild text channel's private thread channel\n * * `GUILD_STAGE_VOICE` - a guild stage voice channel\n * * `UNKNOWN` - a generic channel of unknown type, could be Channel or GuildChannel\n * @typedef {string} ChannelType\n * @see {@link https://discord.com/developers/docs/resources/channel#channel-object-channel-types}\n */\nexports.ChannelTypes = createEnum([\n  'GUILD_TEXT',\n  'DM',\n  'GUILD_VOICE',\n  'GROUP_DM',\n  'GUILD_CATEGORY',\n  'GUILD_NEWS',\n  'GUILD_STORE',\n  ...Array(3).fill(null),\n  // 10\n  'GUILD_NEWS_THREAD',\n  'GUILD_PUBLIC_THREAD',\n  'GUILD_PRIVATE_THREAD',\n  'GUILD_STAGE_VOICE',\n]);\n\n/**\n * The channels that are text-based.\n * * DMChannel\n * * TextChannel\n * * NewsChannel\n * * ThreadChannel\n * @typedef {DMChannel|TextChannel|NewsChannel|ThreadChannel} TextBasedChannels\n */\n\n/**\n * The types of channels that are text-based. The available types are:\n * * DM\n * * GUILD_TEXT\n * * GUILD_NEWS\n * * GUILD_NEWS_THREAD\n * * GUILD_PUBLIC_THREAD\n * * GUILD_PRIVATE_THREAD\n * @typedef {string} TextBasedChannelTypes\n */\nexports.TextBasedChannelTypes = [\n  'DM',\n  'GUILD_TEXT',\n  'GUILD_NEWS',\n  'GUILD_NEWS_THREAD',\n  'GUILD_PUBLIC_THREAD',\n  'GUILD_PRIVATE_THREAD',\n];\n\n/**\n * The types of channels that are threads. The available types are:\n * * GUILD_NEWS_THREAD\n * * GUILD_PUBLIC_THREAD\n * * GUILD_PRIVATE_THREAD\n * @typedef {string} ThreadChannelTypes\n */\nexports.ThreadChannelTypes = ['GUILD_NEWS_THREAD', 'GUILD_PUBLIC_THREAD', 'GUILD_PRIVATE_THREAD'];\n\n/**\n * The types of channels that are voice-based. The available types are:\n * * GUILD_VOICE\n * * GUILD_STAGE_VOICE\n * @typedef {string} VoiceBasedChannelTypes\n */\nexports.VoiceBasedChannelTypes = ['GUILD_VOICE', 'GUILD_STAGE_VOICE'];\n\nexports.ClientApplicationAssetTypes = {\n  SMALL: 1,\n  BIG: 2,\n};\n\nexports.Colors = {\n  DEFAULT: 0x000000,\n  WHITE: 0xffffff,\n  AQUA: 0x1abc9c,\n  GREEN: 0x57f287,\n  BLUE: 0x3498db,\n  YELLOW: 0xfee75c,\n  PURPLE: 0x9b59b6,\n  LUMINOUS_VIVID_PINK: 0xe91e63,\n  FUCHSIA: 0xeb459e,\n  GOLD: 0xf1c40f,\n  ORANGE: 0xe67e22,\n  RED: 0xed4245,\n  GREY: 0x95a5a6,\n  NAVY: 0x34495e,\n  DARK_AQUA: 0x11806a,\n  DARK_GREEN: 0x1f8b4c,\n  DARK_BLUE: 0x206694,\n  DARK_PURPLE: 0x71368a,\n  DARK_VIVID_PINK: 0xad1457,\n  DARK_GOLD: 0xc27c0e,\n  DARK_ORANGE: 0xa84300,\n  DARK_RED: 0x992d22,\n  DARK_GREY: 0x979c9f,\n  DARKER_GREY: 0x7f8c8d,\n  LIGHT_GREY: 0xbcc0c0,\n  DARK_NAVY: 0x2c3e50,\n  BLURPLE: 0x5865f2,\n  GREYPLE: 0x99aab5,\n  DARK_BUT_NOT_BLACK: 0x2c2f33,\n  NOT_QUITE_BLACK: 0x23272a,\n};\n\n/**\n * The value set for the explicit content filter levels for a guild:\n * * DISABLED\n * * MEMBERS_WITHOUT_ROLES\n * * ALL_MEMBERS\n * @typedef {string} ExplicitContentFilterLevel\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level}\n */\nexports.ExplicitContentFilterLevels = createEnum(['DISABLED', 'MEMBERS_WITHOUT_ROLES', 'ALL_MEMBERS']);\n\n/**\n * The value set for the verification levels for a guild:\n * * NONE\n * * LOW\n * * MEDIUM\n * * HIGH\n * * VERY_HIGH\n * @typedef {string} VerificationLevel\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-verification-level}\n */\nexports.VerificationLevels = createEnum(['NONE', 'LOW', 'MEDIUM', 'HIGH', 'VERY_HIGH']);\n\n/**\n * An error encountered while performing an API request. Here are the potential errors:\n * * UNKNOWN_ACCOUNT\n * * UNKNOWN_APPLICATION\n * * UNKNOWN_CHANNEL\n * * UNKNOWN_GUILD\n * * UNKNOWN_INTEGRATION\n * * UNKNOWN_INVITE\n * * UNKNOWN_MEMBER\n * * UNKNOWN_MESSAGE\n * * UNKNOWN_OVERWRITE\n * * UNKNOWN_PROVIDER\n * * UNKNOWN_ROLE\n * * UNKNOWN_TOKEN\n * * UNKNOWN_USER\n * * UNKNOWN_EMOJI\n * * UNKNOWN_WEBHOOK\n * * UNKNOWN_WEBHOOK_SERVICE\n * * UNKNOWN_SESSION\n * * UNKNOWN_BAN\n * * UNKNOWN_SKU\n * * UNKNOWN_STORE_LISTING\n * * UNKNOWN_ENTITLEMENT\n * * UNKNOWN_BUILD\n * * UNKNOWN_LOBBY\n * * UNKNOWN_BRANCH\n * * UNKNOWN_STORE_DIRECTORY_LAYOUT\n * * UNKNOWN_REDISTRIBUTABLE\n * * UNKNOWN_GIFT_CODE\n * * UNKNOWN_STREAM\n * * UNKNOWN_PREMIUM_SERVER_SUBSCRIBE_COOLDOWN\n * * UNKNOWN_GUILD_TEMPLATE\n * * UNKNOWN_DISCOVERABLE_SERVER_CATEGORY\n * * UNKNOWN_STICKER\n * * UNKNOWN_INTERACTION\n * * UNKNOWN_APPLICATION_COMMAND\n * * UNKNOWN_APPLICATION_COMMAND_PERMISSIONS\n * * UNKNOWN_STAGE_INSTANCE\n * * UNKNOWN_GUILD_MEMBER_VERIFICATION_FORM\n * * UNKNOWN_GUILD_WELCOME_SCREEN\n * * UNKNOWN_GUILD_SCHEDULED_EVENT\n * * UNKNOWN_GUILD_SCHEDULED_EVENT_USER\n * * BOT_PROHIBITED_ENDPOINT\n * * BOT_ONLY_ENDPOINT\n * * CANNOT_SEND_EXPLICIT_CONTENT\n * * NOT_AUTHORIZED\n * * SLOWMODE_RATE_LIMIT\n * * ACCOUNT_OWNER_ONLY\n * * ANNOUNCEMENT_EDIT_LIMIT_EXCEEDED\n * * CHANNEL_HIT_WRITE_RATELIMIT\n * * CONTENT_NOT_ALLOWED\n * * MAXIMUM_GUILDS\n * * MAXIMUM_FRIENDS\n * * MAXIMUM_PINS\n * * MAXIMUM_RECIPIENTS\n * * MAXIMUM_ROLES\n * * MAXIMUM_WEBHOOKS\n * * MAXIMUM_EMOJIS\n * * MAXIMUM_REACTIONS\n * * MAXIMUM_CHANNELS\n * * MAXIMUM_ATTACHMENTS\n * * MAXIMUM_INVITES\n * * MAXIMUM_ANIMATED_EMOJIS\n * * MAXIMUM_SERVER_MEMBERS\n * * MAXIMUM_NUMBER_OF_SERVER_CATEGORIES\n * * GUILD_ALREADY_HAS_TEMPLATE\n * * MAXIMUM_THREAD_PARTICIPANTS\n * * MAXIMUM_NON_GUILD_MEMBERS_BANS\n * * MAXIMUM_BAN_FETCHES\n * * MAXIMUM_NUMBER_OF_STICKERS_REACHED\n * * UNAUTHORIZED\n * * ACCOUNT_VERIFICATION_REQUIRED\n * * DIRECT_MESSAGES_TOO_FAST\n * * REQUEST_ENTITY_TOO_LARGE\n * * FEATURE_TEMPORARILY_DISABLED\n * * USER_BANNED\n * * TARGET_USER_NOT_CONNECTED_TO_VOICE\n * * ALREADY_CROSSPOSTED\n * * MISSING_ACCESS\n * * INVALID_ACCOUNT_TYPE\n * * CANNOT_EXECUTE_ON_DM\n * * EMBED_DISABLED\n * * CANNOT_EDIT_MESSAGE_BY_OTHER\n * * CANNOT_SEND_EMPTY_MESSAGE\n * * CANNOT_MESSAGE_USER\n * * CANNOT_SEND_MESSAGES_IN_VOICE_CHANNEL\n * * CHANNEL_VERIFICATION_LEVEL_TOO_HIGH\n * * OAUTH2_APPLICATION_BOT_ABSENT\n * * MAXIMUM_OAUTH2_APPLICATIONS\n * * INVALID_OAUTH_STATE\n * * MISSING_PERMISSIONS\n * * INVALID_AUTHENTICATION_TOKEN\n * * NOTE_TOO_LONG\n * * INVALID_BULK_DELETE_QUANTITY\n * * CANNOT_PIN_MESSAGE_IN_OTHER_CHANNEL\n * * INVALID_OR_TAKEN_INVITE_CODE\n * * CANNOT_EXECUTE_ON_SYSTEM_MESSAGE\n * * CANNOT_EXECUTE_ON_CHANNEL_TYPE\n * * INVALID_OAUTH_TOKEN\n * * MISSING_OAUTH_SCOPE\n * * INVALID_WEBHOOK_TOKEN\n * * INVALID_ROLE\n * * INVALID_RECIPIENTS\n * * BULK_DELETE_MESSAGE_TOO_OLD\n * * INVALID_FORM_BODY\n * * INVITE_ACCEPTED_TO_GUILD_NOT_CONTAINING_BOT\n * * INVALID_API_VERSION\n * * CANNOT_SELF_REDEEM_GIFT\n * * PAYMENT_SOURCE_REQUIRED\n * * CANNOT_DELETE_COMMUNITY_REQUIRED_CHANNEL\n * * INVALID_STICKER_SENT\n * * INVALID_OPERATION_ON_ARCHIVED_THREAD\n * * INVALID_THREAD_NOTIFICATION_SETTINGS\n * * PARAMETER_EARLIER_THAN_CREATION\n * * GUILD_NOT_AVAILABLE_IN_LOCATION\n * * GUILD_MONETIZATION_REQUIRED\n * * TWO_FACTOR_REQUIRED\n * * NO_USERS_WITH_DISCORDTAG_EXIST\n * * REACTION_BLOCKED\n * * RESOURCE_OVERLOADED\n * * STAGE_ALREADY_OPEN\n * * MESSAGE_ALREADY_HAS_THREAD\n * * THREAD_LOCKED\n * * MAXIMUM_ACTIVE_THREADS\n * * MAXIMUM_ACTIVE_ANNOUCEMENT_THREAD\n * @typedef {string} APIError\n * @see {@link https://discord.com/developers/docs/topics/opcodes-and-status-codes#json-json-error-codes}\n */\nexports.APIErrors = {\n  UNKNOWN_ACCOUNT: 10001,\n  UNKNOWN_APPLICATION: 10002,\n  UNKNOWN_CHANNEL: 10003,\n  UNKNOWN_GUILD: 10004,\n  UNKNOWN_INTEGRATION: 10005,\n  UNKNOWN_INVITE: 10006,\n  UNKNOWN_MEMBER: 10007,\n  UNKNOWN_MESSAGE: 10008,\n  UNKNOWN_OVERWRITE: 10009,\n  UNKNOWN_PROVIDER: 10010,\n  UNKNOWN_ROLE: 10011,\n  UNKNOWN_TOKEN: 10012,\n  UNKNOWN_USER: 10013,\n  UNKNOWN_EMOJI: 10014,\n  UNKNOWN_WEBHOOK: 10015,\n  UNKNOWN_WEBHOOK_SERVICE: 10016,\n  UNKNOWN_SESSION: 10020,\n  UNKNOWN_BAN: 10026,\n  UNKNOWN_SKU: 10027,\n  UNKNOWN_STORE_LISTING: 10028,\n  UNKNOWN_ENTITLEMENT: 10029,\n  UNKNOWN_BUILD: 10030,\n  UNKNOWN_LOBBY: 10031,\n  UNKNOWN_BRANCH: 10032,\n  UNKNOWN_STORE_DIRECTORY_LAYOUT: 10033,\n  UNKNOWN_REDISTRIBUTABLE: 10036,\n  UNKNOWN_GIFT_CODE: 10038,\n  UNKNOWN_STREAM: 10049,\n  UNKNOWN_PREMIUM_SERVER_SUBSCRIBE_COOLDOWN: 10050,\n  UNKNOWN_GUILD_TEMPLATE: 10057,\n  UNKNOWN_DISCOVERABLE_SERVER_CATEGORY: 10059,\n  UNKNOWN_STICKER: 10060,\n  UNKNOWN_INTERACTION: 10062,\n  UNKNOWN_APPLICATION_COMMAND: 10063,\n  UNKNOWN_APPLICATION_COMMAND_PERMISSIONS: 10066,\n  UNKNOWN_STAGE_INSTANCE: 10067,\n  UNKNOWN_GUILD_MEMBER_VERIFICATION_FORM: 10068,\n  UNKNOWN_GUILD_WELCOME_SCREEN: 10069,\n  UNKNOWN_GUILD_SCHEDULED_EVENT: 10070,\n  UNKNOWN_GUILD_SCHEDULED_EVENT_USER: 10071,\n  BOT_PROHIBITED_ENDPOINT: 20001,\n  BOT_ONLY_ENDPOINT: 20002,\n  CANNOT_SEND_EXPLICIT_CONTENT: 20009,\n  NOT_AUTHORIZED: 20012,\n  SLOWMODE_RATE_LIMIT: 20016,\n  ACCOUNT_OWNER_ONLY: 20018,\n  ANNOUNCEMENT_EDIT_LIMIT_EXCEEDED: 20022,\n  CHANNEL_HIT_WRITE_RATELIMIT: 20028,\n  CONTENT_NOT_ALLOWED: 20031,\n  GUILD_PREMIUM_LEVEL_TOO_LOW: 20035,\n  MAXIMUM_GUILDS: 30001,\n  MAXIMUM_FRIENDS: 30002,\n  MAXIMUM_PINS: 30003,\n  MAXIMUM_RECIPIENTS: 30004,\n  MAXIMUM_ROLES: 30005,\n  MAXIMUM_WEBHOOKS: 30007,\n  MAXIMUM_EMOJIS: 30008,\n  MAXIMUM_REACTIONS: 30010,\n  MAXIMUM_CHANNELS: 30013,\n  MAXIMUM_ATTACHMENTS: 30015,\n  MAXIMUM_INVITES: 30016,\n  MAXIMUM_ANIMATED_EMOJIS: 30018,\n  MAXIMUM_SERVER_MEMBERS: 30019,\n  MAXIMUM_NUMBER_OF_SERVER_CATEGORIES: 30030,\n  GUILD_ALREADY_HAS_TEMPLATE: 30031,\n  MAXIMUM_THREAD_PARTICIPANTS: 30033,\n  MAXIMUM_NON_GUILD_MEMBERS_BANS: 30035,\n  MAXIMUM_BAN_FETCHES: 30037,\n  MAXIMUM_NUMBER_OF_STICKERS_REACHED: 30039,\n  UNAUTHORIZED: 40001,\n  ACCOUNT_VERIFICATION_REQUIRED: 40002,\n  DIRECT_MESSAGES_TOO_FAST: 40003,\n  REQUEST_ENTITY_TOO_LARGE: 40005,\n  FEATURE_TEMPORARILY_DISABLED: 40006,\n  USER_BANNED: 40007,\n  TARGET_USER_NOT_CONNECTED_TO_VOICE: 40032,\n  ALREADY_CROSSPOSTED: 40033,\n  MISSING_ACCESS: 50001,\n  INVALID_ACCOUNT_TYPE: 50002,\n  CANNOT_EXECUTE_ON_DM: 50003,\n  EMBED_DISABLED: 50004,\n  CANNOT_EDIT_MESSAGE_BY_OTHER: 50005,\n  CANNOT_SEND_EMPTY_MESSAGE: 50006,\n  CANNOT_MESSAGE_USER: 50007,\n  CANNOT_SEND_MESSAGES_IN_VOICE_CHANNEL: 50008,\n  CHANNEL_VERIFICATION_LEVEL_TOO_HIGH: 50009,\n  OAUTH2_APPLICATION_BOT_ABSENT: 50010,\n  MAXIMUM_OAUTH2_APPLICATIONS: 50011,\n  INVALID_OAUTH_STATE: 50012,\n  MISSING_PERMISSIONS: 50013,\n  INVALID_AUTHENTICATION_TOKEN: 50014,\n  NOTE_TOO_LONG: 50015,\n  INVALID_BULK_DELETE_QUANTITY: 50016,\n  CANNOT_PIN_MESSAGE_IN_OTHER_CHANNEL: 50019,\n  INVALID_OR_TAKEN_INVITE_CODE: 50020,\n  CANNOT_EXECUTE_ON_SYSTEM_MESSAGE: 50021,\n  CANNOT_EXECUTE_ON_CHANNEL_TYPE: 50024,\n  INVALID_OAUTH_TOKEN: 50025,\n  MISSING_OAUTH_SCOPE: 50026,\n  INVALID_WEBHOOK_TOKEN: 50027,\n  INVALID_ROLE: 50028,\n  INVALID_RECIPIENTS: 50033,\n  BULK_DELETE_MESSAGE_TOO_OLD: 50034,\n  INVALID_FORM_BODY: 50035,\n  INVITE_ACCEPTED_TO_GUILD_NOT_CONTAINING_BOT: 50036,\n  INVALID_API_VERSION: 50041,\n  FILE_UPLOADED_EXCEEDS_MAXIMUM_SIZE: 50045,\n  INVALID_FILE_UPLOADED: 50046,\n  CANNOT_SELF_REDEEM_GIFT: 50054,\n  PAYMENT_SOURCE_REQUIRED: 50070,\n  CANNOT_DELETE_COMMUNITY_REQUIRED_CHANNEL: 50074,\n  INVALID_STICKER_SENT: 50081,\n  INVALID_OPERATION_ON_ARCHIVED_THREAD: 50083,\n  INVALID_THREAD_NOTIFICATION_SETTINGS: 50084,\n  PARAMETER_EARLIER_THAN_CREATION: 50085,\n  GUILD_NOT_AVAILABLE_IN_LOCATION: 50095,\n  GUILD_MONETIZATION_REQUIRED: 50097,\n  TWO_FACTOR_REQUIRED: 60003,\n  NO_USERS_WITH_DISCORDTAG_EXIST: 80004,\n  REACTION_BLOCKED: 90001,\n  RESOURCE_OVERLOADED: 130000,\n  STAGE_ALREADY_OPEN: 150006,\n  MESSAGE_ALREADY_HAS_THREAD: 160004,\n  THREAD_LOCKED: 160005,\n  MAXIMUM_ACTIVE_THREADS: 160006,\n  MAXIMUM_ACTIVE_ANNOUNCEMENT_THREADS: 160007,\n  INVALID_JSON_FOR_UPLOADED_LOTTIE_FILE: 170001,\n  UPLOADED_LOTTIES_CANNOT_CONTAIN_RASTERIZED_IMAGES: 170002,\n  STICKER_MAXIMUM_FRAMERATE_EXCEEDED: 170003,\n  STICKER_FRAME_COUNT_EXCEEDS_MAXIMUM_OF_1000_FRAMES: 170004,\n  LOTTIE_ANIMATION_MAXIMUM_DIMENSIONS_EXCEEDED: 170005,\n  STICKER_FRAME_RATE_IS_TOO_SMALL_OR_TOO_LARGE: 170006,\n  STICKER_ANIMATION_DURATION_EXCEEDS_MAXIMUM_OF_5_SECONDS: 170007,\n};\n\n/**\n * The value set for a guild's default message notifications, e.g. `ALL_MESSAGES`. Here are the available types:\n * * ALL_MESSAGES\n * * ONLY_MENTIONS\n * @typedef {string} DefaultMessageNotificationLevel\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level}\n */\nexports.DefaultMessageNotificationLevels = createEnum(['ALL_MESSAGES', 'ONLY_MENTIONS']);\n\n/**\n * The value set for a team member's membership state:\n * * INVITED\n * * ACCEPTED\n * @typedef {string} MembershipState\n * @see {@link https://discord.com/developers/docs/topics/teams#data-models-membership-state-enum}\n */\nexports.MembershipStates = createEnum([null, 'INVITED', 'ACCEPTED']);\n\n/**\n * The value set for a webhook's type:\n * * Incoming\n * * Channel Follower\n * * Application\n * @typedef {string} WebhookType\n * @see {@link https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-types}\n */\nexports.WebhookTypes = createEnum([null, 'Incoming', 'Channel Follower', 'Application']);\n\n/**\n * The value set for a sticker's type:\n * * STANDARD\n * * GUILD\n * @typedef {string} StickerType\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-types}\n */\nexports.StickerTypes = createEnum([null, 'STANDARD', 'GUILD']);\n\n/**\n * The value set for a sticker's format type:\n * * PNG\n * * APNG\n * * LOTTIE\n * @typedef {string} StickerFormatType\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types}\n */\nexports.StickerFormatTypes = createEnum([null, 'PNG', 'APNG', 'LOTTIE']);\n\n/**\n * An overwrite type:\n * * role\n * * member\n * @typedef {string} OverwriteType\n * @see {@link https://discord.com/developers/docs/resources/channel#overwrite-object-overwrite-structure}\n */\nexports.OverwriteTypes = createEnum(['role', 'member']);\n\n/* eslint-disable max-len */\n/**\n * The type of an {@link ApplicationCommand} object:\n * * CHAT_INPUT\n * * USER\n * * MESSAGE\n * @typedef {string} ApplicationCommandType\n */\nexports.ApplicationCommandTypes = createEnum([null, 'CHAT_INPUT', 'USER', 'MESSAGE']);\n\n/**\n * The type of an {@link ApplicationCommandOption} object:\n * * SUB_COMMAND\n * * SUB_COMMAND_GROUP\n * * STRING\n * * INTEGER\n * * BOOLEAN\n * * USER\n * * CHANNEL\n * * ROLE\n * * MENTIONABLE\n * * NUMBER\n * @typedef {string} ApplicationCommandOptionType\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-type}\n */\nexports.ApplicationCommandOptionTypes = createEnum([\n  null,\n  'SUB_COMMAND',\n  'SUB_COMMAND_GROUP',\n  'STRING',\n  'INTEGER',\n  'BOOLEAN',\n  'USER',\n  'CHANNEL',\n  'ROLE',\n  'MENTIONABLE',\n  'NUMBER',\n]);\n\n/**\n * The type of an {@link ApplicationCommandPermissions} object:\n * * ROLE\n * * USER\n * @typedef {string} ApplicationCommandPermissionType\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#application-command-permissions-object-application-command-permission-type}\n */\nexports.ApplicationCommandPermissionTypes = createEnum([null, 'ROLE', 'USER']);\n\n/**\n * The type of an {@link Interaction} object:\n * * PING\n * * APPLICATION_COMMAND\n * * MESSAGE_COMPONENT\n * @typedef {string} InteractionType\n * @see {@link https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-interaction-request-type}\n */\nexports.InteractionTypes = createEnum([null, 'PING', 'APPLICATION_COMMAND', 'MESSAGE_COMPONENT']);\n\n/**\n * The type of an interaction response:\n * * PONG\n * * CHANNEL_MESSAGE_WITH_SOURCE\n * * DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE\n * * DEFERRED_MESSAGE_UPDATE\n * * UPDATE_MESSAGE\n * @typedef {string} InteractionResponseType\n * @see {@link https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-response-object-interaction-callback-type}\n */\nexports.InteractionResponseTypes = createEnum([\n  null,\n  'PONG',\n  null,\n  null,\n  'CHANNEL_MESSAGE_WITH_SOURCE',\n  'DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE',\n  'DEFERRED_MESSAGE_UPDATE',\n  'UPDATE_MESSAGE',\n]);\n/* eslint-enable max-len */\n\n/**\n * The type of a message component\n * * ACTION_ROW\n * * BUTTON\n * * SELECT_MENU\n * @typedef {string} MessageComponentType\n * @see {@link https://discord.com/developers/docs/interactions/message-components#component-object-component-types}\n */\nexports.MessageComponentTypes = createEnum([null, 'ACTION_ROW', 'BUTTON', 'SELECT_MENU']);\n\n/**\n * The style of a message button\n * * PRIMARY\n * * SECONDARY\n * * SUCCESS\n * * DANGER\n * * LINK\n * @typedef {string} MessageButtonStyle\n * @see {@link https://discord.com/developers/docs/interactions/message-components#button-object-button-styles}\n */\nexports.MessageButtonStyles = createEnum([null, 'PRIMARY', 'SECONDARY', 'SUCCESS', 'DANGER', 'LINK']);\n\n/**\n * The required MFA level for a guild\n * * NONE\n * * ELEVATED\n * @typedef {string} MFALevel\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-mfa-level}\n */\nexports.MFALevels = createEnum(['NONE', 'ELEVATED']);\n\n/**\n * NSFW level of a Guild:\n * * DEFAULT\n * * EXPLICIT\n * * SAFE\n * * AGE_RESTRICTED\n * @typedef {string} NSFWLevel\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-guild-nsfw-level}\n */\nexports.NSFWLevels = createEnum(['DEFAULT', 'EXPLICIT', 'SAFE', 'AGE_RESTRICTED']);\n\n/**\n * Privacy level of a {@link StageInstance} object:\n * * PUBLIC\n * * GUILD_ONLY\n * @typedef {string} PrivacyLevel\n * @see {@link https://discord.com/developers/docs/resources/stage-instance#stage-instance-object-privacy-level}\n */\nexports.PrivacyLevels = createEnum([null, 'PUBLIC', 'GUILD_ONLY']);\n\n/**\n * The premium tier (Server Boost level) of a guild:\n * * NONE\n * * TIER_1\n * * TIER_2\n * * TIER_3\n * @typedef {string} PremiumTier\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-premium-tier}\n */\nexports.PremiumTiers = createEnum(['NONE', 'TIER_1', 'TIER_2', 'TIER_3']);\n\nexports._cleanupSymbol = Symbol('djsCleanup');\n\nfunction keyMirror(arr) {\n  let tmp = Object.create(null);\n  for (const value of arr) tmp[value] = value;\n  return tmp;\n}\n\nfunction createEnum(keys) {\n  const obj = {};\n  for (const [index, key] of keys.entries()) {\n    if (key === null) continue;\n    obj[key] = index;\n    obj[index] = key;\n  }\n  return obj;\n}\n\n/**\n * @typedef {Object} Constants Constants that can be used in an enum or object-like way.\n * @property {ActivityType} ActivityTypes The type of an activity of a users presence.\n * @property {APIError} APIErrors An error encountered while performing an API request.\n * @property {ApplicationCommandOptionType} ApplicationCommandOptionTypes\n * The type of an {@link ApplicationCommandOption} object.\n * @property {ApplicationCommandPermissionType} ApplicationCommandPermissionTypes\n * The type of an {@link ApplicationCommandPermissions} object.\n * @property {ChannelType} ChannelTypes All available channel types.\n * @property {DefaultMessageNotificationLevel} DefaultMessageNotificationLevels\n * The value set for a guild's default message notifications.\n * @property {ExplicitContentFilterLevel} ExplicitContentFilterLevels\n * The value set for the explicit content filter levels for a guild.\n * @property {InteractionResponseType} InteractionResponseTypes The type of an interaction response.\n * @property {InteractionType} InteractionTypes The type of an {@link Interaction} object.\n * @property {MembershipState} MembershipStates The value set for a team member's membership state.\n * @property {MessageButtonStyle} MessageButtonStyles The style of a message button.\n * @property {MessageComponentType} MessageComponentTypes The type of a message component.\n * @property {MFALevel} MFALevels The required MFA level for a guild.\n * @property {NSFWLevel} NSFWLevels NSFW level of a guild.\n * @property {OverwriteType} OverwriteTypes An overwrite type.\n * @property {PartialType} PartialTypes The type of Structure allowed to be a partial.\n * @property {PremiumTier} PremiumTiers The premium tier (Server Boost level) of a guild.\n * @property {PrivacyLevel} PrivacyLevels Privacy level of a {@link StageInstance} object.\n * @property {Status} Status The available statuses of the client.\n * @property {StickerFormatType} StickerFormatTypes The value set for a sticker's format type.\n * @property {StickerType} StickerTypes The value set for a sticker's type.\n * @property {VerificationLevel} VerificationLevels The value set for the verification levels for a guild.\n * @property {WebhookType} WebhookTypes The value set for a webhook's type.\n * @property {WSEventType} WSEvents The type of a websocket message event.\n */\n","'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst stream = require('stream');\nconst fetch = require('node-fetch');\nconst { Error: DiscordError, TypeError } = require('../errors');\nconst Invite = require('../structures/Invite');\n\n/**\n * The DataResolver identifies different objects and tries to resolve a specific piece of information from them.\n * @private\n */\nclass DataResolver extends null {\n  /**\n   * Data that can be resolved to give an invite code. This can be:\n   * * An invite code\n   * * An invite URL\n   * @typedef {string} InviteResolvable\n   */\n\n  /**\n   * Data that can be resolved to give a template code. This can be:\n   * * A template code\n   * * A template URL\n   * @typedef {string} GuildTemplateResolvable\n   */\n\n  /**\n   * Resolves the string to a code based on the passed regex.\n   * @param {string} data The string to resolve\n   * @param {RegExp} regex The RegExp used to extract the code\n   * @returns {string}\n   */\n  static resolveCode(data, regex) {\n    return data.matchAll(regex).next().value?.[1] ?? data;\n  }\n\n  /**\n   * Resolves InviteResolvable to an invite code.\n   * @param {InviteResolvable} data The invite resolvable to resolve\n   * @returns {string}\n   */\n  static resolveInviteCode(data) {\n    return this.resolveCode(data, Invite.INVITES_PATTERN);\n  }\n\n  /**\n   * Resolves GuildTemplateResolvable to a template code.\n   * @param {GuildTemplateResolvable} data The template resolvable to resolve\n   * @returns {string}\n   */\n  static resolveGuildTemplateCode(data) {\n    const GuildTemplate = require('../structures/GuildTemplate');\n    return this.resolveCode(data, GuildTemplate.GUILD_TEMPLATES_PATTERN);\n  }\n\n  /**\n   * Resolves a Base64Resolvable, a string, or a BufferResolvable to a Base 64 image.\n   * @param {BufferResolvable|Base64Resolvable} image The image to be resolved\n   * @returns {Promise<?string>}\n   */\n  static async resolveImage(image) {\n    if (!image) return null;\n    if (typeof image === 'string' && image.startsWith('data:')) {\n      return image;\n    }\n    const file = await this.resolveFileAsBuffer(image);\n    return DataResolver.resolveBase64(file);\n  }\n\n  /**\n   * Data that resolves to give a Base64 string, typically for image uploading. This can be:\n   * * A Buffer\n   * * A base64 string\n   * @typedef {Buffer|string} Base64Resolvable\n   */\n\n  /**\n   * Resolves a Base64Resolvable to a Base 64 image.\n   * @param {Base64Resolvable} data The base 64 resolvable you want to resolve\n   * @returns {?string}\n   */\n  static resolveBase64(data) {\n    if (Buffer.isBuffer(data)) return `data:image/jpg;base64,${data.toString('base64')}`;\n    return data;\n  }\n\n  /**\n   * Data that can be resolved to give a Buffer. This can be:\n   * * A Buffer\n   * * The path to a local file\n   * * A URL\n   * @typedef {string|Buffer} BufferResolvable\n   */\n\n  /**\n   * @external Stream\n   * @see {@link https://nodejs.org/api/stream.html}\n   */\n\n  /**\n   * Resolves a BufferResolvable to a Buffer or a Stream.\n   * @param {BufferResolvable|Stream} resource The buffer or stream resolvable to resolve\n   * @returns {Promise<Buffer|Stream>}\n   */\n  static async resolveFile(resource) {\n    if (Buffer.isBuffer(resource) || resource instanceof stream.Readable) return resource;\n    if (typeof resource === 'string') {\n      if (/^https?:\\/\\//.test(resource)) {\n        const res = await fetch(resource);\n        return res.body;\n      }\n\n      return new Promise((resolve, reject) => {\n        const file = path.resolve(resource);\n        fs.stat(file, (err, stats) => {\n          if (err) return reject(err);\n          if (!stats.isFile()) return reject(new DiscordError('FILE_NOT_FOUND', file));\n          return resolve(fs.createReadStream(file));\n        });\n      });\n    }\n\n    throw new TypeError('REQ_RESOURCE_TYPE');\n  }\n\n  /**\n   * Resolves a BufferResolvable to a Buffer.\n   * @param {BufferResolvable|Stream} resource The buffer or stream resolvable to resolve\n   * @returns {Promise<Buffer>}\n   */\n  static async resolveFileAsBuffer(resource) {\n    const file = await this.resolveFile(resource);\n    if (Buffer.isBuffer(file)) return file;\n\n    const buffers = [];\n    for await (const data of file) buffers.push(data);\n    return Buffer.concat(buffers);\n  }\n}\n\nmodule.exports = DataResolver;\n","'use strict';\n\nconst {\n  blockQuote,\n  bold,\n  channelMention,\n  codeBlock,\n  formatEmoji,\n  hideLinkEmbed,\n  hyperlink,\n  inlineCode,\n  italic,\n  memberNicknameMention,\n  quote,\n  roleMention,\n  spoiler,\n  strikethrough,\n  time,\n  TimestampStyles,\n  underscore,\n  userMention,\n} = require('@discordjs/builders');\n\n/**\n * Contains various Discord-specific functions for formatting messages.\n */\nclass Formatters extends null {}\n\n/**\n * Formats the content into a block quote. This needs to be at the start of the line for Discord to format it.\n * @method blockQuote\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.blockQuote = blockQuote;\n\n/**\n * Formats the content into bold text.\n * @method bold\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.bold = bold;\n\n/**\n * Formats a channel ID into a channel mention.\n * @method channelMention\n * @memberof Formatters\n * @param {string} channelId The channel ID to format.\n * @returns {string}\n */\nFormatters.channelMention = channelMention;\n\n/**\n * Wraps the content inside a codeblock with an optional language.\n * @method codeBlock\n * @memberof Formatters\n * @param {string} contentOrLanguage The language to use, content if a second parameter isn't provided.\n * @param {string} [content] The content to wrap.\n * @returns {string}\n */\nFormatters.codeBlock = codeBlock;\n\n/**\n * Formats an emoji ID into a fully qualified emoji identifier\n * @method formatEmoji\n * @memberof Formatters\n * @param {string} emojiId The emoji ID to format.\n * @param {boolean} [animated] Whether the emoji is animated or not. Defaults to `false`\n * @returns {string}\n */\nFormatters.formatEmoji = formatEmoji;\n\n/**\n * Wraps the URL into `<>`, which stops it from embedding.\n * @method hideLinkEmbed\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.hideLinkEmbed = hideLinkEmbed;\n\n/**\n * Formats the content and the URL into a masked URL with an optional title.\n * @method hyperlink\n * @memberof Formatters\n * @param {string} content The content to display.\n * @param {string} url The URL the content links to.\n * @param {string} [title] The title shown when hovering on the masked link.\n * @returns {string}\n */\nFormatters.hyperlink = hyperlink;\n\n/**\n * Wraps the content inside \\`backticks\\`, which formats it as inline code.\n * @method inlineCode\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.inlineCode = inlineCode;\n\n/**\n * Formats the content into italic text.\n * @method italic\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.italic = italic;\n\n/**\n * Formats a user ID into a member-nickname mention.\n * @method memberNicknameMention\n * @memberof Formatters\n * @param {string} memberId The user ID to format.\n * @returns {string}\n */\nFormatters.memberNicknameMention = memberNicknameMention;\n\n/**\n * Formats the content into a quote. This needs to be at the start of the line for Discord to format it.\n * @method quote\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.quote = quote;\n\n/**\n * Formats a role ID into a role mention.\n * @method roleMention\n * @memberof Formatters\n * @param {string} roleId The role ID to format.\n * @returns {string}\n */\nFormatters.roleMention = roleMention;\n\n/**\n * Formats the content into spoiler text.\n * @method spoiler\n * @memberof Formatters\n * @param {string} content The content to spoiler.\n * @returns {string}\n */\nFormatters.spoiler = spoiler;\n\n/**\n * Formats the content into strike-through text.\n * @method strikethrough\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.strikethrough = strikethrough;\n\n/**\n * Formats a date into a short date-time string.\n * @method time\n * @memberof Formatters\n * @param {number|Date} [date] The date to format.\n * @param {TimestampStyles} [style] The style to use.\n * @returns {string}\n */\nFormatters.time = time;\n\n/**\n * A message formatting timestamp style, as defined in\n * [here](https://discord.com/developers/docs/reference#message-formatting-timestamp-styles).\n * * `t` Short time format, consisting of hours and minutes, e.g. 16:20.\n * * `T` Long time format, consisting of hours, minutes, and seconds, e.g. 16:20:30.\n * * `d` Short date format, consisting of day, month, and year, e.g. 20/04/2021.\n * * `D` Long date format, consisting of day, month, and year, e.g. 20 April 2021.\n * * `f` Short date-time format, consisting of short date and short time formats, e.g. 20 April 2021 16:20.\n * * `F` Long date-time format, consisting of long date and short time formats, e.g. Tuesday, 20 April 2021 16:20.\n * * `R` Relative time format, consisting of a relative duration format, e.g. 2 months ago.\n * @typedef {string} TimestampStylesString\n */\n\n/**\n * The message formatting timestamp\n * [styles](https://discord.com/developers/docs/reference#message-formatting-timestamp-styles) supported by Discord.\n * @memberof Formatters\n * @type {Object<string, TimestampStylesString>}\n */\nFormatters.TimestampStyles = TimestampStyles;\n\n/**\n * Formats the content into underscored text.\n * @method underscore\n * @memberof Formatters\n * @param {string} content The content to wrap.\n * @returns {string}\n */\nFormatters.underscore = underscore;\n\n/**\n * Formats a user ID into a user mention.\n * @method userMention\n * @memberof Formatters\n * @param {string} userId The user ID to format.\n * @returns {string}\n */\nFormatters.userMention = userMention;\n\nmodule.exports = Formatters;\n","'use strict';\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to calculate intents.\n * @extends {BitField}\n */\nclass Intents extends BitField {}\n\n/**\n * @name Intents\n * @kind constructor\n * @memberof Intents\n * @param {IntentsResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Data that can be resolved to give a permission number. This can be:\n * * A string (see {@link Intents.FLAGS})\n * * An intents flag\n * * An instance of Intents\n * * An array of IntentsResolvable\n * @typedef {string|number|Intents|IntentsResolvable[]} IntentsResolvable\n */\n\n/**\n * Numeric websocket intents. All available properties:\n * * `GUILDS`\n * * `GUILD_MEMBERS`\n * * `GUILD_BANS`\n * * `GUILD_EMOJIS_AND_STICKERS`\n * * `GUILD_INTEGRATIONS`\n * * `GUILD_WEBHOOKS`\n * * `GUILD_INVITES`\n * * `GUILD_VOICE_STATES`\n * * `GUILD_PRESENCES`\n * * `GUILD_MESSAGES`\n * * `GUILD_MESSAGE_REACTIONS`\n * * `GUILD_MESSAGE_TYPING`\n * * `DIRECT_MESSAGES`\n * * `DIRECT_MESSAGE_REACTIONS`\n * * `DIRECT_MESSAGE_TYPING`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/topics/gateway#list-of-intents}\n */\nIntents.FLAGS = {\n  GUILDS: 1 << 0,\n  GUILD_MEMBERS: 1 << 1,\n  GUILD_BANS: 1 << 2,\n  GUILD_EMOJIS_AND_STICKERS: 1 << 3,\n  GUILD_INTEGRATIONS: 1 << 4,\n  GUILD_WEBHOOKS: 1 << 5,\n  GUILD_INVITES: 1 << 6,\n  GUILD_VOICE_STATES: 1 << 7,\n  GUILD_PRESENCES: 1 << 8,\n  GUILD_MESSAGES: 1 << 9,\n  GUILD_MESSAGE_REACTIONS: 1 << 10,\n  GUILD_MESSAGE_TYPING: 1 << 11,\n  DIRECT_MESSAGES: 1 << 12,\n  DIRECT_MESSAGE_REACTIONS: 1 << 13,\n  DIRECT_MESSAGE_TYPING: 1 << 14,\n};\n\nmodule.exports = Intents;\n","'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { _cleanupSymbol } = require('./Constants.js');\nconst { TypeError } = require('../errors/DJSError.js');\n\n/**\n * @typedef {Function} SweepFilter\n * @param {LimitedCollection} collection The collection being swept\n * @returns {Function|null} Return `null` to skip sweeping, otherwise a function passed to `sweep()`,\n * See {@link [Collection#sweep](https://discord.js.org/#/docs/collection/main/class/Collection?scrollTo=sweep)}\n * for the definition of this function.\n */\n\n/**\n * Options for defining the behavior of a LimitedCollection\n * @typedef {Object} LimitedCollectionOptions\n * @property {?number} [maxSize=Infinity] The maximum size of the Collection\n * @property {?Function} [keepOverLimit=null] A function, which is passed the value and key of an entry, ran to decide\n * to keep an entry past the maximum size\n * @property {?SweepFilter} [sweepFilter=null] A function ran every `sweepInterval` to determine how to sweep\n * @property {?number} [sweepInterval=0] How frequently, in seconds, to sweep the collection.\n */\n\n/**\n * A Collection which holds a max amount of entries and sweeps periodically.\n * @extends {Collection}\n * @param {LimitedCollectionOptions} [options={}] Options for constructing the Collection.\n * @param {Iterable} [iterable=null] Optional entries passed to the Map constructor.\n */\nclass LimitedCollection extends Collection {\n  constructor(options = {}, iterable) {\n    if (typeof options !== 'object' || options === null) {\n      throw new TypeError('INVALID_TYPE', 'options', 'object', true);\n    }\n    const { maxSize = Infinity, keepOverLimit = null, sweepInterval = 0, sweepFilter = null } = options;\n\n    if (typeof maxSize !== 'number') {\n      throw new TypeError('INVALID_TYPE', 'maxSize', 'number');\n    }\n    if (keepOverLimit !== null && typeof keepOverLimit !== 'function') {\n      throw new TypeError('INVALID_TYPE', 'keepOverLimit', 'function');\n    }\n    if (typeof sweepInterval !== 'number') {\n      throw new TypeError('INVALID_TYPE', 'sweepInterval', 'number');\n    }\n    if (sweepFilter !== null && typeof sweepFilter !== 'function') {\n      throw new TypeError('INVALID_TYPE', 'sweepFilter', 'function');\n    }\n\n    super(iterable);\n\n    /**\n     * The max size of the Collection.\n     * @type {number}\n     */\n    this.maxSize = maxSize;\n\n    /**\n     * A function called to check if an entry should be kept when the Collection is at max size.\n     * @type {?Function}\n     */\n    this.keepOverLimit = keepOverLimit;\n\n    /**\n     * A function called every sweep interval that returns a function passed to `sweep`.\n     * @type {?SweepFilter}\n     */\n    this.sweepFilter = sweepFilter;\n\n    /**\n     * The id of the interval being used to sweep.\n     * @type {?Timeout}\n     */\n    this.interval =\n      sweepInterval > 0 && sweepInterval !== Infinity && sweepFilter\n        ? setInterval(() => {\n            const sweepFn = this.sweepFilter(this);\n            if (sweepFn === null) return;\n            if (typeof sweepFn !== 'function') throw new TypeError('SWEEP_FILTER_RETURN');\n            this.sweep(sweepFn);\n          }, sweepInterval * 1000).unref()\n        : null;\n  }\n\n  set(key, value) {\n    if (this.maxSize === 0) return this;\n    if (this.size >= this.maxSize && !this.has(key)) {\n      for (const [k, v] of this.entries()) {\n        const keep = this.keepOverLimit?.(v, k, this) ?? false;\n        if (!keep) {\n          this.delete(k);\n          break;\n        }\n      }\n    }\n    return super.set(key, value);\n  }\n\n  /**\n   * Options for generating a filter function based on lifetime\n   * @typedef {Object} LifetimeFilterOptions\n   * @property {number} [lifetime=14400] How long, in seconds, an entry should stay in the collection\n   * before it is considered sweepable.\n   * @property {Function} [getComparisonTimestamp=e => e?.createdTimestamp] A function that takes an entry, key,\n   * and the collection and returns a timestamp to compare against in order to determine the lifetime of the entry.\n   * @property {Function} [excludeFromSweep=() => false] A function that takes an entry, key, and the collection\n   * and returns a boolean, `true` when the entry should not be checked for sweepability.\n   */\n\n  /**\n   * Create a sweepFilter function that uses a lifetime to determine sweepability.\n   * @param {LifetimeFilterOptions} [options={}] The options used to generate the filter function\n   * @returns {SweepFilter}\n   */\n  static filterByLifetime({\n    lifetime = 14400,\n    getComparisonTimestamp = e => e?.createdTimestamp,\n    excludeFromSweep = () => false,\n  } = {}) {\n    if (typeof lifetime !== 'number') {\n      throw new TypeError('INVALID_TYPE', 'lifetime', 'number');\n    }\n    if (typeof getComparisonTimestamp !== 'function') {\n      throw new TypeError('INVALID_TYPE', 'getComparisonTimestamp', 'function');\n    }\n    if (typeof excludeFromSweep !== 'function') {\n      throw new TypeError('INVALID_TYPE', 'excludeFromSweep', 'function');\n    }\n    return () => {\n      if (lifetime <= 0) return null;\n      const lifetimeMs = lifetime * 1000;\n      const now = Date.now();\n      return (entry, key, coll) => {\n        if (excludeFromSweep(entry, key, coll)) {\n          return false;\n        }\n        const comparisonTimestamp = getComparisonTimestamp(entry, key, coll);\n        if (!comparisonTimestamp || typeof comparisonTimestamp !== 'number') return false;\n        return now - comparisonTimestamp > lifetimeMs;\n      };\n    };\n  }\n\n  [_cleanupSymbol]() {\n    return this.interval ? () => clearInterval(this.interval) : null;\n  }\n\n  static get [Symbol.species]() {\n    return Collection;\n  }\n}\n\nmodule.exports = LimitedCollection;\n","'use strict';\n\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link Message#flags} bitfield.\n * @extends {BitField}\n */\nclass MessageFlags extends BitField {}\n\n/**\n * @name MessageFlags\n * @kind constructor\n * @memberof MessageFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name MessageFlags#bitfield\n */\n\n/**\n * Numeric message flags. All available properties:\n * * `CROSSPOSTED`\n * * `IS_CROSSPOST`\n * * `SUPPRESS_EMBEDS`\n * * `SOURCE_MESSAGE_DELETED`\n * * `URGENT`\n * * `HAS_THREAD`\n * * `EPHEMERAL`\n * * `LOADING`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/channel#message-object-message-flags}\n */\nMessageFlags.FLAGS = {\n  CROSSPOSTED: 1 << 0,\n  IS_CROSSPOST: 1 << 1,\n  SUPPRESS_EMBEDS: 1 << 2,\n  SOURCE_MESSAGE_DELETED: 1 << 3,\n  URGENT: 1 << 4,\n  HAS_THREAD: 1 << 5,\n  EPHEMERAL: 1 << 6,\n  LOADING: 1 << 7,\n};\n\nmodule.exports = MessageFlags;\n","'use strict';\n\n/**\n * Rate limit data\n * @typedef {Object} RateLimitData\n * @property {number} timeout Time until this rate limit ends, in ms\n * @property {number} limit The maximum amount of requests of this endpoint\n * @property {string} method The http method of this request\n * @property {string} path The path of the request relative to the HTTP endpoint\n * @property {string} route The route of the request relative to the HTTP endpoint\n * @property {boolean} global Whether this is a global rate limit\n */\n\n/**\n * Whether this rate limit should throw an Error\n * @typedef {Function} RateLimitQueueFilter\n * @param {RateLimitData} rateLimitData The data of this rate limit\n * @returns {boolean|Promise<boolean>}\n */\n\n/**\n * @typedef {Function} CacheFactory\n * @param {Function} manager The manager class the cache is being requested from.\n * @param {Function} holds The class that the cache will hold.\n * @returns {Collection} A Collection used to store the cache of the manager.\n */\n\n/**\n * Options for a client.\n * @typedef {Object} ClientOptions\n * @property {number|number[]|string} [shards] The shard's id to run, or an array of shard ids. If not specified,\n * the client will spawn {@link ClientOptions#shardCount} shards. If set to `auto`, it will fetch the\n * recommended amount of shards from Discord and spawn that amount\n * @property {number} [shardCount=1] The total amount of shards used by all processes of this bot\n * (e.g. recommended shard count, shard count of the ShardingManager)\n * @property {CacheFactory} [makeCache] Function to create a cache.\n * You can use your own function, or the {@link Options} class to customize the Collection used for the cache.\n * <warn>Overriding the cache used in `GuildManager`, `ChannelManager`, `GuildChannelManager`, `RoleManager`,\n * and `PermissionOverwriteManager` is unsupported and **will** break functionality</warn>\n * @property {number} [messageCacheLifetime=0] DEPRECATED: Use `makeCache` with a `LimitedCollection` instead.\n * How long a message should stay in the cache until it is considered sweepable (in seconds, 0 for forever)\n * @property {number} [messageSweepInterval=0] DEPRECATED: Use `makeCache` with a `LimitedCollection` instead.\n * How frequently to remove messages from the cache that are older than the message cache lifetime\n * (in seconds, 0 for never)\n * @property {MessageMentionOptions} [allowedMentions] Default value for {@link MessageOptions#allowedMentions}\n * @property {number} [invalidRequestWarningInterval=0] The number of invalid REST requests (those that return\n * 401, 403, or 429) in a 10 minute window between emitted warnings (0 for no warnings). That is, if set to 500,\n * warnings will be emitted at invalid request number 500, 1000, 1500, and so on.\n * @property {PartialType[]} [partials] Structures allowed to be partial. This means events can be emitted even when\n * they're missing all the data for a particular structure. See the \"Partial Structures\" topic on the\n * [guide](https://discordjs.guide/popular-topics/partials.html) for some\n * important usage information, as partials require you to put checks in place when handling data.\n * @property {number} [restWsBridgeTimeout=5000] Maximum time permitted between REST responses and their\n * corresponding websocket events\n * @property {number} [restTimeOffset=500] Extra time in milliseconds to wait before continuing to make REST\n * requests (higher values will reduce rate-limiting errors on bad connections)\n * @property {number} [restRequestTimeout=15000] Time to wait before cancelling a REST request, in milliseconds\n * @property {number} [restSweepInterval=60] How frequently to delete inactive request buckets, in seconds\n * (or 0 for never)\n * @property {number} [restGlobalRateLimit=0] How many requests to allow sending per second (0 for unlimited, 50 for\n * the standard global limit used by Discord)\n * @property {string[]|RateLimitQueueFilter} [rejectOnRateLimit] Decides how rate limits and pre-emptive throttles\n * should be handled. If this option is an array containing the prefix of the request route (e.g. /channels to match any\n * route starting with /channels, such as /channels/222197033908436994/messages) or a function returning true, a\n * {@link RateLimitError} will be thrown. Otherwise the request will be queued for later\n * @property {number} [retryLimit=1] How many times to retry on 5XX errors (Infinity for indefinite amount of retries)\n * @property {boolean} [failIfNotExists=true] Default value for {@link ReplyMessageOptions#failIfNotExists}\n * @property {string[]} [userAgentSuffix] An array of additional bot info to be appended to the end of the required\n * [User Agent](https://discord.com/developers/docs/reference#user-agent) header\n * @property {PresenceData} [presence={}] Presence data to use upon login\n * @property {IntentsResolvable} intents Intents to enable for this connection\n * @property {WebsocketOptions} [ws] Options for the WebSocket\n * @property {HTTPOptions} [http] HTTP options\n */\n\n/**\n * WebSocket options (these are left as snake_case to match the API)\n * @typedef {Object} WebsocketOptions\n * @property {number} [large_threshold=50] Number of members in a guild after which offline users will no longer be\n * sent in the initial guild member list, must be between 50 and 250\n */\n\n/**\n * HTTP options\n * @typedef {Object} HTTPOptions\n * @property {number} [version=9] API version to use\n * @property {string} [api='https://discord.com/api'] Base url of the API\n * @property {string} [cdn='https://cdn.discordapp.com'] Base url of the CDN\n * @property {string} [invite='https://discord.gg'] Base url of invites\n * @property {string} [template='https://discord.new'] Base url of templates\n * @property {Object} [headers] Additional headers to send for all API requests\n */\n\n/**\n * Contains various utilities for client options.\n */\nclass Options extends null {\n  /**\n   * The default client options.\n   * @returns {ClientOptions}\n   */\n  static createDefault() {\n    return {\n      shardCount: 1,\n      makeCache: this.cacheWithLimits(this.defaultMakeCacheSettings),\n      messageCacheLifetime: 0,\n      messageSweepInterval: 0,\n      invalidRequestWarningInterval: 0,\n      partials: [],\n      restWsBridgeTimeout: 5000,\n      restRequestTimeout: 15000,\n      restGlobalRateLimit: 0,\n      retryLimit: 1,\n      restTimeOffset: 500,\n      restSweepInterval: 60,\n      failIfNotExists: true,\n      userAgentSuffix: [],\n      presence: {},\n      ws: {\n        large_threshold: 50,\n        compress: false,\n        properties: {\n          $os: process.platform,\n          $browser: 'discord.js',\n          $device: 'discord.js',\n        },\n        version: 9,\n      },\n      http: {\n        version: 9,\n        api: 'https://discord.com/api',\n        cdn: 'https://cdn.discordapp.com',\n        invite: 'https://discord.gg',\n        template: 'https://discord.new',\n      },\n    };\n  }\n\n  /**\n   * Create a cache factory using predefined settings to sweep or limit.\n   * @param {Object<string, LimitedCollectionOptions|number>} [settings={}] Settings passed to the relevant constructor.\n   * If no setting is provided for a manager, it uses Collection.\n   * If a number is provided for a manager, it uses that number as the max size for a LimitedCollection.\n   * If LimitedCollectionOptions are provided for a manager, it uses those settings to form a LimitedCollection.\n   * @returns {CacheFactory}\n   * @example\n   * // Store up to 200 messages per channel and discard archived threads if they were archived more than 4 hours ago.\n   * // Note archived threads will remain in the guild and client caches with these settings\n   * Options.cacheWithLimits({\n   *    MessageManager: 200,\n   *    ThreadManager: {\n   *      sweepInterval: 3600,\n   *      sweepFilter: LimitedCollection.filterByLifetime({\n   *        getComparisonTimestamp: e => e.archiveTimestamp,\n   *        excludeFromSweep: e => !e.archived,\n   *      }),\n   *    },\n   *  });\n   * @example\n   * // Sweep messages every 5 minutes, removing messages that have not been edited or created in the last 30 minutes\n   * Options.cacheWithLimits({\n   *   // Keep default thread sweeping behavior\n   *   ...Options.defaultMakeCacheSettings,\n   *   // Override MessageManager\n   *   MessageManager: {\n   *     sweepInterval: 300,\n   *     sweepFilter: LimitedCollection.filterByLifetime({\n   *       lifetime: 1800,\n   *       getComparisonTimestamp: e => e.editedTimestamp ?? e.createdTimestamp,\n   *     })\n   *   }\n   * });\n   */\n  static cacheWithLimits(settings = {}) {\n    const { Collection } = require('@discordjs/collection');\n    const LimitedCollection = require('./LimitedCollection');\n\n    return manager => {\n      const setting = settings[manager.name];\n      /* eslint-disable-next-line eqeqeq */\n      if (setting == null) {\n        return new Collection();\n      }\n      if (typeof setting === 'number') {\n        if (setting === Infinity) {\n          return new Collection();\n        }\n        return new LimitedCollection({ maxSize: setting });\n      }\n      /* eslint-disable eqeqeq */\n      const noSweeping =\n        setting.sweepFilter == null ||\n        setting.sweepInterval == null ||\n        setting.sweepInterval <= 0 ||\n        setting.sweepInterval === Infinity;\n      const noLimit = setting.maxSize == null || setting.maxSize === Infinity;\n      /* eslint-enable eqeqeq */\n      if (noSweeping && noLimit) {\n        return new Collection();\n      }\n      return new LimitedCollection(setting);\n    };\n  }\n\n  /**\n   * Create a cache factory that always caches everything.\n   * @returns {CacheFactory}\n   */\n  static cacheEverything() {\n    const { Collection } = require('@discordjs/collection');\n    return () => new Collection();\n  }\n\n  /**\n   * The default settings passed to {@link Options.cacheWithLimits}.\n   * The caches that this changes are:\n   * * `MessageManager` - Limit to 200 messages\n   * * `ChannelManager` - Sweep archived threads\n   * * `GuildChannelManager` - Sweep archived threads\n   * * `ThreadManager` - Sweep archived threads\n   * <info>If you want to keep default behavior and add on top of it you can use this object and add on to it, e.g.\n   * `makeCache: Options.cacheWithLimits({ ...Options.defaultMakeCacheSettings, ReactionManager: 0 })`</info>\n   * @type {Object<string, LimitedCollectionOptions|number>}\n   */\n  static get defaultMakeCacheSettings() {\n    return {\n      MessageManager: 200,\n      ChannelManager: {\n        sweepInterval: 3600,\n        sweepFilter: require('./Util').archivedThreadSweepFilter(),\n      },\n      GuildChannelManager: {\n        sweepInterval: 3600,\n        sweepFilter: require('./Util').archivedThreadSweepFilter(),\n      },\n      ThreadManager: {\n        sweepInterval: 3600,\n        sweepFilter: require('./Util').archivedThreadSweepFilter(),\n      },\n    };\n  }\n}\n\nmodule.exports = Options;\n","'use strict';\n\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a permission bitfield. All {@link GuildMember}s have a set of\n * permissions in their guild, and each channel in the guild may also have {@link PermissionOverwrites} for the member\n * that override their default permissions.\n * @extends {BitField}\n */\nclass Permissions extends BitField {\n  /**\n   * Bitfield of the packed bits\n   * @type {bigint}\n   * @name Permissions#bitfield\n   */\n\n  /**\n   * Data that can be resolved to give a permission number. This can be:\n   * * A string (see {@link Permissions.FLAGS})\n   * * A permission number\n   * * An instance of Permissions\n   * * An Array of PermissionResolvable\n   * @typedef {string|bigint|Permissions|PermissionResolvable[]} PermissionResolvable\n   */\n\n  /**\n   * Gets all given bits that are missing from the bitfield.\n   * @param {BitFieldResolvable} bits Bit(s) to check for\n   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override\n   * @returns {string[]}\n   */\n  missing(bits, checkAdmin = true) {\n    return checkAdmin && this.has(this.constructor.FLAGS.ADMINISTRATOR) ? [] : super.missing(bits, checkAdmin);\n  }\n\n  /**\n   * Checks whether the bitfield has a permission, or any of multiple permissions.\n   * @param {PermissionResolvable} permission Permission(s) to check for\n   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override\n   * @returns {boolean}\n   */\n  any(permission, checkAdmin = true) {\n    return (checkAdmin && super.has(this.constructor.FLAGS.ADMINISTRATOR)) || super.any(permission);\n  }\n\n  /**\n   * Checks whether the bitfield has a permission, or multiple permissions.\n   * @param {PermissionResolvable} permission Permission(s) to check for\n   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override\n   * @returns {boolean}\n   */\n  has(permission, checkAdmin = true) {\n    return (checkAdmin && super.has(this.constructor.FLAGS.ADMINISTRATOR)) || super.has(permission);\n  }\n}\n\n/**\n * Numeric permission flags. All available properties:\n * * `CREATE_INSTANT_INVITE` (create invitations to the guild)\n * * `KICK_MEMBERS`\n * * `BAN_MEMBERS`\n * * `ADMINISTRATOR` (implicitly has *all* permissions, and bypasses all channel overwrites)\n * * `MANAGE_CHANNELS` (edit and reorder channels)\n * * `MANAGE_GUILD` (edit the guild information, region, etc.)\n * * `ADD_REACTIONS` (add new reactions to messages)\n * * `VIEW_AUDIT_LOG`\n * * `PRIORITY_SPEAKER`\n * * `STREAM`\n * * `VIEW_CHANNEL`\n * * `SEND_MESSAGES`\n * * `SEND_TTS_MESSAGES`\n * * `MANAGE_MESSAGES` (delete messages and reactions)\n * * `EMBED_LINKS` (links posted will have a preview embedded)\n * * `ATTACH_FILES`\n * * `READ_MESSAGE_HISTORY` (view messages that were posted prior to opening Discord)\n * * `MENTION_EVERYONE`\n * * `USE_EXTERNAL_EMOJIS` (use emojis from different guilds)\n * * `VIEW_GUILD_INSIGHTS`\n * * `CONNECT` (connect to a voice channel)\n * * `SPEAK` (speak in a voice channel)\n * * `MUTE_MEMBERS` (mute members across all voice channels)\n * * `DEAFEN_MEMBERS` (deafen members across all voice channels)\n * * `MOVE_MEMBERS` (move members between voice channels)\n * * `USE_VAD` (use voice activity detection)\n * * `CHANGE_NICKNAME`\n * * `MANAGE_NICKNAMES` (change other members' nicknames)\n * * `MANAGE_ROLES`\n * * `MANAGE_WEBHOOKS`\n * * `MANAGE_EMOJIS_AND_STICKERS`\n * * `USE_APPLICATION_COMMANDS`\n * * `REQUEST_TO_SPEAK`\n * * `MANAGE_THREADS`\n * * `USE_PUBLIC_THREADS`\n * * `USE_PRIVATE_THREADS`\n * * `USE_EXTERNAL_STICKERS` (use stickers from different guilds)\n * @type {Object<string, bigint>}\n * @see {@link https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags}\n */\nPermissions.FLAGS = {\n  CREATE_INSTANT_INVITE: 1n << 0n,\n  KICK_MEMBERS: 1n << 1n,\n  BAN_MEMBERS: 1n << 2n,\n  ADMINISTRATOR: 1n << 3n,\n  MANAGE_CHANNELS: 1n << 4n,\n  MANAGE_GUILD: 1n << 5n,\n  ADD_REACTIONS: 1n << 6n,\n  VIEW_AUDIT_LOG: 1n << 7n,\n  PRIORITY_SPEAKER: 1n << 8n,\n  STREAM: 1n << 9n,\n  VIEW_CHANNEL: 1n << 10n,\n  SEND_MESSAGES: 1n << 11n,\n  SEND_TTS_MESSAGES: 1n << 12n,\n  MANAGE_MESSAGES: 1n << 13n,\n  EMBED_LINKS: 1n << 14n,\n  ATTACH_FILES: 1n << 15n,\n  READ_MESSAGE_HISTORY: 1n << 16n,\n  MENTION_EVERYONE: 1n << 17n,\n  USE_EXTERNAL_EMOJIS: 1n << 18n,\n  VIEW_GUILD_INSIGHTS: 1n << 19n,\n  CONNECT: 1n << 20n,\n  SPEAK: 1n << 21n,\n  MUTE_MEMBERS: 1n << 22n,\n  DEAFEN_MEMBERS: 1n << 23n,\n  MOVE_MEMBERS: 1n << 24n,\n  USE_VAD: 1n << 25n,\n  CHANGE_NICKNAME: 1n << 26n,\n  MANAGE_NICKNAMES: 1n << 27n,\n  MANAGE_ROLES: 1n << 28n,\n  MANAGE_WEBHOOKS: 1n << 29n,\n  MANAGE_EMOJIS_AND_STICKERS: 1n << 30n,\n  USE_APPLICATION_COMMANDS: 1n << 31n,\n  REQUEST_TO_SPEAK: 1n << 32n,\n  MANAGE_THREADS: 1n << 34n,\n  USE_PUBLIC_THREADS: 1n << 35n,\n  USE_PRIVATE_THREADS: 1n << 36n,\n  USE_EXTERNAL_STICKERS: 1n << 37n,\n};\n\n/**\n * Bitfield representing every permission combined\n * @type {bigint}\n */\nPermissions.ALL = Object.values(Permissions.FLAGS).reduce((all, p) => all | p, 0n);\n\n/**\n * Bitfield representing the default permissions for users\n * @type {bigint}\n */\nPermissions.DEFAULT = BigInt(104324673);\n\n/**\n * Bitfield representing the permissions required for moderators of stage channels\n * @type {bigint}\n */\nPermissions.STAGE_MODERATOR =\n  Permissions.FLAGS.MANAGE_CHANNELS | Permissions.FLAGS.MUTE_MEMBERS | Permissions.FLAGS.MOVE_MEMBERS;\n\nPermissions.defaultBit = BigInt(0);\n\nmodule.exports = Permissions;\n","'use strict';\n\nconst Util = require('./Util');\n\n// Discord epoch (2015-01-01T00:00:00.000Z)\nconst EPOCH = 1420070400000;\nlet INCREMENT = 0;\n\n/**\n * A container for useful snowflake-related methods.\n */\nclass SnowflakeUtil extends null {\n  /**\n   * A {@link https://developer.twitter.com/en/docs/twitter-ids Twitter snowflake},\n   * except the epoch is 2015-01-01T00:00:00.000Z.\n   *\n   * If we have a snowflake '266241948824764416' we can represent it as binary:\n   * ```\n   * 64                                          22     17     12          0\n   *  000000111011000111100001101001000101000000  00001  00000  000000000000\n   *       number of ms since Discord epoch       worker  pid    increment\n   * ```\n   * @typedef {string} Snowflake\n   */\n\n  /**\n   * Generates a Discord snowflake.\n   * <info>This hardcodes the worker's id as 1 and the process's id as 0.</info>\n   * @param {number|Date} [timestamp=Date.now()] Timestamp or date of the snowflake to generate\n   * @returns {Snowflake} The generated snowflake\n   */\n  static generate(timestamp = Date.now()) {\n    if (timestamp instanceof Date) timestamp = timestamp.getTime();\n    if (typeof timestamp !== 'number' || isNaN(timestamp)) {\n      throw new TypeError(\n        `\"timestamp\" argument must be a number (received ${isNaN(timestamp) ? 'NaN' : typeof timestamp})`,\n      );\n    }\n    if (INCREMENT >= 4095) INCREMENT = 0;\n    const BINARY = `${(timestamp - EPOCH).toString(2).padStart(42, '0')}0000100000${(INCREMENT++)\n      .toString(2)\n      .padStart(12, '0')}`;\n    return Util.binaryToId(BINARY);\n  }\n\n  /**\n   * A deconstructed snowflake.\n   * @typedef {Object} DeconstructedSnowflake\n   * @property {number} timestamp Timestamp the snowflake was created\n   * @property {Date} date Date the snowflake was created\n   * @property {number} workerId The worker's id in the snowflake\n   * @property {number} processId The process's id in the snowflake\n   * @property {number} increment Increment in the snowflake\n   * @property {string} binary Binary representation of the snowflake\n   */\n\n  /**\n   * Deconstructs a Discord snowflake.\n   * @param {Snowflake} snowflake Snowflake to deconstruct\n   * @returns {DeconstructedSnowflake}\n   */\n  static deconstruct(snowflake) {\n    const BINARY = Util.idToBinary(snowflake).toString(2).padStart(64, '0');\n    return {\n      timestamp: parseInt(BINARY.substring(0, 42), 2) + EPOCH,\n      get date() {\n        return new Date(this.timestamp);\n      },\n      workerId: parseInt(BINARY.substring(42, 47), 2),\n      processId: parseInt(BINARY.substring(47, 52), 2),\n      increment: parseInt(BINARY.substring(52, 64), 2),\n      binary: BINARY,\n    };\n  }\n\n  /**\n   * Discord's epoch value (2015-01-01T00:00:00.000Z).\n   * @type {number}\n   * @readonly\n   */\n  static get EPOCH() {\n    return EPOCH;\n  }\n}\n\nmodule.exports = SnowflakeUtil;\n","'use strict';\n\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link Guild#systemChannelFlags} bitfield.\n * <info>Note that all event message types are enabled by default,\n * and by setting their corresponding flags you are disabling them</info>\n * @extends {BitField}\n */\nclass SystemChannelFlags extends BitField {}\n\n/**\n * @name SystemChannelFlags\n * @kind constructor\n * @memberof SystemChannelFlags\n * @param {SystemChannelFlagsResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name SystemChannelFlags#bitfield\n */\n\n/**\n * Data that can be resolved to give a sytem channel flag bitfield. This can be:\n * * A string (see {@link SystemChannelFlags.FLAGS})\n * * A sytem channel flag\n * * An instance of SystemChannelFlags\n * * An Array of SystemChannelFlagsResolvable\n * @typedef {string|number|SystemChannelFlags|SystemChannelFlagsResolvable[]} SystemChannelFlagsResolvable\n */\n\n/**\n * Numeric system channel flags. All available properties:\n * * `SUPPRESS_JOIN_NOTIFICATIONS` (Suppress member join notifications)\n * * `SUPPRESS_PREMIUM_SUBSCRIPTIONS` (Suppress server boost notifications)\n * * `SUPPRESS_GUILD_REMINDER_NOTIFICATIONS` (Suppress server setup tips)\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags}\n */\nSystemChannelFlags.FLAGS = {\n  SUPPRESS_JOIN_NOTIFICATIONS: 1 << 0,\n  SUPPRESS_PREMIUM_SUBSCRIPTIONS: 1 << 1,\n  SUPPRESS_GUILD_REMINDER_NOTIFICATIONS: 1 << 2,\n};\n\nmodule.exports = SystemChannelFlags;\n","'use strict';\n\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link ThreadMember#flags} bitfield.\n * @extends {BitField}\n */\nclass ThreadMemberFlags extends BitField {}\n\n/**\n * @name ThreadMemberFlags\n * @kind constructor\n * @memberof ThreadMemberFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name ThreadMemberFlags#bitfield\n */\n\n/**\n * Numeric thread member flags. There are currently no bitflags relevant to bots for this.\n * @type {Object<string, number>}\n */\nThreadMemberFlags.FLAGS = {};\n\nmodule.exports = ThreadMemberFlags;\n","'use strict';\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link User#flags} bitfield.\n * @extends {BitField}\n */\nclass UserFlags extends BitField {}\n\n/**\n * @name UserFlags\n * @kind constructor\n * @memberof UserFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name UserFlags#bitfield\n */\n\n/**\n * Numeric user flags. All available properties:\n * * `DISCORD_EMPLOYEE`\n * * `PARTNERED_SERVER_OWNER`\n * * `HYPESQUAD_EVENTS`\n * * `BUGHUNTER_LEVEL_1`\n * * `HOUSE_BRAVERY`\n * * `HOUSE_BRILLIANCE`\n * * `HOUSE_BALANCE`\n * * `EARLY_SUPPORTER`\n * * `TEAM_USER`\n * * `BUGHUNTER_LEVEL_2`\n * * `VERIFIED_BOT`\n * * `EARLY_VERIFIED_BOT_DEVELOPER`\n * * `DISCORD_CERTIFIED_MODERATOR`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/user#user-object-user-flags}\n */\nUserFlags.FLAGS = {\n  DISCORD_EMPLOYEE: 1 << 0,\n  PARTNERED_SERVER_OWNER: 1 << 1,\n  HYPESQUAD_EVENTS: 1 << 2,\n  BUGHUNTER_LEVEL_1: 1 << 3,\n  HOUSE_BRAVERY: 1 << 6,\n  HOUSE_BRILLIANCE: 1 << 7,\n  HOUSE_BALANCE: 1 << 8,\n  EARLY_SUPPORTER: 1 << 9,\n  TEAM_USER: 1 << 10,\n  BUGHUNTER_LEVEL_2: 1 << 14,\n  VERIFIED_BOT: 1 << 16,\n  EARLY_VERIFIED_BOT_DEVELOPER: 1 << 17,\n  DISCORD_CERTIFIED_MODERATOR: 1 << 18,\n};\n\nmodule.exports = UserFlags;\n","'use strict';\n\nconst { parse } = require('path');\nconst { Collection } = require('@discordjs/collection');\nconst fetch = require('node-fetch');\nconst { Colors, Endpoints } = require('./Constants');\nconst Options = require('./Options');\nconst { Error: DiscordError, RangeError, TypeError } = require('../errors');\nconst has = (o, k) => Object.prototype.hasOwnProperty.call(o, k);\nconst isObject = d => typeof d === 'object' && d !== null;\n\n/**\n * Contains various general-purpose utility methods.\n */\nclass Util extends null {\n  /**\n   * Flatten an object. Any properties that are collections will get converted to an array of keys.\n   * @param {Object} obj The object to flatten.\n   * @param {...Object<string, boolean|string>} [props] Specific properties to include/exclude.\n   * @returns {Object}\n   */\n  static flatten(obj, ...props) {\n    if (!isObject(obj)) return obj;\n\n    const objProps = Object.keys(obj)\n      .filter(k => !k.startsWith('_'))\n      .map(k => ({ [k]: true }));\n\n    props = objProps.length ? Object.assign(...objProps, ...props) : Object.assign({}, ...props);\n\n    const out = {};\n\n    for (let [prop, newProp] of Object.entries(props)) {\n      if (!newProp) continue;\n      newProp = newProp === true ? prop : newProp;\n\n      const element = obj[prop];\n      const elemIsObj = isObject(element);\n      const valueOf = elemIsObj && typeof element.valueOf === 'function' ? element.valueOf() : null;\n\n      // If it's a Collection, make the array of keys\n      if (element instanceof Collection) out[newProp] = Array.from(element.keys());\n      // If the valueOf is a Collection, use its array of keys\n      else if (valueOf instanceof Collection) out[newProp] = Array.from(valueOf.keys());\n      // If it's an array, flatten each element\n      else if (Array.isArray(element)) out[newProp] = element.map(e => Util.flatten(e));\n      // If it's an object with a primitive `valueOf`, use that value\n      else if (typeof valueOf !== 'object') out[newProp] = valueOf;\n      // If it's a primitive\n      else if (!elemIsObj) out[newProp] = element;\n    }\n\n    return out;\n  }\n\n  /**\n   * Options for splitting a message.\n   * @typedef {Object} SplitOptions\n   * @property {number} [maxLength=2000] Maximum character length per message piece\n   * @property {string|string[]|RegExp|RegExp[]} [char='\\n'] Character(s) or Regex(s) to split the message with,\n   * an array can be used to split multiple times\n   * @property {string} [prepend=''] Text to prepend to every piece except the first\n   * @property {string} [append=''] Text to append to every piece except the last\n   */\n\n  /**\n   * Splits a string into multiple chunks at a designated character that do not exceed a specific length.\n   * @param {string} text Content to split\n   * @param {SplitOptions} [options] Options controlling the behavior of the split\n   * @returns {string[]}\n   */\n  static splitMessage(text, { maxLength = 2000, char = '\\n', prepend = '', append = '' } = {}) {\n    text = Util.verifyString(text, RangeError, 'MESSAGE_CONTENT_TYPE', false);\n    if (text.length <= maxLength) return [text];\n    let splitText = [text];\n    if (Array.isArray(char)) {\n      while (char.length > 0 && splitText.some(elem => elem.length > maxLength)) {\n        const currentChar = char.shift();\n        if (currentChar instanceof RegExp) {\n          splitText = splitText.flatMap(chunk => chunk.match(currentChar));\n        } else {\n          splitText = splitText.flatMap(chunk => chunk.split(currentChar));\n        }\n      }\n    } else {\n      splitText = text.split(char);\n    }\n    if (splitText.some(elem => elem.length > maxLength)) throw new RangeError('SPLIT_MAX_LEN');\n    const messages = [];\n    let msg = '';\n    for (const chunk of splitText) {\n      if (msg && (msg + char + chunk + append).length > maxLength) {\n        messages.push(msg + append);\n        msg = prepend;\n      }\n      msg += (msg && msg !== prepend ? char : '') + chunk;\n    }\n    return messages.concat(msg).filter(m => m);\n  }\n\n  /**\n   * Options used to escape markdown.\n   * @typedef {Object} EscapeMarkdownOptions\n   * @property {boolean} [codeBlock=true] Whether to escape code blocks or not\n   * @property {boolean} [inlineCode=true] Whether to escape inline code or not\n   * @property {boolean} [bold=true] Whether to escape bolds or not\n   * @property {boolean} [italic=true] Whether to escape italics or not\n   * @property {boolean} [underline=true] Whether to escape underlines or not\n   * @property {boolean} [strikethrough=true] Whether to escape strikethroughs or not\n   * @property {boolean} [spoiler=true] Whether to escape spoilers or not\n   * @property {boolean} [codeBlockContent=true] Whether to escape text inside code blocks or not\n   * @property {boolean} [inlineCodeContent=true] Whether to escape text inside inline code or not\n   */\n\n  /**\n   * Escapes any Discord-flavour markdown in a string.\n   * @param {string} text Content to escape\n   * @param {EscapeMarkdownOptions} [options={}] Options for escaping the markdown\n   * @returns {string}\n   */\n  static escapeMarkdown(\n    text,\n    {\n      codeBlock = true,\n      inlineCode = true,\n      bold = true,\n      italic = true,\n      underline = true,\n      strikethrough = true,\n      spoiler = true,\n      codeBlockContent = true,\n      inlineCodeContent = true,\n    } = {},\n  ) {\n    if (!codeBlockContent) {\n      return text\n        .split('```')\n        .map((subString, index, array) => {\n          if (index % 2 && index !== array.length - 1) return subString;\n          return Util.escapeMarkdown(subString, {\n            inlineCode,\n            bold,\n            italic,\n            underline,\n            strikethrough,\n            spoiler,\n            inlineCodeContent,\n          });\n        })\n        .join(codeBlock ? '\\\\`\\\\`\\\\`' : '```');\n    }\n    if (!inlineCodeContent) {\n      return text\n        .split(/(?<=^|[^`])`(?=[^`]|$)/g)\n        .map((subString, index, array) => {\n          if (index % 2 && index !== array.length - 1) return subString;\n          return Util.escapeMarkdown(subString, {\n            codeBlock,\n            bold,\n            italic,\n            underline,\n            strikethrough,\n            spoiler,\n          });\n        })\n        .join(inlineCode ? '\\\\`' : '`');\n    }\n    if (inlineCode) text = Util.escapeInlineCode(text);\n    if (codeBlock) text = Util.escapeCodeBlock(text);\n    if (italic) text = Util.escapeItalic(text);\n    if (bold) text = Util.escapeBold(text);\n    if (underline) text = Util.escapeUnderline(text);\n    if (strikethrough) text = Util.escapeStrikethrough(text);\n    if (spoiler) text = Util.escapeSpoiler(text);\n    return text;\n  }\n\n  /**\n   * Escapes code block markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeCodeBlock(text) {\n    return text.replace(/```/g, '\\\\`\\\\`\\\\`');\n  }\n\n  /**\n   * Escapes inline code markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeInlineCode(text) {\n    return text.replace(/(?<=^|[^`])`(?=[^`]|$)/g, '\\\\`');\n  }\n\n  /**\n   * Escapes italic markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeItalic(text) {\n    let i = 0;\n    text = text.replace(/(?<=^|[^*])\\*([^*]|\\*\\*|$)/g, (_, match) => {\n      if (match === '**') return ++i % 2 ? `\\\\*${match}` : `${match}\\\\*`;\n      return `\\\\*${match}`;\n    });\n    i = 0;\n    return text.replace(/(?<=^|[^_])_([^_]|__|$)/g, (_, match) => {\n      if (match === '__') return ++i % 2 ? `\\\\_${match}` : `${match}\\\\_`;\n      return `\\\\_${match}`;\n    });\n  }\n\n  /**\n   * Escapes bold markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeBold(text) {\n    let i = 0;\n    return text.replace(/\\*\\*(\\*)?/g, (_, match) => {\n      if (match) return ++i % 2 ? `${match}\\\\*\\\\*` : `\\\\*\\\\*${match}`;\n      return '\\\\*\\\\*';\n    });\n  }\n\n  /**\n   * Escapes underline markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeUnderline(text) {\n    let i = 0;\n    return text.replace(/__(_)?/g, (_, match) => {\n      if (match) return ++i % 2 ? `${match}\\\\_\\\\_` : `\\\\_\\\\_${match}`;\n      return '\\\\_\\\\_';\n    });\n  }\n\n  /**\n   * Escapes strikethrough markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeStrikethrough(text) {\n    return text.replace(/~~/g, '\\\\~\\\\~');\n  }\n\n  /**\n   * Escapes spoiler markdown in a string.\n   * @param {string} text Content to escape\n   * @returns {string}\n   */\n  static escapeSpoiler(text) {\n    return text.replace(/\\|\\|/g, '\\\\|\\\\|');\n  }\n\n  /**\n   * @typedef {Object} FetchRecommendedShardsOptions\n   * @property {number} [guildsPerShard=1000] Number of guilds assigned per shard\n   * @property {number} [multipleOf=1] The multiple the shard count should round up to. (16 for large bot sharding)\n   */\n\n  /**\n   * Gets the recommended shard count from Discord.\n   * @param {string} token Discord auth token\n   * @param {FetchRecommendedShardsOptions} [options] Options for fetching the recommended shard count\n   * @returns {Promise<number>} The recommended number of shards\n   */\n  static async fetchRecommendedShards(token, { guildsPerShard = 1000, multipleOf = 1 } = {}) {\n    if (!token) throw new DiscordError('TOKEN_MISSING');\n    const defaults = Options.createDefault();\n    const response = await fetch(`${defaults.http.api}/v${defaults.http.version}${Endpoints.botGateway}`, {\n      method: 'GET',\n      headers: { Authorization: `Bot ${token.replace(/^Bot\\s*/i, '')}` },\n    });\n    if (!response.ok) {\n      if (response.status === 401) throw new DiscordError('TOKEN_INVALID');\n      throw response;\n    }\n    const { shards } = await response.json();\n    return Math.ceil((shards * (1000 / guildsPerShard)) / multipleOf) * multipleOf;\n  }\n\n  /**\n   * Parses emoji info out of a string. The string must be one of:\n   * * A UTF-8 emoji (no id)\n   * * A URL-encoded UTF-8 emoji (no id)\n   * * A Discord custom emoji (`<:name:id>` or `<a:name:id>`)\n   * @param {string} text Emoji string to parse\n   * @returns {APIEmoji} Object with `animated`, `name`, and `id` properties\n   * @private\n   */\n  static parseEmoji(text) {\n    if (text.includes('%')) text = decodeURIComponent(text);\n    if (!text.includes(':')) return { animated: false, name: text, id: null };\n    const match = text.match(/<?(?:(a):)?(\\w{2,32}):(\\d{17,19})?>?/);\n    return match && { animated: Boolean(match[1]), name: match[2], id: match[3] ?? null };\n  }\n\n  /**\n   * Resolves a partial emoji object from an {@link EmojiIdentifierResolvable}, without checking a Client.\n   * @param {EmojiIdentifierResolvable} emoji Emoji identifier to resolve\n   * @returns {?RawEmoji}\n   * @private\n   */\n  static resolvePartialEmoji(emoji) {\n    if (!emoji) return null;\n    if (typeof emoji === 'string') return /^\\d{17,19}$/.test(emoji) ? { id: emoji } : Util.parseEmoji(emoji);\n    const { id, name, animated } = emoji;\n    if (!id && !name) return null;\n    return { id, name, animated };\n  }\n\n  /**\n   * Shallow-copies an object with its class/prototype intact.\n   * @param {Object} obj Object to clone\n   * @returns {Object}\n   * @private\n   */\n  static cloneObject(obj) {\n    return Object.assign(Object.create(obj), obj);\n  }\n\n  /**\n   * Sets default properties on an object that aren't already specified.\n   * @param {Object} def Default properties\n   * @param {Object} given Object to assign defaults to\n   * @returns {Object}\n   * @private\n   */\n  static mergeDefault(def, given) {\n    if (!given) return def;\n    for (const key in def) {\n      if (!has(given, key) || given[key] === undefined) {\n        given[key] = def[key];\n      } else if (given[key] === Object(given[key])) {\n        given[key] = Util.mergeDefault(def[key], given[key]);\n      }\n    }\n\n    return given;\n  }\n\n  /**\n   * Options used to make an error object.\n   * @typedef {Object} MakeErrorOptions\n   * @property {string} name Error type\n   * @property {string} message Message for the error\n   * @property {string} stack Stack for the error\n   */\n\n  /**\n   * Makes an Error from a plain info object.\n   * @param {MakeErrorOptions} obj Error info\n   * @returns {Error}\n   * @private\n   */\n  static makeError(obj) {\n    const err = new Error(obj.message);\n    err.name = obj.name;\n    err.stack = obj.stack;\n    return err;\n  }\n\n  /**\n   * Makes a plain error info object from an Error.\n   * @param {Error} err Error to get info from\n   * @returns {MakeErrorOptions}\n   * @private\n   */\n  static makePlainError(err) {\n    return {\n      name: err.name,\n      message: err.message,\n      stack: err.stack,\n    };\n  }\n\n  /**\n   * Moves an element in an array *in place*.\n   * @param {Array<*>} array Array to modify\n   * @param {*} element Element to move\n   * @param {number} newIndex Index or offset to move the element to\n   * @param {boolean} [offset=false] Move the element by an offset amount rather than to a set index\n   * @returns {number}\n   * @private\n   */\n  static moveElementInArray(array, element, newIndex, offset = false) {\n    const index = array.indexOf(element);\n    newIndex = (offset ? index : 0) + newIndex;\n    if (newIndex > -1 && newIndex < array.length) {\n      const removedElement = array.splice(index, 1)[0];\n      array.splice(newIndex, 0, removedElement);\n    }\n    return array.indexOf(element);\n  }\n\n  /**\n   * Verifies the provided data is a string, otherwise throws provided error.\n   * @param {string} data The string resolvable to resolve\n   * @param {Function} [error] The Error constructor to instantiate. Defaults to Error\n   * @param {string} [errorMessage] The error message to throw with. Defaults to \"Expected string, got <data> instead.\"\n   * @param {boolean} [allowEmpty=true] Whether an empty string should be allowed\n   * @returns {string}\n   */\n  static verifyString(\n    data,\n    error = Error,\n    errorMessage = `Expected a string, got ${data} instead.`,\n    allowEmpty = true,\n  ) {\n    if (typeof data !== 'string') throw new error(errorMessage);\n    if (!allowEmpty && data.length === 0) throw new error(errorMessage);\n    return data;\n  }\n\n  /**\n   * Can be a number, hex string, an RGB array like:\n   * ```js\n   * [255, 0, 255] // purple\n   * ```\n   * or one of the following strings:\n   * - `DEFAULT`\n   * - `WHITE`\n   * - `AQUA`\n   * - `GREEN`\n   * - `BLUE`\n   * - `YELLOW`\n   * - `PURPLE`\n   * - `LUMINOUS_VIVID_PINK`\n   * - `FUCHSIA`\n   * - `GOLD`\n   * - `ORANGE`\n   * - `RED`\n   * - `GREY`\n   * - `NAVY`\n   * - `DARK_AQUA`\n   * - `DARK_GREEN`\n   * - `DARK_BLUE`\n   * - `DARK_PURPLE`\n   * - `DARK_VIVID_PINK`\n   * - `DARK_GOLD`\n   * - `DARK_ORANGE`\n   * - `DARK_RED`\n   * - `DARK_GREY`\n   * - `DARKER_GREY`\n   * - `LIGHT_GREY`\n   * - `DARK_NAVY`\n   * - `BLURPLE`\n   * - `GREYPLE`\n   * - `DARK_BUT_NOT_BLACK`\n   * - `NOT_QUITE_BLACK`\n   * - `RANDOM`\n   * @typedef {string|number|number[]} ColorResolvable\n   */\n\n  /**\n   * Resolves a ColorResolvable into a color number.\n   * @param {ColorResolvable} color Color to resolve\n   * @returns {number} A color\n   */\n  static resolveColor(color) {\n    if (typeof color === 'string') {\n      if (color === 'RANDOM') return Math.floor(Math.random() * (0xffffff + 1));\n      if (color === 'DEFAULT') return 0;\n      color = Colors[color] ?? parseInt(color.replace('#', ''), 16);\n    } else if (Array.isArray(color)) {\n      color = (color[0] << 16) + (color[1] << 8) + color[2];\n    }\n\n    if (color < 0 || color > 0xffffff) throw new RangeError('COLOR_RANGE');\n    else if (Number.isNaN(color)) throw new TypeError('COLOR_CONVERT');\n\n    return color;\n  }\n\n  /**\n   * Sorts by Discord's position and id.\n   * @param  {Collection} collection Collection of objects to sort\n   * @returns {Collection}\n   */\n  static discordSort(collection) {\n    return collection.sorted(\n      (a, b) =>\n        a.rawPosition - b.rawPosition ||\n        parseInt(b.id.slice(0, -10)) - parseInt(a.id.slice(0, -10)) ||\n        parseInt(b.id.slice(10)) - parseInt(a.id.slice(10)),\n    );\n  }\n\n  /**\n   * Sets the position of a Channel or Role.\n   * @param {Channel|Role} item Object to set the position of\n   * @param {number} position New position for the object\n   * @param {boolean} relative Whether `position` is relative to its current position\n   * @param {Collection<string, Channel|Role>} sorted A collection of the objects sorted properly\n   * @param {APIRouter} route Route to call PATCH on\n   * @param {string} [reason] Reason for the change\n   * @returns {Promise<Channel[]|Role[]>} Updated item list, with `id` and `position` properties\n   * @private\n   */\n  static async setPosition(item, position, relative, sorted, route, reason) {\n    let updatedItems = [...sorted.values()];\n    Util.moveElementInArray(updatedItems, item, position, relative);\n    updatedItems = updatedItems.map((r, i) => ({ id: r.id, position: i }));\n    await route.patch({ data: updatedItems, reason });\n    return updatedItems;\n  }\n\n  /**\n   * Alternative to Node's `path.basename`, removing query string after the extension if it exists.\n   * @param {string} path Path to get the basename of\n   * @param {string} [ext] File extension to remove\n   * @returns {string} Basename of the path\n   * @private\n   */\n  static basename(path, ext) {\n    const res = parse(path);\n    return ext && res.ext.startsWith(ext) ? res.name : res.base.split('?')[0];\n  }\n\n  /**\n   * Transforms a snowflake from a decimal string to a bit string.\n   * @param  {Snowflake} num Snowflake to be transformed\n   * @returns {string}\n   * @private\n   */\n  static idToBinary(num) {\n    let bin = '';\n    let high = parseInt(num.slice(0, -10)) || 0;\n    let low = parseInt(num.slice(-10));\n    while (low > 0 || high > 0) {\n      bin = String(low & 1) + bin;\n      low = Math.floor(low / 2);\n      if (high > 0) {\n        low += 5000000000 * (high % 2);\n        high = Math.floor(high / 2);\n      }\n    }\n    return bin;\n  }\n\n  /**\n   * Transforms a snowflake from a bit string to a decimal string.\n   * @param  {string} num Bit string to be transformed\n   * @returns {Snowflake}\n   * @private\n   */\n  static binaryToId(num) {\n    let dec = '';\n\n    while (num.length > 50) {\n      const high = parseInt(num.slice(0, -32), 2);\n      const low = parseInt((high % 10).toString(2) + num.slice(-32), 2);\n\n      dec = (low % 10).toString() + dec;\n      num =\n        Math.floor(high / 10).toString(2) +\n        Math.floor(low / 10)\n          .toString(2)\n          .padStart(32, '0');\n    }\n\n    num = parseInt(num, 2);\n    while (num > 0) {\n      dec = (num % 10).toString() + dec;\n      num = Math.floor(num / 10);\n    }\n\n    return dec;\n  }\n\n  /**\n   * Breaks user, role and everyone/here mentions by adding a zero width space after every @ character\n   * @param {string} str The string to sanitize\n   * @returns {string}\n   */\n  static removeMentions(str) {\n    return str.replace(/@/g, '@\\u200b');\n  }\n\n  /**\n   * The content to have all mentions replaced by the equivalent text.\n   * @param {string} str The string to be converted\n   * @param {Channel} channel The channel the string was sent in\n   * @returns {string}\n   */\n  static cleanContent(str, channel) {\n    str = str\n      .replace(/<@!?[0-9]+>/g, input => {\n        const id = input.replace(/<|!|>|@/g, '');\n        if (channel.type === 'DM') {\n          const user = channel.client.users.cache.get(id);\n          return user ? Util.removeMentions(`@${user.username}`) : input;\n        }\n\n        const member = channel.guild.members.cache.get(id);\n        if (member) {\n          return Util.removeMentions(`@${member.displayName}`);\n        } else {\n          const user = channel.client.users.cache.get(id);\n          return user ? Util.removeMentions(`@${user.username}`) : input;\n        }\n      })\n      .replace(/<#[0-9]+>/g, input => {\n        const mentionedChannel = channel.client.channels.cache.get(input.replace(/<|#|>/g, ''));\n        return mentionedChannel ? `#${mentionedChannel.name}` : input;\n      })\n      .replace(/<@&[0-9]+>/g, input => {\n        if (channel.type === 'DM') return input;\n        const role = channel.guild.roles.cache.get(input.replace(/<|@|>|&/g, ''));\n        return role ? `@${role.name}` : input;\n      });\n    return str;\n  }\n\n  /**\n   * The content to put in a codeblock with all codeblock fences replaced by the equivalent backticks.\n   * @param {string} text The string to be converted\n   * @returns {string}\n   */\n  static cleanCodeBlockContent(text) {\n    return text.replace(/```/g, '`\\u200b``');\n  }\n\n  /**\n   * Creates a Promise that resolves after a specified duration.\n   * @param {number} ms How long to wait before resolving (in milliseconds)\n   * @returns {Promise<void>}\n   * @private\n   */\n  static delayFor(ms) {\n    return new Promise(resolve => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  /**\n   * Creates a sweep filter that sweeps archived threads\n   * @param {number} [lifetime=14400] How long a thread has to be archived to be valid for sweeping\n   * @returns {SweepFilter}\n   */\n  static archivedThreadSweepFilter(lifetime = 14400) {\n    const filter = require('./LimitedCollection').filterByLifetime({\n      lifetime,\n      getComparisonTimestamp: e => e.archiveTimestamp,\n      excludeFromSweep: e => !e.archived,\n    });\n    filter.isDefault = true;\n    return filter;\n  }\n}\n\nmodule.exports = Util;\n","'use strict';\nconst isObj = require('is-obj');\n\nconst disallowedKeys = new Set([\n\t'__proto__',\n\t'prototype',\n\t'constructor'\n]);\n\nconst isValidPath = pathSegments => !pathSegments.some(segment => disallowedKeys.has(segment));\n\nfunction getPathSegments(path) {\n\tconst pathArray = path.split('.');\n\tconst parts = [];\n\n\tfor (let i = 0; i < pathArray.length; i++) {\n\t\tlet p = pathArray[i];\n\n\t\twhile (p[p.length - 1] === '\\\\' && pathArray[i + 1] !== undefined) {\n\t\t\tp = p.slice(0, -1) + '.';\n\t\t\tp += pathArray[++i];\n\t\t}\n\n\t\tparts.push(p);\n\t}\n\n\tif (!isValidPath(parts)) {\n\t\treturn [];\n\t}\n\n\treturn parts;\n}\n\nmodule.exports = {\n\tget(object, path, value) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn value === undefined ? object : value;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\t\tif (pathArray.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tobject = object[pathArray[i]];\n\n\t\t\tif (object === undefined || object === null) {\n\t\t\t\t// `object` is either `undefined` or `null` so we want to stop the loop, and\n\t\t\t\t// if this is not the last bit of the path, and\n\t\t\t\t// if it did't return `undefined`\n\t\t\t\t// it would return `null` if `object` is `null`\n\t\t\t\t// but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n\t\t\t\tif (i !== pathArray.length - 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn object === undefined ? value : object;\n\t},\n\n\tset(object, path, value) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn object;\n\t\t}\n\n\t\tconst root = object;\n\t\tconst pathArray = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tconst p = pathArray[i];\n\n\t\t\tif (!isObj(object[p])) {\n\t\t\t\tobject[p] = {};\n\t\t\t}\n\n\t\t\tif (i === pathArray.length - 1) {\n\t\t\t\tobject[p] = value;\n\t\t\t}\n\n\t\t\tobject = object[p];\n\t\t}\n\n\t\treturn root;\n\t},\n\n\tdelete(object, path) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tconst p = pathArray[i];\n\n\t\t\tif (i === pathArray.length - 1) {\n\t\t\t\tdelete object[p];\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tobject = object[p];\n\n\t\t\tif (!isObj(object)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\thas(object, path) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\t\tif (pathArray.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// eslint-disable-next-line unicorn/no-for-loop\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tif (isObj(object)) {\n\t\t\t\tif (!(pathArray[i] in object)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tobject = object[pathArray[i]];\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n};\n","var debug;\n\nmodule.exports = function () {\n  if (!debug) {\n    try {\n      /* eslint global-require: off */\n      debug = require(\"debug\")(\"follow-redirects\");\n    }\n    catch (error) { /* */ }\n    if (typeof debug !== \"function\") {\n      debug = function () { /* */ };\n    }\n  }\n  debug.apply(null, arguments);\n};\n","var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\"\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  abortRequest(this._currentRequest);\n  this.emit(\"abort\");\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.once(\"response\", clearTimer);\n  this.once(\"error\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new TypeError(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.substr(0, protocol.length - 1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var e = 0; e < events.length; e++) {\n    request.on(events[e], eventHandlers[events[e]]);\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n  var location = response.headers.location;\n  if (location && this._options.followRedirects !== false &&\n      statusCode >= 300 && statusCode < 400) {\n    // Abort the current request\n    abortRequest(this._currentRequest);\n    // Discard the remainder of the response to avoid waiting for data\n    response.destroy();\n\n    // RFC7231§6.4: A client SHOULD detect and intervene\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\n    if (++this._redirectCount > this._options.maxRedirects) {\n      this.emit(\"error\", new TooManyRedirectsError());\n      return;\n    }\n\n    // RFC7231§6.4: Automatic redirection needs to done with\n    // care for methods not known to be safe, […]\n    // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n    // the request method from POST to GET for the subsequent request.\n    if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n        // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n        // the server is redirecting the user agent to a different resource […]\n        // A user agent can perform a retrieval request targeting that URI\n        // (a GET or HEAD request if using HTTP) […]\n        (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n      this._options.method = \"GET\";\n      // Drop a possible entity and headers related to it\n      this._requestBodyBuffers = [];\n      removeMatchingHeaders(/^content-/i, this._options.headers);\n    }\n\n    // Drop the Host header, as the redirect might lead to a different host\n    var previousHostName = removeMatchingHeaders(/^host$/i, this._options.headers) ||\n      url.parse(this._currentUrl).hostname;\n\n    // Create the redirected request\n    var redirectUrl = url.resolve(this._currentUrl, location);\n    debug(\"redirecting to\", redirectUrl);\n    this._isRedirect = true;\n    var redirectUrlParts = url.parse(redirectUrl);\n    Object.assign(this._options, redirectUrlParts);\n\n    // Drop the Authorization header if redirecting to another host\n    if (redirectUrlParts.hostname !== previousHostName) {\n      removeMatchingHeaders(/^authorization$/i, this._options.headers);\n    }\n\n    // Evaluate the beforeRedirect callback\n    if (typeof this._options.beforeRedirect === \"function\") {\n      var responseDetails = { headers: response.headers };\n      try {\n        this._options.beforeRedirect.call(null, this._options, responseDetails);\n      }\n      catch (err) {\n        this.emit(\"error\", err);\n        return;\n      }\n      this._sanitizeOptions(this._options);\n    }\n\n    // Perform the redirected request\n    try {\n      this._performRequest();\n    }\n    catch (cause) {\n      var error = new RedirectionError(\"Redirected request failed: \" + cause.message);\n      error.cause = cause;\n      this.emit(\"error\", error);\n    }\n  }\n  else {\n    // The response is not a redirect; return it as-is\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters\n      if (typeof input === \"string\") {\n        var urlStr = input;\n        try {\n          input = urlToOptions(new URL(urlStr));\n        }\n        catch (err) {\n          /* istanbul ignore next */\n          input = url.parse(urlStr);\n        }\n      }\n      else if (URL && (input instanceof URL)) {\n        input = urlToOptions(input);\n      }\n      else {\n        callback = options;\n        options = input;\n        input = { protocol: protocol };\n      }\n      if (typeof options === \"function\") {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\n/* istanbul ignore next */\nfunction noop() { /* empty */ }\n\n// from https://github.com/nodejs/node/blob/master/lib/internal/url.js\nfunction urlToOptions(urlObject) {\n  var options = {\n    protocol: urlObject.protocol,\n    hostname: urlObject.hostname.startsWith(\"[\") ?\n      /* istanbul ignore next */\n      urlObject.hostname.slice(1, -1) :\n      urlObject.hostname,\n    hash: urlObject.hash,\n    search: urlObject.search,\n    pathname: urlObject.pathname,\n    path: urlObject.pathname + urlObject.search,\n    href: urlObject.href,\n  };\n  if (urlObject.port !== \"\") {\n    options.port = Number(urlObject.port);\n  }\n  return options;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return lastValue;\n}\n\nfunction createErrorType(code, defaultMessage) {\n  function CustomError(message) {\n    Error.captureStackTrace(this, this.constructor);\n    this.message = message || defaultMessage;\n  }\n  CustomError.prototype = new Error();\n  CustomError.prototype.constructor = CustomError;\n  CustomError.prototype.name = \"Error [\" + code + \"]\";\n  CustomError.prototype.code = code;\n  return CustomError;\n}\n\nfunction abortRequest(request) {\n  for (var e = 0; e < events.length; e++) {\n    request.removeListener(events[e], eventHandlers[events[e]]);\n  }\n  request.on(\"error\", noop);\n  request.abort();\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar Stream = require('stream').Stream;\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response or not a stream\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) && !(value instanceof Stream))) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity –> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.setBoundary = function(boundary) {\n  this._boundary = boundary;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err && err !== 'Unknown stream') {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    if (length) {\n      request.setHeader('Content-Length', length);\n    }\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n","// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict';\n\nmodule.exports = value => {\n\tconst type = typeof value;\n\treturn value !== null && (type === 'object' || type === 'function');\n};\n","module.exports      = isTypedArray\nisTypedArray.strict = isStrictTypedArray\nisTypedArray.loose  = isLooseTypedArray\n\nvar toString = Object.prototype.toString\nvar names = {\n    '[object Int8Array]': true\n  , '[object Int16Array]': true\n  , '[object Int32Array]': true\n  , '[object Uint8Array]': true\n  , '[object Uint8ClampedArray]': true\n  , '[object Uint16Array]': true\n  , '[object Uint32Array]': true\n  , '[object Float32Array]': true\n  , '[object Float64Array]': true\n}\n\nfunction isTypedArray(arr) {\n  return (\n       isStrictTypedArray(arr)\n    || isLooseTypedArray(arr)\n  )\n}\n\nfunction isStrictTypedArray(arr) {\n  return (\n       arr instanceof Int8Array\n    || arr instanceof Int16Array\n    || arr instanceof Int32Array\n    || arr instanceof Uint8Array\n    || arr instanceof Uint8ClampedArray\n    || arr instanceof Uint16Array\n    || arr instanceof Uint32Array\n    || arr instanceof Float32Array\n    || arr instanceof Float64Array\n  )\n}\n\nfunction isLooseTypedArray(arr) {\n  return names[toString.call(arr)]\n}\n","'use strict';\n\nmodule.exports = () => {\n\tif (process.platform !== 'win32') {\n\t\treturn true;\n\t}\n\n\treturn Boolean(process.env.CI) ||\n\t\tBoolean(process.env.WT_SESSION) || // Windows Terminal\n\t\tprocess.env.TERM_PROGRAM === 'vscode' ||\n\t\tprocess.env.TERM === 'xterm-256color' ||\n\t\tprocess.env.TERM === 'alacritty';\n};\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","'use strict';\nconst chalk = require('chalk');\nconst isUnicodeSupported = require('is-unicode-supported');\n\nconst main = {\n\tinfo: chalk.blue('ℹ'),\n\tsuccess: chalk.green('✔'),\n\twarning: chalk.yellow('⚠'),\n\terror: chalk.red('✖')\n};\n\nconst fallback = {\n\tinfo: chalk.blue('i'),\n\tsuccess: chalk.green('√'),\n\twarning: chalk.yellow('‼'),\n\terror: chalk.red('×')\n};\n\nmodule.exports = isUnicodeSupported() ? main : fallback;\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar vars = (process.config && process.config.variables) || {}\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : 'node'\nvar arch = os.arch()\nvar platform = os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.path(dir))\n}\n\nload.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  var prebuild = resolve(dir)\n  if (prebuild) return prebuild\n\n  var nearby = resolve(path.dirname(process.execPath))\n  if (nearby) return nearby\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc,\n    'node=' + process.versions.node,\n    process.versions.electron ? 'electron=' + process.versions.electron : '',\n    typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\n\n  function resolve (dir) {\n    // Find matching \"prebuilds/<platform>-<arch>\" directory\n    var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple)\n    var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0]\n    if (!tuple) return\n\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', tuple.name)\n    var parsed = readdirSync(prebuilds).map(parseTags)\n    var candidates = parsed.filter(matchTags(runtime, abi))\n    var winner = candidates.sort(compareTags(runtime))[0]\n    if (winner) return path.join(prebuilds, winner.file)\n  }\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTuple (name) {\n  // Example: darwin-x64+arm64\n  var arr = name.split('-')\n  if (arr.length !== 2) return\n\n  var platform = arr[0]\n  var architectures = arr[1].split('+')\n\n  if (!platform) return\n  if (!architectures.length) return\n  if (!architectures.every(Boolean)) return\n\n  return { name, platform, architectures }\n}\n\nfunction matchTuple (platform, arch) {\n  return function (tuple) {\n    if (tuple == null) return false\n    if (tuple.platform !== platform) return false\n    return tuple.architectures.includes(arch)\n  }\n}\n\nfunction compareTuples (a, b) {\n  // Prefer single-arch prebuilds over multi-arch\n  return a.architectures.length - b.architectures.length\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\nload.parseTuple = parseTuple\nload.matchTuple = matchTuple\nload.compareTuples = compareTuples\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArgumentError = void 0;\nconst generate_stack_1 = require(\"./utils/generate-stack\");\nconst wrapStackTrace = (error, stack) => `${error.name}: ${error.message}\\n${stack}`;\n/**\n@hidden\n*/\nclass ArgumentError extends Error {\n    constructor(message, context, errors = new Map()) {\n        super(message);\n        Object.defineProperty(this, \"validationErrors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = 'ArgumentError';\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, context);\n        }\n        else {\n            this.stack = wrapStackTrace(this, generate_stack_1.generateStackTrace());\n        }\n        this.validationErrors = errors;\n    }\n}\nexports.ArgumentError = ArgumentError;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArgumentError = exports.Predicate = void 0;\nconst callsites_1 = require(\"callsites\");\nconst infer_label_1 = require(\"./utils/infer-label\");\nconst predicate_1 = require(\"./predicates/predicate\");\nObject.defineProperty(exports, \"Predicate\", { enumerable: true, get: function () { return predicate_1.Predicate; } });\nconst base_predicate_1 = require(\"./predicates/base-predicate\");\nconst modifiers_1 = require(\"./modifiers\");\nconst predicates_1 = require(\"./predicates\");\nconst test_1 = require(\"./test\");\nconst ow = (value, labelOrPredicate, predicate) => {\n    if (!base_predicate_1.isPredicate(labelOrPredicate) && typeof labelOrPredicate !== 'string') {\n        throw new TypeError(`Expected second argument to be a predicate or a string, got \\`${typeof labelOrPredicate}\\``);\n    }\n    if (base_predicate_1.isPredicate(labelOrPredicate)) {\n        // If the second argument is a predicate, infer the label\n        const stackFrames = callsites_1.default();\n        test_1.default(value, () => infer_label_1.inferLabel(stackFrames), labelOrPredicate);\n        return;\n    }\n    test_1.default(value, labelOrPredicate, predicate);\n};\nObject.defineProperties(ow, {\n    isValid: {\n        value: (value, predicate) => {\n            try {\n                test_1.default(value, '', predicate);\n                return true;\n            }\n            catch {\n                return false;\n            }\n        }\n    },\n    create: {\n        value: (labelOrPredicate, predicate) => (value, label) => {\n            if (base_predicate_1.isPredicate(labelOrPredicate)) {\n                const stackFrames = callsites_1.default();\n                test_1.default(value, label !== null && label !== void 0 ? label : (() => infer_label_1.inferLabel(stackFrames)), labelOrPredicate);\n                return;\n            }\n            test_1.default(value, label !== null && label !== void 0 ? label : (labelOrPredicate), predicate);\n        }\n    }\n});\n// Can't use `export default predicates(modifiers(ow)) as Ow` because the variable needs a type annotation to avoid a compiler error when used:\n// Assertions require every name in the call target to be declared with an explicit type annotation.ts(2775)\n// See https://github.com/microsoft/TypeScript/issues/36931 for more details.\nconst _ow = predicates_1.default(modifiers_1.default(ow));\nexports.default = _ow;\n__exportStar(require(\"./predicates\"), exports);\nvar argument_error_1 = require(\"./argument-error\");\nObject.defineProperty(exports, \"ArgumentError\", { enumerable: true, get: function () { return argument_error_1.ArgumentError; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicates_1 = require(\"./predicates\");\nexports.default = (object) => {\n    Object.defineProperties(object, {\n        optional: {\n            get: () => predicates_1.default({}, { optional: true })\n        }\n    });\n    return object;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.not = void 0;\nconst random_id_1 = require(\"../utils/random-id\");\nconst predicate_1 = require(\"../predicates/predicate\");\n/**\nOperator which inverts the following validation.\n\n@hidden\n\n@param predictate - Predicate to wrap inside the operator.\n*/\nconst not = (predicate) => {\n    const originalAddValidator = predicate.addValidator;\n    predicate.addValidator = (validator) => {\n        const { validator: fn, message, negatedMessage } = validator;\n        const placeholder = random_id_1.default();\n        validator.message = (value, label) => (negatedMessage ?\n            negatedMessage(value, label) :\n            message(value, placeholder).replace(/ to /, '$&not ').replace(placeholder, label));\n        validator.validator = (value) => !fn(value);\n        predicate[predicate_1.validatorSymbol].push(validator);\n        predicate.addValidator = originalAddValidator;\n        return predicate;\n    };\n    return predicate;\n};\nexports.not = not;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnyPredicate = exports.DataViewPredicate = exports.ArrayBufferPredicate = exports.TypedArrayPredicate = exports.WeakSetPredicate = exports.SetPredicate = exports.WeakMapPredicate = exports.MapPredicate = exports.ErrorPredicate = exports.DatePredicate = exports.ObjectPredicate = exports.ArrayPredicate = exports.BooleanPredicate = exports.BigIntPredicate = exports.NumberPredicate = exports.StringPredicate = void 0;\nconst string_1 = require(\"./predicates/string\");\nObject.defineProperty(exports, \"StringPredicate\", { enumerable: true, get: function () { return string_1.StringPredicate; } });\nconst number_1 = require(\"./predicates/number\");\nObject.defineProperty(exports, \"NumberPredicate\", { enumerable: true, get: function () { return number_1.NumberPredicate; } });\nconst bigint_1 = require(\"./predicates/bigint\");\nObject.defineProperty(exports, \"BigIntPredicate\", { enumerable: true, get: function () { return bigint_1.BigIntPredicate; } });\nconst boolean_1 = require(\"./predicates/boolean\");\nObject.defineProperty(exports, \"BooleanPredicate\", { enumerable: true, get: function () { return boolean_1.BooleanPredicate; } });\nconst predicate_1 = require(\"./predicates/predicate\");\nconst array_1 = require(\"./predicates/array\");\nObject.defineProperty(exports, \"ArrayPredicate\", { enumerable: true, get: function () { return array_1.ArrayPredicate; } });\nconst object_1 = require(\"./predicates/object\");\nObject.defineProperty(exports, \"ObjectPredicate\", { enumerable: true, get: function () { return object_1.ObjectPredicate; } });\nconst date_1 = require(\"./predicates/date\");\nObject.defineProperty(exports, \"DatePredicate\", { enumerable: true, get: function () { return date_1.DatePredicate; } });\nconst error_1 = require(\"./predicates/error\");\nObject.defineProperty(exports, \"ErrorPredicate\", { enumerable: true, get: function () { return error_1.ErrorPredicate; } });\nconst map_1 = require(\"./predicates/map\");\nObject.defineProperty(exports, \"MapPredicate\", { enumerable: true, get: function () { return map_1.MapPredicate; } });\nconst weak_map_1 = require(\"./predicates/weak-map\");\nObject.defineProperty(exports, \"WeakMapPredicate\", { enumerable: true, get: function () { return weak_map_1.WeakMapPredicate; } });\nconst set_1 = require(\"./predicates/set\");\nObject.defineProperty(exports, \"SetPredicate\", { enumerable: true, get: function () { return set_1.SetPredicate; } });\nconst weak_set_1 = require(\"./predicates/weak-set\");\nObject.defineProperty(exports, \"WeakSetPredicate\", { enumerable: true, get: function () { return weak_set_1.WeakSetPredicate; } });\nconst typed_array_1 = require(\"./predicates/typed-array\");\nObject.defineProperty(exports, \"TypedArrayPredicate\", { enumerable: true, get: function () { return typed_array_1.TypedArrayPredicate; } });\nconst array_buffer_1 = require(\"./predicates/array-buffer\");\nObject.defineProperty(exports, \"ArrayBufferPredicate\", { enumerable: true, get: function () { return array_buffer_1.ArrayBufferPredicate; } });\nconst data_view_1 = require(\"./predicates/data-view\");\nObject.defineProperty(exports, \"DataViewPredicate\", { enumerable: true, get: function () { return data_view_1.DataViewPredicate; } });\nconst any_1 = require(\"./predicates/any\");\nObject.defineProperty(exports, \"AnyPredicate\", { enumerable: true, get: function () { return any_1.AnyPredicate; } });\nexports.default = (object, options) => {\n    Object.defineProperties(object, {\n        string: {\n            get: () => new string_1.StringPredicate(options)\n        },\n        number: {\n            get: () => new number_1.NumberPredicate(options)\n        },\n        bigint: {\n            get: () => new bigint_1.BigIntPredicate(options)\n        },\n        boolean: {\n            get: () => new boolean_1.BooleanPredicate(options)\n        },\n        undefined: {\n            get: () => new predicate_1.Predicate('undefined', options)\n        },\n        null: {\n            get: () => new predicate_1.Predicate('null', options)\n        },\n        nullOrUndefined: {\n            get: () => new predicate_1.Predicate('nullOrUndefined', options)\n        },\n        nan: {\n            get: () => new predicate_1.Predicate('nan', options)\n        },\n        symbol: {\n            get: () => new predicate_1.Predicate('symbol', options)\n        },\n        array: {\n            get: () => new array_1.ArrayPredicate(options)\n        },\n        object: {\n            get: () => new object_1.ObjectPredicate(options)\n        },\n        date: {\n            get: () => new date_1.DatePredicate(options)\n        },\n        error: {\n            get: () => new error_1.ErrorPredicate(options)\n        },\n        map: {\n            get: () => new map_1.MapPredicate(options)\n        },\n        weakMap: {\n            get: () => new weak_map_1.WeakMapPredicate(options)\n        },\n        set: {\n            get: () => new set_1.SetPredicate(options)\n        },\n        weakSet: {\n            get: () => new weak_set_1.WeakSetPredicate(options)\n        },\n        function: {\n            get: () => new predicate_1.Predicate('Function', options)\n        },\n        buffer: {\n            get: () => new predicate_1.Predicate('Buffer', options)\n        },\n        regExp: {\n            get: () => new predicate_1.Predicate('RegExp', options)\n        },\n        promise: {\n            get: () => new predicate_1.Predicate('Promise', options)\n        },\n        typedArray: {\n            get: () => new typed_array_1.TypedArrayPredicate('TypedArray', options)\n        },\n        int8Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Int8Array', options)\n        },\n        uint8Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint8Array', options)\n        },\n        uint8ClampedArray: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint8ClampedArray', options)\n        },\n        int16Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Int16Array', options)\n        },\n        uint16Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint16Array', options)\n        },\n        int32Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Int32Array', options)\n        },\n        uint32Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint32Array', options)\n        },\n        float32Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Float32Array', options)\n        },\n        float64Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Float64Array', options)\n        },\n        arrayBuffer: {\n            get: () => new array_buffer_1.ArrayBufferPredicate('ArrayBuffer', options)\n        },\n        sharedArrayBuffer: {\n            get: () => new array_buffer_1.ArrayBufferPredicate('SharedArrayBuffer', options)\n        },\n        dataView: {\n            get: () => new data_view_1.DataViewPredicate(options)\n        },\n        iterable: {\n            get: () => new predicate_1.Predicate('Iterable', options)\n        },\n        any: {\n            value: (...predicates) => new any_1.AnyPredicate(predicates, options)\n        }\n    });\n    return object;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnyPredicate = void 0;\nconst argument_error_1 = require(\"../argument-error\");\nconst base_predicate_1 = require(\"./base-predicate\");\nconst generate_argument_error_message_1 = require(\"../utils/generate-argument-error-message\");\n/**\n@hidden\n*/\nclass AnyPredicate {\n    constructor(predicates, options = {}) {\n        Object.defineProperty(this, \"predicates\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: predicates\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n    }\n    [base_predicate_1.testSymbol](value, main, label, idLabel) {\n        const errors = new Map();\n        for (const predicate of this.predicates) {\n            try {\n                main(value, label, predicate, idLabel);\n                return;\n            }\n            catch (error) {\n                if (value === undefined && this.options.optional === true) {\n                    return;\n                }\n                // If we received an ArgumentError, then..\n                if (error instanceof argument_error_1.ArgumentError) {\n                    // Iterate through every error reported.\n                    for (const [key, value] of error.validationErrors.entries()) {\n                        // Get the current errors set, if any.\n                        const alreadyPresent = errors.get(key);\n                        // Add all errors under the same key\n                        errors.set(key, new Set([...alreadyPresent !== null && alreadyPresent !== void 0 ? alreadyPresent : [], ...value]));\n                    }\n                }\n            }\n        }\n        if (errors.size > 0) {\n            // Generate the `error.message` property.\n            const message = generate_argument_error_message_1.generateArgumentErrorMessage(errors, true);\n            throw new argument_error_1.ArgumentError(`Any predicate failed with the following errors:\\n${message}`, main, errors);\n        }\n    }\n}\nexports.AnyPredicate = AnyPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayBufferPredicate = void 0;\nconst predicate_1 = require(\"./predicate\");\nclass ArrayBufferPredicate extends predicate_1.Predicate {\n    /**\n    Test an array buffer to have a specific byte length.\n\n    @param byteLength - The byte length of the array buffer.\n    */\n    byteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength === byteLength\n        });\n    }\n    /**\n    Test an array buffer to have a minimum byte length.\n\n    @param byteLength - The minimum byte length of the array buffer.\n    */\n    minByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength >= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength - 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test an array buffer to have a minimum byte length.\n\n    @param length - The minimum byte length of the array buffer.\n    */\n    maxByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength <= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength + 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n}\nexports.ArrayBufferPredicate = ArrayBufferPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayPredicate = void 0;\nconst isEqual = require(\"lodash.isequal\");\nconst predicate_1 = require(\"./predicate\");\nconst match_shape_1 = require(\"../utils/match-shape\");\nconst of_type_1 = require(\"../utils/of-type\");\nclass ArrayPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('array', options);\n    }\n    /**\n    Test an array to have a specific length.\n\n    @param length - The length of the array.\n    */\n    length(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have length \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length === length\n        });\n    }\n    /**\n    Test an array to have a minimum length.\n\n    @param length - The minimum length of the array.\n    */\n    minLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length >= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum length of \\`${length - 1}\\`, got \\`${value.length}\\``\n        });\n    }\n    /**\n    Test an array to have a maximum length.\n\n    @param length - The maximum length of the array.\n    */\n    maxLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length <= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum length of \\`${length + 1}\\`, got \\`${value.length}\\``\n        });\n    }\n    /**\n    Test an array to start with a specific value. The value is tested by identity, not structure.\n\n    @param searchElement - The value that should be the start of the array.\n    */\n    startsWith(searchElement) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to start with \\`${searchElement}\\`, got \\`${value[0]}\\``,\n            validator: value => value[0] === searchElement\n        });\n    }\n    /**\n    Test an array to end with a specific value. The value is tested by identity, not structure.\n\n    @param searchElement - The value that should be the end of the array.\n    */\n    endsWith(searchElement) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to end with \\`${searchElement}\\`, got \\`${value[value.length - 1]}\\``,\n            validator: value => value[value.length - 1] === searchElement\n        });\n    }\n    /**\n    Test an array to include all the provided elements. The values are tested by identity, not structure.\n\n    @param searchElements - The values that should be included in the array.\n    */\n    includes(...searchElements) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to include all elements of \\`${JSON.stringify(searchElements)}\\`, got \\`${JSON.stringify(value)}\\``,\n            validator: value => searchElements.every(element => value.includes(element))\n        });\n    }\n    /**\n    Test an array to include any of the provided elements. The values are tested by identity, not structure.\n\n    @param searchElements - The values that should be included in the array.\n    */\n    includesAny(...searchElements) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to include any element of \\`${JSON.stringify(searchElements)}\\`, got \\`${JSON.stringify(value)}\\``,\n            validator: value => searchElements.some(element => value.includes(element))\n        });\n    }\n    /**\n    Test an array to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be empty, got \\`${JSON.stringify(value)}\\``,\n            validator: value => value.length === 0\n        });\n    }\n    /**\n    Test an array to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: value => value.length > 0\n        });\n    }\n    /**\n    Test an array to be deeply equal to the provided array.\n\n    @param expected - Expected value to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify(expected)}\\`, got \\`${JSON.stringify(value)}\\``,\n            validator: value => isEqual(value, expected)\n        });\n    }\n    /**\n    Test all elements in the array to match to provided predicate.\n\n    @param predicate - The predicate that should be applied against every individual item.\n\n    @example\n    ```\n    ow(['a', 1], ow.array.ofType(ow.any(ow.string, ow.number)));\n    ```\n    */\n    ofType(predicate) {\n        // TODO [typescript@>=5] If higher-kinded types are supported natively by typescript, refactor `addValidator` to use them to avoid the usage of `any`. Otherwise, bump or remove this TODO.\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: value => of_type_1.default(value, 'values', predicate)\n        });\n    }\n    /**\n    Test if the elements in the array exactly matches the elements placed at the same indices in the predicates array.\n\n    @param predicates - Predicates to test the array against. Describes what the tested array should look like.\n\n    @example\n    ```\n    ow(['1', 2], ow.array.exactShape([ow.string, ow.number]));\n    ```\n    */\n    exactShape(predicates) {\n        const shape = predicates;\n        return this.addValidator({\n            message: (_, label, message) => `${message.replace('Expected', 'Expected element')} in ${label}`,\n            validator: object => match_shape_1.exact(object, shape, undefined, true)\n        });\n    }\n}\nexports.ArrayPredicate = ArrayPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isPredicate = exports.testSymbol = void 0;\n/**\n@hidden\n*/\nexports.testSymbol = Symbol('test');\n/**\n@hidden\n*/\nconst isPredicate = (value) => Boolean(value[exports.testSymbol]);\nexports.isPredicate = isPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BigIntPredicate = void 0;\nconst predicate_1 = require(\"./predicate\");\nclass BigIntPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('bigint', options);\n    }\n}\nexports.BigIntPredicate = BigIntPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BooleanPredicate = void 0;\nconst predicate_1 = require(\"./predicate\");\nclass BooleanPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('boolean', options);\n    }\n    /**\n    Test a boolean to be true.\n    */\n    get true() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be true, got ${value}`,\n            validator: value => value\n        });\n    }\n    /**\n    Test a boolean to be false.\n    */\n    get false() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be false, got ${value}`,\n            validator: value => !value\n        });\n    }\n}\nexports.BooleanPredicate = BooleanPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataViewPredicate = void 0;\nconst predicate_1 = require(\"./predicate\");\nclass DataViewPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('DataView', options);\n    }\n    /**\n    Test a DataView to have a specific byte length.\n\n    @param byteLength - The byte length of the DataView.\n    */\n    byteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength === byteLength\n        });\n    }\n    /**\n    Test a DataView to have a minimum byte length.\n\n    @param byteLength - The minimum byte length of the DataView.\n    */\n    minByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength >= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength - 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test a DataView to have a minimum byte length.\n\n    @param length - The minimum byte length of the DataView.\n    */\n    maxByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength <= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength + 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n}\nexports.DataViewPredicate = DataViewPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatePredicate = void 0;\nconst predicate_1 = require(\"./predicate\");\nclass DatePredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('date', options);\n    }\n    /**\n    Test a date to be before another date.\n\n    @param date - Maximum value.\n    */\n    before(date) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} ${value.toISOString()} to be before ${date.toISOString()}`,\n            validator: value => value.getTime() < date.getTime()\n        });\n    }\n    /**\n    Test a date to be before another date.\n\n    @param date - Minimum value.\n    */\n    after(date) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} ${value.toISOString()} to be after ${date.toISOString()}`,\n            validator: value => value.getTime() > date.getTime()\n        });\n    }\n}\nexports.DatePredicate = DatePredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorPredicate = void 0;\nconst predicate_1 = require(\"./predicate\");\nclass ErrorPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('error', options);\n    }\n    /**\n    Test an error to have a specific name.\n\n    @param expected - Expected name of the Error.\n    */\n    name(expected) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} to have name \\`${expected}\\`, got \\`${error.name}\\``,\n            validator: error => error.name === expected\n        });\n    }\n    /**\n    Test an error to have a specific message.\n\n    @param expected - Expected message of the Error.\n    */\n    message(expected) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} message to be \\`${expected}\\`, got \\`${error.message}\\``,\n            validator: error => error.message === expected\n        });\n    }\n    /**\n    Test the error message to include a specific message.\n\n    @param message - Message that should be included in the error.\n    */\n    messageIncludes(message) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} message to include \\`${message}\\`, got \\`${error.message}\\``,\n            validator: error => error.message.includes(message)\n        });\n    }\n    /**\n    Test the error object to have specific keys.\n\n    @param keys - One or more keys which should be part of the error object.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} message to have keys \\`${keys.join('`, `')}\\``,\n            validator: error => keys.every(key => Object.prototype.hasOwnProperty.call(error, key))\n        });\n    }\n    /**\n    Test an error to be of a specific instance type.\n\n    @param instance - The expected instance type of the error.\n    */\n    instanceOf(instance) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} \\`${error.name}\\` to be of type \\`${instance.name}\\``,\n            validator: error => error instanceof instance\n        });\n    }\n    /**\n    Test an Error to be a TypeError.\n    */\n    get typeError() {\n        return this.instanceOf(TypeError);\n    }\n    /**\n    Test an Error to be an EvalError.\n    */\n    get evalError() {\n        return this.instanceOf(EvalError);\n    }\n    /**\n    Test an Error to be a RangeError.\n    */\n    get rangeError() {\n        return this.instanceOf(RangeError);\n    }\n    /**\n    Test an Error to be a ReferenceError.\n    */\n    get referenceError() {\n        return this.instanceOf(ReferenceError);\n    }\n    /**\n    Test an Error to be a SyntaxError.\n    */\n    get syntaxError() {\n        return this.instanceOf(SyntaxError);\n    }\n    /**\n    Test an Error to be a URIError.\n    */\n    get uriError() {\n        return this.instanceOf(URIError);\n    }\n}\nexports.ErrorPredicate = ErrorPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MapPredicate = void 0;\nconst isEqual = require(\"lodash.isequal\");\nconst has_items_1 = require(\"../utils/has-items\");\nconst of_type_1 = require(\"../utils/of-type\");\nconst predicate_1 = require(\"./predicate\");\nclass MapPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('Map', options);\n    }\n    /**\n    Test a Map to have a specific size.\n\n    @param size - The size of the Map.\n    */\n    size(size) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to have size \\`${size}\\`, got \\`${map.size}\\``,\n            validator: map => map.size === size\n        });\n    }\n    /**\n    Test an Map to have a minimum size.\n\n    @param size - The minimum size of the Map.\n    */\n    minSize(size) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to have a minimum size of \\`${size}\\`, got \\`${map.size}\\``,\n            validator: map => map.size >= size,\n            negatedMessage: (map, label) => `Expected ${label} to have a maximum size of \\`${size - 1}\\`, got \\`${map.size}\\``\n        });\n    }\n    /**\n    Test an Map to have a maximum size.\n\n    @param size - The maximum size of the Map.\n    */\n    maxSize(size) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to have a maximum size of \\`${size}\\`, got \\`${map.size}\\``,\n            validator: map => map.size <= size,\n            negatedMessage: (map, label) => `Expected ${label} to have a minimum size of \\`${size + 1}\\`, got \\`${map.size}\\``\n        });\n    }\n    /**\n    Test a Map to include all the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that should be a key in the Map.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n            validator: map => has_items_1.default(map, keys)\n        });\n    }\n    /**\n    Test a Map to include any of the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that could be a key in the Map.\n    */\n    hasAnyKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n            validator: map => keys.some(key => map.has(key))\n        });\n    }\n    /**\n    Test a Map to include all the provided values. The values are tested by identity, not structure.\n\n    @param values - The values that should be a value in the Map.\n    */\n    hasValues(...values) {\n        return this.addValidator({\n            message: (_, label, missingValues) => `Expected ${label} to have values \\`${JSON.stringify(missingValues)}\\``,\n            validator: map => has_items_1.default(new Set(map.values()), values)\n        });\n    }\n    /**\n    Test a Map to include any of the provided values. The values are tested by identity, not structure.\n\n    @param values - The values that could be a value in the Map.\n    */\n    hasAnyValues(...values) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any value of \\`${JSON.stringify(values)}\\``,\n            validator: map => {\n                const valueSet = new Set(map.values());\n                return values.some(key => valueSet.has(key));\n            }\n        });\n    }\n    /**\n    Test all the keys in the Map to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every key in the Map.\n    */\n    keysOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: map => of_type_1.default(map.keys(), 'keys', predicate)\n        });\n    }\n    /**\n    Test all the values in the Map to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every value in the Map.\n    */\n    valuesOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: map => of_type_1.default(map.values(), 'values', predicate)\n        });\n    }\n    /**\n    Test a Map to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to be empty, got \\`${JSON.stringify([...map])}\\``,\n            validator: map => map.size === 0\n        });\n    }\n    /**\n    Test a Map to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: map => map.size > 0\n        });\n    }\n    /**\n    Test a Map to be deeply equal to the provided Map.\n\n    @param expected - Expected Map to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify([...expected])}\\`, got \\`${JSON.stringify([...map])}\\``,\n            validator: map => isEqual(map, expected)\n        });\n    }\n}\nexports.MapPredicate = MapPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberPredicate = void 0;\nconst is_1 = require(\"@sindresorhus/is\");\nconst predicate_1 = require(\"./predicate\");\nclass NumberPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('number', options);\n    }\n    /**\n    Test a number to be in a specified range.\n\n    @param start - Start of the range.\n    @param end - End of the range.\n    */\n    inRange(start, end) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be in range [${start}..${end}], got ${value}`,\n            validator: value => is_1.default.inRange(value, [start, end])\n        });\n    }\n    /**\n    Test a number to be greater than the provided value.\n\n    @param number - Minimum value.\n    */\n    greaterThan(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be greater than ${number}, got ${value}`,\n            validator: value => value > number\n        });\n    }\n    /**\n    Test a number to be greater than or equal to the provided value.\n\n    @param number - Minimum value.\n    */\n    greaterThanOrEqual(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be greater than or equal to ${number}, got ${value}`,\n            validator: value => value >= number\n        });\n    }\n    /**\n    Test a number to be less than the provided value.\n\n    @param number - Maximum value.\n    */\n    lessThan(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be less than ${number}, got ${value}`,\n            validator: value => value < number\n        });\n    }\n    /**\n    Test a number to be less than or equal to the provided value.\n\n    @param number - Minimum value.\n    */\n    lessThanOrEqual(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be less than or equal to ${number}, got ${value}`,\n            validator: value => value <= number\n        });\n    }\n    /**\n    Test a number to be equal to a specified number.\n\n    @param expected - Expected value to match.\n    */\n    equal(expected) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be equal to ${expected}, got ${value}`,\n            validator: value => value === expected\n        });\n    }\n    /**\n    Test if a number is an element of the provided list.\n\n    @param list - List of possible values.\n    */\n    oneOf(list) {\n        return this.addValidator({\n            message: (value, label) => {\n                let printedList = JSON.stringify(list);\n                if (list.length > 10) {\n                    const overflow = list.length - 10;\n                    printedList = JSON.stringify(list.slice(0, 10)).replace(/]$/, `,…+${overflow} more]`);\n                }\n                return `Expected ${label} to be one of \\`${printedList}\\`, got ${value}`;\n            },\n            validator: value => list.includes(value)\n        });\n    }\n    /**\n    Test a number to be an integer.\n    */\n    get integer() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be an integer, got ${value}`,\n            validator: value => is_1.default.integer(value)\n        });\n    }\n    /**\n    Test a number to be finite.\n    */\n    get finite() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be finite, got ${value}`,\n            validator: value => !is_1.default.infinite(value)\n        });\n    }\n    /**\n    Test a number to be infinite.\n    */\n    get infinite() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be infinite, got ${value}`,\n            validator: value => is_1.default.infinite(value)\n        });\n    }\n    /**\n    Test a number to be positive.\n    */\n    get positive() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be positive, got ${value}`,\n            validator: value => value > 0\n        });\n    }\n    /**\n    Test a number to be negative.\n    */\n    get negative() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be negative, got ${value}`,\n            validator: value => value < 0\n        });\n    }\n    /**\n    Test a number to be an integer or infinite.\n    */\n    get integerOrInfinite() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be an integer or infinite, got ${value}`,\n            validator: value => is_1.default.integer(value) || is_1.default.infinite(value)\n        });\n    }\n    /**\n    Test a number to be in a valid range for a 8-bit unsigned integer.\n    */\n    get uint8() {\n        return this.integer.inRange(0, 255);\n    }\n    /**\n    Test a number to be in a valid range for a 16-bit unsigned integer.\n    */\n    get uint16() {\n        return this.integer.inRange(0, 65535);\n    }\n    /**\n    Test a number to be in a valid range for a 32-bit unsigned integer.\n    */\n    get uint32() {\n        return this.integer.inRange(0, 4294967295);\n    }\n    /**\n    Test a number to be in a valid range for a 8-bit signed integer.\n    */\n    get int8() {\n        return this.integer.inRange(-128, 127);\n    }\n    /**\n    Test a number to be in a valid range for a 16-bit signed integer.\n    */\n    get int16() {\n        return this.integer.inRange(-32768, 32767);\n    }\n    /**\n    Test a number to be in a valid range for a 32-bit signed integer.\n    */\n    get int32() {\n        return this.integer.inRange(-2147483648, 2147483647);\n    }\n}\nexports.NumberPredicate = NumberPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectPredicate = void 0;\nconst is_1 = require(\"@sindresorhus/is\");\nconst dotProp = require(\"dot-prop\");\nconst isEqual = require(\"lodash.isequal\");\nconst has_items_1 = require(\"../utils/has-items\");\nconst of_type_1 = require(\"../utils/of-type\");\nconst of_type_deep_1 = require(\"../utils/of-type-deep\");\nconst match_shape_1 = require(\"../utils/match-shape\");\nconst predicate_1 = require(\"./predicate\");\nclass ObjectPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('object', options);\n    }\n    /**\n    Test if an Object is a plain object.\n    */\n    get plain() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to be a plain object`,\n            validator: object => is_1.default.plainObject(object)\n        });\n    }\n    /**\n    Test an object to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (object, label) => `Expected ${label} to be empty, got \\`${JSON.stringify(object)}\\``,\n            validator: object => Object.keys(object).length === 0\n        });\n    }\n    /**\n    Test an object to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: object => Object.keys(object).length > 0\n        });\n    }\n    /**\n    Test all the values in the object to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every value in the object.\n    */\n    valuesOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: object => of_type_1.default(Object.values(object), 'values', predicate)\n        });\n    }\n    /**\n    Test all the values in the object deeply to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every value in the object.\n    */\n    deepValuesOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: object => of_type_deep_1.default(object, predicate)\n        });\n    }\n    /**\n    Test an object to be deeply equal to the provided object.\n\n    @param expected - Expected object to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (object, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify(expected)}\\`, got \\`${JSON.stringify(object)}\\``,\n            validator: object => isEqual(object, expected)\n        });\n    }\n    /**\n    Test an object to be of a specific instance type.\n\n    @param instance - The expected instance type of the object.\n    */\n    instanceOf(instance) {\n        return this.addValidator({\n            message: (object, label) => {\n                var _a;\n                let { name } = (_a = object === null || object === void 0 ? void 0 : object.constructor) !== null && _a !== void 0 ? _a : {};\n                if (!name || name === 'Object') {\n                    name = JSON.stringify(object);\n                }\n                return `Expected ${label} \\`${name}\\` to be of type \\`${instance.name}\\``;\n            },\n            validator: object => object instanceof instance\n        });\n    }\n    /**\n    Test an object to include all the provided keys. You can use [dot-notation](https://github.com/sindresorhus/dot-prop) in a key to access nested properties.\n\n    @param keys - The keys that should be present in the object.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n            validator: object => has_items_1.default({\n                has: item => dotProp.has(object, item)\n            }, keys)\n        });\n    }\n    /**\n    Test an object to include any of the provided keys. You can use [dot-notation](https://github.com/sindresorhus/dot-prop) in a key to access nested properties.\n\n    @param keys - The keys that could be a key in the object.\n    */\n    hasAnyKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n            validator: object => keys.some(key => dotProp.has(object, key))\n        });\n    }\n    /**\n    Test an object to match the `shape` partially. This means that it ignores unexpected properties. The shape comparison is deep.\n\n    The shape is an object which describes how the tested object should look like. The keys are the same as the source object and the values are predicates.\n\n    @param shape - Shape to test the object against.\n\n    @example\n    ```\n    import ow from 'ow';\n\n    const object = {\n        unicorn: '🦄',\n        rainbow: '🌈'\n    };\n\n    ow(object, ow.object.partialShape({\n        unicorn: ow.string\n    }));\n    ```\n    */\n    partialShape(shape) {\n        return this.addValidator({\n            // TODO: Improve this when message handling becomes smarter\n            message: (_, label, message) => `${message.replace('Expected', 'Expected property')} in ${label}`,\n            validator: object => match_shape_1.partial(object, shape)\n        });\n    }\n    /**\n    Test an object to match the `shape` exactly. This means that will fail if it comes across unexpected properties. The shape comparison is deep.\n\n    The shape is an object which describes how the tested object should look like. The keys are the same as the source object and the values are predicates.\n\n    @param shape - Shape to test the object against.\n\n    @example\n    ```\n    import ow from 'ow';\n\n    ow({unicorn: '🦄'}, ow.object.exactShape({\n        unicorn: ow.string\n    }));\n    ```\n    */\n    exactShape(shape) {\n        // TODO [typescript@>=5] If higher-kinded types are supported natively by typescript, refactor `addValidator` to use them to avoid the usage of `any`. Otherwise, bump or remove this TODO.\n        return this.addValidator({\n            // TODO: Improve this when message handling becomes smarter\n            message: (_, label, message) => `${message.replace('Expected', 'Expected property')} in ${label}`,\n            validator: object => match_shape_1.exact(object, shape)\n        });\n    }\n}\nexports.ObjectPredicate = ObjectPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Predicate = exports.validatorSymbol = void 0;\nconst is_1 = require(\"@sindresorhus/is\");\nconst argument_error_1 = require(\"../argument-error\");\nconst not_1 = require(\"../operators/not\");\nconst base_predicate_1 = require(\"./base-predicate\");\nconst generate_argument_error_message_1 = require(\"../utils/generate-argument-error-message\");\n/**\n@hidden\n*/\nexports.validatorSymbol = Symbol('validators');\n/**\n@hidden\n*/\nclass Predicate {\n    constructor(type, options = {}) {\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: type\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"context\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                validators: []\n            }\n        });\n        this.context = {\n            ...this.context,\n            ...this.options\n        };\n        const typeString = this.type.charAt(0).toLowerCase() + this.type.slice(1);\n        this.addValidator({\n            message: (value, label) => {\n                // We do not include type in this label as we do for other messages, because it would be redundant.\n                const label_ = label === null || label === void 0 ? void 0 : label.slice(this.type.length + 1);\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                return `Expected ${label_ || 'argument'} to be of type \\`${this.type}\\` but received type \\`${is_1.default(value)}\\``;\n            },\n            validator: value => is_1.default[typeString](value)\n        });\n    }\n    /**\n    @hidden\n    */\n    [base_predicate_1.testSymbol](value, main, label, idLabel) {\n        // Create a map of labels -> received errors.\n        const errors = new Map();\n        for (const { validator, message } of this.context.validators) {\n            if (this.options.optional === true && value === undefined) {\n                continue;\n            }\n            let result;\n            try {\n                result = validator(value);\n            }\n            catch (error) {\n                // Any errors caught means validators couldn't process the input.\n                result = error;\n            }\n            if (result === true) {\n                continue;\n            }\n            const label2 = is_1.default.function_(label) ? label() : label;\n            const labelWithTick = (label2 && idLabel) ? `\\`${label2}\\`` : label2;\n            const label_ = labelWithTick ?\n                `${this.type} ${labelWithTick}` :\n                this.type;\n            const mapKey = label2 || this.type;\n            // Get the current errors encountered for this label.\n            const currentErrors = errors.get(mapKey);\n            // Pre-generate the error message that will be reported to the user.\n            const errorMessage = message(value, label_, result);\n            // If we already have any errors for this label.\n            if (currentErrors) {\n                // If we don't already have this error logged, add it.\n                currentErrors.add(errorMessage);\n            }\n            else {\n                // Set this label and error in the full map.\n                errors.set(mapKey, new Set([errorMessage]));\n            }\n        }\n        // If we have any errors to report, throw.\n        if (errors.size > 0) {\n            // Generate the `error.message` property.\n            const message = generate_argument_error_message_1.generateArgumentErrorMessage(errors);\n            throw new argument_error_1.ArgumentError(message, main, errors);\n        }\n    }\n    /**\n    @hidden\n    */\n    get [exports.validatorSymbol]() {\n        return this.context.validators;\n    }\n    /**\n    Invert the following validators.\n    */\n    get not() {\n        return not_1.not(this);\n    }\n    /**\n    Test if the value matches a custom validation function. The validation function should return an object containing a `validator` and `message`. If the `validator` is `false`, the validation fails and the `message` will be used as error message. If the `message` is a function, the function is invoked with the `label` as argument to let you further customize the error message.\n\n    @param customValidator - Custom validation function.\n    */\n    validate(customValidator) {\n        return this.addValidator({\n            message: (_, label, error) => typeof error === 'string' ?\n                `(${label}) ${error}` :\n                error(label),\n            validator: value => {\n                const { message, validator } = customValidator(value);\n                if (validator) {\n                    return true;\n                }\n                return message;\n            }\n        });\n    }\n    /**\n    Test if the value matches a custom validation function. The validation function should return `true` if the value passes the function. If the function either returns `false` or a string, the function fails and the string will be used as error message.\n\n    @param validator - Validation function.\n    */\n    is(validator) {\n        return this.addValidator({\n            message: (value, label, error) => (error ?\n                `(${label}) ${error}` :\n                `Expected ${label} \\`${value}\\` to pass custom validation function`),\n            validator\n        });\n    }\n    /**\n    Provide a new error message to be thrown when the validation fails.\n\n    @param newMessage - Either a string containing the new message or a function returning the new message.\n\n    @example\n    ```\n    ow('🌈', 'unicorn', ow.string.equals('🦄').message('Expected unicorn, got rainbow'));\n    //=> ArgumentError: Expected unicorn, got rainbow\n    ```\n\n    @example\n    ```\n    ow('🌈', ow.string.minLength(5).message((value, label) => `Expected ${label}, to have a minimum length of 5, got \\`${value}\\``));\n    //=> ArgumentError: Expected string, to be have a minimum length of 5, got `🌈`\n    ```\n    */\n    message(newMessage) {\n        const { validators } = this.context;\n        validators[validators.length - 1].message = (value, label) => {\n            if (typeof newMessage === 'function') {\n                return newMessage(value, label);\n            }\n            return newMessage;\n        };\n        return this;\n    }\n    /**\n    Register a new validator.\n\n    @param validator - Validator to register.\n    */\n    addValidator(validator) {\n        this.context.validators.push(validator);\n        return this;\n    }\n}\nexports.Predicate = Predicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetPredicate = void 0;\nconst isEqual = require(\"lodash.isequal\");\nconst has_items_1 = require(\"../utils/has-items\");\nconst of_type_1 = require(\"../utils/of-type\");\nconst predicate_1 = require(\"./predicate\");\nclass SetPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('Set', options);\n    }\n    /**\n    Test a Set to have a specific size.\n\n    @param size - The size of the Set.\n    */\n    size(size) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to have size \\`${size}\\`, got \\`${set.size}\\``,\n            validator: set => set.size === size\n        });\n    }\n    /**\n    Test a Set to have a minimum size.\n\n    @param size - The minimum size of the Set.\n    */\n    minSize(size) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to have a minimum size of \\`${size}\\`, got \\`${set.size}\\``,\n            validator: set => set.size >= size,\n            negatedMessage: (set, label) => `Expected ${label} to have a maximum size of \\`${size - 1}\\`, got \\`${set.size}\\``\n        });\n    }\n    /**\n    Test a Set to have a maximum size.\n\n    @param size - The maximum size of the Set.\n    */\n    maxSize(size) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to have a maximum size of \\`${size}\\`, got \\`${set.size}\\``,\n            validator: set => set.size <= size,\n            negatedMessage: (set, label) => `Expected ${label} to have a minimum size of \\`${size + 1}\\`, got \\`${set.size}\\``\n        });\n    }\n    /**\n    Test a Set to include all the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that should be a item in the Set.\n    */\n    has(...items) {\n        return this.addValidator({\n            message: (_, label, missingItems) => `Expected ${label} to have items \\`${JSON.stringify(missingItems)}\\``,\n            validator: set => has_items_1.default(set, items)\n        });\n    }\n    /**\n    Test a Set to include any of the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that could be a item in the Set.\n    */\n    hasAny(...items) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any item of \\`${JSON.stringify(items)}\\``,\n            validator: set => items.some(item => set.has(item))\n        });\n    }\n    /**\n    Test all the items in the Set to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every item in the Set.\n    */\n    ofType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: set => of_type_1.default(set, 'values', predicate)\n        });\n    }\n    /**\n    Test a Set to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to be empty, got \\`${JSON.stringify([...set])}\\``,\n            validator: set => set.size === 0\n        });\n    }\n    /**\n    Test a Set to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: set => set.size > 0\n        });\n    }\n    /**\n    Test a Set to be deeply equal to the provided Set.\n\n    @param expected - Expected Set to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify([...expected])}\\`, got \\`${JSON.stringify([...set])}\\``,\n            validator: set => isEqual(set, expected)\n        });\n    }\n}\nexports.SetPredicate = SetPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringPredicate = void 0;\nconst is_1 = require(\"@sindresorhus/is\");\nconst valiDate = require(\"vali-date\");\nconst predicate_1 = require(\"./predicate\");\nclass StringPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('string', options);\n    }\n    /**\n    Test a string to have a specific length.\n\n    @param length - The length of the string.\n    */\n    length(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have length \\`${length}\\`, got \\`${value}\\``,\n            validator: value => value.length === length\n        });\n    }\n    /**\n    Test a string to have a minimum length.\n\n    @param length - The minimum length of the string.\n    */\n    minLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum length of \\`${length}\\`, got \\`${value}\\``,\n            validator: value => value.length >= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum length of \\`${length - 1}\\`, got \\`${value}\\``\n        });\n    }\n    /**\n    Test a string to have a maximum length.\n\n    @param length - The maximum length of the string.\n    */\n    maxLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum length of \\`${length}\\`, got \\`${value}\\``,\n            validator: value => value.length <= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum length of \\`${length + 1}\\`, got \\`${value}\\``\n        });\n    }\n    /**\n    Test a string against a regular expression.\n\n    @param regex - The regular expression to match the value with.\n    */\n    matches(regex) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to match \\`${regex}\\`, got \\`${value}\\``,\n            validator: value => regex.test(value)\n        });\n    }\n    /**\n    Test a string to start with a specific value.\n\n    @param searchString - The value that should be the start of the string.\n    */\n    startsWith(searchString) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to start with \\`${searchString}\\`, got \\`${value}\\``,\n            validator: value => value.startsWith(searchString)\n        });\n    }\n    /**\n    Test a string to end with a specific value.\n\n    @param searchString - The value that should be the end of the string.\n    */\n    endsWith(searchString) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to end with \\`${searchString}\\`, got \\`${value}\\``,\n            validator: value => value.endsWith(searchString)\n        });\n    }\n    /**\n    Test a string to include a specific value.\n\n    @param searchString - The value that should be included in the string.\n    */\n    includes(searchString) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to include \\`${searchString}\\`, got \\`${value}\\``,\n            validator: value => value.includes(searchString)\n        });\n    }\n    /**\n    Test if the string is an element of the provided list.\n\n    @param list - List of possible values.\n    */\n    oneOf(list) {\n        return this.addValidator({\n            message: (value, label) => {\n                let printedList = JSON.stringify(list);\n                if (list.length > 10) {\n                    const overflow = list.length - 10;\n                    printedList = JSON.stringify(list.slice(0, 10)).replace(/]$/, `,…+${overflow} more]`);\n                }\n                return `Expected ${label} to be one of \\`${printedList}\\`, got \\`${value}\\``;\n            },\n            validator: value => list.includes(value)\n        });\n    }\n    /**\n    Test a string to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be empty, got \\`${value}\\``,\n            validator: value => value === ''\n        });\n    }\n    /**\n    Test a string to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: value => value !== ''\n        });\n    }\n    /**\n    Test a string to be equal to a specified string.\n\n    @param expected - Expected value to match.\n    */\n    equals(expected) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be equal to \\`${expected}\\`, got \\`${value}\\``,\n            validator: value => value === expected\n        });\n    }\n    /**\n    Test a string to be alphanumeric.\n    */\n    get alphanumeric() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be alphanumeric, got \\`${value}\\``,\n            validator: value => /^[a-z\\d]+$/i.test(value)\n        });\n    }\n    /**\n    Test a string to be alphabetical.\n    */\n    get alphabetical() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be alphabetical, got \\`${value}\\``,\n            validator: value => /^[a-z]+$/gi.test(value)\n        });\n    }\n    /**\n    Test a string to be numeric.\n    */\n    get numeric() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be numeric, got \\`${value}\\``,\n            validator: value => /^[+-]?\\d+$/i.test(value)\n        });\n    }\n    /**\n    Test a string to be a valid date.\n    */\n    get date() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be a date, got \\`${value}\\``,\n            validator: valiDate\n        });\n    }\n    /**\n    Test a non-empty string to be lowercase. Matching both alphabetical & numbers.\n    */\n    get lowercase() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be lowercase, got \\`${value}\\``,\n            validator: value => value.trim() !== '' && value === value.toLowerCase()\n        });\n    }\n    /**\n    Test a non-empty string to be uppercase. Matching both alphabetical & numbers.\n    */\n    get uppercase() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be uppercase, got \\`${value}\\``,\n            validator: value => value.trim() !== '' && value === value.toUpperCase()\n        });\n    }\n    /**\n    Test a string to be a valid URL.\n    */\n    get url() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be a URL, got \\`${value}\\``,\n            validator: is_1.default.urlString\n        });\n    }\n}\nexports.StringPredicate = StringPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypedArrayPredicate = void 0;\nconst predicate_1 = require(\"./predicate\");\nclass TypedArrayPredicate extends predicate_1.Predicate {\n    /**\n    Test a typed array to have a specific byte length.\n\n    @param byteLength - The byte length of the typed array.\n    */\n    byteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength === byteLength\n        });\n    }\n    /**\n    Test a typed array to have a minimum byte length.\n\n    @param byteLength - The minimum byte length of the typed array.\n    */\n    minByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength >= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength - 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test a typed array to have a minimum byte length.\n\n    @param length - The minimum byte length of the typed array.\n    */\n    maxByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength <= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength + 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test a typed array to have a specific length.\n\n    @param length - The length of the typed array.\n    */\n    length(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have length \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length === length\n        });\n    }\n    /**\n    Test a typed array to have a minimum length.\n\n    @param length - The minimum length of the typed array.\n    */\n    minLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length >= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum length of \\`${length - 1}\\`, got \\`${value.length}\\``\n        });\n    }\n    /**\n    Test a typed array to have a maximum length.\n\n    @param length - The maximum length of the typed array.\n    */\n    maxLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length <= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum length of \\`${length + 1}\\`, got \\`${value.length}\\``\n        });\n    }\n}\nexports.TypedArrayPredicate = TypedArrayPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeakMapPredicate = void 0;\nconst has_items_1 = require(\"../utils/has-items\");\nconst predicate_1 = require(\"./predicate\");\nclass WeakMapPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('WeakMap', options);\n    }\n    /**\n    Test a WeakMap to include all the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that should be a key in the WeakMap.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n            validator: map => has_items_1.default(map, keys)\n        });\n    }\n    /**\n    Test a WeakMap to include any of the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that could be a key in the WeakMap.\n    */\n    hasAnyKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n            validator: map => keys.some(key => map.has(key))\n        });\n    }\n}\nexports.WeakMapPredicate = WeakMapPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeakSetPredicate = void 0;\nconst has_items_1 = require(\"../utils/has-items\");\nconst predicate_1 = require(\"./predicate\");\nclass WeakSetPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('WeakSet', options);\n    }\n    /**\n    Test a WeakSet to include all the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that should be a item in the WeakSet.\n    */\n    has(...items) {\n        return this.addValidator({\n            message: (_, label, missingItems) => `Expected ${label} to have items \\`${JSON.stringify(missingItems)}\\``,\n            validator: set => has_items_1.default(set, items)\n        });\n    }\n    /**\n    Test a WeakSet to include any of the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that could be a item in the WeakSet.\n    */\n    hasAny(...items) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any item of \\`${JSON.stringify(items)}\\``,\n            validator: set => items.some(item => set.has(item))\n        });\n    }\n}\nexports.WeakSetPredicate = WeakSetPredicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_predicate_1 = require(\"./predicates/base-predicate\");\n/**\nValidate the value against the provided predicate.\n\n@hidden\n\n@param value - Value to test.\n@param label - Label which should be used in error messages.\n@param predicate - Predicate to test to value against.\n@param idLabel - If true, the label is a variable or type. Default: true.\n*/\nfunction test(value, label, predicate, idLabel = true) {\n    predicate[base_predicate_1.testSymbol](value, test, label, idLabel);\n}\nexports.default = test;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateArgumentErrorMessage = void 0;\n/**\nGenerates a complete message from all errors generated by predicates.\n\n@param errors - The errors generated by the predicates.\n@param isAny - If this function is called from the any argument.\n@hidden\n*/\nconst generateArgumentErrorMessage = (errors, isAny = false) => {\n    const message = [];\n    const errorArray = [...errors.entries()];\n    const anyErrorWithoutOneItemOnly = errorArray.some(([, array]) => array.size !== 1);\n    // If only one error \"key\" is present, enumerate all of those errors only.\n    if (errorArray.length === 1) {\n        const [, returnedErrors] = errorArray[0];\n        if (!isAny && returnedErrors.size === 1) {\n            const [errorMessage] = returnedErrors;\n            return errorMessage;\n        }\n        for (const entry of returnedErrors) {\n            message.push(`${isAny ? '  - ' : ''}${entry}`);\n        }\n        return message.join('\\n');\n    }\n    // If every predicate returns just one error, enumerate them as is.\n    if (!anyErrorWithoutOneItemOnly) {\n        return errorArray.map(([, [item]]) => `  - ${item}`).join('\\n');\n    }\n    // Else, iterate through all the errors and enumerate them.\n    for (const [key, value] of errorArray) {\n        message.push(`Errors from the \"${key}\" predicate:`);\n        for (const entry of value) {\n            message.push(`  - ${entry}`);\n        }\n    }\n    return message.join('\\n');\n};\nexports.generateArgumentErrorMessage = generateArgumentErrorMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateStackTrace = void 0;\n/**\nGenerates a useful stacktrace that points to the user's code where the error happened on platforms without the `Error.captureStackTrace()` method.\n\n@hidden\n*/\nconst generateStackTrace = () => {\n    const stack = new RangeError('INTERNAL_OW_ERROR').stack;\n    return stack;\n};\nexports.generateStackTrace = generateStackTrace;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\nRetrieve the missing values in a collection based on an array of items.\n\n@hidden\n\n@param source - Source collection to search through.\n@param items - Items to search for.\n@param maxValues - Maximum number of values after the search process is stopped. Default: 5.\n*/\nexports.default = (source, items, maxValues = 5) => {\n    const missingValues = [];\n    for (const value of items) {\n        if (source.has(value)) {\n            continue;\n        }\n        missingValues.push(value);\n        if (missingValues.length === maxValues) {\n            return missingValues;\n        }\n    }\n    return missingValues.length === 0 ? true : missingValues;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.inferLabel = void 0;\nconst fs = require(\"fs\");\nconst is_valid_identifier_1 = require(\"./is-valid-identifier\");\nconst is_node_1 = require(\"./node/is-node\");\n// Regex to extract the label out of the `ow` function call\nconst labelRegex = /^.*?\\((?<label>.*?)[,)]/;\n/**\nInfer the label of the caller.\n\n@hidden\n\n@param callsites - List of stack frames.\n*/\nconst inferLabel = (callsites) => {\n    var _a;\n    if (!is_node_1.default) {\n        // Exit if we are not running in a Node.js environment\n        return;\n    }\n    // Grab the stackframe with the `ow` function call\n    const functionCallStackFrame = callsites[1];\n    if (!functionCallStackFrame) {\n        return;\n    }\n    const fileName = functionCallStackFrame.getFileName();\n    const lineNumber = functionCallStackFrame.getLineNumber();\n    const columnNumber = functionCallStackFrame.getColumnNumber();\n    if (fileName === null || lineNumber === null || columnNumber === null) {\n        return;\n    }\n    let content = [];\n    try {\n        content = fs.readFileSync(fileName, 'utf8').split('\\n');\n    }\n    catch {\n        return;\n    }\n    let line = content[lineNumber - 1];\n    if (!line) {\n        // Exit if the line number couldn't be found\n        return;\n    }\n    line = line.slice(columnNumber - 1);\n    const match = labelRegex.exec(line);\n    if (!((_a = match === null || match === void 0 ? void 0 : match.groups) === null || _a === void 0 ? void 0 : _a.label)) {\n        // Exit if we didn't find a label\n        return;\n    }\n    const token = match.groups.label;\n    if (is_valid_identifier_1.default(token) || is_valid_identifier_1.default(token.split('.').pop())) {\n        return token;\n    }\n    return;\n};\nexports.inferLabel = inferLabel;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst identifierRegex = /^[a-z$_][$\\w]*$/i;\nconst reservedSet = new Set([\n    'undefined',\n    'null',\n    'true',\n    'false',\n    'super',\n    'this',\n    'Infinity',\n    'NaN'\n]);\n/**\nTest if the string is a valid JavaScript identifier.\n\n@param string - String to test.\n*/\nexports.default = (string) => string && !reservedSet.has(string) && identifierRegex.test(string);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exact = exports.partial = void 0;\nconst is_1 = require(\"@sindresorhus/is\");\nconst test_1 = require(\"../test\");\nconst base_predicate_1 = require(\"../predicates/base-predicate\");\n/**\nTest if the `object` matches the `shape` partially.\n\n@hidden\n\n@param object - Object to test against the provided shape.\n@param shape - Shape to test the object against.\n@param parent - Name of the parent property.\n*/\nfunction partial(object, shape, parent) {\n    try {\n        for (const key of Object.keys(shape)) {\n            const label = parent ? `${parent}.${key}` : key;\n            if (base_predicate_1.isPredicate(shape[key])) {\n                test_1.default(object[key], label, shape[key]);\n            }\n            else if (is_1.default.plainObject(shape[key])) {\n                const result = partial(object[key], shape[key], label);\n                if (result !== true) {\n                    return result;\n                }\n            }\n        }\n        return true;\n    }\n    catch (error) {\n        return error.message;\n    }\n}\nexports.partial = partial;\n/**\nTest if the `object` matches the `shape` exactly.\n\n@hidden\n\n@param object - Object to test against the provided shape.\n@param shape - Shape to test the object against.\n@param parent - Name of the parent property.\n*/\nfunction exact(object, shape, parent, isArray) {\n    try {\n        const objectKeys = new Set(Object.keys(object));\n        for (const key of Object.keys(shape)) {\n            objectKeys.delete(key);\n            const label = parent ? `${parent}.${key}` : key;\n            if (base_predicate_1.isPredicate(shape[key])) {\n                test_1.default(object[key], label, shape[key]);\n            }\n            else if (is_1.default.plainObject(shape[key])) {\n                if (!Object.prototype.hasOwnProperty.call(object, key)) {\n                    return `Expected \\`${label}\\` to exist`;\n                }\n                const result = exact(object[key], shape[key], label);\n                if (result !== true) {\n                    return result;\n                }\n            }\n        }\n        if (objectKeys.size > 0) {\n            const firstKey = [...objectKeys.keys()][0];\n            const label = parent ? `${parent}.${firstKey}` : firstKey;\n            return `Did not expect ${isArray ? 'element' : 'property'} \\`${label}\\` to exist, got \\`${object[firstKey]}\\``;\n        }\n        return true;\n    }\n    catch (error) {\n        return error.message;\n    }\n}\nexports.exact = exact;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Boolean((_a = process === null || process === void 0 ? void 0 : process.versions) === null || _a === void 0 ? void 0 : _a.node);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_1 = require(\"@sindresorhus/is\");\nconst test_1 = require(\"../test\");\nconst ofTypeDeep = (object, predicate) => {\n    if (!is_1.default.plainObject(object)) {\n        test_1.default(object, 'deep values', predicate, false);\n        return true;\n    }\n    return Object.values(object).every(value => ofTypeDeep(value, predicate));\n};\n/**\nTest all the values in the object against a provided predicate.\n\n@hidden\n\n@param predicate - Predicate to test every value in the given object against.\n*/\nexports.default = (object, predicate) => {\n    try {\n        return ofTypeDeep(object, predicate);\n    }\n    catch (error) {\n        return error.message;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst test_1 = require(\"../test\");\n/**\nTest all the values in the collection against a provided predicate.\n\n@hidden\n@param source Source collection to test.\n@param name The name to call the collection of values, such as `values` or `keys`.\n@param predicate Predicate to test every item in the source collection against.\n*/\nexports.default = (source, name, predicate) => {\n    try {\n        for (const item of source) {\n            test_1.default(item, name, predicate, false);\n        }\n        return true;\n    }\n    catch (error) {\n        return error.message;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = () => Math.random().toString(16).slice(2);\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","'use strict';\n// @ts-check\n// ==================================================================================\n// audio.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 16. audio\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\n// const fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction parseAudioType(str, input, output) {\n  let result = '';\n\n  if (str.indexOf('speak') >= 0) { result = 'Speaker'; }\n  if (str.indexOf('laut') >= 0) { result = 'Speaker'; }\n  if (str.indexOf('loud') >= 0) { result = 'Speaker'; }\n  if (str.indexOf('head') >= 0) { result = 'Headset'; }\n  if (str.indexOf('mic') >= 0) { result = 'Microphone'; }\n  if (str.indexOf('mikr') >= 0) { result = 'Microphone'; }\n  if (str.indexOf('phone') >= 0) { result = 'Phone'; }\n  if (str.indexOf('controll') >= 0) { result = 'Controller'; }\n  if (str.indexOf('line o') >= 0) { result = 'Line Out'; }\n  if (str.indexOf('digital o') >= 0) { result = 'Digital Out'; }\n\n  if (!result && output) {\n    result = 'Speaker';\n  } else if (!result && input) {\n    result = 'Microphone';\n  }\n  return result;\n}\n\n\nfunction getLinuxAudioPci() {\n  let cmd = 'lspci -v 2>/dev/null';\n  let result = [];\n  try {\n    const parts = execSync(cmd).toString().split('\\n\\n');\n    for (let i = 0; i < parts.length; i++) {\n      const lines = parts[i].split('\\n');\n      if (lines && lines.length && lines[0].toLowerCase().indexOf('audio') >= 0) {\n        const audio = {};\n        audio.slotId = lines[0].split(' ')[0];\n        audio.driver = util.getValue(lines, 'Kernel driver in use', ':', true) || util.getValue(lines, 'Kernel modules', ':', true);\n        result.push(audio);\n      }\n    }\n    return result;\n  } catch (e) {\n    return result;\n  }\n}\n\nfunction parseLinuxAudioPciMM(lines, audioPCI) {\n  const result = {};\n  const slotId = util.getValue(lines, 'Slot');\n\n  const pciMatch = audioPCI.filter(function (item) { return item.slotId === slotId; });\n\n  result.id = slotId;\n  result.name = util.getValue(lines, 'SDevice');\n  // result.type = util.getValue(lines, 'Class');\n  result.manufacturer = util.getValue(lines, 'SVendor');\n  result.revision = util.getValue(lines, 'Rev');\n  result.driver = pciMatch && pciMatch.length === 1 && pciMatch[0].driver ? pciMatch[0].driver : '';\n  result.default = null;\n  result.channel = 'PCIe';\n  result.type = parseAudioType(result.name, null, null);\n  result.in = null;\n  result.out = null;\n  result.status = 'online';\n\n  return result;\n}\n\nfunction parseDarwinChannel(str) {\n  let result = '';\n\n  if (str.indexOf('builtin') >= 0) { result = 'Built-In'; }\n  if (str.indexOf('extern') >= 0) { result = 'Audio-Jack'; }\n  if (str.indexOf('hdmi') >= 0) { result = 'HDMI'; }\n  if (str.indexOf('displayport') >= 0) { result = 'Display-Port'; }\n  if (str.indexOf('usb') >= 0) { result = 'USB'; }\n  if (str.indexOf('pci') >= 0) { result = 'PCIe'; }\n\n  return result;\n}\n\nfunction parseDarwinAudio(audioObject, id) {\n  const result = {};\n  const channelStr = ((audioObject.coreaudio_device_transport || '') + ' ' + (audioObject._name || '')).toLowerCase();\n\n  result.id = id;\n  result.name = audioObject._name;\n  result.manufacturer = audioObject.coreaudio_device_manufacturer;\n  result.revision = null;\n  result.driver = null;\n  result.default = !!(audioObject.coreaudio_default_audio_input_device || '') || !!(audioObject.coreaudio_default_audio_output_device || '');\n  result.channel = parseDarwinChannel(channelStr);\n  result.type = parseAudioType(result.name, !!(audioObject.coreaudio_device_input || ''), !!(audioObject.coreaudio_device_output || ''));\n  result.in = !!(audioObject.coreaudio_device_input || '');\n  result.out = !!(audioObject.coreaudio_device_output || '');\n  result.status = 'online';\n\n  return result;\n}\n\nfunction parseWindowsAudio(lines) {\n  const result = {};\n  const status = util.getValue(lines, 'StatusInfo', '=');\n  // const description = util.getValue(lines, 'Description', '=');\n\n  result.id = util.getValue(lines, 'DeviceID', '='); // PNPDeviceID??\n  result.name = util.getValue(lines, 'name', '=');\n  result.manufacturer = util.getValue(lines, 'manufacturer', '=');\n  result.revision = null;\n  result.driver = null;\n  result.default = null;\n  result.channel = null;\n  result.type = parseAudioType(result.name, null, null);\n  result.in = null;\n  result.out = null;\n  result.status = status;\n\n  return result;\n}\n\nfunction audio(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'lspci -vmm 2>/dev/null';\n        exec(cmd, function (error, stdout) {\n          // PCI\n          if (!error) {\n            const audioPCI = getLinuxAudioPci();\n            const parts = stdout.toString().split('\\n\\n');\n            for (let i = 0; i < parts.length; i++) {\n              const lines = parts[i].split('\\n');\n              if (util.getValue(lines, 'class', ':', true).toLowerCase().indexOf('audio') >= 0) {\n                const audio = parseLinuxAudioPciMM(lines, audioPCI);\n                result.push(audio);\n              }\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        let cmd = 'system_profiler SPAudioDataType -json';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              const outObj = JSON.parse(stdout.toString());\n              if (outObj.SPAudioDataType && outObj.SPAudioDataType.length && outObj.SPAudioDataType[0] && outObj.SPAudioDataType[0]['_items'] && outObj.SPAudioDataType[0]['_items'].length) {\n                for (let i = 0; i < outObj.SPAudioDataType[0]['_items'].length; i++) {\n                  const audio = parseDarwinAudio(outObj.SPAudioDataType[0]['_items'][i], i);\n                  result.push(audio);\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        util.wmic('path Win32_SoundDevice get /value', function (error, stdout) {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n            for (let i = 0; i < parts.length; i++) {\n              if (util.getValue(parts[i].split('\\n'), 'name', '=')) {\n                result.push(parseWindowsAudio(parts[i].split('\\n')));\n              }\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.audio = audio;\n","'use strict';\n// @ts-check;\n// ==================================================================================\n// battery.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 6. Battery\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst fs = require('fs');\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction parseWinBatteryPart(lines, designedCapacity, fullChargeCapacity) {\n  const result = {};\n  let status = util.getValue(lines, 'BatteryStatus', '=').trim();\n  // 1 = \"Discharging\"\n  // 2 = \"On A/C\"\n  // 3 = \"Fully Charged\"\n  // 4 = \"Low\"\n  // 5 = \"Critical\"\n  // 6 = \"Charging\"\n  // 7 = \"Charging High\"\n  // 8 = \"Charging Low\"\n  // 9 = \"Charging Critical\"\n  // 10 = \"Undefined\"\n  // 11 = \"Partially Charged\"\n  if (status >= 0) {\n    const statusValue = status ? parseInt(status) : 0;\n    result.status = statusValue;\n    result.hasBattery = true;\n    result.maxCapacity = fullChargeCapacity || parseInt(util.getValue(lines, 'DesignCapacity', '=') || 0);\n    result.designedCapacity = parseInt(util.getValue(lines, 'DesignCapacity', '=') || designedCapacity);\n    result.voltage = parseInt(util.getValue(lines, 'DesignVoltage', '=') || 0) / 1000.0;\n    result.capacityUnit = 'mWh';\n    result.percent = parseInt(util.getValue(lines, 'EstimatedChargeRemaining', '=') || 0);\n    result.currentCapacity = parseInt(result.maxCapacity * result.percent / 100);\n    result.isCharging = (statusValue >= 6 && statusValue <= 9) || statusValue === 11 || (!(statusValue === 3) && !(statusValue === 1) && result.percent < 100);\n    result.acConnected = result.ischarging || statusValue === 2;\n    result.model = util.getValue(lines, 'DeviceID', '=');\n  } else {\n    result.status = -1;\n  }\n\n  return result;\n}\n\nmodule.exports = function (callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        hasBattery: false,\n        cycleCount: 0,\n        isCharging: false,\n        designedCapacity: 0,\n        maxCapacity: 0,\n        currentCapacity: 0,\n        voltage: 0,\n        capacityUnit: '',\n        percent: 0,\n        timeRemaining: null,\n        acConnected: true,\n        type: '',\n        model: '',\n        manufacturer: '',\n        serial: ''\n      };\n\n      if (_linux) {\n        let battery_path = '';\n        if (fs.existsSync('/sys/class/power_supply/BAT1/uevent')) {\n          battery_path = '/sys/class/power_supply/BAT1/';\n        } else if (fs.existsSync('/sys/class/power_supply/BAT0/uevent')) {\n          battery_path = '/sys/class/power_supply/BAT0/';\n        }\n\n        let acConnected = false;\n        let acPath = '';\n        if (fs.existsSync('/sys/class/power_supply/AC/online')) {\n          acPath = '/sys/class/power_supply/AC/online';\n        } else if (fs.existsSync('/sys/class/power_supply/AC0/online')) {\n          acPath = '/sys/class/power_supply/AC0/online';\n        }\n\n        if (acPath) {\n          const file = fs.readFileSync(acPath);\n          acConnected = file.toString().trim() === '1';\n        }\n\n        if (battery_path) {\n          fs.readFile(battery_path + 'uevent', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n\n              result.isCharging = (util.getValue(lines, 'POWER_SUPPLY_STATUS', '=').toLowerCase() === 'charging');\n              result.acConnected = acConnected || result.isCharging;\n              result.voltage = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_VOLTAGE_NOW', '='), 10) / 1000000.0;\n              result.capacityUnit = result.voltage ? 'mWh' : 'mAh';\n              result.cycleCount = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CYCLE_COUNT', '='), 10);\n              result.maxCapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_FULL', '=', true, true), 10) / 1000.0 * (result.voltage || 1));\n              const desingedMinVoltage = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_VOLTAGE_MIN_DESIGN', '='), 10) / 1000000.0;\n              result.designedCapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_FULL_DESIGN', '=', true, true), 10) / 1000.0 * (desingedMinVoltage || result.voltage || 1));\n              result.currentCapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_NOW', '='), 10) / 1000.0 * (result.voltage || 1));\n              if (!result.maxCapacity) {\n                result.maxCapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_FULL', '=', true, true), 10) / 1000.0;\n                result.designedCapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_FULL_DESIGN', true, true, '='), 10) / 1000.0 | result.maxCapacity;\n                result.currentCapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_NOW', '='), 10) / 1000.0;\n              }\n              const percent = util.getValue(lines, 'POWER_SUPPLY_CAPACITY', '=');\n              const energy = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_NOW', '='), 10);\n              const power = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_POWER_NOW', '='), 10);\n              const current = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CURRENT_NOW', '='), 10);\n\n              result.percent = parseInt('0' + percent, 10);\n              if (result.maxCapacity && result.currentCapacity) {\n                result.hasBattery = true;\n                if (!percent) {\n                  result.percent = 100.0 * result.currentCapacity / result.maxCapacity;\n                }\n              }\n              if (result.isCharging) {\n                result.hasBattery = true;\n              }\n              if (energy && power) {\n                result.timeRemaining = Math.floor(energy / power * 60);\n              } else if (current && result.currentCapacity) {\n                result.timeRemaining = Math.floor(result.currentCapacity / current * 60);\n              }\n              result.type = util.getValue(lines, 'POWER_SUPPLY_TECHNOLOGY', '=');\n              result.model = util.getValue(lines, 'POWER_SUPPLY_MODEL_NAME', '=');\n              result.manufacturer = util.getValue(lines, 'POWER_SUPPLY_MANUFACTURER', '=');\n              result.serial = util.getValue(lines, 'POWER_SUPPLY_SERIAL_NUMBER', '=');\n              if (callback) { callback(result); }\n              resolve(result);\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('sysctl hw.acpi.battery hw.acpi.acline', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          const batteries = parseInt('0' + util.getValue(lines, 'hw.acpi.battery.units'), 10);\n          const percent = parseInt('0' + util.getValue(lines, 'hw.acpi.battery.life'), 10);\n          result.hasBattery = (batteries > 0);\n          result.cycleCount = null;\n          result.isCharging = util.getValue(lines, 'hw.acpi.acline') !== '1';\n          result.acConnected = result.isCharging;\n          result.maxCapacity = null;\n          result.currentCapacity = null;\n          result.capacityUnit = 'unknown';\n          result.percent = batteries ? percent : null;\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('ioreg -n AppleSmartBattery -r | egrep \"CycleCount|IsCharging|DesignCapacity|MaxCapacity|CurrentCapacity|BatterySerialNumber|TimeRemaining|Voltage\"; pmset -g batt | grep %', function (error, stdout) {\n          if (stdout) {\n            let lines = stdout.toString().replace(/ +/g, '').replace(/\"+/g, '').replace(/-/g, '').split('\\n');\n            result.cycleCount = parseInt('0' + util.getValue(lines, 'cyclecount', '='), 10);\n            result.voltage = parseInt('0' + util.getValue(lines, 'voltage', '='), 10) / 1000.0;\n            result.capacityUnit = result.voltage ? 'mWh' : 'mAh';\n            result.maxCapacity = Math.round(parseInt('0' + util.getValue(lines, 'maxcapacity', '='), 10) * (result.voltage || 1));\n            result.currentCapacity = Math.round(parseInt('0' + util.getValue(lines, 'currentcapacity', '='), 10) * (result.voltage || 1));\n            result.designedCapacity = Math.round(parseInt('0' + util.getValue(lines, 'DesignCapacity', '='), 10) * (result.voltage || 1));\n            result.manufacturer = 'Apple';\n            result.serial = util.getValue(lines, 'BatterySerialNumber', '=');\n            let percent = null;\n            const line = util.getValue(lines, 'internal', 'Battery');\n            let parts = line.split(';');\n            if (parts && parts[0]) {\n              let parts2 = parts[0].split('\\t');\n              if (parts2 && parts2[1]) {\n                percent = parseFloat(parts2[1].trim().replace(/%/g, ''));\n              }\n            }\n            if (parts && parts[1]) {\n              result.isCharging = (parts[1].trim() === 'charging');\n              result.acConnected = (parts[1].trim() !== 'discharging');\n            } else {\n              result.isCharging = util.getValue(lines, 'ischarging', '=').toLowerCase() === 'yes';\n              result.acConnected = result.isCharging;\n            }\n            if (result.maxCapacity && result.currentCapacity) {\n              result.hasBattery = true;\n              result.type = 'Li-ion';\n              result.percent = percent !== null ? percent : Math.round(100.0 * result.currentCapacity / result.maxCapacity);\n              if (!result.isCharging) {\n                result.timeRemaining = parseInt('0' + util.getValue(lines, 'TimeRemaining', '='), 10);\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          const workload = [];\n          workload.push(util.wmic('Path Win32_Battery Get /value'));\n          workload.push(util.powerShell('(Get-WmiObject -Class BatteryStaticData -Namespace ROOT/WMI).DesignedCapacity'));\n          workload.push(util.powerShell('(Get-WmiObject -Class BatteryFullChargedCapacity -Namespace ROOT/WMI).FullChargedCapacity'));\n          util.promiseAll(\n            workload\n          ).then(data => {\n            if (data) {\n              // let parts = data.results[0].split(/\\n\\s*\\n/);\n              let parts = data.results[0].split('\\r\\n');\n              let batteries = [];\n              const hasValue = value => /\\S/.test(value);\n              for (let i = 0; i < parts.length; i++) {\n                if (hasValue(parts[i]) && (!batteries.length || !hasValue(parts[i - 1]))) {\n                  batteries.push([]);\n                }\n                if (hasValue(parts[i])) {\n                  batteries[batteries.length - 1].push(parts[i]);\n                }\n              }\n              let designCapacities = data.results[1].split('\\r\\n');\n              let fullChargeCapacities = data.results[2].split('\\r\\n');\n              if (batteries.length) {\n                let first = false;\n                let additionalBatteries = [];\n                for (let i = 0; i < batteries.length; i++) {\n                  let lines = batteries[i];\n                  const designedCapacity = designCapacities && designCapacities.length >= (i + 1) && designCapacities[i] ? util.toInt(designCapacities[i]) : 0;\n                  const fullChargeCapacity = fullChargeCapacities && fullChargeCapacities.length >= (i + 1) && fullChargeCapacities[i] ? util.toInt(fullChargeCapacities[i]) : 0;\n                  const parsed = parseWinBatteryPart(lines, designedCapacity, fullChargeCapacity);\n                  if (!first && parsed.status > 0 && parsed.status !== 10) {\n                    result.hasBattery = parsed.hasBattery;\n                    result.maxCapacity = parsed.maxCapacity;\n                    result.designedCapacity = parsed.designedCapacity;\n                    result.voltage = parsed.voltage;\n                    result.capacityUnit = parsed.capacityUnit;\n                    result.percent = parsed.percent;\n                    result.currentCapacity = parsed.currentCapacity;\n                    result.isCharging = parsed.isCharging;\n                    result.acConnected = parsed.acConnected;\n                    result.model = parsed.model;\n                    first = true;\n                  } else if (parsed.status !== -1) {\n                    additionalBatteries.push(\n                      {\n                        hasBattery: parsed.hasBattery,\n                        maxCapacity: parsed.maxCapacity,\n                        designedCapacity: parsed.designedCapacity,\n                        voltage: parsed.voltage,\n                        capacityUnit: parsed.capacityUnit,\n                        percent: parsed.percent,\n                        currentCapacity: parsed.currentCapacity,\n                        isCharging: parsed.isCharging,\n                        timeRemaining: null,\n                        acConnected: parsed.acConnected,\n                        model: parsed.model,\n                        type: '',\n                        manufacturer: '',\n                        serial: ''\n                      }\n                    );\n                  }\n                }\n                if (!first && additionalBatteries.length) {\n                  result = additionalBatteries[0];\n                  additionalBatteries.shift();\n                }\n                if (additionalBatteries.length) {\n                  result.additionalBatteries = additionalBatteries;\n                }\n              }\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n};\n","'use strict';\n// @ts-check\n// ==================================================================================\n// audio.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 17. bluetooth\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst path = require('path');\nconst util = require('./util');\nconst fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction parseBluetoothTyoe(str) {\n  let result = '';\n\n  if (str.indexOf('keyboard') >= 0) { result = 'Keyboard'; }\n  if (str.indexOf('mouse') >= 0) { result = 'Mouse'; }\n  if (str.indexOf('speaker') >= 0) { result = 'Speaker'; }\n  if (str.indexOf('headset') >= 0) { result = 'Headset'; }\n  if (str.indexOf('phone') >= 0) { result = 'Phone'; }\n  // to be continued ...\n\n  return result;\n}\n\nfunction parseLinuxBluetoothInfo(lines, macAddr1, macAddr2) {\n  const result = {};\n\n  result.device = null;\n  result.name = util.getValue(lines, 'name', '=');\n  result.manufacturer = null;\n  result.macDevice = macAddr1;\n  result.macHost = macAddr2;\n  result.batteryPercent = null;\n  result.type = parseBluetoothTyoe(result.name.toLowerCase());\n  result.connected = false;\n\n  return result;\n}\n\nfunction parseDarwinBluetoothDevices(bluetoothObject, macAddr2) {\n  const result = {};\n  const typeStr = ((bluetoothObject.device_minorClassOfDevice_string || bluetoothObject.device_majorClassOfDevice_string || '') + (bluetoothObject.device_name || '')).toLowerCase();\n\n  result.device = bluetoothObject.device_services || '';\n  result.name = bluetoothObject.device_name || '';\n  result.manufacturer = bluetoothObject.device_manufacturer || '';\n  result.macDevice = (bluetoothObject.device_addr || '').toLowerCase().replace(/-/g, ':');\n  result.macHost = macAddr2;\n  result.batteryPercent = bluetoothObject.device_batteryPercent || null;\n  result.type = parseBluetoothTyoe(typeStr);\n  result.connected = bluetoothObject.device_isconnected === 'attrib_Yes' || false;\n\n  return result;\n}\n\nfunction parseWindowsBluetooth(lines) {\n  const result = {};\n\n  result.device = null;\n  result.name = util.getValue(lines, 'name', '=');\n  result.manufacturer = util.getValue(lines, 'manufacturer', '=');\n  result.macDevice = null;\n  result.macHost = null;\n  result.batteryPercent = null;\n  result.type = parseBluetoothTyoe(result.name.toLowerCase());\n  result.connected = null;\n\n  return result;\n}\n\nfunction bluetoothDevices(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux) {\n        // get files in /var/lib/bluetooth/ recursive\n        const btFiles = util.getFilesInPath('/var/lib/bluetooth/');\n        for (let i = 0; i < btFiles.length; i++) {\n          const filename = path.basename(btFiles[i]);\n          const pathParts = btFiles[i].split('/');\n          const macAddr1 = pathParts.length >= 6 ? pathParts[pathParts.length - 2] : null;\n          const macAddr2 = pathParts.length >= 7 ? pathParts[pathParts.length - 3] : null;\n          if (filename === 'info') {\n            const infoFile = fs.readFileSync(btFiles[i], { encoding: 'utf8' }).split('\\n');\n            result.push(parseLinuxBluetoothInfo(infoFile, macAddr1, macAddr2));\n          }\n        }\n        // determine \"connected\" with hcitool con\n        try {\n          const hdicon = execSync('hcitool con').toString().toLowerCase();\n          for (let i = 0; i < result.length; i++) {\n            if (result[i].macDevice && result[i].macDevice.length > 10 && hdicon.indexOf(result[i].macDevice.toLowerCase()) >= 0) {\n              result[i].connected = true;\n            }\n          }\n        } catch (e) {\n          util.noop();\n        }\n\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n      if (_darwin) {\n        let cmd = 'system_profiler SPBluetoothDataType -json';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              const outObj = JSON.parse(stdout.toString());\n              if (outObj.SPBluetoothDataType && outObj.SPBluetoothDataType.length && outObj.SPBluetoothDataType[0] && outObj.SPBluetoothDataType[0]['device_title'] && outObj.SPBluetoothDataType[0]['device_title'].length) {\n                // missing: host BT Adapter macAddr ()\n                let macAddr2 = null;\n                if (outObj.SPBluetoothDataType[0]['local_device_title'] && outObj.SPBluetoothDataType[0].local_device_title.general_address) {\n                  macAddr2 = outObj.SPBluetoothDataType[0].local_device_title.general_address.toLowerCase().replace(/-/g, ':');\n                }\n\n                for (let i = 0; i < outObj.SPBluetoothDataType[0]['device_title'].length; i++) {\n                  const obj = outObj.SPBluetoothDataType[0]['device_title'][i];\n                  const objKey = Object.keys(obj);\n                  if (objKey && objKey.length === 1) {\n                    const innerObject = obj[objKey[0]];\n                    innerObject.device_name = objKey[0];\n                    const bluetoothDevice = parseDarwinBluetoothDevices(innerObject, macAddr2);\n                    result.push(bluetoothDevice);\n                  }\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        util.wmic('path Win32_PNPEntity get /value', function (error, stdout) {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n            for (let i = 0; i < parts.length; i++) {\n              if (util.getValue(parts[i].split('\\n'), 'PNPClass', '=') === 'Bluetooth') {\n                result.push(parseWindowsBluetooth(parts[i].split('\\n')));\n              }\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_freebsd || _netbsd || _openbsd || _sunos) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.bluetoothDevices = bluetoothDevices;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// cpu.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 4. CPU\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _cpu_speed = 0;\nlet _current_cpu = {\n  user: 0,\n  nice: 0,\n  system: 0,\n  idle: 0,\n  irq: 0,\n  load: 0,\n  tick: 0,\n  ms: 0,\n  currentLoad: 0,\n  currentLoadUser: 0,\n  currentLoadSystem: 0,\n  currentLoadNice: 0,\n  currentLoadIdle: 0,\n  currentLoadIrq: 0,\n  rawCurrentLoad: 0,\n  rawCurrentLoadUser: 0,\n  rawCurrentLoadSystem: 0,\n  rawCurrentLoadNice: 0,\n  rawCurrentLoadIdle: 0,\n  rawCurrentLoadIrq: 0\n};\nlet _cpus = [];\nlet _corecount = 0;\n\nconst AMDBaseFrequencies = {\n  '8346': '1.8',\n  '8347': '1.9',\n  '8350': '2.0',\n  '8354': '2.2',\n  '8356|SE': '2.4',\n  '8356': '2.3',\n  '8360': '2.5',\n  '2372': '2.1',\n  '2373': '2.1',\n  '2374': '2.2',\n  '2376': '2.3',\n  '2377': '2.3',\n  '2378': '2.4',\n  '2379': '2.4',\n  '2380': '2.5',\n  '2381': '2.5',\n  '2382': '2.6',\n  '2384': '2.7',\n  '2386': '2.8',\n  '2387': '2.8',\n  '2389': '2.9',\n  '2393': '3.1',\n  '8374': '2.2',\n  '8376': '2.3',\n  '8378': '2.4',\n  '8379': '2.4',\n  '8380': '2.5',\n  '8381': '2.5',\n  '8382': '2.6',\n  '8384': '2.7',\n  '8386': '2.8',\n  '8387': '2.8',\n  '8389': '2.9',\n  '8393': '3.1',\n  '2419EE': '1.8',\n  '2423HE': '2.0',\n  '2425HE': '2.1',\n  '2427': '2.2',\n  '2431': '2.4',\n  '2435': '2.6',\n  '2439SE': '2.8',\n  '8425HE': '2.1',\n  '8431': '2.4',\n  '8435': '2.6',\n  '8439SE': '2.8',\n  '4122': '2.2',\n  '4130': '2.6',\n  '4162EE': '1.7',\n  '4164EE': '1.8',\n  '4170HE': '2.1',\n  '4174HE': '2.3',\n  '4176HE': '2.4',\n  '4180': '2.6',\n  '4184': '2.8',\n  '6124HE': '1.8',\n  '6128HE': '2.0',\n  '6132HE': '2.2',\n  '6128': '2.0',\n  '6134': '2.3',\n  '6136': '2.4',\n  '6140': '2.6',\n  '6164HE': '1.7',\n  '6166HE': '1.8',\n  '6168': '1.9',\n  '6172': '2.1',\n  '6174': '2.2',\n  '6176': '2.3',\n  '6176SE': '2.3',\n  '6180SE': '2.5',\n  '3250': '2.5',\n  '3260': '2.7',\n  '3280': '2.4',\n  '4226': '2.7',\n  '4228': '2.8',\n  '4230': '2.9',\n  '4234': '3.1',\n  '4238': '3.3',\n  '4240': '3.4',\n  '4256': '1.6',\n  '4274': '2.5',\n  '4276': '2.6',\n  '4280': '2.8',\n  '4284': '3.0',\n  '6204': '3.3',\n  '6212': '2.6',\n  '6220': '3.0',\n  '6234': '2.4',\n  '6238': '2.6',\n  '6262HE': '1.6',\n  '6272': '2.1',\n  '6274': '2.2',\n  '6276': '2.3',\n  '6278': '2.4',\n  '6282SE': '2.6',\n  '6284SE': '2.7',\n  '6308': '3.5',\n  '6320': '2.8',\n  '6328': '3.2',\n  '6338P': '2.3',\n  '6344': '2.6',\n  '6348': '2.8',\n  '6366': '1.8',\n  '6370P': '2.0',\n  '6376': '2.3',\n  '6378': '2.4',\n  '6380': '2.5',\n  '6386': '2.8',\n  'FX|4100': '3.6',\n  'FX|4120': '3.9',\n  'FX|4130': '3.8',\n  'FX|4150': '3.8',\n  'FX|4170': '4.2',\n  'FX|6100': '3.3',\n  'FX|6120': '3.6',\n  'FX|6130': '3.6',\n  'FX|6200': '3.8',\n  'FX|8100': '2.8',\n  'FX|8120': '3.1',\n  'FX|8140': '3.2',\n  'FX|8150': '3.6',\n  'FX|8170': '3.9',\n  'FX|4300': '3.8',\n  'FX|4320': '4.0',\n  'FX|4350': '4.2',\n  'FX|6300': '3.5',\n  'FX|6350': '3.9',\n  'FX|8300': '3.3',\n  'FX|8310': '3.4',\n  'FX|8320': '3.5',\n  'FX|8350': '4.0',\n  'FX|8370': '4.0',\n  'FX|9370': '4.4',\n  'FX|9590': '4.7',\n  'FX|8320E': '3.2',\n  'FX|8370E': '3.3',\n\n  // ZEN Desktop CPUs\n  '1200': '3.1',\n  'Pro 1200': '3.1',\n  '1300X': '3.5',\n  'Pro 1300': '3.5',\n  '1400': '3.2',\n  '1500X': '3.5',\n  'Pro 1500': '3.5',\n  '1600': '3.2',\n  '1600X': '3.6',\n  'Pro 1600': '3.2',\n  '1700': '3.0',\n  'Pro 1700': '3.0',\n  '1700X': '3.4',\n  'Pro 1700X': '3.4',\n  '1800X': '3.6',\n  '1900X': '3.8',\n  '1920': '3.2',\n  '1920X': '3.5',\n  '1950X': '3.4',\n\n  // ZEN Desktop APUs\n  '200GE': '3.2',\n  'Pro 200GE': '3.2',\n  '220GE': '3.4',\n  '240GE': '3.5',\n  '3000G': '3.5',\n  '300GE': '3.4',\n  '3050GE': '3.4',\n  '2200G': '3.5',\n  'Pro 2200G': '3.5',\n  '2200GE': '3.2',\n  'Pro 2200GE': '3.2',\n  '2400G': '3.6',\n  'Pro 2400G': '3.6',\n  '2400GE': '3.2',\n  'Pro 2400GE': '3.2',\n\n  // ZEN Mobile APUs\n  'Pro 200U': '2.3',\n  '300U': '2.4',\n  '2200U': '2.5',\n  '3200U': '2.6',\n  '2300U': '2.0',\n  'Pro 2300U': '2.0',\n  '2500U': '2.0',\n  'Pro 2500U': '2.2',\n  '2600H': '3.2',\n  '2700U': '2.0',\n  'Pro 2700U': '2.2',\n  '2800H': '3.3',\n\n  // ZEN Server Processors\n  '7351': '2.4',\n  '7351P': '2.4',\n  '7401': '2.0',\n  '7401P': '2.0',\n  '7551P': '2.0',\n  '7551': '2.0',\n  '7251': '2.1',\n  '7261': '2.5',\n  '7281': '2.1',\n  '7301': '2.2',\n  '7371': '3.1',\n  '7451': '2.3',\n  '7501': '2.0',\n  '7571': '2.2',\n  '7601': '2.2',\n\n  // ZEN Embedded Processors\n  'V1500B': '2.2',\n  'V1780B': '3.35',\n  'V1202B': '2.3',\n  'V1404I': '2.0',\n  'V1605B': '2.0',\n  'V1756B': '3.25',\n  'V1807B': '3.35',\n\n  '3101': '2.1',\n  '3151': '2.7',\n  '3201': '1.5',\n  '3251': '2.5',\n  '3255': '2.5',\n  '3301': '2.0',\n  '3351': '1.9',\n  '3401': '1.85',\n  '3451': '2.15',\n\n  // ZEN+ Desktop\n  '1200|AF': '3.1',\n  '2300X': '3.5',\n  '2500X': '3.6',\n  '2600': '3.4',\n  '2600E': '3.1',\n  '1600|AF': '3.2',\n  '2600X': '3.6',\n  '2700': '3.2',\n  '2700E': '2.8',\n  'Pro 2700': '3.2',\n  '2700X': '3.7',\n  'Pro 2700X': '3.6',\n  '2920X': '3.5',\n  '2950X': '3.5',\n  '2970WX': '3.0',\n  '2990WX': '3.0',\n\n  // ZEN+ Desktop APU\n  'Pro 300GE': '3.4',\n  'Pro 3125GE': '3.4',\n  '3150G': '3.5',\n  'Pro 3150G': '3.5',\n  '3150GE': '3.3',\n  'Pro 3150GE': '3.3',\n  '3200G': '3.6',\n  'Pro 3200G': '3.6',\n  '3200GE': '3.3',\n  'Pro 3200GE': '3.3',\n  '3350G': '3.6',\n  'Pro 3350G': '3.6',\n  '3350GE': '3.3',\n  'Pro 3350GE': '3.3',\n  '3400G': '3.7',\n  'Pro 3400G': '3.7',\n  '3400GE': '3.3',\n  'Pro 3400GE': '3.3',\n\n  // ZEN+ Mobile\n  '3300U': '2.1',\n  'PRO 3300U': '2.1',\n  '3450U': '2.1',\n  '3500U': '2.1',\n  'PRO 3500U': '2.1',\n  '3500C': '2.1',\n  '3550H': '2.1',\n  '3580U': '2.1',\n  '3700U': '2.3',\n  'PRO 3700U': '2.3',\n  '3700C': '2.3',\n  '3750H': '2.3',\n  '3780U': '2.3',\n\n  // ZEN2 Desktop CPUS\n  '3100': '3.6',\n  '3300X': '3.8',\n  '3500': '3.6',\n  '3500X': '3.6',\n  '3600': '3.6',\n  'Pro 3600': '3.6',\n  '3600X': '3.8',\n  '3600XT': '3.8',\n  'Pro 3700': '3.6',\n  '3700X': '3.6',\n  '3800X': '3.9',\n  '3800XT': '3.9',\n  '3900': '3.1',\n  'Pro 3900': '3.1',\n  '3900X': '3.8',\n  '3900XT': '3.8',\n  '3950X': '3.5',\n  '3960X': '3.8',\n  '3970X': '3.7',\n  '3990X': '2.9',\n  '3945WX': '4.0',\n  '3955WX': '3.9',\n  '3975WX': '3.5',\n  '3995WX': '2.7',\n\n  // ZEN2 Desktop APUs\n  '4300GE': '3.5',\n  'Pro 4300GE': '3.5',\n  '4300G': '3.8',\n  'Pro 4300G': '3.8',\n  '4600GE': '3.3',\n  'Pro 4650GE': '3.3',\n  '4600G': '3.7',\n  'Pro 4650G': '3.7',\n  '4700GE': '3.1',\n  'Pro 4750GE': '3.1',\n  '4700G': '3.6',\n  'Pro 4750G': '3.6',\n  '4300U': '2.7',\n  'Pro 4450U': '2.5',\n  '4500U': '2.3',\n  '4600U': '2.1',\n  'PRO 4650U': '2.1',\n  '4600HS': '3.0',\n  '4600H': '3.0',\n  '4700U': '2.0',\n  'PRO 4750U': '1.7',\n  '4800U': '1.8',\n  '4800HS': '2.9',\n  '4800H': '2.9',\n  '4900HS': '3.0',\n  '4900H': '3.3',\n\n  // ZEN2 - EPYC\n  '7232P': '3.1',\n  '7302P': '3.0',\n  '7402P': '2.8',\n  '7502P': '2.5',\n  '7702P': '2.0',\n  '7252': '3.1',\n  '7262': '3.2',\n  '7272': '2.9',\n  '7282': '2.8',\n  '7302': '3.0',\n  '7352': '2.3',\n  '7402': '2.8',\n  '7452': '2.35',\n  '7502': '2.5',\n  '7532': '2.4',\n  '7542': '2.9',\n  '7552': '2.2',\n  '7642': '2.3',\n  '7662': '2.0',\n  '7702': '2.0',\n  '7742': '2.25',\n  '7H12': '2.6',\n  '7F32': '3.7',\n  '7F52': '3.5',\n  '7F72': '3.2',\n\n  // ZEN3\n  '5600X': '3.7',\n  '5800X': '3.8',\n  '5900X': '3.7',\n  '5950X': '3.4'\n};\n\nconst socketTypes = {\n  1: 'Other',\n  2: 'Unknown',\n  3: 'Daughter Board',\n  4: 'ZIF Socket',\n  5: 'Replacement/Piggy Back',\n  6: 'None',\n  7: 'LIF Socket',\n  8: 'Slot 1',\n  9: 'Slot 2',\n  10: '370 Pin Socket',\n  11: 'Slot A',\n  12: 'Slot M',\n  13: '423',\n  14: 'A (Socket 462)',\n  15: '478',\n  16: '754',\n  17: '940',\n  18: '939',\n  19: 'mPGA604',\n  20: 'LGA771',\n  21: 'LGA775',\n  22: 'S1',\n  23: 'AM2',\n  24: 'F (1207)',\n  25: 'LGA1366',\n  26: 'G34',\n  27: 'AM3',\n  28: 'C32',\n  29: 'LGA1156',\n  30: 'LGA1567',\n  31: 'PGA988A',\n  32: 'BGA1288',\n  33: 'rPGA988B',\n  34: 'BGA1023',\n  35: 'BGA1224',\n  36: 'LGA1155',\n  37: 'LGA1356',\n  38: 'LGA2011',\n  39: 'FS1',\n  40: 'FS2',\n  41: 'FM1',\n  42: 'FM2',\n  43: 'LGA2011-3',\n  44: 'LGA1356-3',\n  45: 'LGA1150',\n  46: 'BGA1168',\n  47: 'BGA1234',\n  48: 'BGA1364',\n  49: 'AM4',\n  50: 'LGA1151',\n  51: 'BGA1356',\n  52: 'BGA1440',\n  53: 'BGA1515',\n  54: 'LGA3647-1',\n  55: 'SP3',\n  56: 'SP3r2',\n  57: 'LGA2066',\n  58: 'BGA1392',\n  59: 'BGA1510',\n  60: 'BGA1528',\n  61: 'LGA4189',\n  62: 'LGA1200',\n};\n\nfunction cpuBrandManufacturer(res) {\n  res.brand = res.brand.replace(/\\(R\\)+/g, '®').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/\\(TM\\)+/g, '™').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/\\(C\\)+/g, '©').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/CPU+/g, '').replace(/\\s+/g, ' ').trim();\n  res.manufacturer = res.brand.split(' ')[0];\n\n  let parts = res.brand.split(' ');\n  parts.shift();\n  res.brand = parts.join(' ');\n  return res;\n}\n\nfunction getAMDSpeed(brand) {\n  let result = '0';\n  for (let key in AMDBaseFrequencies) {\n    if ({}.hasOwnProperty.call(AMDBaseFrequencies, key)) {\n      let parts = key.split('|');\n      let found = 0;\n      parts.forEach(item => {\n        if (brand.indexOf(item) > -1) {\n          found++;\n        }\n      });\n      if (found === parts.length) {\n        result = AMDBaseFrequencies[key];\n      }\n    }\n  }\n  return parseFloat(result);\n}\n\n// --------------------------\n// CPU - brand, speed\n\nfunction getCpu() {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const UNKNOWN = 'unknown';\n      let result = {\n        manufacturer: UNKNOWN,\n        brand: UNKNOWN,\n        vendor: '',\n        family: '',\n        model: '',\n        stepping: '',\n        revision: '',\n        voltage: '',\n        speed: 0,\n        speedMin: 0,\n        speedMax: 0,\n        governor: '',\n        cores: util.cores(),\n        physicalCores: util.cores(),\n        processors: 1,\n        socket: '',\n        flags: '',\n        virtualization: false,\n        cache: {}\n      };\n      cpuFlags().then(flags => {\n        result.flags = flags;\n        result.virtualization = flags.indexOf('vmx') > -1 || flags.indexOf('svm') > -1;\n        // if (_windows) {\n        //   try {\n        //     const systeminfo = execSync('systeminfo', util.execOptsWin).toString();\n        //     result.virtualization = result.virtualization || (systeminfo.indexOf('Virtualization Enabled In Firmware: Yes') !== -1) || (systeminfo.indexOf('Virtualisierung in Firmware aktiviert: Ja') !== -1) || (systeminfo.indexOf('Virtualisation activée dans le microprogramme : Qiu') !== -1);\n        //   } catch (e) {\n        //     util.noop();\n        //   }\n        // }\n        if (_darwin) {\n          exec('sysctl machdep.cpu hw.cpufrequency_max hw.cpufrequency_min hw.packages hw.physicalcpu_max hw.ncpu hw.tbfrequency hw.cpufamily hw.cpusubfamily', function (error, stdout) {\n            let lines = stdout.toString().split('\\n');\n            const modelline = util.getValue(lines, 'machdep.cpu.brand_string');\n            const modellineParts = modelline.split('@');\n            result.brand = modellineParts[0].trim();\n            const speed = modellineParts[1] ? modellineParts[1].trim() : '0';\n            result.speed = parseFloat(speed.replace(/GHz+/g, ''));\n            let tbFrequency = util.getValue(lines, 'hw.tbfrequency') / 1000000000.0;\n            tbFrequency = tbFrequency < 0.1 ? tbFrequency * 100 : tbFrequency;\n            result.speed = result.speed === 0 ? tbFrequency : result.speed;\n\n            _cpu_speed = result.speed;\n            result = cpuBrandManufacturer(result);\n            result.speedMin = util.getValue(lines, 'hw.cpufrequency_min') ? (util.getValue(lines, 'hw.cpufrequency_min') / 1000000000.0) : result.speed;\n            result.speedMax = util.getValue(lines, 'hw.cpufrequency_max') ? (util.getValue(lines, 'hw.cpufrequency_max') / 1000000000.0) : result.speed;\n            result.vendor = util.getValue(lines, 'machdep.cpu.vendor') || 'Apple';\n            result.family = util.getValue(lines, 'machdep.cpu.family') || util.getValue(lines, 'hw.cpufamily');\n            result.model = util.getValue(lines, 'machdep.cpu.model');\n            result.stepping = util.getValue(lines, 'machdep.cpu.stepping') || util.getValue(lines, 'hw.cpusubfamily');\n            const countProcessors = util.getValue(lines, 'hw.packages');\n            const countCores = util.getValue(lines, 'hw.physicalcpu_max');\n            const countThreads = util.getValue(lines, 'hw.ncpu');\n            if (os.arch() === 'arm64') {\n              const clusters = execSync('ioreg -c IOPlatformDevice -d 3 -r | grep cluster-type').toString().split('\\n');\n              const efficiencyCores = clusters.filter(line => line.indexOf('\"E\"') >= 0).length;\n              const performanceCores = clusters.filter(line => line.indexOf('\"P\"') >= 0).length;\n              result.socket = 'SOC';\n              result.efficiencyCores = efficiencyCores;\n              result.performanceCores = performanceCores;\n            }\n            if (countProcessors) {\n              result.processors = parseInt(countProcessors) || 1;\n            }\n            if (countCores && countThreads) {\n              result.cores = parseInt(countThreads) || util.cores();\n              result.physicalCores = parseInt(countCores) || util.cores();\n            }\n            cpuCache().then(res => {\n              result.cache = res;\n              resolve(result);\n            });\n          });\n        }\n        if (_linux) {\n          let modelline = '';\n          let lines = [];\n          if (os.cpus()[0] && os.cpus()[0].model) { modelline = os.cpus()[0].model; }\n          exec('export LC_ALL=C; lscpu; echo -n \"Governor: \"; cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor 2>/dev/null; echo; unset LC_ALL', function (error, stdout) {\n            if (!error) {\n              lines = stdout.toString().split('\\n');\n            }\n            modelline = util.getValue(lines, 'model name') || modelline;\n            const modellineParts = modelline.split('@');\n            result.brand = modellineParts[0].trim();\n            result.speed = modellineParts[1] ? parseFloat(modellineParts[1].trim()) : 0;\n            if (result.speed === 0 && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n              result.speed = getAMDSpeed(result.brand);\n            }\n            if (result.speed === 0) {\n              const current = getCpuCurrentSpeedSync();\n              if (current.avg !== 0) { result.speed = current.avg; }\n            }\n            _cpu_speed = result.speed;\n            result.speedMin = Math.round(parseFloat(util.getValue(lines, 'cpu min mhz').replace(/,/g, '.')) / 10.0) / 100;\n            result.speedMax = Math.round(parseFloat(util.getValue(lines, 'cpu max mhz').replace(/,/g, '.')) / 10.0) / 100;\n\n            result = cpuBrandManufacturer(result);\n            result.vendor = util.getValue(lines, 'vendor id');\n            // if (!result.vendor) { result.vendor = util.getValue(lines, 'anbieterkennung'); }\n\n            result.family = util.getValue(lines, 'cpu family');\n            // if (!result.family) { result.family = util.getValue(lines, 'prozessorfamilie'); }\n            result.model = util.getValue(lines, 'model:');\n            // if (!result.model) { result.model = util.getValue(lines, 'modell:'); }\n            result.stepping = util.getValue(lines, 'stepping');\n            result.revision = util.getValue(lines, 'cpu revision');\n            result.cache.l1d = util.getValue(lines, 'l1d cache');\n            if (result.cache.l1d) { result.cache.l1d = parseInt(result.cache.l1d) * (result.cache.l1d.indexOf('M') !== -1 ? 1024 * 1024 : (result.cache.l1d.indexOf('K') !== -1 ? 1024 : 1)); }\n            result.cache.l1i = util.getValue(lines, 'l1i cache');\n            if (result.cache.l1i) { result.cache.l1i = parseInt(result.cache.l1i) * (result.cache.l1i.indexOf('M') !== -1 ? 1024 * 1024 : (result.cache.l1i.indexOf('K') !== -1 ? 1024 : 1)); }\n            result.cache.l2 = util.getValue(lines, 'l2 cache');\n            if (result.cache.l2) { result.cache.l2 = parseInt(result.cache.l2) * (result.cache.l2.indexOf('M') !== -1 ? 1024 * 1024 : (result.cache.l2.indexOf('K') !== -1 ? 1024 : 1)); }\n            result.cache.l3 = util.getValue(lines, 'l3 cache');\n            if (result.cache.l3) { result.cache.l3 = parseInt(result.cache.l3) * (result.cache.l3.indexOf('M') !== -1 ? 1024 * 1024 : (result.cache.l3.indexOf('K') !== -1 ? 1024 : 1)); }\n\n            const threadsPerCore = util.getValue(lines, 'thread(s) per core') || '1';\n            // const coresPerSocketInt = parseInt(util.getValue(lines, 'cores(s) per socket') || '1', 10);\n            const processors = util.getValue(lines, 'socket(s)') || '1';\n            let threadsPerCoreInt = parseInt(threadsPerCore, 10);\n            let processorsInt = parseInt(processors, 10);\n            result.physicalCores = result.cores / threadsPerCoreInt;\n            result.processors = processorsInt;\n            result.governor = util.getValue(lines, 'governor') || '';\n\n            // Test Raspberry\n            if (result.vendor === 'ARM') {\n              const linesRpi = fs.readFileSync('/proc/cpuinfo').toString().split('\\n');\n              const rPIRevision = util.decodePiCpuinfo(linesRpi);\n              if (rPIRevision.model.toLowerCase().indexOf('raspberry') >= 0) {\n                result.family = result.manufacturer;\n                result.manufacturer = rPIRevision.manufacturer;\n                result.brand = rPIRevision.processor;\n                result.revision = rPIRevision.revisionCode;\n                result.socket = 'SOC';\n              }\n            }\n\n            // socket type\n            let lines2 = [];\n            exec('export LC_ALL=C; dmidecode –t 4 2>/dev/null | grep \"Upgrade: Socket\"; unset LC_ALL', function (error2, stdout2) {\n              lines2 = stdout2.toString().split('\\n');\n              if (lines2 && lines2.length) {\n                result.socket = util.getValue(lines2, 'Upgrade').replace('Socket', '').trim() || result.socket;\n              }\n              resolve(result);\n            });\n          });\n        }\n        if (_freebsd || _openbsd || _netbsd) {\n          let modelline = '';\n          let lines = [];\n          if (os.cpus()[0] && os.cpus()[0].model) { modelline = os.cpus()[0].model; }\n          exec('export LC_ALL=C; dmidecode -t 4; dmidecode -t 7 unset LC_ALL', function (error, stdout) {\n            let cache = [];\n            if (!error) {\n              const data = stdout.toString().split('# dmidecode');\n              const processor = data.length > 1 ? data[1] : '';\n              cache = data.length > 2 ? data[2].split('Cache Information') : [];\n\n              lines = processor.split('\\n');\n            }\n            result.brand = modelline.split('@')[0].trim();\n            result.speed = modelline.split('@')[1] ? parseFloat(modelline.split('@')[1].trim()) : 0;\n            if (result.speed === 0 && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n              result.speed = getAMDSpeed(result.brand);\n            }\n            if (result.speed === 0) {\n              const current = getCpuCurrentSpeedSync();\n              if (current.avg !== 0) { result.speed = current.avg; }\n            }\n            _cpu_speed = result.speed;\n            result.speedMin = result.speed;\n            result.speedMax = Math.round(parseFloat(util.getValue(lines, 'max speed').replace(/Mhz/g, '')) / 10.0) / 100;\n\n            result = cpuBrandManufacturer(result);\n            result.vendor = util.getValue(lines, 'manufacturer');\n            let sig = util.getValue(lines, 'signature');\n            sig = sig.split(',');\n            for (var i = 0; i < sig.length; i++) {\n              sig[i] = sig[i].trim();\n            }\n            result.family = util.getValue(sig, 'Family', ' ', true);\n            result.model = util.getValue(sig, 'Model', ' ', true);\n            result.stepping = util.getValue(sig, 'Stepping', ' ', true);\n            result.revision = '';\n            const voltage = parseFloat(util.getValue(lines, 'voltage'));\n            result.voltage = isNaN(voltage) ? '' : voltage.toFixed(2);\n            for (let i = 0; i < cache.length; i++) {\n              lines = cache[i].split('\\n');\n              let cacheType = util.getValue(lines, 'Socket Designation').toLowerCase().replace(' ', '-').split('-');\n              cacheType = cacheType.length ? cacheType[0] : '';\n              const sizeParts = util.getValue(lines, 'Installed Size').split(' ');\n              let size = parseInt(sizeParts[0], 10);\n              const unit = sizeParts.length > 1 ? sizeParts[1] : 'kb';\n              size = size * (unit === 'kb' ? 1024 : (unit === 'mb' ? 1024 * 1024 : (unit === 'gb' ? 1024 * 1024 * 1024 : 1)));\n              if (cacheType) {\n                if (cacheType === 'l1') {\n                  result.cache[cacheType + 'd'] = size / 2;\n                  result.cache[cacheType + 'i'] = size / 2;\n                } else {\n                  result.cache[cacheType] = size;\n                }\n              }\n            }\n            // socket type\n            result.socket = util.getValue(lines, 'Upgrade').replace('Socket', '').trim();\n            // # threads / # cores\n            const threadCount = util.getValue(lines, 'thread count').trim();\n            const coreCount = util.getValue(lines, 'core count').trim();\n            if (coreCount && threadCount) {\n              result.cores = threadCount;\n              result.physicalCores = coreCount;\n            }\n            resolve(result);\n          });\n        }\n        if (_sunos) {\n          resolve(result);\n        }\n        if (_windows) {\n          try {\n            const workload = [];\n            workload.push(util.wmic('cpu get /value'));\n            workload.push(util.wmic('path Win32_CacheMemory get CacheType,InstalledSize,Purpose'));\n            // workload.push(util.powerShell('Get-ComputerInfo -property \"HyperV*\"'));\n            workload.push(util.powerShell('(Get-CimInstance Win32_ComputerSystem).HypervisorPresent'));\n\n            Promise.all(\n              workload\n            ).then(data => {\n              let lines = data[0].split('\\r\\n');\n              let name = util.getValue(lines, 'name', '=') || '';\n              if (name.indexOf('@') >= 0) {\n                result.brand = name.split('@')[0].trim();\n                result.speed = name.split('@')[1] ? parseFloat(name.split('@')[1].trim()) : 0;\n                _cpu_speed = result.speed;\n              } else {\n                result.brand = name.trim();\n                result.speed = 0;\n              }\n              result = cpuBrandManufacturer(result);\n              result.revision = util.getValue(lines, 'revision', '=');\n              result.cache.l1d = 0;\n              result.cache.l1i = 0;\n              result.cache.l2 = util.getValue(lines, 'l2cachesize', '=');\n              result.cache.l3 = util.getValue(lines, 'l3cachesize', '=');\n              if (result.cache.l2) { result.cache.l2 = parseInt(result.cache.l2, 10) * 1024; }\n              if (result.cache.l3) { result.cache.l3 = parseInt(result.cache.l3, 10) * 1024; }\n              result.vendor = util.getValue(lines, 'manufacturer', '=');\n              result.speedMax = Math.round(parseFloat(util.getValue(lines, 'maxclockspeed', '=').replace(/,/g, '.')) / 10.0) / 100;\n              if (result.speed === 0 && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n                result.speed = getAMDSpeed(result.brand);\n              }\n              if (result.speed === 0) {\n                result.speed = result.speedMax;\n              }\n              result.speedMin = result.speed;\n\n              let description = util.getValue(lines, 'description', '=').split(' ');\n              for (let i = 0; i < description.length; i++) {\n                if (description[i].toLowerCase().startsWith('family') && (i + 1) < description.length && description[i + 1]) {\n                  result.family = description[i + 1];\n                }\n                if (description[i].toLowerCase().startsWith('model') && (i + 1) < description.length && description[i + 1]) {\n                  result.model = description[i + 1];\n                }\n                if (description[i].toLowerCase().startsWith('stepping') && (i + 1) < description.length && description[i + 1]) {\n                  result.stepping = description[i + 1];\n                }\n              }\n              // socket type\n              const socketId = util.getValue(lines, 'UpgradeMethod', '=');\n              if (socketTypes[socketId]) {\n                result.socket = socketTypes[socketId];\n              }\n              // # threads / # cores\n              const countProcessors = util.countLines(lines, 'Caption');\n              const countThreads = util.getValue(lines, 'NumberOfLogicalProcessors', '=');\n              const countCores = util.getValue(lines, 'NumberOfCores', '=');\n              if (countProcessors) {\n                result.processors = parseInt(countProcessors) || 1;\n              }\n              if (countCores && countThreads) {\n                result.cores = parseInt(countThreads) || util.cores();\n                result.physicalCores = parseInt(countCores) || util.cores();\n              }\n              if (countProcessors > 1) {\n                result.cores = result.cores * countProcessors;\n                result.physicalCores = result.physicalCores * countProcessors;\n              }\n              lines = data[1].split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n              lines.forEach(function (line) {\n                if (line !== '') {\n                  line = line.trim().split(/\\s\\s+/);\n                  // L1 Instructions\n                  if (line[2] === 'L1 Cache' && line[0] === '3') {\n                    result.cache.l1i = parseInt(line[1], 10);\n                  }\n                  // L1 Data\n                  if (line[2] === 'L1 Cache' && line[0] === '4') {\n                    result.cache.l1d = parseInt(line[1], 10);\n                  }\n                }\n              });\n              // lines = data[2].split('\\r\\n');\n              // result.virtualization = (util.getValue(lines, 'HyperVRequirementVirtualizationFirmwareEnabled').toLowerCase() === 'true');\n              // result.virtualization = (util.getValue(lines, 'HyperVisorPresent').toLowerCase() === 'true');\n              const hyperv = data[2] ? data[2].toString().toLowerCase() : '';\n              result.virtualization = hyperv.indexOf('true') !== -1;\n\n              resolve(result);\n            });\n          } catch (e) {\n            resolve(result);\n          }\n        }\n      });\n    });\n  });\n}\n\n// --------------------------\n// CPU - Processor Data\n\nfunction cpu(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      getCpu().then(result => {\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.cpu = cpu;\n\n// --------------------------\n// CPU - current speed - in GHz\n\nfunction getCpuCurrentSpeedSync() {\n\n  let cpus = os.cpus();\n  let minFreq = 999999999;\n  let maxFreq = 0;\n  let avgFreq = 0;\n  let cores = [];\n\n  if (cpus && cpus.length) {\n    for (let i in cpus) {\n      if ({}.hasOwnProperty.call(cpus, i)) {\n        let freq = cpus[i].speed > 100 ? (cpus[i].speed + 1) / 1000 : cpus[i].speed / 10;\n        avgFreq = avgFreq + freq;\n        if (freq > maxFreq) { maxFreq = freq; }\n        if (freq < minFreq) { minFreq = freq; }\n        cores.push(parseFloat(freq.toFixed(2)));\n      }\n    }\n    avgFreq = avgFreq / cpus.length;\n    return {\n      min: parseFloat(minFreq.toFixed(2)),\n      max: parseFloat(maxFreq.toFixed(2)),\n      avg: parseFloat((avgFreq).toFixed(2)),\n      cores: cores\n    };\n  } else {\n    return {\n      min: 0,\n      max: 0,\n      avg: 0,\n      cores: cores\n    };\n  }\n}\n\nfunction cpuCurrentSpeed(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = getCpuCurrentSpeedSync();\n      if (result.avg === 0 && _cpu_speed !== 0) {\n        const currCpuSpeed = parseFloat(_cpu_speed);\n        result = {\n          min: currCpuSpeed,\n          max: currCpuSpeed,\n          avg: currCpuSpeed,\n          cores: []\n        };\n      }\n      if (callback) { callback(result); }\n      resolve(result);\n    });\n  });\n}\n\nexports.cpuCurrentSpeed = cpuCurrentSpeed;\n\n// --------------------------\n// CPU - temperature\n// if sensors are installed\n\nfunction cpuTemperature(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        main: null,\n        cores: [],\n        max: null,\n        socket: [],\n        chipset: null\n      };\n      if (_linux) {\n        // CPU Chipset, Socket\n        try {\n          const cmd = 'cat /sys/class/thermal/thermal_zone*/type  2>/dev/null; echo \"-----\"; cat /sys/class/thermal/thermal_zone*/temp 2>/dev/null;';\n          const parts = execSync(cmd).toString().split('-----\\n');\n          if (parts.length === 2) {\n            const lines = parts[0].split('\\n');\n            const lines2 = parts[1].split('\\n');\n            for (let i = 0; i < lines.length; i++) {\n              const line = lines[i].trim();\n              if (line.startsWith('acpi') && lines2[i]) {\n                result.socket.push(Math.round(parseInt(lines2[i], 10) / 100) / 10);\n              }\n              if (line.startsWith('pch') && lines2[i]) {\n                result.chipset = Math.round(parseInt(lines2[i], 10) / 100) / 10;\n              }\n            }\n          }\n        } catch (e) {\n          util.noop();\n        }\n\n        const cmd = 'for mon in /sys/class/hwmon/hwmon*; do for label in \"$mon\"/temp*_label; do if [ -f $label ]; then value=$(echo $label | rev | cut -c 7- | rev)_input; if [ -f \"$value\" ]; then echo $(cat \"$label\")___$(cat \"$value\");  fi; fi; done; done;';\n        try {\n          exec(cmd, function (error, stdout) {\n            let lines = stdout.toString().split('\\n');\n            lines.forEach(line => {\n              const parts = line.split('___');\n              const label = parts[0];\n              const value = parts.length > 1 && parts[1] ? parts[1] : '0';\n              if (value && (label === undefined || (label && label.toLowerCase().startsWith('core')))) {\n                result.cores.push(Math.round(parseInt(value, 10) / 100) / 10);\n              } else if (value && label && result.main === null) {\n                result.main = Math.round(parseInt(value, 10) / 100) / 10;\n              }\n            });\n\n            if (result.cores.length > 0) {\n              if (result.main === null) {\n                result.main = Math.round(result.cores.reduce((a, b) => a + b, 0) / result.cores.length);\n              }\n              let maxtmp = Math.max.apply(Math, result.cores);\n              result.max = (maxtmp > result.main) ? maxtmp : result.main;\n            }\n            if (result.main !== null) {\n              if (result.max === null) {\n                result.max = result.main;\n              }\n              if (callback) { callback(result); }\n              resolve(result);\n              return;\n            }\n            exec('sensors', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                let tdieTemp = null;\n                let newSectionStarts = true;\n                let section = '';\n                lines.forEach(function (line) {\n                  // determine section\n                  if (line.trim() === '') {\n                    newSectionStarts = true;\n                  } else if (newSectionStarts) {\n                    if (line.trim().toLowerCase().startsWith('acpi')) { section = 'acpi'; }\n                    if (line.trim().toLowerCase().startsWith('pch')) { section = 'pch'; }\n                    if (line.trim().toLowerCase().startsWith('core')) { section = 'core'; }\n                    newSectionStarts = false;\n                  }\n                  let regex = /[+-]([^°]*)/g;\n                  let temps = line.match(regex);\n                  let firstPart = line.split(':')[0].toUpperCase();\n                  if (section === 'acpi') {\n                    // socket temp\n                    if (firstPart.indexOf('TEMP') !== -1) {\n                      result.socket.push(parseFloat(temps));\n                    }\n                  } else if (section === 'pch') {\n                    // chipset temp\n                    if (firstPart.indexOf('TEMP') !== -1) {\n                      result.chipset = parseFloat(temps);\n                    }\n                  }\n                  // cpu temp\n                  if (firstPart.indexOf('PHYSICAL') !== -1 || firstPart.indexOf('PACKAGE') !== -1) {\n                    result.main = parseFloat(temps);\n                  }\n                  if (firstPart.indexOf('CORE ') !== -1) {\n                    result.cores.push(parseFloat(temps));\n                  }\n                  if (firstPart.indexOf('TDIE') !== -1 && tdieTemp === null) {\n                    tdieTemp = parseFloat(temps);\n                  }\n                });\n                if (result.cores.length > 0) {\n                  if (result.main === null) {\n                    result.main = Math.round(result.cores.reduce((a, b) => a + b, 0) / result.cores.length);\n                  }\n                  let maxtmp = Math.max.apply(Math, result.cores);\n                  result.max = (maxtmp > result.main) ? maxtmp : result.main;\n                } else {\n                  if (result.main === null && tdieTemp !== null) {\n                    result.main = tdieTemp;\n                    result.max = tdieTemp;\n                  }\n                }\n                if (result.main !== null || result.max !== null) {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                  return;\n                }\n              }\n              fs.stat('/sys/class/thermal/thermal_zone0/temp', function (err) {\n                if (err === null) {\n                  fs.readFile('/sys/class/thermal/thermal_zone0/temp', function (error, stdout) {\n                    if (!error) {\n                      let lines = stdout.toString().split('\\n');\n                      if (lines.length > 0) {\n                        result.main = parseFloat(lines[0]) / 1000.0;\n                        result.max = result.main;\n                      }\n                    }\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  });\n                } else {\n                  exec('/opt/vc/bin/vcgencmd measure_temp', function (error, stdout) {\n                    if (!error) {\n                      let lines = stdout.toString().split('\\n');\n                      if (lines.length > 0 && lines[0].indexOf('=')) {\n                        result.main = parseFloat(lines[0].split('=')[1]);\n                        result.max = result.main;\n                      }\n                    }\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  });\n                }\n              });\n            });\n          });\n        } catch (er) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('sysctl dev.cpu | grep temp', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            let sum = 0;\n            lines.forEach(function (line) {\n              const parts = line.split(':');\n              if (parts.length > 1) {\n                const temp = parseFloat(parts[1].replace(',', '.'));\n                if (temp > result.max) { result.max = temp; }\n                sum = sum + temp;\n                result.cores.push(temp);\n              }\n            });\n            if (result.cores.length) {\n              result.main = Math.round(sum / result.cores.length * 100) / 100;\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        let osxTemp = null;\n        try {\n          osxTemp = require('osx-temperature-sensor');\n        } catch (er) {\n          osxTemp = null;\n        }\n        if (osxTemp) {\n          result = osxTemp.cpuTemperature();\n        }\n\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('/namespace:\\\\\\\\root\\\\wmi PATH MSAcpi_ThermalZoneTemperature get CurrentTemperature').then((stdout, error) => {\n            if (!error) {\n              let sum = 0;\n              let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n              lines.forEach(function (line) {\n                let value = (parseInt(line, 10) - 2732) / 10;\n                sum = sum + value;\n                if (value > result.max) { result.max = value; }\n                result.cores.push(value);\n              });\n              if (result.cores.length) {\n                result.main = sum / result.cores.length;\n              }\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.cpuTemperature = cpuTemperature;\n\n// --------------------------\n// CPU Flags\n\nfunction cpuFlags(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = '';\n      if (_windows) {\n        try {\n          exec('reg query \"HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0\" /v FeatureSet', util.execOptsWin, function (error, stdout) {\n            if (!error) {\n              let flag_hex = stdout.split('0x').pop().trim();\n              let flag_bin_unpadded = parseInt(flag_hex, 16).toString(2);\n              let flag_bin = '0'.repeat(32 - flag_bin_unpadded.length) + flag_bin_unpadded;\n              // empty flags are the reserved fields in the CPUID feature bit list\n              // as found on wikipedia:\n              // https://en.wikipedia.org/wiki/CPUID\n              let all_flags = [\n                'fpu', 'vme', 'de', 'pse', 'tsc', 'msr', 'pae', 'mce', 'cx8', 'apic',\n                '', 'sep', 'mtrr', 'pge', 'mca', 'cmov', 'pat', 'pse-36', 'psn', 'clfsh',\n                '', 'ds', 'acpi', 'mmx', 'fxsr', 'sse', 'sse2', 'ss', 'htt', 'tm', 'ia64', 'pbe'\n              ];\n              for (let f = 0; f < all_flags.length; f++) {\n                if (flag_bin[f] === '1' && all_flags[f] !== '') {\n                  result += ' ' + all_flags[f];\n                }\n              }\n              result = result.trim().toLowerCase();\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_linux) {\n        try {\n\n          exec('export LC_ALL=C; lscpu; unset LC_ALL', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                if (line.split(':')[0].toUpperCase().indexOf('FLAGS') !== -1) {\n                  result = line.split(':')[1].trim().toLowerCase();\n                }\n              });\n            }\n            if (!result) {\n              fs.readFile('/proc/cpuinfo', function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  result = util.getValue(lines, 'features', ':', true).toLowerCase();\n                }\n                if (callback) { callback(result); }\n                resolve(result);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t 4 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          let flags = [];\n          if (!error) {\n            let parts = stdout.toString().split('\\tFlags:');\n            const lines = parts.length > 1 ? parts[1].split('\\tVersion:')[0].split['\\n'] : [];\n            lines.forEach(function (line) {\n              let flag = (line.indexOf('(') ? line.split('(')[0].toLowerCase() : '').trim().replace(/\\t/g, '');\n              if (flag) {\n                flags.push(flag);\n              }\n            });\n          }\n          result = flags.join(' ').trim().toLowerCase();\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('sysctl machdep.cpu.features', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            if (lines.length > 0 && lines[0].indexOf('machdep.cpu.features:') !== -1) {\n              result = lines[0].split(':')[1].trim().toLowerCase();\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.cpuFlags = cpuFlags;\n\n// --------------------------\n// CPU Cache\n\nfunction cpuCache(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        l1d: null,\n        l1i: null,\n        l2: null,\n        l3: null,\n      };\n      if (_linux) {\n        try {\n          exec('export LC_ALL=C; lscpu; unset LC_ALL', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                let parts = line.split(':');\n                if (parts[0].toUpperCase().indexOf('L1D CACHE') !== -1) {\n                  result.l1d = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : (parts[1].indexOf('K') !== -1 ? 1024 : 1));\n                }\n                if (parts[0].toUpperCase().indexOf('L1I CACHE') !== -1) {\n                  result.l1i = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : (parts[1].indexOf('K') !== -1 ? 1024 : 1));\n                }\n                if (parts[0].toUpperCase().indexOf('L2 CACHE') !== -1) {\n                  result.l2 = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : (parts[1].indexOf('K') !== -1 ? 1024 : 1));\n                }\n                if (parts[0].toUpperCase().indexOf('L3 CACHE') !== -1) {\n                  result.l3 = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : (parts[1].indexOf('K') !== -1 ? 1024 : 1));\n                }\n              });\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t 7 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          let cache = [];\n          if (!error) {\n            const data = stdout.toString();\n            cache = data.split('Cache Information');\n            cache.shift();\n          }\n          for (let i = 0; i < cache.length; i++) {\n            const lines = cache[i].split('\\n');\n            let cacheType = util.getValue(lines, 'Socket Designation').toLowerCase().replace(' ', '-').split('-');\n            cacheType = cacheType.length ? cacheType[0] : '';\n            const sizeParts = util.getValue(lines, 'Installed Size').split(' ');\n            let size = parseInt(sizeParts[0], 10);\n            const unit = sizeParts.length > 1 ? sizeParts[1] : 'kb';\n            size = size * (unit === 'kb' ? 1024 : (unit === 'mb' ? 1024 * 1024 : (unit === 'gb' ? 1024 * 1024 * 1024 : 1)));\n            if (cacheType) {\n              if (cacheType === 'l1') {\n                result.cache[cacheType + 'd'] = size / 2;\n                result.cache[cacheType + 'i'] = size / 2;\n              } else {\n                result.cache[cacheType] = size;\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('sysctl hw.l1icachesize hw.l1dcachesize hw.l2cachesize hw.l3cachesize', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            lines.forEach(function (line) {\n              let parts = line.split(':');\n              if (parts[0].toLowerCase().indexOf('hw.l1icachesize') !== -1) {\n                result.l1d = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n              if (parts[0].toLowerCase().indexOf('hw.l1dcachesize') !== -1) {\n                result.l1i = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n              if (parts[0].toLowerCase().indexOf('hw.l2cachesize') !== -1) {\n                result.l2 = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n              if (parts[0].toLowerCase().indexOf('hw.l3cachesize') !== -1) {\n                result.l3 = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n            });\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('cpu get l2cachesize, l3cachesize /value').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.split('\\r\\n');\n              result.l1d = 0;\n              result.l1i = 0;\n              result.l2 = util.getValue(lines, 'l2cachesize', '=');\n              result.l3 = util.getValue(lines, 'l3cachesize', '=');\n              if (result.l2) { result.l2 = parseInt(result.l2, 10) * 1024; }\n              if (result.l3) { result.l3 = parseInt(result.l3, 10) * 1024; }\n            }\n            util.wmic('path Win32_CacheMemory get CacheType,InstalledSize,Purpose').then((stdout, error) => {\n              if (!error) {\n                let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n                lines.forEach(function (line) {\n                  if (line !== '') {\n                    line = line.trim().split(/\\s\\s+/);\n                    // L1 Instructions\n                    if (line[2] === 'L1 Cache' && line[0] === '3') {\n                      result.l1i = parseInt(line[1], 10);\n                    }\n                    // L1 Data\n                    if (line[2] === 'L1 Cache' && line[0] === '4') {\n                      result.l1d = parseInt(line[1], 10);\n                    }\n                  }\n                });\n              }\n              if (callback) { callback(result); }\n              resolve(result);\n            });\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.cpuCache = cpuCache;\n\n// --------------------------\n// CPU - current load - in %\n\nfunction getLoad() {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let loads = os.loadavg().map(function (x) { return x / util.cores(); });\n      let avgLoad = parseFloat((Math.max.apply(Math, loads)).toFixed(2));\n      let result = {};\n\n      let now = Date.now() - _current_cpu.ms;\n      if (now >= 200) {\n        _current_cpu.ms = Date.now();\n        const cpus = os.cpus();\n        let totalUser = 0;\n        let totalSystem = 0;\n        let totalNice = 0;\n        let totalIrq = 0;\n        let totalIdle = 0;\n        let cores = [];\n        _corecount = (cpus && cpus.length) ? cpus.length : 0;\n\n        for (let i = 0; i < _corecount; i++) {\n          const cpu = cpus[i].times;\n          totalUser += cpu.user;\n          totalSystem += cpu.sys;\n          totalNice += cpu.nice;\n          totalIdle += cpu.idle;\n          totalIrq += cpu.irq;\n          let tmpTick = (_cpus && _cpus[i] && _cpus[i].totalTick ? _cpus[i].totalTick : 0);\n          let tmpLoad = (_cpus && _cpus[i] && _cpus[i].totalLoad ? _cpus[i].totalLoad : 0);\n          let tmpUser = (_cpus && _cpus[i] && _cpus[i].user ? _cpus[i].user : 0);\n          let tmpSystem = (_cpus && _cpus[i] && _cpus[i].sys ? _cpus[i].sys : 0);\n          let tmpNice = (_cpus && _cpus[i] && _cpus[i].nice ? _cpus[i].nice : 0);\n          let tmpIdle = (_cpus && _cpus[i] && _cpus[i].idle ? _cpus[i].idle : 0);\n          let tmpIrq = (_cpus && _cpus[i] && _cpus[i].irq ? _cpus[i].irq : 0);\n          _cpus[i] = cpu;\n          _cpus[i].totalTick = _cpus[i].user + _cpus[i].sys + _cpus[i].nice + _cpus[i].irq + _cpus[i].idle;\n          _cpus[i].totalLoad = _cpus[i].user + _cpus[i].sys + _cpus[i].nice + _cpus[i].irq;\n          _cpus[i].currentTick = _cpus[i].totalTick - tmpTick;\n          _cpus[i].load = (_cpus[i].totalLoad - tmpLoad);\n          _cpus[i].loadUser = (_cpus[i].user - tmpUser);\n          _cpus[i].loadSystem = (_cpus[i].sys - tmpSystem);\n          _cpus[i].loadNice = (_cpus[i].nice - tmpNice);\n          _cpus[i].loadIdle = (_cpus[i].idle - tmpIdle);\n          _cpus[i].loadIrq = (_cpus[i].irq - tmpIrq);\n          cores[i] = {};\n          cores[i].load = _cpus[i].load / _cpus[i].currentTick * 100;\n          cores[i].loadUser = _cpus[i].loadUser / _cpus[i].currentTick * 100;\n          cores[i].loadSystem = _cpus[i].loadSystem / _cpus[i].currentTick * 100;\n          cores[i].loadNice = _cpus[i].loadNice / _cpus[i].currentTick * 100;\n          cores[i].loadIdle = _cpus[i].loadIdle / _cpus[i].currentTick * 100;\n          cores[i].loadIrq = _cpus[i].loadIrq / _cpus[i].currentTick * 100;\n          cores[i].rawLoad = _cpus[i].load;\n          cores[i].rawLoadUser = _cpus[i].loadUser;\n          cores[i].rawLoadSystem = _cpus[i].loadSystem;\n          cores[i].rawLoadNice = _cpus[i].loadNice;\n          cores[i].rawLoadIdle = _cpus[i].loadIdle;\n          cores[i].rawLoadIrq = _cpus[i].loadIrq;\n        }\n        let totalTick = totalUser + totalSystem + totalNice + totalIrq + totalIdle;\n        let totalLoad = totalUser + totalSystem + totalNice + totalIrq;\n        let currentTick = totalTick - _current_cpu.tick;\n        result = {\n          avgLoad: avgLoad,\n          currentLoad: (totalLoad - _current_cpu.load) / currentTick * 100,\n          currentLoadUser: (totalUser - _current_cpu.user) / currentTick * 100,\n          currentLoadSystem: (totalSystem - _current_cpu.system) / currentTick * 100,\n          currentLoadNice: (totalNice - _current_cpu.nice) / currentTick * 100,\n          currentLoadIdle: (totalIdle - _current_cpu.idle) / currentTick * 100,\n          currentLoadIrq: (totalIrq - _current_cpu.irq) / currentTick * 100,\n          rawCurrentLoad: (totalLoad - _current_cpu.load),\n          rawCurrentLoadUser: (totalUser - _current_cpu.user),\n          rawCurrentLoadSystem: (totalSystem - _current_cpu.system),\n          rawCurrentLoadNice: (totalNice - _current_cpu.nice),\n          rawCurrentLoadIdle: (totalIdle - _current_cpu.idle),\n          rawCurrentLoadIrq: (totalIrq - _current_cpu.irq),\n          cpus: cores\n        };\n        _current_cpu = {\n          user: totalUser,\n          nice: totalNice,\n          system: totalSystem,\n          idle: totalIdle,\n          irq: totalIrq,\n          tick: totalTick,\n          load: totalLoad,\n          ms: _current_cpu.ms,\n          currentLoad: result.currentLoad,\n          currentLoadUser: result.currentLoadUser,\n          currentLoadSystem: result.currentLoadSystem,\n          currentLoadNice: result.currentLoadNice,\n          currentLoadIdle: result.currentLoadIdle,\n          currentLoadIrq: result.currentLoadIrq,\n          rawCurrentLoad: result.rawCurrentLoad,\n          rawCurrentLoadUser: result.rawCurrentLoadUser,\n          rawCurrentLoadSystem: result.rawCurrentLoadSystem,\n          rawCurrentLoadNice: result.rawCurrentLoadNice,\n          rawCurrentLoadIdle: result.rawCurrentLoadIdle,\n          rawCurrentLoadIrq: result.rawCurrentLoadIrq,\n        };\n      } else {\n        let cores = [];\n        for (let i = 0; i < _corecount; i++) {\n          cores[i] = {};\n          cores[i].load = _cpus[i].load / _cpus[i].currentTick * 100;\n          cores[i].loadUser = _cpus[i].loadUser / _cpus[i].currentTick * 100;\n          cores[i].loadSystem = _cpus[i].loadSystem / _cpus[i].currentTick * 100;\n          cores[i].loadNice = _cpus[i].loadNice / _cpus[i].currentTick * 100;\n          cores[i].loadIdle = _cpus[i].loadIdle / _cpus[i].currentTick * 100;\n          cores[i].loadIrq = _cpus[i].loadIrq / _cpus[i].currentTick * 100;\n          cores[i].rawLoad = _cpus[i].load;\n          cores[i].rawLoadUser = _cpus[i].loadUser;\n          cores[i].rawLoadSystem = _cpus[i].loadSystem;\n          cores[i].rawLoadNice = _cpus[i].loadNice;\n          cores[i].rawLoadIdle = _cpus[i].loadIdle;\n          cores[i].rawLoadIrq = _cpus[i].loadIrq;\n        }\n        result = {\n          avgLoad: avgLoad,\n          currentload: _current_cpu.currentload,\n          currentloadUser: _current_cpu.currentloadUser,\n          currentloadSystem: _current_cpu.currentloadSystem,\n          currentloadNice: _current_cpu.currentloadNice,\n          currentloadIdle: _current_cpu.currentloadIdle,\n          currentloadIrq: _current_cpu.currentloadIrq,\n          rawCurrentload: _current_cpu.rawCurrentload,\n          rawCurrentloadUser: _current_cpu.rawCurrentloadUser,\n          rawCurrentloadSystem: _current_cpu.rawCurrentloadSystem,\n          rawCurrentloadNice: _current_cpu.rawCurrentloadNice,\n          rawCurrentloadIdle: _current_cpu.rawCurrentloadIdle,\n          rawCurrentloadIrq: _current_cpu.rawCurrentloadIrq,\n          cpus: cores\n        };\n      }\n      resolve(result);\n    });\n  });\n}\n\nfunction currentLoad(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      getLoad().then(result => {\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.currentLoad = currentLoad;\n\n// --------------------------\n// PS - full load\n// since bootup\n\nfunction getFullLoad() {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      const cpus = os.cpus();\n      let totalUser = 0;\n      let totalSystem = 0;\n      let totalNice = 0;\n      let totalIrq = 0;\n      let totalIdle = 0;\n\n      let result = 0;\n\n      if (cpus && cpus.length) {\n        for (let i = 0, len = cpus.length; i < len; i++) {\n          const cpu = cpus[i].times;\n          totalUser += cpu.user;\n          totalSystem += cpu.sys;\n          totalNice += cpu.nice;\n          totalIrq += cpu.irq;\n          totalIdle += cpu.idle;\n        }\n        let totalTicks = totalIdle + totalIrq + totalNice + totalSystem + totalUser;\n        result = (totalTicks - totalIdle) / totalTicks * 100.0;\n\n      } else {\n        result = 0;\n      }\n      resolve(result);\n    });\n  });\n}\n\nfunction fullLoad(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      getFullLoad().then(result => {\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.fullLoad = fullLoad;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// docker.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 13. Docker\n// ----------------------------------------------------------------------------------\n\nconst util = require('./util');\nconst DockerSocket = require('./dockerSocket');\n\nlet _platform = process.platform;\nconst _windows = (_platform === 'win32');\n\nlet _docker_container_stats = {};\nlet _docker_socket;\nlet _docker_last_read = 0;\n\n\n// --------------------------\n// get containers (parameter all: get also inactive/exited containers)\n\nfunction dockerInfo(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n      const result = {};\n\n      _docker_socket.getInfo(data => {\n        result.id = data.ID;\n        result.containers = data.Containers;\n        result.containersRunning = data.ContainersRunning;\n        result.containersPaused = data.ContainersPaused;\n        result.containersStopped = data.ContainersStopped;\n        result.images = data.Images;\n        result.driver = data.Driver;\n        result.memoryLimit = data.MemoryLimit;\n        result.swapLimit = data.SwapLimit;\n        result.kernelMemory = data.KernelMemory;\n        result.cpuCfsPeriod = data.CpuCfsPeriod;\n        result.cpuCfsQuota = data.CpuCfsQuota;\n        result.cpuShares = data.CPUShares;\n        result.cpuSet = data.CPUSet;\n        result.ipv4Forwarding = data.IPv4Forwarding;\n        result.bridgeNfIptables = data.BridgeNfIptables;\n        result.bridgeNfIp6tables = data.BridgeNfIp6tables;\n        result.debug = data.Debug;\n        result.nfd = data.NFd;\n        result.oomKillDisable = data.OomKillDisable;\n        result.ngoroutines = data.NGoroutines;\n        result.systemTime = data.SystemTime;\n        result.loggingDriver = data.LoggingDriver;\n        result.cgroupDriver = data.CgroupDriver;\n        result.nEventsListener = data.NEventsListener;\n        result.kernelVersion = data.KernelVersion;\n        result.operatingSystem = data.OperatingSystem;\n        result.osType = data.OSType;\n        result.architecture = data.Architecture;\n        result.ncpu = data.NCPU;\n        result.memTotal = data.MemTotal;\n        result.dockerRootDir = data.DockerRootDir;\n        result.httpProxy = data.HttpProxy;\n        result.httpsProxy = data.HttpsProxy;\n        result.noProxy = data.NoProxy;\n        result.name = data.Name;\n        result.labels = data.Labels;\n        result.experimentalBuild = data.ExperimentalBuild;\n        result.serverVersion = data.ServerVersion;\n        result.clusterStore = data.ClusterStore;\n        result.clusterAdvertise = data.ClusterAdvertise;\n        result.defaultRuntime = data.DefaultRuntime;\n        result.liveRestoreEnabled = data.LiveRestoreEnabled;\n        result.isolation = data.Isolation;\n        result.initBinary = data.InitBinary;\n        result.productLicense = data.ProductLicense;\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.dockerInfo = dockerInfo;\n\nfunction dockerImages(all, callback) {\n\n  // fallback - if only callback is given\n  if (util.isFunction(all) && !callback) {\n    callback = all;\n    all = false;\n  }\n  if (typeof all === 'string' && all === 'true') {\n    all = true;\n  }\n  if (typeof all !== 'boolean' && all !== undefined) {\n    all = false;\n  }\n\n  all = all || false;\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n      const workload = [];\n\n      _docker_socket.listImages(all, data => {\n        let dockerImages = {};\n        try {\n          dockerImages = data;\n          if (dockerImages && Object.prototype.toString.call(dockerImages) === '[object Array]' && dockerImages.length > 0) {\n\n            dockerImages.forEach(function (element) {\n\n              if (element.Names && Object.prototype.toString.call(element.Names) === '[object Array]' && element.Names.length > 0) {\n                element.Name = element.Names[0].replace(/^\\/|\\/$/g, '');\n              }\n              workload.push(dockerImagesInspect(element.Id.trim(), element));\n            });\n            if (workload.length) {\n              Promise.all(\n                workload\n              ).then(data => {\n                if (callback) { callback(data); }\n                resolve(data);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        } catch (err) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\n// --------------------------\n// container inspect (for one container)\n\nfunction dockerImagesInspect(imageID, payload) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      imageID = imageID || '';\n      if (typeof imageID !== 'string') {\n        return resolve();\n      }\n      const imageIDSanitized = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(imageID, true)).trim();\n      if (imageIDSanitized) {\n\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.inspectImage(imageIDSanitized.trim(), data => {\n          try {\n            resolve({\n              id: payload.Id,\n              container: data.Container,\n              comment: data.Comment,\n              os: data.Os,\n              architecture: data.Architecture,\n              parent: data.Parent,\n              dockerVersion: data.DockerVersion,\n              size: data.Size,\n              sharedSize: payload.SharedSize,\n              virtualSize: data.VirtualSize,\n              author: data.Author,\n              created: data.Created ? Math.round(new Date(data.Created).getTime() / 1000) : 0,\n              containerConfig: data.ContainerConfig ? data.ContainerConfig : {},\n              graphDriver: data.GraphDriver ? data.GraphDriver : {},\n              repoDigests: data.RepoDigests ? data.RepoDigests : {},\n              repoTags: data.RepoTags ? data.RepoTags : {},\n              config: data.Config ? data.Config : {},\n              rootFS: data.RootFS ? data.RootFS : {},\n            });\n          } catch (err) {\n            resolve();\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nexports.dockerImages = dockerImages;\n\nfunction dockerContainers(all, callback) {\n\n  function inContainers(containers, id) {\n    let filtered = containers.filter(obj => {\n      /**\n       * @namespace\n       * @property {string}  Id\n       */\n      return (obj.Id && (obj.Id === id));\n    });\n    return (filtered.length > 0);\n  }\n\n  // fallback - if only callback is given\n  if (util.isFunction(all) && !callback) {\n    callback = all;\n    all = false;\n  }\n  if (typeof all === 'string' && all === 'true') {\n    all = true;\n  }\n  if (typeof all !== 'boolean' && all !== undefined) {\n    all = false;\n  }\n\n  all = all || false;\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n      const workload = [];\n\n      _docker_socket.listContainers(all, data => {\n        let docker_containers = {};\n        try {\n          docker_containers = data;\n          if (docker_containers && Object.prototype.toString.call(docker_containers) === '[object Array]' && docker_containers.length > 0) {\n            // GC in _docker_container_stats\n            for (let key in _docker_container_stats) {\n              if ({}.hasOwnProperty.call(_docker_container_stats, key)) {\n                if (!inContainers(docker_containers, key)) { delete _docker_container_stats[key]; }\n              }\n            }\n\n            docker_containers.forEach(function (element) {\n\n              if (element.Names && Object.prototype.toString.call(element.Names) === '[object Array]' && element.Names.length > 0) {\n                element.Name = element.Names[0].replace(/^\\/|\\/$/g, '');\n              }\n              workload.push(dockerContainerInspect(element.Id.trim(), element));\n              // result.push({\n              //   id: element.Id,\n              //   name: element.Name,\n              //   image: element.Image,\n              //   imageID: element.ImageID,\n              //   command: element.Command,\n              //   created: element.Created,\n              //   state: element.State,\n              //   ports: element.Ports,\n              //   mounts: element.Mounts,\n              //   // hostconfig: element.HostConfig,\n              //   // network: element.NetworkSettings\n              // });\n            });\n            if (workload.length) {\n              Promise.all(\n                workload\n              ).then(data => {\n                if (callback) { callback(data); }\n                resolve(data);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        } catch (err) {\n          // GC in _docker_container_stats\n          for (let key in _docker_container_stats) {\n            if ({}.hasOwnProperty.call(_docker_container_stats, key)) {\n              if (!inContainers(docker_containers, key)) { delete _docker_container_stats[key]; }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\n// --------------------------\n// container inspect (for one container)\n\nfunction dockerContainerInspect(containerID, payload) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      containerID = containerID || '';\n      if (typeof containerID !== 'string') {\n        return resolve();\n      }\n      const containerIdSanitized = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(containerID, true)).trim();\n      if (containerIdSanitized) {\n\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getInspect(containerIdSanitized.trim(), data => {\n          try {\n            resolve({\n              id: payload.Id,\n              name: payload.Name,\n              image: payload.Image,\n              imageID: payload.ImageID,\n              command: payload.Command,\n              created: payload.Created,\n              started: data.State && data.State.StartedAt ? Math.round(new Date(data.State.StartedAt).getTime() / 1000) : 0,\n              finished: data.State && data.State.FinishedAt && !data.State.FinishedAt.startsWith('0001-01-01') ? Math.round(new Date(data.State.FinishedAt).getTime() / 1000) : 0,\n              createdAt: data.Created ? data.Created : '',\n              startedAt: data.State && data.State.StartedAt ? data.State.StartedAt : '',\n              finishedAt: data.State && data.State.FinishedAt && !data.State.FinishedAt.startsWith('0001-01-01') ? data.State.FinishedAt : '',\n              state: payload.State,\n              restartCount: data.RestartCount || 0,\n              platform: data.Platform || '',\n              driver: data.Driver || '',\n              ports: payload.Ports,\n              mounts: payload.Mounts,\n              // hostconfig: payload.HostConfig,\n              // network: payload.NetworkSettings\n            });\n          } catch (err) {\n            resolve();\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nexports.dockerContainers = dockerContainers;\n\n// --------------------------\n// helper functions for calculation of docker stats\n\nfunction docker_calcCPUPercent(cpu_stats, precpu_stats) {\n  /**\n   * @namespace\n   * @property {object}  cpu_usage\n   * @property {number}  cpu_usage.total_usage\n   * @property {number}  system_cpu_usage\n   * @property {object}  cpu_usage\n   * @property {Array}  cpu_usage.percpu_usage\n   */\n\n  if (!_windows) {\n    let cpuPercent = 0.0;\n    // calculate the change for the cpu usage of the container in between readings\n    let cpuDelta = cpu_stats.cpu_usage.total_usage - precpu_stats.cpu_usage.total_usage;\n    // calculate the change for the entire system between readings\n    let systemDelta = cpu_stats.system_cpu_usage - precpu_stats.system_cpu_usage;\n\n    if (systemDelta > 0.0 && cpuDelta > 0.0) {\n      // calculate the change for the cpu usage of the container in between readings\n      cpuPercent = (cpuDelta / systemDelta) * cpu_stats.cpu_usage.percpu_usage.length * 100.0;\n    }\n\n    return cpuPercent;\n  } else {\n    let nanoSecNow = util.nanoSeconds();\n    let cpuPercent = 0.0;\n    if (_docker_last_read > 0) {\n      let possIntervals = (nanoSecNow - _docker_last_read); //  / 100 * os.cpus().length;\n      let intervalsUsed = cpu_stats.cpu_usage.total_usage - precpu_stats.cpu_usage.total_usage;\n      if (possIntervals > 0) {\n        cpuPercent = 100.0 * intervalsUsed / possIntervals;\n      }\n    }\n    _docker_last_read = nanoSecNow;\n    return cpuPercent;\n  }\n}\n\nfunction docker_calcNetworkIO(networks) {\n  let rx;\n  let wx;\n  for (let key in networks) {\n    // skip loop if the property is from prototype\n    if (!{}.hasOwnProperty.call(networks, key)) { continue; }\n\n    /**\n     * @namespace\n     * @property {number}  rx_bytes\n     * @property {number}  tx_bytes\n     */\n    let obj = networks[key];\n    rx = +obj.rx_bytes;\n    wx = +obj.tx_bytes;\n  }\n  return {\n    rx,\n    wx\n  };\n}\n\nfunction docker_calcBlockIO(blkio_stats) {\n  let result = {\n    r: 0,\n    w: 0\n  };\n\n  /**\n   * @namespace\n   * @property {Array}  io_service_bytes_recursive\n   */\n  if (blkio_stats && blkio_stats.io_service_bytes_recursive && Object.prototype.toString.call(blkio_stats.io_service_bytes_recursive) === '[object Array]' && blkio_stats.io_service_bytes_recursive.length > 0) {\n    blkio_stats.io_service_bytes_recursive.forEach(function (element) {\n      /**\n       * @namespace\n       * @property {string}  op\n       * @property {number}  value\n       */\n\n      if (element.op && element.op.toLowerCase() === 'read' && element.value) {\n        result.r += element.value;\n      }\n      if (element.op && element.op.toLowerCase() === 'write' && element.value) {\n        result.w += element.value;\n      }\n    });\n  }\n  return result;\n}\n\nfunction dockerContainerStats(containerIDs, callback) {\n\n  let containerArray = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      // fallback - if only callback is given\n      if (util.isFunction(containerIDs) && !callback) {\n        callback = containerIDs;\n        containerArray = ['*'];\n      } else {\n        containerIDs = containerIDs || '*';\n        if (typeof containerIDs !== 'string') {\n          if (callback) { callback([]); }\n          return resolve([]);\n        }\n        let containerIDsSanitized = '';\n        containerIDsSanitized.__proto__.toLowerCase = util.stringToLower;\n        containerIDsSanitized.__proto__.replace = util.stringReplace;\n        containerIDsSanitized.__proto__.trim = util.stringTrim;\n\n        containerIDsSanitized = containerIDs;\n        containerIDsSanitized = containerIDsSanitized.trim();\n        if (containerIDsSanitized !== '*') {\n          containerIDsSanitized = '';\n          const s = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(containerIDs, true)).trim();\n          for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n            if (!(s[i] === undefined)) {\n              s[i].__proto__.toLowerCase = util.stringToLower;\n              const sl = s[i].toLowerCase();\n              if (sl && sl[0] && !sl[1]) {\n                containerIDsSanitized = containerIDsSanitized + sl[0];\n              }\n            }\n          }\n        }\n\n        containerIDsSanitized = containerIDsSanitized.trim().toLowerCase().replace(/,+/g, '|');\n        containerArray = containerIDsSanitized.split('|');\n      }\n\n      const result = [];\n\n      const workload = [];\n      if (containerArray.length && containerArray[0].trim() === '*') {\n        containerArray = [];\n        dockerContainers().then(allContainers => {\n          for (let container of allContainers) {\n            containerArray.push(container.id);\n          }\n          if (containerArray.length) {\n            dockerContainerStats(containerArray.join(',')).then(result => {\n              if (callback) { callback(result); }\n              resolve(result);\n            });\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        });\n      } else {\n        for (let containerID of containerArray) {\n          workload.push(dockerContainerStatsSingle(containerID.trim()));\n        }\n        if (workload.length) {\n          Promise.all(\n            workload\n          ).then(data => {\n            if (callback) { callback(data); }\n            resolve(data);\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\n// --------------------------\n// container stats (for one container)\n\nfunction dockerContainerStatsSingle(containerID) {\n  containerID = containerID || '';\n  let result = {\n    id: containerID,\n    memUsage: 0,\n    memLimit: 0,\n    memPercent: 0,\n    cpuPercent: 0,\n    pids: 0,\n    netIO: {\n      rx: 0,\n      wx: 0\n    },\n    blockIO: {\n      r: 0,\n      w: 0\n    }\n  };\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (containerID) {\n\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getInspect(containerID, dataInspect => {\n          try {\n            _docker_socket.getStats(containerID, data => {\n              try {\n                let stats = data;\n\n                if (!stats.message) {\n                  result.memUsage = (stats.memory_stats && stats.memory_stats.usage ? stats.memory_stats.usage : 0);\n                  result.memLimit = (stats.memory_stats && stats.memory_stats.limit ? stats.memory_stats.limit : 0);\n                  result.memPercent = (stats.memory_stats && stats.memory_stats.usage && stats.memory_stats.limit ? stats.memory_stats.usage / stats.memory_stats.limit * 100.0 : 0);\n                  result.cpuPercent = (stats.cpu_stats && stats.precpu_stats ? docker_calcCPUPercent(stats.cpu_stats, stats.precpu_stats) : 0);\n                  result.pids = (stats.pids_stats && stats.pids_stats.current ? stats.pids_stats.current : 0);\n                  result.restartCount = (dataInspect.RestartCount ? dataInspect.RestartCount : 0);\n                  if (stats.networks) { result.netIO = docker_calcNetworkIO(stats.networks); }\n                  if (stats.blkio_stats) { result.blockIO = docker_calcBlockIO(stats.blkio_stats); }\n                  result.cpuStats = (stats.cpu_stats ? stats.cpu_stats : {});\n                  result.precpuStats = (stats.precpu_stats ? stats.precpu_stats : {});\n                  result.memoryStats = (stats.memory_stats ? stats.memory_stats : {});\n                  result.networks = (stats.networks ? stats.networks : {});\n                }\n              } catch (err) {\n                util.noop();\n              }\n              // }\n              resolve(result);\n            });\n          } catch (err) {\n            util.noop();\n          }\n        });\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.dockerContainerStats = dockerContainerStats;\n\n// --------------------------\n// container processes (for one container)\n\nfunction dockerContainerProcesses(containerID, callback) {\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      containerID = containerID || '';\n      if (typeof containerID !== 'string') {\n        return resolve(result);\n      }\n      const containerIdSanitized = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(containerID, true)).trim();\n\n      if (containerIdSanitized) {\n\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getProcesses(containerIdSanitized, data => {\n          /**\n           * @namespace\n           * @property {Array}  Titles\n           * @property {Array}  Processes\n           **/\n          try {\n            if (data && data.Titles && data.Processes) {\n              let titles = data.Titles.map(function (value) {\n                return value.toUpperCase();\n              });\n              let pos_pid = titles.indexOf('PID');\n              let pos_ppid = titles.indexOf('PPID');\n              let pos_pgid = titles.indexOf('PGID');\n              let pos_vsz = titles.indexOf('VSZ');\n              let pos_time = titles.indexOf('TIME');\n              let pos_elapsed = titles.indexOf('ELAPSED');\n              let pos_ni = titles.indexOf('NI');\n              let pos_ruser = titles.indexOf('RUSER');\n              let pos_user = titles.indexOf('USER');\n              let pos_rgroup = titles.indexOf('RGROUP');\n              let pos_group = titles.indexOf('GROUP');\n              let pos_stat = titles.indexOf('STAT');\n              let pos_rss = titles.indexOf('RSS');\n              let pos_command = titles.indexOf('COMMAND');\n\n              data.Processes.forEach(process => {\n                result.push({\n                  pidHost: (pos_pid >= 0 ? process[pos_pid] : ''),\n                  ppid: (pos_ppid >= 0 ? process[pos_ppid] : ''),\n                  pgid: (pos_pgid >= 0 ? process[pos_pgid] : ''),\n                  user: (pos_user >= 0 ? process[pos_user] : ''),\n                  ruser: (pos_ruser >= 0 ? process[pos_ruser] : ''),\n                  group: (pos_group >= 0 ? process[pos_group] : ''),\n                  rgroup: (pos_rgroup >= 0 ? process[pos_rgroup] : ''),\n                  stat: (pos_stat >= 0 ? process[pos_stat] : ''),\n                  time: (pos_time >= 0 ? process[pos_time] : ''),\n                  elapsed: (pos_elapsed >= 0 ? process[pos_elapsed] : ''),\n                  nice: (pos_ni >= 0 ? process[pos_ni] : ''),\n                  rss: (pos_rss >= 0 ? process[pos_rss] : ''),\n                  vsz: (pos_vsz >= 0 ? process[pos_vsz] : ''),\n                  command: (pos_command >= 0 ? process[pos_command] : '')\n                });\n              });\n            }\n          } catch (err) {\n            util.noop();\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      } else {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.dockerContainerProcesses = dockerContainerProcesses;\n\nfunction dockerVolumes(callback) {\n\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n      _docker_socket.listVolumes(data => {\n        let dockerVolumes = {};\n        try {\n          dockerVolumes = data;\n          if (dockerVolumes && dockerVolumes.Volumes && Object.prototype.toString.call(dockerVolumes.Volumes) === '[object Array]' && dockerVolumes.Volumes.length > 0) {\n\n            dockerVolumes.Volumes.forEach(function (element) {\n\n              result.push({\n                name: element.Name,\n                driver: element.Driver,\n                labels: element.Labels,\n                mountpoint: element.Mountpoint,\n                options: element.Options,\n                scope: element.Scope,\n                created: element.CreatedAt ? Math.round(new Date(element.CreatedAt).getTime() / 1000) : 0,\n              });\n            });\n            if (callback) { callback(result); }\n            resolve(result);\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        } catch (err) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\nexports.dockerVolumes = dockerVolumes;\nfunction dockerAll(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      dockerContainers(true).then(result => {\n        if (result && Object.prototype.toString.call(result) === '[object Array]' && result.length > 0) {\n          let l = result.length;\n          result.forEach(function (element) {\n            dockerContainerStats(element.id).then(res => {\n              // include stats in array\n              element.memUsage = res[0].memUsage;\n              element.memLimit = res[0].memLimit;\n              element.memPercent = res[0].memPercent;\n              element.cpuPercent = res[0].cpuPercent;\n              element.pids = res[0].pids;\n              element.netIO = res[0].netIO;\n              element.blockIO = res[0].blockIO;\n              element.cpuStats = res[0].cpuStats;\n              element.precpuStats = res[0].precpuStats;\n              element.memoryStats = res[0].memoryStats;\n              element.networks = res[0].networks;\n\n              dockerContainerProcesses(element.id).then(processes => {\n                element.processes = processes;\n\n                l -= 1;\n                if (l === 0) {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                }\n              });\n              // all done??\n            });\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\nexports.dockerAll = dockerAll;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// dockerSockets.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 13. DockerSockets\n// ----------------------------------------------------------------------------------\n\nconst net = require('net');\nconst isWin = require('os').type() === 'Windows_NT';\nconst socketPath = isWin ? '//./pipe/docker_engine' : '/var/run/docker.sock';\n\nclass DockerSocket {\n\n  getInfo(callback) {\n    try {\n\n      let socket = net.createConnection({ path: socketPath });\n      let alldata = '';\n      let data;\n\n      socket.on('connect', () => {\n        socket.write('GET http:/info HTTP/1.0\\r\\n\\r\\n');\n      });\n\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n  listImages(all, callback) {\n    try {\n\n      let socket = net.createConnection({ path: socketPath });\n      let alldata = '';\n      let data;\n\n      socket.on('connect', () => {\n        socket.write('GET http:/images/json' + (all ? '?all=1' : '') + ' HTTP/1.0\\r\\n\\r\\n');\n      });\n\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n  inspectImage(id, callback) {\n    id = id || '';\n    if (id) {\n      try {\n        let socket = net.createConnection({ path: socketPath });\n        let alldata = '';\n        let data;\n\n        socket.on('connect', () => {\n          socket.write('GET http:/images/' + id + '/json?stream=0 HTTP/1.0\\r\\n\\r\\n');\n        });\n\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  listContainers(all, callback) {\n    try {\n\n      let socket = net.createConnection({ path: socketPath });\n      let alldata = '';\n      let data;\n\n      socket.on('connect', () => {\n        socket.write('GET http:/containers/json' + (all ? '?all=1' : '') + ' HTTP/1.0\\r\\n\\r\\n');\n      });\n\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n  getStats(id, callback) {\n    id = id || '';\n    if (id) {\n      try {\n        let socket = net.createConnection({ path: socketPath });\n        let alldata = '';\n        let data;\n\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/stats?stream=0 HTTP/1.0\\r\\n\\r\\n');\n        });\n\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  getInspect(id, callback) {\n    id = id || '';\n    if (id) {\n      try {\n        let socket = net.createConnection({ path: socketPath });\n        let alldata = '';\n        let data;\n\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/json?stream=0 HTTP/1.0\\r\\n\\r\\n');\n        });\n\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  getProcesses(id, callback) {\n    id = id || '';\n    if (id) {\n      try {\n        let socket = net.createConnection({ path: socketPath });\n        let alldata = '';\n        let data;\n\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/top?ps_args=-opid,ppid,pgid,vsz,time,etime,nice,ruser,user,rgroup,group,stat,rss,args HTTP/1.0\\r\\n\\r\\n');\n        });\n\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  listVolumes(callback) {\n    try {\n\n      let socket = net.createConnection({ path: socketPath });\n      let alldata = '';\n      let data;\n\n      socket.on('connect', () => {\n        socket.write('GET http:/volumes HTTP/1.0\\r\\n\\r\\n');\n      });\n\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }  \n}\n\nmodule.exports = DockerSocket;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// filesystem.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 8. File System\n// ----------------------------------------------------------------------------------\n\nconst util = require('./util');\nconst fs = require('fs');\n\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst execPromiseSave = util.promisifySave(require('child_process').exec);\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _fs_speed = {};\nlet _disk_io = {};\n\n// --------------------------\n// FS - mounted file systems\n\nfunction fsSize(callback) {\n\n  let macOsDisks = [];\n\n  function getmacOsFsType(fs) {\n    if (!fs.startsWith('/')) { return 'NFS'; }\n    const parts = fs.split('/');\n    const fsShort = parts[parts.length - 1];\n    const macOsDisksSingle = macOsDisks.filter(item => item.indexOf(fsShort) >= 0);\n    if (macOsDisksSingle.length === 1 && macOsDisksSingle[0].indexOf('APFS') >= 0) { return 'APFS'; }\n    return 'HFS';\n  }\n\n  function parseDf(lines) {\n    let data = [];\n    lines.forEach(function (line) {\n      if (line !== '') {\n        line = line.replace(/ +/g, ' ').split(' ');\n        if (line && ((line[0].startsWith('/')) || (line[6] && line[6] === '/') || (line[0].indexOf('/') > 0) || (line[0].indexOf(':') === 1))) {\n          const fs = line[0];\n          const fsType = ((_linux || _freebsd || _openbsd || _netbsd) ? line[1] : getmacOsFsType(line[0]));\n          const size = parseInt(((_linux || _freebsd || _openbsd || _netbsd) ? line[2] : line[1])) * 1024;\n          const used = parseInt(((_linux || _freebsd || _openbsd || _netbsd) ? line[3] : line[2])) * 1024;\n          const available = parseInt(((_linux || _freebsd || _openbsd || _netbsd) ? line[4] : line[3])) * 1024;\n          const use = parseFloat((100.0 * (used / (used + available))).toFixed(2));\n          line.splice(0, (_linux || _freebsd || _openbsd || _netbsd) ? 6 : 5);\n          const mount = line.join(' ');\n          // const mount = line[line.length - 1];\n          if (!data.find(el => (el.fs === fs && el.type === fsType))) {\n            data.push({\n              fs,\n              type: fsType,\n              size,\n              used,\n              available,\n              use,\n              mount\n            });\n          }\n        }\n      }\n    });\n    return data;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let data = [];\n      if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n        let cmd = '';\n        if (_darwin) {\n          cmd = 'df -kP';\n          try {\n            macOsDisks = execSync('diskutil list').toString().split('\\n').filter(line => {\n              return !line.startsWith('/') && line.indexOf(':') > 0;\n            });\n          } catch (e) {\n            macOsDisks = [];\n          }\n        }\n        if (_linux) { cmd = 'df -lkPTx squashfs | grep  -E \"^/|^.\\\\:\"'; }\n        if (_freebsd || _openbsd || _netbsd) { cmd = 'df -lkPT'; }\n        exec(cmd, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            data = parseDf(lines);\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          } else {\n            exec('df -kPT', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                data = parseDf(lines);\n              }\n              if (callback) {\n                callback(data);\n              }\n              resolve(data);\n            });\n          }\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(data); }\n        resolve(data);\n      }\n      if (_windows) {\n        try {\n          util.wmic('logicaldisk get Caption,FileSystem,FreeSpace,Size').then((stdout) => {\n            let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n            lines.forEach(function (line) {\n              if (line !== '') {\n                line = line.trim().split(/\\s\\s+/);\n                if (line.length >= 4 && parseInt(line[3], 10)) {\n                  data.push({\n                    fs: line[0],\n                    type: line[1],\n                    size: parseInt(line[3], 10),\n                    used: parseInt(line[3], 10) - parseInt(line[2], 10),\n                    available: parseInt(line[2], 10),\n                    use: parseFloat(((100.0 * (parseInt(line[3]) - parseInt(line[2]))) / parseInt(line[3])).toFixed(2)),\n                    mount: line[0]\n                  });\n                }\n              }\n            });\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          });\n        } catch (e) {\n          if (callback) { callback(data); }\n          resolve(data);\n        }\n      }\n    });\n  });\n}\n\nexports.fsSize = fsSize;\n\n// --------------------------\n// FS - open files count\n\nfunction fsOpenFiles(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const result = {\n        max: null,\n        allocated: null,\n        available: null\n      };\n      if (_freebsd || _openbsd || _netbsd || _darwin) {\n        let cmd = 'sysctl -a | grep \\'kern.*files\\'';\n        exec(cmd, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            result.max = parseInt(util.getValue(lines, 'kern.maxfiles', ':'), 10);\n            result.allocated = parseInt(util.getValue(lines, 'kern.num_files', ':'), 10);\n            result.available = result.max - result.allocated;\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_linux) {\n        fs.readFile('/proc/sys/fs/file-nr', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            if (lines[0]) {\n              const parts = lines[0].replace(/\\s+/g, ' ').split(' ');\n              if (parts.length === 3) {\n                result.allocated = parseInt(parts[0], 10);\n                result.available = parseInt(parts[1], 10);\n                result.max = parseInt(parts[2], 10);\n                if (!result.available) { result.available = result.max - result.allocated; }\n              }\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          } else {\n            fs.readFile('/proc/sys/fs/file-max', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                if (lines[0]) {\n                  result.max = parseInt(lines[0], 10);\n                }\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          }\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(null); }\n        resolve(null);\n      }\n      if (_windows) {\n        if (callback) { callback(null); }\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.fsOpenFiles = fsOpenFiles;\n\n// --------------------------\n// disks\n\nfunction parseBytes(s) {\n  return parseInt(s.substr(s.indexOf(' (') + 2, s.indexOf(' Bytes)') - 10));\n}\n\nfunction parseDevices(lines) {\n  let devices = [];\n  let i = 0;\n  lines.forEach(line => {\n    if (line.length > 0) {\n      if (line[0] === '*') {\n        i++;\n      } else {\n        let parts = line.split(':');\n        if (parts.length > 1) {\n          if (!devices[i]) {\n            devices[i] = {\n              name: '',\n              identifier: '',\n              type: 'disk',\n              fsType: '',\n              mount: '',\n              size: 0,\n              physical: 'HDD',\n              uuid: '',\n              label: '',\n              model: '',\n              serial: '',\n              removable: false,\n              protocol: ''\n            };\n          }\n          parts[0] = parts[0].trim().toUpperCase().replace(/ +/g, '');\n          parts[1] = parts[1].trim();\n          if ('DEVICEIDENTIFIER' === parts[0]) { devices[i].identifier = parts[1]; }\n          if ('DEVICENODE' === parts[0]) { devices[i].name = parts[1]; }\n          if ('VOLUMENAME' === parts[0]) {\n            if (parts[1].indexOf('Not applicable') === -1) { devices[i].label = parts[1]; }\n          }\n          if ('PROTOCOL' === parts[0]) { devices[i].protocol = parts[1]; }\n          if ('DISKSIZE' === parts[0]) { devices[i].size = parseBytes(parts[1]); }\n          if ('FILESYSTEMPERSONALITY' === parts[0]) { devices[i].fsType = parts[1]; }\n          if ('MOUNTPOINT' === parts[0]) { devices[i].mount = parts[1]; }\n          if ('VOLUMEUUID' === parts[0]) { devices[i].uuid = parts[1]; }\n          if ('READ-ONLYMEDIA' === parts[0] && parts[1] === 'Yes') { devices[i].physical = 'CD/DVD'; }\n          if ('SOLIDSTATE' === parts[0] && parts[1] === 'Yes') { devices[i].physical = 'SSD'; }\n          if ('VIRTUAL' === parts[0]) { devices[i].type = 'virtual'; }\n          if ('REMOVABLEMEDIA' === parts[0]) { devices[i].removable = (parts[1] === 'Removable'); }\n          if ('PARTITIONTYPE' === parts[0]) { devices[i].type = 'part'; }\n          if ('DEVICE/MEDIANAME' === parts[0]) { devices[i].model = parts[1]; }\n        }\n      }\n    }\n  });\n  return devices;\n}\n\nfunction parseBlk(lines) {\n  let data = [];\n\n  lines.filter(line => line !== '').forEach((line) => {\n    try {\n      line = decodeURIComponent(line.replace(/\\\\x/g, '%'));\n      line = line.replace(/\\\\/g, '\\\\\\\\');\n      let disk = JSON.parse(line);\n      data.push({\n        'name': disk.name,\n        'type': disk.type,\n        'fsType': disk.fsType,\n        'mount': disk.mountpoint,\n        'size': parseInt(disk.size),\n        'physical': (disk.type === 'disk' ? (disk.rota === '0' ? 'SSD' : 'HDD') : (disk.type === 'rom' ? 'CD/DVD' : '')),\n        'uuid': disk.uuid,\n        'label': disk.label,\n        'model': disk.model,\n        'serial': disk.serial,\n        'removable': disk.rm === '1',\n        'protocol': disk.tran,\n        'group': disk.group,\n      });\n    } catch (e) {\n      util.noop();\n    }\n  });\n  data = util.unique(data);\n  data = util.sortByKey(data, ['type', 'name']);\n  return data;\n}\n\nfunction blkStdoutToObject(stdout) {\n  return stdout.toString()\n    .replace(/NAME=/g, '{\"name\":')\n    .replace(/FSTYPE=/g, ',\"fsType\":')\n    .replace(/TYPE=/g, ',\"type\":')\n    .replace(/SIZE=/g, ',\"size\":')\n    .replace(/MOUNTPOINT=/g, ',\"mountpoint\":')\n    .replace(/UUID=/g, ',\"uuid\":')\n    .replace(/ROTA=/g, ',\"rota\":')\n    .replace(/RO=/g, ',\"ro\":')\n    .replace(/RM=/g, ',\"rm\":')\n    .replace(/TRAN=/g, ',\"tran\":')\n    .replace(/SERIAL=/g, ',\"serial\":')\n    .replace(/LABEL=/g, ',\"label\":')\n    .replace(/MODEL=/g, ',\"model\":')\n    .replace(/OWNER=/g, ',\"owner\":')\n    .replace(/GROUP=/g, ',\"group\":')\n    .replace(/\\n/g, '}\\n');\n}\n\nfunction blockDevices(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let data = [];\n      if (_linux) {\n        // see https://wiki.ubuntuusers.de/lsblk/\n        // exec(\"lsblk -bo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,TRAN,SERIAL,LABEL,MODEL,OWNER,GROUP,MODE,ALIGNMENT,MIN-IO,OPT-IO,PHY-SEC,LOG-SEC,SCHED,RQ-SIZE,RA,WSAME\", function (error, stdout) {\n        exec('lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,TRAN,SERIAL,LABEL,MODEL,OWNER 2>/dev/null', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          if (!error) {\n            let lines = blkStdoutToObject(stdout).split('\\n');\n            data = parseBlk(lines);\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          } else {\n            exec('lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,LABEL,MODEL,OWNER 2>/dev/null', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n              if (!error) {\n                let lines = blkStdoutToObject(stdout).split('\\n');\n                data = parseBlk(lines);\n              }\n              if (callback) {\n                callback(data);\n              }\n              resolve(data);\n            });\n          }\n        });\n      }\n      if (_darwin) {\n        exec('diskutil info -all', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            // parse lines into temp array of devices\n            data = parseDevices(lines);\n          }\n          if (callback) {\n            callback(data);\n          }\n          resolve(data);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(data); }\n        resolve(data);\n      }\n      if (_windows) {\n        let drivetypes = ['Unknown', 'NoRoot', 'Removable', 'Local', 'Network', 'CD/DVD', 'RAM'];\n        try {\n          util.wmic('logicaldisk get Caption,Description,DeviceID,DriveType,FileSystem,FreeSpace,Name,Size,VolumeName,VolumeSerialNumber /value').then((stdout, error) => {\n            if (!error) {\n              let devices = stdout.toString().split(/\\n\\s*\\n/);\n              devices.forEach(function (device) {\n                let lines = device.split('\\r\\n');\n                let drivetype = util.getValue(lines, 'drivetype', '=');\n                if (drivetype) {\n                  data.push({\n                    name: util.getValue(lines, 'name', '='),\n                    identifier: util.getValue(lines, 'caption', '='),\n                    type: 'disk',\n                    fsType: util.getValue(lines, 'filesystem', '=').toLowerCase(),\n                    mount: util.getValue(lines, 'caption', '='),\n                    size: util.getValue(lines, 'size', '='),\n                    physical: (drivetype >= 0 && drivetype <= 6) ? drivetypes[drivetype] : drivetypes[0],\n                    uuid: util.getValue(lines, 'volumeserialnumber', '='),\n                    label: util.getValue(lines, 'volumename', '='),\n                    model: '',\n                    serial: util.getValue(lines, 'volumeserialnumber', '='),\n                    removable: drivetype === '2',\n                    protocol: ''\n                  });\n                }\n              });\n            }\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          });\n        } catch (e) {\n          if (callback) { callback(data); }\n          resolve(data);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        // will follow\n        if (callback) { callback(null); }\n        resolve(null);\n      }\n\n    });\n  });\n}\n\nexports.blockDevices = blockDevices;\n\n// --------------------------\n// FS - speed\n\nfunction calcFsSpeed(rx, wx) {\n  let result = {\n    rx: 0,\n    wx: 0,\n    tx: 0,\n    rx_sec: null,\n    wx_sec: null,\n    tx_sec: null,\n    ms: 0\n  };\n\n  if (_fs_speed && _fs_speed.ms) {\n    result.rx = rx;\n    result.wx = wx;\n    result.tx = result.rx + result.wx;\n    result.ms = Date.now() - _fs_speed.ms;\n    result.rx_sec = (result.rx - _fs_speed.bytes_read) / (result.ms / 1000);\n    result.wx_sec = (result.wx - _fs_speed.bytes_write) / (result.ms / 1000);\n    result.tx_sec = result.rx_sec + result.wx_sec;\n    _fs_speed.rx_sec = result.rx_sec;\n    _fs_speed.wx_sec = result.wx_sec;\n    _fs_speed.tx_sec = result.tx_sec;\n    _fs_speed.bytes_read = result.rx;\n    _fs_speed.bytes_write = result.wx;\n    _fs_speed.bytes_overall = result.rx + result.wx;\n    _fs_speed.ms = Date.now();\n    _fs_speed.last_ms = result.ms;\n  } else {\n    result.rx = rx;\n    result.wx = wx;\n    result.tx = result.rx + result.wx;\n    _fs_speed.rx_sec = null;\n    _fs_speed.wx_sec = null;\n    _fs_speed.tx_sec = null;\n    _fs_speed.bytes_read = result.rx;\n    _fs_speed.bytes_write = result.wx;\n    _fs_speed.bytes_overall = result.rx + result.wx;\n    _fs_speed.ms = Date.now();\n    _fs_speed.last_ms = 0;\n  }\n  return result;\n}\n\nfunction fsStats(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (_windows) {\n        return resolve(null);\n      }\n\n      let result = {\n        rx: 0,\n        wx: 0,\n        tx: 0,\n        rx_sec: null,\n        wx_sec: null,\n        tx_sec: null,\n        ms: 0\n      };\n\n      let rx = 0;\n      let wx = 0;\n      if ((_fs_speed && !_fs_speed.ms) || (_fs_speed && _fs_speed.ms && Date.now() - _fs_speed.ms >= 500)) {\n        if (_linux) {\n          // exec(\"df -k | grep /dev/\", function(error, stdout) {\n          exec('lsblk -r 2>/dev/null | grep /', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              let fs_filter = [];\n              lines.forEach(function (line) {\n                if (line !== '') {\n                  line = line.trim().split(' ');\n                  if (fs_filter.indexOf(line[0]) === -1) { fs_filter.push(line[0]); }\n                }\n              });\n\n              let output = fs_filter.join('|');\n              exec('cat /proc/diskstats | egrep \"' + output + '\"', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  lines.forEach(function (line) {\n                    line = line.trim();\n                    if (line !== '') {\n                      line = line.replace(/ +/g, ' ').split(' ');\n\n                      rx += parseInt(line[5]) * 512;\n                      wx += parseInt(line[9]) * 512;\n                    }\n                  });\n                  result = calcFsSpeed(rx, wx);\n                }\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        }\n        if (_darwin) {\n          exec('ioreg -c IOBlockStorageDriver -k Statistics -r -w0 | sed -n \"/IOBlockStorageDriver/,/Statistics/p\" | grep \"Statistics\" | tr -cd \"01234567890,\\n\"', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                line = line.trim();\n                if (line !== '') {\n                  line = line.split(',');\n\n                  rx += parseInt(line[2]);\n                  wx += parseInt(line[9]);\n                }\n              });\n              result = calcFsSpeed(rx, wx);\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        }\n      } else {\n        result.ms = _fs_speed.last_ms;\n        result.rx = _fs_speed.bytes_read;\n        result.wx = _fs_speed.bytes_write;\n        result.tx = _fs_speed.bytes_read + _fs_speed.bytes_write;\n        result.rx_sec = _fs_speed.rx_sec;\n        result.wx_sec = _fs_speed.wx_sec;\n        result.tx_sec = _fs_speed.tx_sec;\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.fsStats = fsStats;\n\nfunction calcDiskIO(rIO, wIO, rWaitTime, wWaitTime, tWaitTime) {\n  let result = {\n    rIO: 0,\n    wIO: 0,\n    tIO: 0,\n    rIO_sec: null,\n    wIO_sec: null,\n    tIO_sec: null,\n    rWaitTime: 0,\n    wWaitTime: 0,\n    tWaitTime: 0,\n    rWaitPercent: null,\n    wWaitPercent: null,\n    tWaitPercent: null,\n    ms: 0\n  };\n  if (_disk_io && _disk_io.ms) {\n    result.rIO = rIO;\n    result.wIO = wIO;\n    result.tIO = rIO + wIO;\n    result.ms = Date.now() - _disk_io.ms;\n    result.rIO_sec = (result.rIO - _disk_io.rIO) / (result.ms / 1000);\n    result.wIO_sec = (result.wIO - _disk_io.wIO) / (result.ms / 1000);\n    result.tIO_sec = result.rIO_sec + result.wIO_sec;\n    result.rWaitTime = rWaitTime;\n    result.wWaitTime = wWaitTime;\n    result.tWaitTime = tWaitTime;\n    result.rWaitPercent = (result.rWaitTime - _disk_io.rWaitTime) * 100 / (result.ms);\n    result.wWaitPercent = (result.wWaitTime - _disk_io.wWaitTime) * 100 / (result.ms);\n    result.tWaitPercent = (result.tWaitTime - _disk_io.tWaitTime) * 100 / (result.ms);\n    _disk_io.rIO = rIO;\n    _disk_io.wIO = wIO;\n    _disk_io.rIO_sec = result.rIO_sec;\n    _disk_io.wIO_sec = result.wIO_sec;\n    _disk_io.tIO_sec = result.tIO_sec;\n    _disk_io.rWaitTime = rWaitTime;\n    _disk_io.wWaitTime = wWaitTime;\n    _disk_io.tWaitTime = tWaitTime;\n    _disk_io.rWaitPercent = result.rWaitPercent;\n    _disk_io.wWaitPercent = result.wWaitPercent;\n    _disk_io.tWaitPercent = result.tWaitPercent;\n    _disk_io.last_ms = result.ms;\n    _disk_io.ms = Date.now();\n  } else {\n    result.rIO = rIO;\n    result.wIO = wIO;\n    result.tIO = rIO + wIO;\n    result.rWaitTime = rWaitTime;\n    result.wWaitTime = wWaitTime;\n    result.tWaitTime = tWaitTime;\n    _disk_io.rIO = rIO;\n    _disk_io.wIO = wIO;\n    _disk_io.rIO_sec = null;\n    _disk_io.wIO_sec = null;\n    _disk_io.tIO_sec = null;\n    _disk_io.rWaitTime = rWaitTime;\n    _disk_io.wWaitTime = wWaitTime;\n    _disk_io.tWaitTime = tWaitTime;\n    _disk_io.rWaitPercent = null;\n    _disk_io.wWaitPercent = null;\n    _disk_io.tWaitPercent = null;\n    _disk_io.last_ms = 0;\n    _disk_io.ms = Date.now();\n  }\n  return result;\n}\n\nfunction disksIO(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (_windows) {\n        return resolve(null);\n      }\n      if (_sunos) {\n        return resolve(null);\n      }\n\n      let result = {\n        rIO: 0,\n        wIO: 0,\n        tIO: 0,\n        rIO_sec: null,\n        wIO_sec: null,\n        tIO_sec: null,\n        rWaitTime: 0,\n        wWaitTime: 0,\n        tWaitTime: 0,\n        rWaitPercent: null,\n        wWaitPercent: null,\n        tWaitPercent: null,\n        ms: 0\n      };\n      let rIO = 0;\n      let wIO = 0;\n      let rWaitTime = 0;\n      let wWaitTime = 0;\n      let tWaitTime = 0;\n\n      if ((_disk_io && !_disk_io.ms) || (_disk_io && _disk_io.ms && Date.now() - _disk_io.ms >= 500)) {\n        if (_linux || _freebsd || _openbsd || _netbsd) {\n          // prints Block layer statistics for all mounted volumes\n          // var cmd = \"for mount in `lsblk | grep / | sed -r 's/│ └─//' | cut -d ' ' -f 1`; do cat /sys/block/$mount/stat | sed -r 's/ +/;/g' | sed -r 's/^;//'; done\";\n          // var cmd = \"for mount in `lsblk | grep / | sed 's/[│└─├]//g' | awk '{$1=$1};1' | cut -d ' ' -f 1 | sort -u`; do cat /sys/block/$mount/stat | sed -r 's/ +/;/g' | sed -r 's/^;//'; done\";\n          let cmd = 'for mount in `lsblk 2>/dev/null | grep \" disk \" | sed \"s/[│└─├]//g\" | awk \\'{$1=$1};1\\' | cut -d \" \" -f 1 | sort -u`; do cat /sys/block/$mount/stat | sed -r \"s/ +/;/g\" | sed -r \"s/^;//\"; done';\n\n          exec(cmd, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.split('\\n');\n              lines.forEach(function (line) {\n                // ignore empty lines\n                if (!line) { return; }\n\n                // sum r/wIO of all disks to compute all disks IO\n                let stats = line.split(';');\n                rIO += parseInt(stats[0]);\n                wIO += parseInt(stats[4]);\n                rWaitTime += parseInt(stats[3]);\n                wWaitTime += parseInt(stats[7]);\n                tWaitTime += parseInt(stats[10]);\n              });\n              result = calcDiskIO(rIO, wIO, rWaitTime, wWaitTime, tWaitTime);\n\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        }\n        if (_darwin) {\n          exec('ioreg -c IOBlockStorageDriver -k Statistics -r -w0 | sed -n \"/IOBlockStorageDriver/,/Statistics/p\" | grep \"Statistics\" | tr -cd \"01234567890,\\n\"', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                line = line.trim();\n                if (line !== '') {\n                  line = line.split(',');\n\n                  rIO += parseInt(line[10]);\n                  wIO += parseInt(line[0]);\n                }\n              });\n              result = calcDiskIO(rIO, wIO, rWaitTime, wWaitTime, tWaitTime);\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        }\n      } else {\n        result.rIO = _disk_io.rIO;\n        result.wIO = _disk_io.wIO;\n        result.tIO = _disk_io.rIO + _disk_io.wIO;\n        result.ms = _disk_io.last_ms;\n        result.rIO_sec = _disk_io.rIO_sec;\n        result.wIO_sec = _disk_io.wIO_sec;\n        result.tIO_sec = _disk_io.tIO_sec;\n        result.rWaitTime = _disk_io.rWaitTime;\n        result.wWaitTime = _disk_io.wWaitTime;\n        result.tWaitTime = _disk_io.tWaitTime;\n        result.rWaitPercent = _disk_io.rWaitPercent;\n        result.wWaitPercent = _disk_io.wWaitPercent;\n        result.tWaitPercent = _disk_io.tWaitPercent;\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.disksIO = disksIO;\n\nfunction diskLayout(callback) {\n\n  function getVendorFromModel(model) {\n    const diskManufacturers = [\n      { pattern: '^WESTERN.+', manufacturer: 'Western Digital' },\n      { pattern: '^WDC.+', manufacturer: 'Western Digital' },\n      { pattern: 'WD.+', manufacturer: 'Western Digital' },\n      { pattern: '^TOSHIBA.+', manufacturer: 'Toshiba' },\n      { pattern: '^HITACHI.+', manufacturer: 'Hitachi' },\n      { pattern: '^IC.+', manufacturer: 'Hitachi' },\n      { pattern: '^HTS.+', manufacturer: 'Hitachi' },\n      { pattern: '^SANDISK.+', manufacturer: 'SanDisk' },\n      { pattern: '^KINGSTON.+', manufacturer: 'Kingston Technonogy' },\n      { pattern: '^SONY.+', manufacturer: 'Sony' },\n      { pattern: '^TRANSCEND.+', manufacturer: 'Transcend' },\n      { pattern: 'SAMSUNG.+', manufacturer: 'Samsung' },\n      { pattern: '^ST(?!I\\\\ ).+', manufacturer: 'Seagate' },\n      { pattern: '^STI\\\\ .+', manufacturer: 'SimpleTech' },\n      { pattern: '^D...-.+', manufacturer: 'IBM' },\n      { pattern: '^IBM.+', manufacturer: 'IBM' },\n      { pattern: '^FUJITSU.+', manufacturer: 'Fujitsu' },\n      { pattern: '^MP.+', manufacturer: 'Fujitsu' },\n      { pattern: '^MK.+', manufacturer: 'Toshiba' },\n      { pattern: '^MAXTOR.+', manufacturer: 'Maxtor' },\n      { pattern: '^Pioneer.+', manufacturer: 'Pioneer' },\n      { pattern: '^PHILIPS.+', manufacturer: 'Philips' },\n      { pattern: '^QUANTUM.+', manufacturer: 'Quantum Technology' },\n      { pattern: 'FIREBALL.+', manufacturer: 'Quantum Technology' },\n      { pattern: '^VBOX.+', manufacturer: 'VirtualBox' },\n      { pattern: 'CORSAIR.+', manufacturer: 'Corsair Components' },\n      { pattern: 'CRUCIAL.+', manufacturer: 'Crucial' },\n      { pattern: 'ECM.+', manufacturer: 'ECM' },\n      { pattern: 'INTEL.+', manufacturer: 'INTEL' },\n      { pattern: '.+EVO', manufacturer: 'Samsung' },\n      { pattern: 'APPLE.+', manufacturer: 'Apple' },\n    ];\n\n    let result = '';\n    if (model) {\n      model = model.toUpperCase();\n      diskManufacturers.forEach((manufacturer) => {\n        const re = RegExp(manufacturer.pattern);\n        if (re.test(model)) { result = manufacturer.manufacturer; }\n      });\n    }\n    return result;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      const commitResult = res => {\n        for (let i = 0; i < res.length; i++) {\n          delete res[i].BSDName;\n        }\n        if (callback) {\n          callback(res);\n        }\n        resolve(res);\n      };\n\n      let result = [];\n      let cmd = '';\n\n      if (_linux) {\n        let cmdFullSmart = '';\n\n        exec('export LC_ALL=C; lsblk -ablJO 2>/dev/null; unset LC_ALL', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          if (!error) {\n            try {\n              const out = stdout.toString().trim();\n              let devices = [];\n              try {\n                const outJSON = JSON.parse(out);\n                if (outJSON && {}.hasOwnProperty.call(outJSON, 'blockdevices')) {\n                  devices = outJSON.blockdevices.filter(item => { return (item.type === 'disk') && item.size > 0 && (item.model !== null || (item.mountpoint === null && item.label === null && item.fsType === null && item.parttype === null)); });\n                }\n              } catch (e) {\n                // fallback to older version of lsblk\n                const out2 = execSync('export LC_ALL=C; lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,LABEL,MODEL,OWNER,GROUP 2>/dev/null; unset LC_ALL').toString();\n                let lines = blkStdoutToObject(out2).split('\\n');\n                const data = parseBlk(lines);\n                devices = data.filter(item => { return (item.type === 'disk') && item.size > 0 && ((item.model !== null && item.model !== '') || (item.mount === '' && item.label === '' && item.fsType === '')); });\n              }\n              devices.forEach((device) => {\n                let mediumType = '';\n                const BSDName = '/dev/' + device.name;\n                const logical = device.name;\n                try {\n                  mediumType = execSync('cat /sys/block/' + logical + '/queue/rotational 2>/dev/null').toString().split('\\n')[0];\n                } catch (e) {\n                  util.noop();\n                }\n                let interfaceType = device.tran ? device.tran.toUpperCase().trim() : '';\n                if (interfaceType === 'NVME') {\n                  mediumType = '2';\n                  interfaceType = 'PCIe';\n                }\n                result.push({\n                  device: BSDName,\n                  type: (mediumType === '0' ? 'SSD' : (mediumType === '1' ? 'HD' : (mediumType === '2' ? 'NVMe' : (device.model && device.model.indexOf('SSD') > -1 ? 'SSD' : (device.model && device.model.indexOf('NVM') > -1 ? 'NVMe' : 'HD'))))),\n                  name: device.model || '',\n                  vendor: getVendorFromModel(device.model) || (device.vendor ? device.vendor.trim() : ''),\n                  size: device.size || 0,\n                  bytesPerSector: null,\n                  totalCylinders: null,\n                  totalHeads: null,\n                  totalSectors: null,\n                  totalTracks: null,\n                  tracksPerCylinder: null,\n                  sectorsPerTrack: null,\n                  firmwareRevision: device.rev ? device.rev.trim() : '',\n                  serialNum: device.serial ? device.serial.trim() : '',\n                  interfaceType: interfaceType,\n                  smartStatus: 'unknown',\n                  temperature: null,\n                  BSDName: BSDName\n                });\n                cmd += `printf \"\\n${BSDName}|\"; smartctl -H ${BSDName} | grep overall;`;\n                cmdFullSmart += `${cmdFullSmart ? 'printf \",\";' : ''}smartctl -a -j ${BSDName};`;\n              });\n            } catch (e) {\n              util.noop();\n            }\n          }\n          // check S.M.A.R.T. status\n          if (cmdFullSmart) {\n            exec(cmdFullSmart, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n              try {\n                const data = JSON.parse(`[${stdout}]`);\n                data.forEach(disk => {\n                  const diskBSDName = disk.smartctl.argv[disk.smartctl.argv.length - 1];\n\n                  for (let i = 0; i < result.length; i++) {\n                    if (result[i].BSDName === diskBSDName) {\n                      result[i].smartStatus = (disk.smart_status.passed ? 'Ok' : (disk.smart_status.passed === false ? 'Predicted Failure' : 'unknown'));\n                      if (disk.temperature && disk.temperature.current) {\n                        result[i].temperature = disk.temperature.current;\n                      }\n                      result[i].smartData = disk;\n                    }\n                  }\n                });\n                commitResult(result);\n              } catch (e) {\n                if (cmd) {\n                  cmd = cmd + 'printf \"\\n\"';\n                  exec(cmd, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n                    let lines = stdout.toString().split('\\n');\n                    lines.forEach(line => {\n                      if (line) {\n                        let parts = line.split('|');\n                        if (parts.length === 2) {\n                          let BSDName = parts[0];\n                          parts[1] = parts[1].trim();\n                          let parts2 = parts[1].split(':');\n                          if (parts2.length === 2) {\n                            parts2[1] = parts2[1].trim();\n                            let status = parts2[1].toLowerCase();\n                            for (let i = 0; i < result.length; i++) {\n                              if (result[i].BSDName === BSDName) {\n                                result[i].smartStatus = (status === 'passed' ? 'Ok' : (status === 'failed!' ? 'Predicted Failure' : 'unknown'));\n                              }\n                            }\n                          }\n                        }\n                      }\n                    });\n                    commitResult(result);\n                  });\n                } else {\n                  commitResult(result);\n                }\n              }\n            });\n          } else {\n            commitResult(result);\n          }\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_darwin) {\n        exec('system_profiler SPSerialATADataType SPNVMeDataType SPUSBDataType', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          if (!error) {\n            // split by type:\n            let lines = stdout.toString().split('\\n');\n            let linesSATA = [];\n            let linesNVMe = [];\n            let linesUSB = [];\n            let dataType = 'SATA';\n            lines.forEach(line => {\n              if (line === 'NVMExpress:') { dataType = 'NVMe'; }\n              else if (line === 'USB:') { dataType = 'USB'; }\n              else if (line === 'SATA/SATA Express:') { dataType = 'SATA'; }\n              else if (dataType === 'SATA') { linesSATA.push(line); }\n              else if (dataType === 'NVMe') { linesNVMe.push(line); }\n              else if (dataType === 'USB') { linesUSB.push(line); }\n            });\n            try {\n              // Serial ATA Drives\n              let devices = linesSATA.join('\\n').split(' Physical Interconnect: ');\n              devices.shift();\n              devices.forEach(function (device) {\n                device = 'InterfaceType: ' + device;\n                let lines = device.split('\\n');\n                const mediumType = util.getValue(lines, 'Medium Type', ':', true).trim();\n                const sizeStr = util.getValue(lines, 'capacity', ':', true).trim();\n                const BSDName = util.getValue(lines, 'BSD Name', ':', true).trim();\n                if (sizeStr) {\n                  let sizeValue = 0;\n                  if (sizeStr.indexOf('(') >= 0) {\n                    sizeValue = parseInt(sizeStr.match(/\\(([^)]+)\\)/)[1].replace(/\\./g, '').replace(/,/g, '').replace(/\\s/g, ''));\n                  }\n                  if (!sizeValue) {\n                    sizeValue = parseInt(sizeStr);\n                  }\n                  if (sizeValue) {\n                    const smartStatusString = util.getValue(lines, 'S.M.A.R.T. status', ':', true).trim().toLowerCase();\n                    result.push({\n                      device: BSDName,\n                      type: mediumType.startsWith('Solid') ? 'SSD' : 'HD',\n                      name: util.getValue(lines, 'Model', ':', true).trim(),\n                      vendor: getVendorFromModel(util.getValue(lines, 'Model', ':', true).trim()) || util.getValue(lines, 'Manufacturer', ':', true),\n                      size: sizeValue,\n                      bytesPerSector: null,\n                      totalCylinders: null,\n                      totalHeads: null,\n                      totalSectors: null,\n                      totalTracks: null,\n                      tracksPerCylinder: null,\n                      sectorsPerTrack: null,\n                      firmwareRevision: util.getValue(lines, 'Revision', ':', true).trim(),\n                      serialNum: util.getValue(lines, 'Serial Number', ':', true).trim(),\n                      interfaceType: util.getValue(lines, 'InterfaceType', ':', true).trim(),\n                      smartStatus: smartStatusString === 'verified' ? 'OK' : smartStatusString || 'unknown',\n                      temperature: null,\n                      BSDName: BSDName\n                    });\n                    cmd = cmd + 'printf \"\\n' + BSDName + '|\"; diskutil info /dev/' + BSDName + ' | grep SMART;';\n                  }\n                }\n              });\n            } catch (e) {\n              util.noop();\n            }\n\n            // NVME Drives\n            try {\n              let devices = linesNVMe.join('\\n').split('\\n\\n          Capacity:');\n              devices.shift();\n              devices.forEach(function (device) {\n                device = '!Capacity: ' + device;\n                let lines = device.split('\\n');\n                const linkWidth = util.getValue(lines, 'link width', ':', true).trim();\n                const sizeStr = util.getValue(lines, '!capacity', ':', true).trim();\n                const BSDName = util.getValue(lines, 'BSD Name', ':', true).trim();\n                if (sizeStr) {\n                  let sizeValue = 0;\n                  if (sizeStr.indexOf('(') >= 0) {\n                    sizeValue = parseInt(sizeStr.match(/\\(([^)]+)\\)/)[1].replace(/\\./g, '').replace(/,/g, '').replace(/\\s/g, ''));\n                  }\n                  if (!sizeValue) {\n                    sizeValue = parseInt(sizeStr);\n                  }\n                  if (sizeValue) {\n                    const smartStatusString = util.getValue(lines, 'S.M.A.R.T. status', ':', true).trim().toLowerCase();\n                    result.push({\n                      device: BSDName,\n                      type: 'NVMe',\n                      name: util.getValue(lines, 'Model', ':', true).trim(),\n                      vendor: getVendorFromModel(util.getValue(lines, 'Model', ':', true).trim()),\n                      size: sizeValue,\n                      bytesPerSector: null,\n                      totalCylinders: null,\n                      totalHeads: null,\n                      totalSectors: null,\n                      totalTracks: null,\n                      tracksPerCylinder: null,\n                      sectorsPerTrack: null,\n                      firmwareRevision: util.getValue(lines, 'Revision', ':', true).trim(),\n                      serialNum: util.getValue(lines, 'Serial Number', ':', true).trim(),\n                      interfaceType: ('PCIe ' + linkWidth).trim(),\n                      smartStatus: smartStatusString === 'verified' ? 'OK' : smartStatusString || 'unknown',\n                      temperature: null,\n                      BSDName: BSDName\n                    });\n                    cmd = cmd + 'printf \"\\n' + BSDName + '|\"; diskutil info /dev/' + BSDName + ' | grep SMART;';\n                  }\n                }\n              });\n            } catch (e) {\n              util.noop();\n            }\n            // USB Drives\n            try {\n              let devices = linesUSB.join('\\n').replaceAll('Media:\\n ', 'Model:').split('\\n\\n          Product ID:');\n              devices.shift();\n              devices.forEach(function (device) {\n                let lines = device.split('\\n');\n                const sizeStr = util.getValue(lines, 'Capacity', ':', true).trim();\n                const BSDName = util.getValue(lines, 'BSD Name', ':', true).trim();\n                if (sizeStr) {\n                  let sizeValue = 0;\n                  if (sizeStr.indexOf('(') >= 0) {\n                    sizeValue = parseInt(sizeStr.match(/\\(([^)]+)\\)/)[1].replace(/\\./g, '').replace(/,/g, '').replace(/\\s/g, ''));\n                  }\n                  if (!sizeValue) {\n                    sizeValue = parseInt(sizeStr);\n                  }\n                  if (sizeValue) {\n                    const smartStatusString = util.getValue(lines, 'S.M.A.R.T. status', ':', true).trim().toLowerCase();\n                    result.push({\n                      device: BSDName,\n                      type: 'USB',\n                      name: util.getValue(lines, 'Model', ':', true).trim().replaceAll(':', ''),\n                      vendor: getVendorFromModel(util.getValue(lines, 'Model', ':', true).trim()),\n                      size: sizeValue,\n                      bytesPerSector: null,\n                      totalCylinders: null,\n                      totalHeads: null,\n                      totalSectors: null,\n                      totalTracks: null,\n                      tracksPerCylinder: null,\n                      sectorsPerTrack: null,\n                      firmwareRevision: util.getValue(lines, 'Revision', ':', true).trim(),\n                      serialNum: util.getValue(lines, 'Serial Number', ':', true).trim(),\n                      interfaceType: 'USB',\n                      smartStatus: smartStatusString === 'verified' ? 'OK' : smartStatusString || 'unknown',\n                      temperature: null,\n                      BSDName: BSDName\n                    });\n                    cmd = cmd + 'printf \"\\n' + BSDName + '|\"; diskutil info /dev/' + BSDName + ' | grep SMART;';\n                  }\n                }\n              });\n            } catch (e) {\n              util.noop();\n            }\n            if (cmd) {\n              cmd = cmd + 'printf \"\\n\"';\n              exec(cmd, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n                let lines = stdout.toString().split('\\n');\n                lines.forEach(line => {\n                  if (line) {\n                    let parts = line.split('|');\n                    if (parts.length === 2) {\n                      let BSDName = parts[0];\n                      parts[1] = parts[1].trim();\n                      let parts2 = parts[1].split(':');\n                      if (parts2.length === 2) {\n                        parts2[1] = parts2[1].trim();\n                        let status = parts2[1].toLowerCase();\n                        for (let i = 0; i < result.length; i++) {\n                          if (result[i].BSDName === BSDName) {\n                            result[i].smartStatus = (status === 'not supported' ? 'not supported' : (status === 'verified' ? 'Ok' : (status === 'failing' ? 'Predicted Failure' : 'unknown')));\n                          }\n                        }\n                      }\n                    }\n                  }\n                });\n                for (let i = 0; i < result.length; i++) {\n                  delete result[i].BSDName;\n                }\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              });\n            } else {\n              for (let i = 0; i < result.length; i++) {\n                delete result[i].BSDName;\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          }\n        });\n      }\n      if (_windows) {\n        try {\n          const workload = [];\n          workload.push(util.wmic('diskdrive get /value'));\n          workload.push(util.powerShell('Get-PhysicalDisk | Format-List'));\n          if (util.smartMonToolsInstalled()) {\n            try {\n              const smartDev = JSON.parse(execSync('smartctl --scan -j'));\n              if (smartDev && smartDev.devices && smartDev.devices.length > 0) {\n                smartDev.devices.forEach((dev) => {\n                  workload.push(execPromiseSave(`smartctl -j -a ${dev.name}`, util.execOptsWin));\n                });\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          util.promiseAll(\n            workload\n          ).then(data => {\n            let devices = data.results[0].toString().split(/\\n\\s*\\n/);\n            devices.forEach(function (device) {\n              let lines = device.split('\\r\\n');\n              const size = util.getValue(lines, 'Size', '=').trim();\n              const status = util.getValue(lines, 'Status', '=').trim().toLowerCase();\n              if (size) {\n                result.push({\n                  device: util.getValue(lines, 'PNPDeviceId', '='),\n                  type: device.indexOf('SSD') > -1 ? 'SSD' : 'HD',  // just a starting point ... better: MSFT_PhysicalDisk - Media Type ... see below\n                  name: util.getValue(lines, 'Caption', '='),\n                  vendor: getVendorFromModel(util.getValue(lines, 'Caption', '=', true).trim()),\n                  size: parseInt(size),\n                  bytesPerSector: parseInt(util.getValue(lines, 'BytesPerSector', '=')),\n                  totalCylinders: parseInt(util.getValue(lines, 'TotalCylinders', '=')),\n                  totalHeads: parseInt(util.getValue(lines, 'TotalHeads', '=')),\n                  totalSectors: parseInt(util.getValue(lines, 'TotalSectors', '=')),\n                  totalTracks: parseInt(util.getValue(lines, 'TotalTracks', '=')),\n                  tracksPerCylinder: parseInt(util.getValue(lines, 'TracksPerCylinder', '=')),\n                  sectorsPerTrack: parseInt(util.getValue(lines, 'SectorsPerTrack', '=')),\n                  firmwareRevision: util.getValue(lines, 'FirmwareRevision', '=').trim(),\n                  serialNum: util.getValue(lines, 'SerialNumber', '=').trim(),\n                  interfaceType: util.getValue(lines, 'InterfaceType', '=').trim(),\n                  smartStatus: (status === 'ok' ? 'Ok' : (status === 'degraded' ? 'Degraded' : (status === 'pred fail' ? 'Predicted Failure' : 'Unknown'))),\n                  temperature: null,\n                });\n              }\n            });\n            devices = data.results[1].split(/\\n\\s*\\n/);\n            devices.forEach(function (device) {\n              let lines = device.split('\\r\\n');\n              const serialNum = util.getValue(lines, 'SerialNumber', ':').trim();\n              const name = util.getValue(lines, 'FriendlyName', ':').trim().replace('Msft ', 'Microsoft');\n              const size = util.getValue(lines, 'Size', ':').trim();\n              const model = util.getValue(lines, 'Model', ':').trim();\n              const interfaceType = util.getValue(lines, 'BusType', ':').trim();\n              let mediaType = util.getValue(lines, 'MediaType', ':').trim();\n              if (mediaType === '3' || mediaType === 'HDD') { mediaType = 'HD'; }\n              if (mediaType === '4') { mediaType = 'SSD'; }\n              if (mediaType === '5') { mediaType = 'SCM'; }\n              if (mediaType === 'Unspecified' && (model.toLowerCase().indexOf('virtual') > -1 || model.toLowerCase().indexOf('vbox') > -1)) { mediaType = 'Virtual'; }\n              if (size) {\n                let i = util.findObjectByKey(result, 'serialNum', serialNum);\n                if (i === -1 || serialNum === '') {\n                  i = util.findObjectByKey(result, 'name', name);\n                }\n                if (i != -1) {\n                  result[i].type = mediaType;\n                  result[i].interfaceType = interfaceType;\n                }\n              }\n            });\n            // S.M.A.R.T\n            data.results.shift();\n            data.results.shift();\n            data.results.forEach((smartStr) => {\n              const smartData = JSON.parse(smartStr);\n              if (smartData.serial_number) {\n                const serialNum = smartData.serial_number;\n                let i = util.findObjectByKey(result, 'serialNum', serialNum);\n                if (i != -1) {\n                  result[i].smartStatus = (smartData.smart_status.passed ? 'Ok' : (smartData.smart_status.passed === false ? 'Predicted Failure' : 'unknown'));\n                  if (smartData.temperature && smartData.temperature.current) {\n                    result[i].temperature = smartData.temperature.current;\n                  }\n                  result[i].smartData = smartData;\n                }\n              }\n            });\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.diskLayout = diskLayout;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// graphics.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 7. Graphics (controller, display)\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst fs = require('fs');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\n\nlet _platform = process.platform;\nlet _nvidiaSmiPath = '';\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _resolutionX = 0;\nlet _resolutionY = 0;\nlet _pixelDepth = 0;\nlet _refreshRate = 0;\n\nconst videoTypes = {\n  '-2': 'UNINITIALIZED',\n  '-1': 'OTHER',\n  '0': 'HD15',\n  '1': 'SVIDEO',\n  '2': 'Composite video',\n  '3': 'Component video',\n  '4': 'DVI',\n  '5': 'HDMI',\n  '6': 'LVDS',\n  '8': 'D_JPN',\n  '9': 'SDI',\n  '10': 'DP',\n  '11': 'DP embedded',\n  '12': 'UDI',\n  '13': 'UDI embedded',\n  '14': 'SDTVDONGLE',\n  '15': 'MIRACAST',\n  '2147483648': 'INTERNAL'\n};\n\nfunction getVendorFromModel(model) {\n  const manufacturers = [\n    { pattern: '^LG.+', manufacturer: 'LG' },\n    { pattern: '^BENQ.+', manufacturer: 'BenQ' },\n    { pattern: '^ASUS.+', manufacturer: 'Asus' },\n    { pattern: '^DELL.+', manufacturer: 'Dell' },\n    { pattern: '^SAMSUNG.+', manufacturer: 'Samsung' },\n    { pattern: '^VIEWSON.+', manufacturer: 'ViewSonic' },\n    { pattern: '^SONY.+', manufacturer: 'Sony' },\n    { pattern: '^ACER.+', manufacturer: 'Acer' },\n    { pattern: '^AOC.+', manufacturer: 'AOC Monitors' },\n    { pattern: '^HP.+', manufacturer: 'HP' },\n    { pattern: '^EIZO.?', manufacturer: 'Eizo' },\n    { pattern: '^PHILIPS.?', manufacturer: 'Philips' },\n    { pattern: '^IIYAMA.?', manufacturer: 'Iiyama' },\n    { pattern: '^SHARP.?', manufacturer: 'Sharp' },\n    { pattern: '^NEC.?', manufacturer: 'NEC' },\n    { pattern: '^LENOVO.?', manufacturer: 'Lenovo' },\n    { pattern: 'COMPAQ.?', manufacturer: 'Compaq' },\n    { pattern: 'APPLE.?', manufacturer: 'Apple' },\n    { pattern: 'INTEL.?', manufacturer: 'Intel' },\n    { pattern: 'AMD.?', manufacturer: 'AMD' },\n    { pattern: 'NVIDIA.?', manufacturer: 'NVDIA' },\n  ];\n\n  let result = '';\n  if (model) {\n    model = model.toUpperCase();\n    manufacturers.forEach((manufacturer) => {\n      const re = RegExp(manufacturer.pattern);\n      if (re.test(model)) { result = manufacturer.manufacturer; }\n    });\n  }\n  return result;\n}\n\nfunction getVendorFromId(id) {\n  const vendors = {\n    '610': 'Apple',\n    '1e6d': 'LG',\n    '10ac': 'DELL',\n    '4dd9': 'Sony',\n    '38a3': 'NEC',\n  };\n  return vendors[id] || '';\n}\n\nfunction vendorToId(str) {\n  let result = '';\n  str = (str || '').toLowerCase();\n  if (str.indexOf('apple') >= 0) { result = '0x05ac'; }\n  else if (str.indexOf('nvidia') >= 0) { result = '0x10de'; }\n  else if (str.indexOf('intel') >= 0) { result = '0x8086'; }\n  else if (str.indexOf('ati') >= 0 || str.indexOf('amd') >= 0) { result = '0x1002'; }\n\n  return result;\n}\n\nfunction getMetalVersion(id) {\n  const families = {\n    'spdisplays_mtlgpufamilymac1': 'mac1',\n    'spdisplays_mtlgpufamilymac2': 'mac2',\n    'spdisplays_mtlgpufamilyapple1': 'apple1',\n    'spdisplays_mtlgpufamilyapple2': 'apple2',\n    'spdisplays_mtlgpufamilyapple3': 'apple3',\n    'spdisplays_mtlgpufamilyapple4': 'apple4',\n    'spdisplays_mtlgpufamilyapple5': 'apple5',\n    'spdisplays_mtlgpufamilyapple6': 'apple6',\n    'spdisplays_mtlgpufamilyapple7': 'apple7',\n    'spdisplays_metalfeaturesetfamily11': 'family1_v1',\n    'spdisplays_metalfeaturesetfamily12': 'family1_v2',\n    'spdisplays_metalfeaturesetfamily13': 'family1_v3',\n    'spdisplays_metalfeaturesetfamily14': 'family1_v4',\n    'spdisplays_metalfeaturesetfamily21': 'family2_v1'\n  };\n  return families[id] || '';\n}\n\nfunction graphics(callback) {\n\n  function parseLinesDarwin(graphicsArr) {\n    const res = {\n      controllers: [],\n      displays: []\n    };\n    try {\n      graphicsArr.forEach(function (item) {\n        // controllers\n        const bus = ((item.sppci_bus || '').indexOf('builtin') > -1 ? 'Built-In' : ((item.sppci_bus || '').indexOf('pcie') > -1 ? 'PCIe' : ''));\n        const vram = (parseInt((item.spdisplays_vram || ''), 10) || 0) * (((item.spdisplays_vram || '').indexOf('GB') > -1) ? 1024 : 1);\n        const vramDyn = (parseInt((item.spdisplays_vram_shared || ''), 10) || 0) * (((item.spdisplays_vram_shared || '').indexOf('GB') > -1) ? 1024 : 1);\n        let metalVersion = getMetalVersion(item.spdisplays_metal || item.spdisplays_metalfamily || '');\n        res.controllers.push({\n          vendor: getVendorFromModel(item.spdisplays_vendor || '') || item.spdisplays_vendor || '',\n          model: item.sppci_model || '',\n          bus,\n          vramDynamic: bus === 'Built-In',\n          vram: vram || vramDyn || null,\n          deviceId: item['spdisplays_device-id'] || '',\n          vendorId: item['spdisplays_vendor-id'] || vendorToId((item['spdisplays_vendor'] || '') + (item.sppci_model || '')),\n          external: (item.sppci_device_type === 'spdisplays_egpu'),\n          cores: item['sppci_cores'] || null,\n          metalVersion\n        });\n\n        // displays\n        if (item.spdisplays_ndrvs && item.spdisplays_ndrvs.length) {\n          item.spdisplays_ndrvs.forEach(function (displayItem) {\n            const connectionType = displayItem['spdisplays_connection_type'] || '';\n            const currentResolutionParts = (displayItem['_spdisplays_resolution'] || '').split('@');\n            const currentResolution = currentResolutionParts[0].split('x');\n            const pixelParts = (displayItem['_spdisplays_pixels'] || '').split('x');\n            const pixelDepthString = displayItem['spdisplays_depth'] || '';\n            const serial = displayItem['_spdisplays_display-serial-number'] || displayItem['_spdisplays_display-serial-number2'] || null;\n            res.displays.push({\n              vendor: getVendorFromId(displayItem['_spdisplays_display-vendor-id'] || '') || getVendorFromModel(displayItem['_name'] || ''),\n              vendorId: displayItem['_spdisplays_display-vendor-id'] || '',\n              model: displayItem['_name'] || '',\n              productionYear: displayItem['_spdisplays_display-year'] || null,\n              serial: serial !== '0' ? serial : null,\n              displayId: displayItem['_spdisplays_displayID'] || null,\n              main: displayItem['spdisplays_main'] ? displayItem['spdisplays_main'] === 'spdisplays_yes' : false,\n              builtin: (displayItem['spdisplays_display_type'] || '').indexOf('built-in') > -1,\n              connection: ((connectionType.indexOf('_internal') > -1) ? 'Internal' : ((connectionType.indexOf('_displayport') > -1) ? 'Display Port' : ((connectionType.indexOf('_hdmi') > -1) ? 'HDMI' : null))),\n              sizeX: null,\n              sizeY: null,\n              pixelDepth: (pixelDepthString === 'CGSThirtyBitColor' ? 30 : (pixelDepthString === 'CGSThirtytwoBitColor' ? 32 : (pixelDepthString === 'CGSTwentyfourBitColor' ? 24 : ''))),\n              resolutionX: pixelParts.length > 1 ? parseInt(pixelParts[0], 10) : null,\n              resolutionY: pixelParts.length > 1 ? parseInt(pixelParts[1], 10) : null,\n              currentResX: currentResolution.length > 1 ? parseInt(currentResolution[0], 10) : null,\n              currentResY: currentResolution.length > 1 ? parseInt(currentResolution[1], 10) : null,\n              positionX: 0,\n              positionY: 0,\n              currentRefreshRate: currentResolutionParts.length > 1 ? parseInt(currentResolutionParts[1], 10) : null,\n\n            });\n          });\n        }\n      });\n      return res;\n    } catch (e) {\n      return res;\n    }\n  }\n\n  function parseLinesLinuxControllers(lines) {\n    let controllers = [];\n    let currentController = {\n      vendor: '',\n      model: '',\n      bus: '',\n      busAddress: '',\n      vram: null,\n      vramDynamic: false,\n      pciID: ''\n    };\n    let isGraphicsController = false;\n    // PCI bus IDs\n    let pciIDs = [];\n    try {\n      pciIDs = execSync('export LC_ALL=C; dmidecode -t 9 2>/dev/null; unset LC_ALL | grep \"Bus Address: \"').toString().split('\\n');\n      for (let i = 0; i < pciIDs.length; i++) {\n        pciIDs[i] = pciIDs[i].replace('Bus Address:', '').replace('0000:', '').trim();\n      }\n      pciIDs = pciIDs.filter(function (el) {\n        return el != null && el;\n      });\n    } catch (e) {\n      util.noop();\n    }\n    for (let i = 0; i < lines.length; i++) {\n      if ('' !== lines[i].trim()) {\n        if (' ' !== lines[i][0] && '\\t' !== lines[i][0]) {        // first line of new entry\n          let isExternal = (pciIDs.indexOf(lines[i].split(' ')[0]) >= 0);\n          let vgapos = lines[i].toLowerCase().indexOf(' vga ');\n          let _3dcontrollerpos = lines[i].toLowerCase().indexOf('3d controller');\n          if (vgapos !== -1 || _3dcontrollerpos !== -1) {         // VGA\n            if (_3dcontrollerpos !== -1 && vgapos === -1) {\n              vgapos = _3dcontrollerpos;\n            }\n            if (currentController.vendor || currentController.model || currentController.bus || currentController.vram !== null || currentController.vramDynamic) { // already a controller found\n              controllers.push(currentController);\n              currentController = {\n                vendor: '',\n                model: '',\n                bus: '',\n                busAddress: '',\n                vram: null,\n                vramDynamic: false,\n              };\n            }\n\n            const pciIDCandidate = lines[i].split(' ')[0];\n            if (/[\\da-fA-F]{2}:[\\da-fA-F]{2}\\.[\\da-fA-F]/.test(pciIDCandidate)) {\n              currentController.busAddress = pciIDCandidate;\n            }\n            isGraphicsController = true;\n            let endpos = lines[i].search(/\\[[0-9a-f]{4}:[0-9a-f]{4}]|$/);\n            let parts = lines[i].substr(vgapos, endpos - vgapos).split(':');\n            currentController.busAddress = lines[i].substr(0, vgapos).trim();\n            if (parts.length > 1) {\n              parts[1] = parts[1].trim();\n              if (parts[1].toLowerCase().indexOf('corporation') >= 0) {\n                currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf('corporation') + 11).trim();\n                currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf('corporation') + 11, 200).trim().split('(')[0];\n                currentController.bus = (pciIDs.length > 0 && isExternal) ? 'PCIe' : 'Onboard';\n                currentController.vram = null;\n                currentController.vramDynamic = false;\n              } else if (parts[1].toLowerCase().indexOf(' inc.') >= 0) {\n                if ((parts[1].match(new RegExp(']', 'g')) || []).length > 1) {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(']') + 1).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(']') + 1, 200).trim().split('(')[0].trim();\n                } else {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(' inc.') + 5).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(' inc.') + 5, 200).trim().split('(')[0].trim();\n                }\n                currentController.bus = (pciIDs.length > 0 && isExternal) ? 'PCIe' : 'Onboard';\n                currentController.vram = null;\n                currentController.vramDynamic = false;\n              } else if (parts[1].toLowerCase().indexOf(' ltd.') >= 0) {\n                if ((parts[1].match(new RegExp(']', 'g')) || []).length > 1) {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(']') + 1).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(']') + 1, 200).trim().split('(')[0].trim();\n                } else {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(' ltd.') + 5).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(' ltd.') + 5, 200).trim().split('(')[0].trim();\n                }\n              }\n            }\n\n          } else {\n            isGraphicsController = false;\n          }\n        }\n        if (isGraphicsController) { // within VGA details\n          let parts = lines[i].split(':');\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('devicename') !== -1 && parts[1].toLowerCase().indexOf('onboard') !== -1) { currentController.bus = 'Onboard'; }\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('region') !== -1 && parts[1].toLowerCase().indexOf('memory') !== -1) {\n            let memparts = parts[1].split('=');\n            if (memparts.length > 1) {\n              currentController.vram = parseInt(memparts[1]);\n            }\n          }\n        }\n      }\n    }\n    if (currentController.vendor || currentController.model || currentController.bus || currentController.busAddress || currentController.vram !== null || currentController.vramDynamic) { // already a controller found\n      controllers.push(currentController);\n    }\n    return (controllers);\n  }\n\n  function parseLinesLinuxClinfo(controllers, lines) {\n    const fieldPattern = /\\[([^\\]]+)\\]\\s+(\\w+)\\s+(.*)/;\n    const devices = lines.reduce((devices, line) => {\n      const field = fieldPattern.exec(line.trim());\n      if (field) {\n        if (!devices[field[1]]) {\n          devices[field[1]] = {};\n        }\n        devices[field[1]][field[2]] = field[3];\n      }\n      return devices;\n    }, {});\n    for (let deviceId in devices) {\n      const device = devices[deviceId];\n      if (device['CL_DEVICE_TYPE'] === 'CL_DEVICE_TYPE_GPU') {\n        let busAddress;\n        if (device['CL_DEVICE_TOPOLOGY_AMD']) {\n          const bdf = device['CL_DEVICE_TOPOLOGY_AMD'].match(/[a-zA-Z0-9]+:\\d+\\.\\d+/);\n          if (bdf) {\n            busAddress = bdf[0];\n          }\n        } else if (device['CL_DEVICE_PCI_BUS_ID_NV'] && device['CL_DEVICE_PCI_SLOT_ID_NV']) {\n          const bus = parseInt(device['CL_DEVICE_PCI_BUS_ID_NV']);\n          const slot = parseInt(device['CL_DEVICE_PCI_SLOT_ID_NV']);\n          if (!isNaN(bus) && !isNaN(slot)) {\n            const b = bus & 0xff;\n            const d = (slot >> 3) & 0xff;\n            const f = slot & 0x07;\n            busAddress = `${b.toString().padStart(2, '0')}:${d.toString().padStart(2, '0')}.${f}`;\n          }\n        }\n        if (busAddress) {\n          let controller = controllers.find(controller => controller.busAddress === busAddress);\n          if (!controller) {\n            controller = {\n              vendor: '',\n              model: '',\n              bus: '',\n              busAddress,\n              vram: null,\n              vramDynamic: false\n            };\n            controllers.push(controller);\n          }\n          controller.vendor = device['CL_DEVICE_VENDOR'];\n          if (device['CL_DEVICE_BOARD_NAME_AMD']) {\n            controller.model = device['CL_DEVICE_BOARD_NAME_AMD'];\n          } else {\n            controller.model = device['CL_DEVICE_NAME'];\n          }\n          const memory = parseInt(device['CL_DEVICE_GLOBAL_MEM_SIZE']);\n          if (!isNaN(memory)) {\n            controller.vram = Math.round(memory / 1024 / 1024);\n          }\n        }\n      }\n    }\n    return controllers;\n  }\n\n  function getNvidiaSmi() {\n    if (_nvidiaSmiPath) {\n      return _nvidiaSmiPath;\n    }\n\n    if (_windows) {\n      try {\n        const basePath = util.WINDIR + '\\\\System32\\\\DriverStore\\\\FileRepository';\n        // find all directories that have an nvidia-smi.exe file\n        const candidateDirs = fs.readdirSync(basePath).filter(dir => {\n          return fs.readdirSync([basePath, dir].join('/')).includes('nvidia-smi.exe');\n        });\n        // use the directory with the most recently created nvidia-smi.exe file\n        const targetDir = candidateDirs.reduce((prevDir, currentDir) => {\n          const previousNvidiaSmi = fs.statSync([basePath, prevDir, 'nvidia-smi.exe'].join('/'));\n          const currentNvidiaSmi = fs.statSync([basePath, currentDir, 'nvidia-smi.exe'].join('/'));\n          return (previousNvidiaSmi.ctimeMs > currentNvidiaSmi.ctimeMs) ? prevDir : currentDir;\n        });\n\n        if (targetDir) {\n          _nvidiaSmiPath = [basePath, targetDir, 'nvidia-smi.exe'].join('/');\n        }\n      } catch (e) {\n        util.noop();\n      }\n    } else if (_linux) {\n      _nvidiaSmiPath = 'nvidia-smi';\n    }\n    return _nvidiaSmiPath;\n  }\n\n  function nvidiaSmi(options) {\n    const nvidiaSmiExe = getNvidiaSmi();\n    options = options || util.execOptsWin;\n    if (nvidiaSmiExe) {\n      const nvidiaSmiOpts = '--query-gpu=driver_version,pci.sub_device_id,name,pci.bus_id,fan.speed,memory.total,memory.used,memory.free,utilization.gpu,utilization.memory,temperature.gpu,temperature.memory,power.draw,power.limit,clocks.gr,clocks.mem --format=csv,noheader,nounits';\n      const cmd = nvidiaSmiExe + ' ' + nvidiaSmiOpts + (_linux ? '  2>/dev/null' : '');\n      try {\n        const res = execSync(cmd, options).toString();\n        return res;\n      } catch (e) {\n        util.noop();\n      }\n    }\n    return '';\n  }\n\n  function nvidiaDevices() {\n\n    function safeParseNumber(value) {\n      if ([null, undefined].includes(value)) {\n        return value;\n      }\n      return parseFloat(value);\n    }\n\n    const stdout = nvidiaSmi();\n    if (!stdout) {\n      return [];\n    }\n\n    const gpus = stdout.split('\\n').filter(Boolean);\n    const results = gpus.map(gpu => {\n      const splittedData = gpu.split(', ').map(value => value.includes('N/A') ? undefined : value);\n      if (splittedData.length === 16) {\n        return {\n          driverVersion: splittedData[0],\n          subDeviceId: splittedData[1],\n          name: splittedData[2],\n          pciBus: splittedData[3],\n          fanSpeed: safeParseNumber(splittedData[4]),\n          memoryTotal: safeParseNumber(splittedData[5]),\n          memoryUsed: safeParseNumber(splittedData[6]),\n          memoryFree: safeParseNumber(splittedData[7]),\n          utilizationGpu: safeParseNumber(splittedData[8]),\n          utilizationMemory: safeParseNumber(splittedData[9]),\n          temperatureGpu: safeParseNumber(splittedData[10]),\n          temperatureMemory: safeParseNumber(splittedData[11]),\n          powerDraw: safeParseNumber(splittedData[12]),\n          powerLimit: safeParseNumber(splittedData[13]),\n          clockCore: safeParseNumber(splittedData[14]),\n          clockMemory: safeParseNumber(splittedData[15]),\n        };\n      }\n    });\n\n    return results;\n  }\n\n  function mergeControllerNvidia(controller, nvidia) {\n    if (nvidia.driverVersion) { controller.driverVersion = nvidia.driverVersion; }\n    if (nvidia.subDeviceId) { controller.subDeviceId = nvidia.subDeviceId; }\n    if (nvidia.name) { controller.name = nvidia.name; }\n    if (nvidia.pciBus) { controller.pciBus = nvidia.pciBus; }\n    if (nvidia.fanSpeed) { controller.fanSpeed = nvidia.fanSpeed; }\n    if (nvidia.memoryTotal) {\n      controller.memoryTotal = nvidia.memoryTotal;\n      controller.vram = nvidia.memoryTotal;\n      controller.vramDynamic = false;\n    }\n    if (nvidia.memoryUsed) { controller.memoryUsed = nvidia.memoryUsed; }\n    if (nvidia.memoryFree) { controller.memoryFree = nvidia.memoryFree; }\n    if (nvidia.utilizationGpu) { controller.utilizationGpu = nvidia.utilizationGpu; }\n    if (nvidia.utilizationMemory) { controller.utilizationMemory = nvidia.utilizationMemory; }\n    if (nvidia.temperatureGpu) { controller.temperatureGpu = nvidia.temperatureGpu; }\n    if (nvidia.temperatureMemory) { controller.temperatureMemory = nvidia.temperatureMemory; }\n    if (nvidia.powerDraw) { controller.powerDraw = nvidia.powerDraw; }\n    if (nvidia.powerLimit) { controller.powerLimit = nvidia.powerLimit; }\n    if (nvidia.clockCore) { controller.clockCore = nvidia.clockCore; }\n    if (nvidia.clockMemory) { controller.clockMemory = nvidia.clockMemory; }\n    return controller;\n  }\n\n  function parseLinesLinuxEdid(edid) {\n    // parsen EDID\n    // --> model\n    // --> resolutionx\n    // --> resolutiony\n    // --> builtin = false\n    // --> pixeldepth (?)\n    // --> sizex\n    // --> sizey\n    let result = {\n      vendor: '',\n      model: '',\n      deviceName: '',\n      main: false,\n      builtin: false,\n      connection: '',\n      sizeX: null,\n      sizeY: null,\n      pixelDepth: null,\n      resolutionX: null,\n      resolutionY: null,\n      currentResX: null,\n      currentResY: null,\n      positionX: 0,\n      positionY: 0,\n      currentRefreshRate: null\n    };\n    // find first \"Detailed Timing Description\"\n    let start = 108;\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    result.resolutionX = parseInt('0x0' + edid.substr(start + 8, 1) + edid.substr(start + 4, 2));\n    result.resolutionY = parseInt('0x0' + edid.substr(start + 14, 1) + edid.substr(start + 10, 2));\n    result.sizeX = parseInt('0x0' + edid.substr(start + 28, 1) + edid.substr(start + 24, 2));\n    result.sizeY = parseInt('0x0' + edid.substr(start + 29, 1) + edid.substr(start + 26, 2));\n    // monitor name\n    start = edid.indexOf('000000fc00'); // find first \"Monitor Description Data\"\n    if (start >= 0) {\n      let model_raw = edid.substr(start + 10, 26);\n      if (model_raw.indexOf('0a') !== -1) {\n        model_raw = model_raw.substr(0, model_raw.indexOf('0a'));\n      }\n      try {\n        if (model_raw.length > 2) {\n          result.model = model_raw.match(/.{1,2}/g).map(function (v) {\n            return String.fromCharCode(parseInt(v, 16));\n          }).join('');\n        }\n      } catch (e) {\n        util.noop();\n      }\n    } else {\n      result.model = '';\n    }\n    return result;\n  }\n\n  function parseLinesLinuxDisplays(lines, depth) {\n    let displays = [];\n    let currentDisplay = {\n      vendor: '',\n      model: '',\n      deviceName: '',\n      main: false,\n      builtin: false,\n      connection: '',\n      sizeX: null,\n      sizeY: null,\n      pixelDepth: null,\n      resolutionX: null,\n      resolutionY: null,\n      currentResX: null,\n      currentResY: null,\n      positionX: 0,\n      positionY: 0,\n      currentRefreshRate: null\n    };\n    let is_edid = false;\n    let is_current = false;\n    let edid_raw = '';\n    let start = 0;\n    for (let i = 1; i < lines.length; i++) {        // start with second line\n      if ('' !== lines[i].trim()) {\n        if (' ' !== lines[i][0] && '\\t' !== lines[i][0] && lines[i].toLowerCase().indexOf(' connected ') !== -1) {        // first line of new entry\n          if (currentDisplay.model || currentDisplay.main || currentDisplay.builtin || currentDisplay.connection || currentDisplay.sizeX !== null || currentDisplay.pixelDepth !== null || currentDisplay.resolutionX !== null) {         // push last display to array\n            displays.push(currentDisplay);\n            currentDisplay = {\n              vendor: '',\n              model: '',\n              main: false,\n              builtin: false,\n              connection: '',\n              sizeX: null,\n              sizeY: null,\n              pixelDepth: null,\n              resolutionX: null,\n              resolutionY: null,\n              currentResX: null,\n              currentResY: null,\n              positionX: 0,\n              positionY: 0,\n              currentRefreshRate: null\n            };\n          }\n          let parts = lines[i].split(' ');\n          currentDisplay.connection = parts[0];\n          currentDisplay.main = lines[i].toLowerCase().indexOf(' primary ') >= 0;\n          currentDisplay.builtin = (parts[0].toLowerCase().indexOf('edp') >= 0);\n        }\n\n        // try to read EDID information\n        if (is_edid) {\n          if (lines[i].search(/\\S|$/) > start) {\n            edid_raw += lines[i].toLowerCase().trim();\n          } else {\n            // parsen EDID\n            let edid_decoded = parseLinesLinuxEdid(edid_raw);\n            currentDisplay.vendor = edid_decoded.vendor;\n            currentDisplay.model = edid_decoded.model;\n            currentDisplay.resolutionX = edid_decoded.resolutionX;\n            currentDisplay.resolutionY = edid_decoded.resolutionY;\n            currentDisplay.sizeX = edid_decoded.sizeX;\n            currentDisplay.sizeY = edid_decoded.sizeY;\n            currentDisplay.pixelDepth = depth;\n            is_edid = false;\n          }\n        }\n        if (lines[i].toLowerCase().indexOf('edid:') >= 0) {\n          is_edid = true;\n          start = lines[i].search(/\\S|$/);\n        }\n        if (lines[i].toLowerCase().indexOf('*current') >= 0) {\n          const parts1 = lines[i].split('(');\n          if (parts1 && parts1.length > 1 && parts1[0].indexOf('x') >= 0) {\n            const resParts = parts1[0].trim().split('x');\n            currentDisplay.currentResX = util.toInt(resParts[0]);\n            currentDisplay.currentResY = util.toInt(resParts[1]);\n          }\n          is_current = true;\n        }\n        if (is_current && lines[i].toLowerCase().indexOf('clock') >= 0 && lines[i].toLowerCase().indexOf('hz') >= 0 && lines[i].toLowerCase().indexOf('v: height') >= 0) {\n          const parts1 = lines[i].split('clock');\n          if (parts1 && parts1.length > 1 && parts1[1].toLowerCase().indexOf('hz') >= 0) {\n            currentDisplay.currentRefreshRate = util.toInt(parts1[1]);\n          }\n          is_current = false;\n        }\n      }\n    }\n\n    // pushen displays\n    if (currentDisplay.model || currentDisplay.main || currentDisplay.builtin || currentDisplay.connection || currentDisplay.sizeX !== null || currentDisplay.pixelDepth !== null || currentDisplay.resolutionX !== null) {  // still information there\n      displays.push(currentDisplay);\n    }\n    return displays;\n  }\n\n  // function starts here\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        controllers: [],\n        displays: []\n      };\n      if (_darwin) {\n        let cmd = 'system_profiler -xml -detailLevel full SPDisplaysDataType';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              let output = stdout.toString();\n              result = parseLinesDarwin(util.plistParser(output)[0]._items);\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_linux) {\n        // Raspberry: https://elinux.org/RPI_vcgencmd_usage\n        if (util.isRaspberry() && util.isRaspbian()) {\n          let cmd = 'fbset -s | grep \\'mode \"\\'; vcgencmd get_mem gpu; tvservice -s; tvservice -n;';\n          exec(cmd, function (error, stdout) {\n            let lines = stdout.toString().split('\\n');\n            if (lines.length > 3 && lines[0].indexOf('mode \"') >= -1 && lines[2].indexOf('0x12000a') > -1) {\n              const parts = lines[0].replace('mode', '').replace(/\"/g, '').trim().split('x');\n              if (parts.length === 2) {\n                result.displays.push({\n                  vendor: '',\n                  model: util.getValue(lines, 'device_name', '='),\n                  main: true,\n                  builtin: false,\n                  connection: 'HDMI',\n                  sizeX: null,\n                  sizeY: null,\n                  pixelDepth: null,\n                  resolutionX: parseInt(parts[0], 10),\n                  resolutionY: parseInt(parts[1], 10),\n                  currentResX: null,\n                  currentResY: null,\n                  positionX: 0,\n                  positionY: 0,\n                  currentRefreshRate: null\n                });\n              }\n            }\n            if (lines.length > 1 && stdout.toString().indexOf('gpu=') >= -1) {\n              result.controllers.push({\n                vendor: 'Broadcom',\n                model: 'VideoCore IV',\n                bus: '',\n                vram: util.getValue(lines, 'gpu', '=').replace('M', ''),\n                vramDynamic: true\n              });\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        } else {\n          let cmd = 'lspci -vvv  2>/dev/null';\n          exec(cmd, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              result.controllers = parseLinesLinuxControllers(lines);\n              const nvidiaData = nvidiaDevices();\n              // needs to be rewritten ... using no spread operators\n              result.controllers = result.controllers.map((controller) => { // match by busAddress\n                return mergeControllerNvidia(controller, nvidiaData.find((contr) => contr.pciBus.toLowerCase().endsWith(controller.busAddress.toLowerCase())) || {});\n              });\n            }\n            let cmd = 'clinfo --raw';\n            exec(cmd, function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                result.controllers = parseLinesLinuxClinfo(result.controllers, lines);\n              }\n              let cmd = 'xdpyinfo 2>/dev/null | grep \\'depth of root window\\' | awk \\'{ print $5 }\\'';\n              exec(cmd, function (error, stdout) {\n                let depth = 0;\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  depth = parseInt(lines[0]) || 0;\n                }\n                let cmd = 'xrandr --verbose 2>/dev/null';\n                exec(cmd, function (error, stdout) {\n                  if (!error) {\n                    let lines = stdout.toString().split('\\n');\n                    result.displays = parseLinesLinuxDisplays(lines, depth);\n                  }\n                  if (callback) {\n                    callback(result);\n                  }\n                  resolve(result);\n                });\n              });\n            });\n          });\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        if (callback) { callback(null); }\n        resolve(null);\n      }\n      if (_sunos) {\n        if (callback) { callback(null); }\n        resolve(null);\n      }\n      if (_windows) {\n\n        // https://blogs.technet.microsoft.com/heyscriptingguy/2013/10/03/use-powershell-to-discover-multi-monitor-information/\n        // https://devblogs.microsoft.com/scripting/use-powershell-to-discover-multi-monitor-information/\n        try {\n          const workload = [];\n          workload.push(util.wmic('path win32_VideoController get /value'));\n          workload.push(util.powerShell('gp \"HKLM:\\\\SYSTEM\\\\ControlSet001\\\\Control\\\\Class\\\\{4d36e968-e325-11ce-bfc1-08002be10318}\\\\*\" -ErrorAction SilentlyContinue | where MatchingDeviceId $null -NE | select MatchingDeviceId,HardwareInformation.qwMemorySize | fl'));\n          workload.push(util.wmic('path win32_desktopmonitor get /value'));\n          workload.push(util.powerShell('Get-CimInstance -Namespace root\\\\wmi -ClassName WmiMonitorBasicDisplayParams | fl'));\n          workload.push(util.powerShell('Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.Screen]::AllScreens'));\n          workload.push(util.powerShell('Get-CimInstance -Namespace root\\\\wmi -ClassName WmiMonitorConnectionParams | fl'));\n          workload.push(util.powerShell('gwmi WmiMonitorID -Namespace root\\\\wmi | ForEach-Object {(($_.ManufacturerName -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.ProductCodeID -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.UserFriendlyName -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.SerialNumberID -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + $_.InstanceName}'));\n\n          const nvidiaData = nvidiaDevices();\n\n          Promise.all(\n            workload\n          ).then(data => {\n            // controller + vram\n            let csections = data[0].split(/\\n\\s*\\n/);\n            let vsections = data[1].split(/\\n\\s*\\n/);\n            result.controllers = parseLinesWindowsControllers(csections, vsections);\n            result.controllers = result.controllers.map((controller) => { // match by subDeviceId\n              if (controller.vendor.toLowerCase() === 'nvidia') {\n                return mergeControllerNvidia(controller, nvidiaData.find(device => {\n                  let windowsSubDeviceId = controller.subDeviceId.toLowerCase();\n                  const nvidiaSubDeviceIdParts = device.subDeviceId.split('x');\n                  let nvidiaSubDeviceId = nvidiaSubDeviceIdParts.length > 1 ? nvidiaSubDeviceIdParts[1].toLowerCase() : nvidiaSubDeviceIdParts[0].toLowerCase();\n                  const lengthDifference = Math.abs(windowsSubDeviceId.length - nvidiaSubDeviceId.length);\n                  if (windowsSubDeviceId.length > nvidiaSubDeviceId.length) {\n                    for (let i = 0; i < lengthDifference; i++) {\n                      nvidiaSubDeviceId = '0' + nvidiaSubDeviceId;\n                    }\n                  } else if (windowsSubDeviceId.length < nvidiaSubDeviceId.length) {\n                    for (let i = 0; i < lengthDifference; i++) {\n                      windowsSubDeviceId = '0' + windowsSubDeviceId;\n                    }\n                  }\n                  return windowsSubDeviceId === nvidiaSubDeviceId;\n                }) || {});\n              } else {\n                return controller;\n              }\n            });\n\n            // displays\n            let dsections = data[2].split(/\\n\\s*\\n/);\n            // result.displays = parseLinesWindowsDisplays(dsections);\n            dsections.shift();\n            dsections.pop();\n\n            // monitor (powershell)\n            let msections = data[3].split('Active ');\n            msections.shift();\n\n            // forms.screens (powershell)\n            let ssections = data[4].split('BitsPerPixel ');\n            ssections.shift();\n\n            // connection params (powershell) - video type\n            let tsections = data[5].split(/\\n\\s*\\n/);\n            tsections.shift();\n\n            // monitor ID (powershell) - model / vendor\n            const res = data[6].split(/\\r\\n/);\n            let isections = [];\n            res.forEach(element => {\n              const parts = element.split('|');\n              if (parts.length === 5) {\n                isections.push({\n                  vendor: parts[0],\n                  code: parts[1],\n                  model: parts[2],\n                  serial: parts[3],\n                  instanceId: parts[4]\n                });\n              }\n            });\n            result.displays = parseLinesWindowsDisplaysPowershell(ssections, msections, dsections, tsections, isections);\n\n            if (result.displays.length === 1) {\n              if (_resolutionX) {\n                result.displays[0].resolutionX = _resolutionX;\n                if (!result.displays[0].currentResX) {\n                  result.displays[0].currentResX = _resolutionX;\n                }\n              }\n              if (_resolutionY) {\n                result.displays[0].resolutionY = _resolutionY;\n                if (result.displays[0].currentResY === 0) {\n                  result.displays[0].currentResY = _resolutionY;\n                }\n              }\n              if (_pixelDepth) {\n                result.displays[0].pixelDepth = _pixelDepth;\n              }\n              if (_refreshRate && !result.displays[0].refreshRate) {\n                result.displays[0].currentRefreshRate = _refreshRate;\n              }\n            }\n\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          })\n            .catch(() => {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n\n  function parseLinesWindowsControllers(sections, vections) {\n    const memorySizes = {};\n    for (const i in vections) {\n      if ({}.hasOwnProperty.call(vections, i)) {\n        if (vections[i].trim() !== '') {\n          const lines = vections[i].trim().split(os.EOL);\n          const matchingDeviceId = util.getValue(lines, 'MatchingDeviceId').match(/PCI\\\\(VEN_[0-9A-F]{4})&(DEV_[0-9A-F]{4})(?:&(SUBSYS_[0-9A-F]{8}))?(?:&(REV_[0-9A-F]{2}))?/i);\n          if (matchingDeviceId) {\n            const quadWordmemorySize = parseInt(util.getValue(lines, 'HardwareInformation.qwMemorySize'));\n            if (!isNaN(quadWordmemorySize)) {\n              let deviceId = matchingDeviceId[1].toUpperCase() + '&' + matchingDeviceId[2].toUpperCase();\n              if (matchingDeviceId[3]) {\n                deviceId += '&' + matchingDeviceId[3].toUpperCase();\n              }\n              if (matchingDeviceId[4]) {\n                deviceId += '&' + matchingDeviceId[4].toUpperCase();\n              }\n              memorySizes[deviceId] = quadWordmemorySize;\n            }\n          }\n        }\n      }\n    }\n\n    let controllers = [];\n    for (let i in sections) {\n      if ({}.hasOwnProperty.call(sections, i)) {\n        if (sections[i].trim() !== '') {\n          let lines = sections[i].trim().split('\\r\\n');\n          let pnpDeviceId = util.getValue(lines, 'PNPDeviceID', '=').match(/PCI\\\\(VEN_[0-9A-F]{4})&amp;(DEV_[0-9A-F]{4})(?:&amp;(SUBSYS_[0-9A-F]{8}))?(?:&amp;(REV_[0-9A-F]{2}))?/i);\n          let subDeviceId = null;\n          let memorySize = null;\n          if (pnpDeviceId) {\n            subDeviceId = pnpDeviceId[3];\n            if (subDeviceId) {\n              subDeviceId = subDeviceId.split('_')[1];\n            }\n\n            // Match PCI device identifier (there's an order of increasing generality):\n            // https://docs.microsoft.com/en-us/windows-hardware/drivers/install/identifiers-for-pci-devices\n\n            // PCI\\VEN_v(4)&DEV_d(4)&SUBSYS_s(4)n(4)&REV_r(2)\n            if (memorySize == null && pnpDeviceId[3] && pnpDeviceId[4]) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase() + '&' + pnpDeviceId[3].toUpperCase() + '&' + pnpDeviceId[4].toUpperCase();\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            }\n\n            // PCI\\VEN_v(4)&DEV_d(4)&SUBSYS_s(4)n(4)\n            if (memorySize == null && pnpDeviceId[3]) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase() + '&' + pnpDeviceId[3].toUpperCase();\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            }\n\n            // PCI\\VEN_v(4)&DEV_d(4)&REV_r(2)\n            if (memorySize == null && pnpDeviceId[4]) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase() + '&' + pnpDeviceId[4].toUpperCase();\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            }\n\n            // PCI\\VEN_v(4)&DEV_d(4)\n            if (memorySize == null) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase();\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            }\n          }\n\n          controllers.push({\n            vendor: util.getValue(lines, 'AdapterCompatibility', '='),\n            model: util.getValue(lines, 'name', '='),\n            bus: util.getValue(lines, 'PNPDeviceID', '=').startsWith('PCI') ? 'PCI' : '',\n            vram: (memorySize == null ? util.toInt(util.getValue(lines, 'AdapterRAM', '=')) : memorySize) / 1024 / 1024,\n            vramDynamic: (util.getValue(lines, 'VideoMemoryType', '=') === '2'),\n            subDeviceId\n          });\n          _resolutionX = util.toInt(util.getValue(lines, 'CurrentHorizontalResolution', '=')) || _resolutionX;\n          _resolutionY = util.toInt(util.getValue(lines, 'CurrentVerticalResolution', '=')) || _resolutionY;\n          _refreshRate = util.toInt(util.getValue(lines, 'CurrentRefreshRate', '=')) || _refreshRate;\n          _pixelDepth = util.toInt(util.getValue(lines, 'CurrentBitsPerPixel', '=')) || _pixelDepth;\n        }\n      }\n    }\n    return controllers;\n  }\n\n  function parseLinesWindowsDisplaysPowershell(ssections, msections, dsections, tsections, isections) {\n    let displays = [];\n    let vendor = '';\n    let model = '';\n    let deviceID = '';\n    let resolutionX = 0;\n    let resolutionY = 0;\n    if (dsections && dsections.length) {\n      let linesDisplay = dsections[0].split(os.EOL);\n      vendor = util.getValue(linesDisplay, 'MonitorManufacturer', '=');\n      model = util.getValue(linesDisplay, 'Name', '=');\n      deviceID = util.getValue(linesDisplay, 'PNPDeviceID', '=').replace(/&amp;/g, '&').toLowerCase();\n      resolutionX = util.toInt(util.getValue(linesDisplay, 'ScreenWidth', '='));\n      resolutionY = util.toInt(util.getValue(linesDisplay, 'ScreenHeight', '='));\n    }\n    for (let i = 0; i < ssections.length; i++) {\n      if (ssections[i].trim() !== '') {\n        ssections[i] = 'BitsPerPixel ' + ssections[i];\n        msections[i] = 'Active ' + msections[i];\n        // tsections can be empty OR undefined on earlier versions of powershell (<=2.0)\n        // Tag connection type as UNKNOWN by default if this information is missing\n        if (tsections.length === 0 || tsections[i] === undefined) {\n          tsections[i] = 'Unknown';\n        }\n        let linesScreen = ssections[i].split(os.EOL);\n        let linesMonitor = msections[i].split(os.EOL);\n\n        let linesConnection = tsections[i].split(os.EOL);\n        const bitsPerPixel = util.getValue(linesScreen, 'BitsPerPixel');\n        const bounds = util.getValue(linesScreen, 'Bounds').replace('{', '').replace('}', '').split(',');\n        const primary = util.getValue(linesScreen, 'Primary');\n        const sizeX = util.getValue(linesMonitor, 'MaxHorizontalImageSize');\n        const sizeY = util.getValue(linesMonitor, 'MaxVerticalImageSize');\n        const instanceName = util.getValue(linesMonitor, 'InstanceName').toLowerCase();\n        const videoOutputTechnology = util.getValue(linesConnection, 'VideoOutputTechnology');\n        const deviceName = util.getValue(linesScreen, 'DeviceName');\n        let displayVendor = '';\n        let displayModel = '';\n        isections.forEach(element => {\n          if (element.instanceId.toLowerCase().startsWith(instanceName) && vendor.startsWith('(') && model.startsWith('PnP')) {\n            displayVendor = element.vendor;\n            displayModel = element.model;\n          }\n        });\n        displays.push({\n          vendor: instanceName.startsWith(deviceID) && displayVendor === '' ? vendor : displayVendor,\n          model: instanceName.startsWith(deviceID) && displayModel === '' ? model : displayModel,\n          deviceName,\n          main: primary.toLowerCase() === 'true',\n          builtin: videoOutputTechnology === '2147483648',\n          connection: videoOutputTechnology && videoTypes[videoOutputTechnology] ? videoTypes[videoOutputTechnology] : '',\n          resolutionX: util.toInt(util.getValue(bounds, 'Width', '=')),\n          resolutionY: util.toInt(util.getValue(bounds, 'Height', '=')),\n          sizeX: sizeX ? parseInt(sizeX, 10) : null,\n          sizeY: sizeY ? parseInt(sizeY, 10) : null,\n          pixelDepth: bitsPerPixel,\n          currentResX: util.toInt(util.getValue(bounds, 'Width', '=')),\n          currentResY: util.toInt(util.getValue(bounds, 'Height', '=')),\n          positionX: util.toInt(util.getValue(bounds, 'X', '=')),\n          positionY: util.toInt(util.getValue(bounds, 'Y', '=')),\n        });\n      }\n    }\n    if (ssections.length === 0) {\n      displays.push({\n        vendor,\n        model,\n        main: true,\n        sizeX: null,\n        sizeY: null,\n        resolutionX,\n        resolutionY,\n        pixelDepth: null,\n        currentResX: resolutionX,\n        currentResY: resolutionY,\n        positionX: 0,\n        positionY: 0\n      });\n    }\n    return displays;\n  }\n\n}\n\nexports.graphics = graphics;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// index.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// Contributors:  Guillaume Legrain (https://github.com/glegrain)\n//                Riccardo Novaglia (https://github.com/richy24)\n//                Quentin Busuttil (https://github.com/Buzut)\n//                Lapsio (https://github.com/lapsio)\n//                csy (https://github.com/csy1983)\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n\n// ----------------------------------------------------------------------------------\n// Dependencies\n// ----------------------------------------------------------------------------------\n\nconst lib_version = require('../package.json').version;\nconst util = require('./util');\nconst system = require('./system');\nconst osInfo = require('./osinfo');\nconst cpu = require('./cpu');\nconst memory = require('./memory');\nconst battery = require('./battery');\nconst graphics = require('./graphics');\nconst filesystem = require('./filesystem');\nconst network = require('./network');\nconst wifi = require('./wifi');\nconst processes = require('./processes');\nconst users = require('./users');\nconst internet = require('./internet');\nconst docker = require('./docker');\nconst vbox = require('./virtualbox');\nconst printer = require('./printer');\nconst usb = require('./usb');\nconst audio = require('./audio');\nconst bluetooth = require('./bluetooth');\n\nlet _platform = process.platform;\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\n// ----------------------------------------------------------------------------------\n// init\n// ----------------------------------------------------------------------------------\n\nif (_windows) {\n  util.getCodepage();\n}\n\n// ----------------------------------------------------------------------------------\n// General\n// ----------------------------------------------------------------------------------\n\nfunction version() {\n  return lib_version;\n}\n\n// ----------------------------------------------------------------------------------\n// Get static and dynamic data (all)\n// ----------------------------------------------------------------------------------\n\n// --------------------------\n// get static data - they should not change until restarted\n\nfunction getStaticData(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let data = {};\n\n      data.version = version();\n\n      Promise.all([\n        system.system(),\n        system.bios(),\n        system.baseboard(),\n        system.chassis(),\n        osInfo.osInfo(),\n        osInfo.uuid(),\n        osInfo.versions(),\n        cpu.cpu(),\n        cpu.cpuFlags(),\n        graphics.graphics(),\n        network.networkInterfaces(),\n        memory.memLayout(),\n        filesystem.diskLayout()\n      ]).then(res => {\n        data.system = res[0];\n        data.bios = res[1];\n        data.baseboard = res[2];\n        data.chassis = res[3];\n        data.os = res[4];\n        data.uuid = res[5];\n        data.versions = res[6];\n        data.cpu = res[7];\n        data.cpu.flags = res[8];\n        data.graphics = res[9];\n        data.net = res[10];\n        data.memLayout = res[11];\n        data.diskLayout = res[12];\n        if (callback) { callback(data); }\n        resolve(data);\n      });\n    });\n  });\n}\n\n\n// --------------------------\n// get all dynamic data - e.g. for monitoring agents\n// may take some seconds to get all data\n// --------------------------\n// 2 additional parameters needed\n// - srv: \t\tcomma separated list of services to monitor e.g. \"mysql, apache, postgresql\"\n// - iface:\tdefine network interface for which you like to monitor network speed e.g. \"eth0\"\n\nfunction getDynamicData(srv, iface, callback) {\n\n  if (util.isFunction(iface)) {\n    callback = iface;\n    iface = '';\n  }\n  if (util.isFunction(srv)) {\n    callback = srv;\n    srv = '';\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      iface = iface || network.getDefaultNetworkInterface();\n      srv = srv || '';\n\n      // use closure to track ƒ completion\n      let functionProcessed = (function () {\n        let totalFunctions = 15;\n        if (_windows) { totalFunctions = 13; }\n        if (_freebsd || _openbsd || _netbsd) { totalFunctions = 11; }\n        if (_sunos) { totalFunctions = 6; }\n\n        return function () {\n          if (--totalFunctions === 0) {\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          }\n        };\n      })();\n\n      // var totalFunctions = 14;\n      // function functionProcessed() {\n      //   if (--totalFunctions === 0) {\n      //     if (callback) { callback(data) }\n      //     resolve(data);\n      //   }\n      // }\n\n      let data = {};\n\n      // get time\n      data.time = osInfo.time();\n\n      /**\n       * @namespace\n       * @property {Object}  versions\n       * @property {string}  versions.node\n       * @property {string}  versions.v8\n       */\n      data.node = process.versions.node;\n      data.v8 = process.versions.v8;\n\n      cpu.cpuCurrentSpeed().then(res => {\n        data.cpuCurrentSpeed = res;\n        functionProcessed();\n      });\n\n      users.users().then(res => {\n        data.users = res;\n        functionProcessed();\n      });\n\n      processes.processes().then(res => {\n        data.processes = res;\n        functionProcessed();\n      });\n\n      cpu.currentLoad().then(res => {\n        data.currentLoad = res;\n        functionProcessed();\n      });\n\n      if (!_sunos) {\n        cpu.cpuTemperature().then(res => {\n          data.temp = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        network.networkStats(iface).then(res => {\n          data.networkStats = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_sunos) {\n        network.networkConnections().then(res => {\n          data.networkConnections = res;\n          functionProcessed();\n        });\n      }\n\n      memory.mem().then(res => {\n        data.mem = res;\n        functionProcessed();\n      });\n\n      if (!_sunos) {\n        battery().then(res => {\n          data.battery = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_sunos) {\n        processes.services(srv).then(res => {\n          data.services = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_sunos) {\n        filesystem.fsSize().then(res => {\n          data.fsSize = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_windows && !_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        filesystem.fsStats().then(res => {\n          data.fsStats = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_windows && !_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        filesystem.disksIO().then(res => {\n          data.disksIO = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        wifi.wifiNetworks().then(res => {\n          data.wifiNetworks = res;\n          functionProcessed();\n        });\n      }\n\n      internet.inetLatency().then(res => {\n        data.inetLatency = res;\n        functionProcessed();\n      });\n    });\n  });\n}\n\n// --------------------------\n// get all data at once\n// --------------------------\n// 2 additional parameters needed\n// - srv: \t\tcomma separated list of services to monitor e.g. \"mysql, apache, postgresql\"\n// - iface:\tdefine network interface for which you like to monitor network speed e.g. \"eth0\"\n\nfunction getAllData(srv, iface, callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let data = {};\n\n      if (iface && util.isFunction(iface) && !callback) {\n        callback = iface;\n        iface = '';\n      }\n\n      if (srv && util.isFunction(srv) && !iface && !callback) {\n        callback = srv;\n        srv = '';\n        iface = '';\n      }\n\n      getStaticData().then(res => {\n        data = res;\n        getDynamicData(srv, iface).then(res => {\n          for (let key in res) {\n            if ({}.hasOwnProperty.call(res, key)) {\n              data[key] = res[key];\n            }\n          }\n          if (callback) { callback(data); }\n          resolve(data);\n        });\n      });\n    });\n  });\n}\n\nfunction get(valueObject, callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const allPromises = Object.keys(valueObject)\n        .filter(func => ({}.hasOwnProperty.call(exports, func)))\n        .map(func => {\n          const params = valueObject[func].substring(valueObject[func].lastIndexOf('(') + 1, valueObject[func].lastIndexOf(')'));\n          let funcWithoutParams = func.indexOf(')') >= 0 ? func.split(')')[1].trim() : func;\n          funcWithoutParams = func.indexOf('|') >= 0 ? func.split('|')[0].trim() : funcWithoutParams;\n          if (params) {\n            return exports[funcWithoutParams](params);\n          } else {\n            return exports[funcWithoutParams]('');\n          }\n        });\n\n      Promise.all(allPromises).then(data => {\n        const result = {};\n        let i = 0;\n        for (let key in valueObject) {\n          if ({}.hasOwnProperty.call(valueObject, key) && {}.hasOwnProperty.call(exports, key) && data.length > i) {\n            if (valueObject[key] === '*' || valueObject[key] === 'all') {\n              result[key] = data[i];\n            } else {\n              let keys = valueObject[key];\n              // let params = '';\n              let filter = '';\n              let filterParts = [];\n              // remove params\n              if (keys.indexOf(')') >= 0) {\n                keys = keys.split(')')[1].trim();\n              }\n              // extract filter and remove it from keys\n              if (keys.indexOf('|') >= 0) {\n                filter = keys.split('|')[1].trim();\n                filterParts = filter.split(':');\n\n                keys = keys.split('|')[0].trim();\n              }\n              keys = keys.replace(/,/g, ' ').replace(/ +/g, ' ').split(' ');\n              if (data[i]) {\n                if (Array.isArray(data[i])) {\n                  // result is in an array, go through all elements of array and pick only the right ones\n                  const partialArray = [];\n                  data[i].forEach(element => {\n                    let partialRes = {};\n                    if (keys.length === 1 && (keys[0] === '*' || keys[0] === 'all')) {\n                      partialRes = element;\n                    } else {\n                      keys.forEach(k => {\n                        if ({}.hasOwnProperty.call(element, k)) {\n                          partialRes[k] = element[k];\n                        }\n                      });\n                    }\n                    // if there is a filter, then just take those elements\n                    if (filter && filterParts.length === 2) {\n                      if ({}.hasOwnProperty.call(partialRes, filterParts[0].trim())) {\n                        const val = partialRes[filterParts[0].trim()];\n                        if (typeof val == 'number') {\n                          if (val === parseFloat(filterParts[1].trim())) {\n                            partialArray.push(partialRes);\n                          }\n                        } else if (typeof val == 'string') {\n                          if (val.toLowerCase() === filterParts[1].trim().toLowerCase()) {\n                            partialArray.push(partialRes);\n                          }\n                        }\n                      }\n                    } else {\n                      partialArray.push(partialRes);\n                    }\n\n                  });\n                  result[key] = partialArray;\n                } else {\n                  const partialRes = {};\n                  keys.forEach(k => {\n                    if ({}.hasOwnProperty.call(data[i], k)) {\n                      partialRes[k] = data[i][k];\n                    }\n                  });\n                  result[key] = partialRes;\n                }\n              } else {\n                result[key] = {};\n              }\n            }\n            i++;\n          }\n        }\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nfunction observe(valueObject, interval, callback) {\n  let _data = null;\n\n  const result = setInterval(() => {\n    get(valueObject).then(data => {\n      if (JSON.stringify(_data) !== JSON.stringify(data)) {\n        _data = Object.assign({}, data);\n        callback(data);\n      }\n    });\n  }, interval);\n  return result;\n}\n\n// ----------------------------------------------------------------------------------\n// export all libs\n// ----------------------------------------------------------------------------------\n\nexports.version = version;\nexports.system = system.system;\nexports.bios = system.bios;\nexports.baseboard = system.baseboard;\nexports.chassis = system.chassis;\n\nexports.time = osInfo.time;\nexports.osInfo = osInfo.osInfo;\nexports.versions = osInfo.versions;\nexports.shell = osInfo.shell;\nexports.uuid = osInfo.uuid;\n\nexports.cpu = cpu.cpu;\nexports.cpuFlags = cpu.cpuFlags;\nexports.cpuCache = cpu.cpuCache;\nexports.cpuCurrentSpeed = cpu.cpuCurrentSpeed;\nexports.cpuTemperature = cpu.cpuTemperature;\nexports.currentLoad = cpu.currentLoad;\nexports.fullLoad = cpu.fullLoad;\n\nexports.mem = memory.mem;\nexports.memLayout = memory.memLayout;\n\nexports.battery = battery;\n\nexports.graphics = graphics.graphics;\n\nexports.fsSize = filesystem.fsSize;\nexports.fsOpenFiles = filesystem.fsOpenFiles;\nexports.blockDevices = filesystem.blockDevices;\nexports.fsStats = filesystem.fsStats;\nexports.disksIO = filesystem.disksIO;\nexports.diskLayout = filesystem.diskLayout;\n\nexports.networkInterfaceDefault = network.networkInterfaceDefault;\nexports.networkGatewayDefault = network.networkGatewayDefault;\nexports.networkInterfaces = network.networkInterfaces;\nexports.networkStats = network.networkStats;\nexports.networkConnections = network.networkConnections;\n\nexports.wifiNetworks = wifi.wifiNetworks;\nexports.wifiInterfaces = wifi.wifiInterfaces;\nexports.wifiConnections = wifi.wifiConnections;\n\nexports.services = processes.services;\nexports.processes = processes.processes;\nexports.processLoad = processes.processLoad;\n\nexports.users = users.users;\n\nexports.inetChecksite = internet.inetChecksite;\nexports.inetLatency = internet.inetLatency;\n\nexports.dockerInfo = docker.dockerInfo;\nexports.dockerImages = docker.dockerImages;\nexports.dockerContainers = docker.dockerContainers;\nexports.dockerContainerStats = docker.dockerContainerStats;\nexports.dockerContainerProcesses = docker.dockerContainerProcesses;\nexports.dockerVolumes = docker.dockerVolumes;\nexports.dockerAll = docker.dockerAll;\n\nexports.vboxInfo = vbox.vboxInfo;\n\nexports.printer = printer.printer;\n\nexports.usb = usb.usb;\n\nexports.audio = audio.audio;\nexports.bluetoothDevices = bluetooth.bluetoothDevices;\n\nexports.getStaticData = getStaticData;\nexports.getDynamicData = getDynamicData;\nexports.getAllData = getAllData;\nexports.get = get;\nexports.observe = observe;\n\n","'use strict';\n// @ts-check\n// ==================================================================================\n// internet.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 12. Internet\n// ----------------------------------------------------------------------------------\n\n// const exec = require('child_process').exec;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\n// --------------------------\n// check if external site is available\n\nfunction inetChecksite(url, callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        url: url,\n        ok: false,\n        status: 404,\n        ms: null\n      };\n      if (typeof url !== 'string') {\n        if (callback) { callback(result); }\n        return resolve(result);\n      }\n      let urlSanitized = '';\n      const s = util.sanitizeShellString(url, true);\n      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n        if (!(s[i] === undefined)) {\n          s[i].__proto__.toLowerCase = util.stringToLower;\n          const sl = s[i].toLowerCase();\n          if (sl && sl[0] && !sl[1] && sl[0].length === 1) {\n            urlSanitized = urlSanitized + sl[0];\n          }\n        }\n      }\n      result.url = urlSanitized;\n      try {\n        if (urlSanitized && !util.isPrototypePolluted()) {\n          urlSanitized.__proto__.startsWith = util.stringStartWith;\n          if (urlSanitized.startsWith('file:') || urlSanitized.startsWith('gopher:') || urlSanitized.startsWith('telnet:') || urlSanitized.startsWith('mailto:') || urlSanitized.startsWith('news:') || urlSanitized.startsWith('nntp:')) {\n            if (callback) { callback(result); }\n            return resolve(result);\n          }\n          let t = Date.now();\n          if (_linux || _freebsd || _openbsd || _netbsd || _darwin || _sunos) {\n            let args = ['-I', '--connect-timeout', '5', '-m', '5'];\n            args.push(urlSanitized);\n            let cmd = 'curl';\n            util.execSafe(cmd, args).then((stdout) => {\n              const lines = stdout.split('\\n');\n              let statusCode = lines[0] && lines[0].indexOf(' ') >= 0 ? parseInt(lines[0].split(' ')[1], 10) : 404;\n              result.status = statusCode || 404;\n              result.ok = (statusCode === 200 || statusCode === 301 || statusCode === 302 || statusCode === 304);\n              result.ms = (result.ok ? Date.now() - t : null);\n              if (callback) { callback(result); }\n              resolve(result);\n            });\n          }\n          if (_windows) {   // if this is stable, this can be used for all OS types\n            const http = (urlSanitized.startsWith('https:') ? require('https') : require('http'));\n            try {\n              http.get(urlSanitized, (res) => {\n                const statusCode = res.statusCode;\n\n                result.status = statusCode || 404;\n                result.ok = (statusCode === 200 || statusCode === 301 || statusCode === 302 || statusCode === 304);\n\n                if (statusCode !== 200) {\n                  res.resume();\n                  result.ms = (result.ok ? Date.now() - t : null);\n                  if (callback) { callback(result); }\n                  resolve(result);\n                } else {\n                  res.on('data', () => { });\n                  res.on('end', () => {\n                    result.ms = (result.ok ? Date.now() - t : null);\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  });\n                }\n              }).on('error', () => {\n                if (callback) { callback(result); }\n                resolve(result);\n              });\n            } catch (err) {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          }\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      } catch (err) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.inetChecksite = inetChecksite;\n\n// --------------------------\n// check inet latency\n\nfunction inetLatency(host, callback) {\n\n  // fallback - if only callback is given\n  if (util.isFunction(host) && !callback) {\n    callback = host;\n    host = '';\n  }\n\n  host = host || '8.8.8.8';\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (typeof host !== 'string') {\n        if (callback) { callback(null); }\n        return resolve(null);\n      }\n      let hostSanitized = '';\n      const s = (util.isPrototypePolluted() ? '8.8.8.8' : util.sanitizeShellString(host, true)).trim();\n      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n        if (!(s[i] === undefined)) {\n          s[i].__proto__.toLowerCase = util.stringToLower;\n          const sl = s[i].toLowerCase();\n          if (sl && sl[0] && !sl[1]) {\n            hostSanitized = hostSanitized + sl[0];\n          }\n        }\n      }\n      hostSanitized.__proto__.startsWith = util.stringStartWith;\n      if (hostSanitized.startsWith('file:') || hostSanitized.startsWith('gopher:') || hostSanitized.startsWith('telnet:') || hostSanitized.startsWith('mailto:') || hostSanitized.startsWith('news:') || hostSanitized.startsWith('nntp:')) {\n        if (callback) { callback(null); }\n        return resolve(null);\n      }\n      let params;\n      let filt;\n      if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n        if (_linux) {\n          params = ['-c', '2', '-w', '3', hostSanitized];\n          filt = 'rtt';\n        }\n        if (_freebsd || _openbsd || _netbsd) {\n          params = ['-c', '2', '-t', '3', hostSanitized];\n          filt = 'round-trip';\n        }\n        if (_darwin) {\n          params = ['-c2', '-t3', hostSanitized];\n          filt = 'avg';\n        }\n        util.execSafe('ping', params).then((stdout) => {\n          let result = null;\n          if (stdout) {\n            const lines = stdout.split('\\n').filter(line => line.indexOf(filt) >= 0).join('\\n');\n\n            const line = lines.split('=');\n            if (line.length > 1) {\n              const parts = line[1].split('/');\n              if (parts.length > 1) {\n                result = parseFloat(parts[1]);\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        const params = ['-s', '-a', hostSanitized, '56', '2'];\n        const filt = 'avg';\n        util.execSafe('ping', params, { timeout: 3000 }).then((stdout) => {\n          let result = null;\n          if (stdout) {\n            const lines = stdout.split('\\n').filter(line => line.indexOf(filt) >= 0).join('\\n');\n            const line = lines.split('=');\n            if (line.length > 1) {\n              const parts = line[1].split('/');\n              if (parts.length > 1) {\n                result = parseFloat(parts[1].replace(',', '.'));\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        let result = null;\n        try {\n          const params = [hostSanitized, '-n', '1'];\n          util.execSafe('ping', params, util.execOptsWin).then((stdout) => {\n            if (stdout) {\n              let lines = stdout.split('\\r\\n');\n              lines.shift();\n              lines.forEach(function (line) {\n                if ((line.toLowerCase().match(/ms/g) || []).length === 3) {\n                  let l = line.replace(/ +/g, ' ').split(' ');\n                  if (l.length > 6) {\n                    result = parseFloat(l[l.length - 1]);\n                  }\n                }\n              });\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.inetLatency = inetLatency;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// memory.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 5. Memory\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\nconst fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nconst OSX_RAM_manufacturers = {\n  '0x014F': 'Transcend Information',\n  '0x2C00': 'Micron Technology Inc.',\n  '0x802C': 'Micron Technology Inc.',\n  '0x80AD': 'Hynix Semiconductor Inc.',\n  '0x80CE': 'Samsung Electronics Inc.',\n  '0xAD00': 'Hynix Semiconductor Inc.',\n  '0xCE00': 'Samsung Electronics Inc.',\n  '0x02FE': 'Elpida',\n  '0x5105': 'Qimonda AG i. In.',\n  '0x8551': 'Qimonda AG i. In.',\n  '0x859B': 'Crucial',\n  '0x04CD': 'G-Skill'\n};\n\nconst LINUX_RAM_manufacturers = {\n  '017A': 'Apacer',\n  '0198': 'HyperX',\n  '029E': 'Corsair',\n  '04CB': 'A-DATA',\n  '04CD': 'G-Skill',\n  '059B': 'Crucial',\n  '00CE': 'Samsung',\n  '1315': 'Crutial',\n  '014F': 'Transcend Information',\n  '2C00': 'Micron Technology Inc.',\n  '802C': 'Micron Technology Inc.',\n  '80AD': 'Hynix Semiconductor Inc.',\n  '80CE': 'Samsung Electronics Inc.',\n  'AD00': 'Hynix Semiconductor Inc.',\n  'CE00': 'Samsung Electronics Inc.',\n  '02FE': 'Elpida',\n  '5105': 'Qimonda AG i. In.',\n  '8551': 'Qimonda AG i. In.',\n  '859B': 'Crucial'\n};\n\n// _______________________________________________________________________________________\n// |                         R A M                              |          H D           |\n// |______________________|_________________________|           |                        |\n// |        active             buffers/cache        |           |                        |\n// |________________________________________________|___________|_________|______________|\n// |                     used                            free   |   used       free      |\n// |____________________________________________________________|________________________|\n// |                        total                               |          swap          |\n// |____________________________________________________________|________________________|\n\n// free (older versions)\n// ----------------------------------\n// # free\n//              total       used        free     shared    buffers     cached\n// Mem:         16038 (1)   15653 (2)   384 (3)  0 (4)     236 (5)     14788 (6)\n// -/+ buffers/cache:       628 (7)     15409 (8)\n// Swap:        16371         83      16288\n//\n// |------------------------------------------------------------|\n// |                           R A M                            |\n// |______________________|_____________________________________|\n// | active (2-(5+6) = 7) |  available (3+5+6 = 8)              |\n// |______________________|_________________________|___________|\n// |        active        |  buffers/cache (5+6)    |           |\n// |________________________________________________|___________|\n// |                   used (2)                     | free (3)  |\n// |____________________________________________________________|\n// |                          total (1)                         |\n// |____________________________________________________________|\n\n//\n// free (since free von procps-ng 3.3.10)\n// ----------------------------------\n// # free\n//              total       used        free     shared    buffers/cache   available\n// Mem:         16038 (1)   628 (2)     386 (3)  0 (4)     15024 (5)     14788 (6)\n// Swap:        16371         83      16288\n//\n// |------------------------------------------------------------|\n// |                           R A M                            |\n// |______________________|_____________________________________|\n// |                      |      available (6) estimated        |\n// |______________________|_________________________|___________|\n// |     active (2)       |   buffers/cache (5)     | free (3)  |\n// |________________________________________________|___________|\n// |                          total (1)                         |\n// |____________________________________________________________|\n//\n// Reference: http://www.software-architect.net/blog/article/date/2015/06/12/-826c6e5052.html\n\n// /procs/meminfo - sample (all in kB)\n//\n// MemTotal: 32806380 kB\n// MemFree: 17977744 kB\n// MemAvailable: 19768972 kB\n// Buffers: 517028 kB\n// Cached: 2161876 kB\n// SwapCached: 456 kB\n// Active: 12081176 kB\n// Inactive: 2164616 kB\n// Active(anon): 10832884 kB\n// Inactive(anon): 1477272 kB\n// Active(file): 1248292 kB\n// Inactive(file): 687344 kB\n// Unevictable: 0 kB\n// Mlocked: 0 kB\n// SwapTotal: 16768892 kB\n// SwapFree: 16768304 kB\n// Dirty: 268 kB\n// Writeback: 0 kB\n// AnonPages: 11568832 kB\n// Mapped: 719992 kB\n// Shmem: 743272 kB\n// Slab: 335716 kB\n// SReclaimable: 256364 kB\n// SUnreclaim: 79352 kB\n\nfunction mem(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        total: os.totalmem(),\n        free: os.freemem(),\n        used: os.totalmem() - os.freemem(),\n\n        active: os.totalmem() - os.freemem(),     // temporarily (fallback)\n        available: os.freemem(),                  // temporarily (fallback)\n        buffers: 0,\n        cached: 0,\n        slab: 0,\n        buffcache: 0,\n\n        swaptotal: 0,\n        swapused: 0,\n        swapfree: 0\n      };\n\n      if (_linux) {\n        fs.readFile('/proc/meminfo', function (error, stdout) {\n          if (!error) {\n            const lines = stdout.toString().split('\\n');\n            result.total = parseInt(util.getValue(lines, 'memtotal'), 10);\n            result.total = result.total ? result.total * 1024 : os.totalmem();\n            result.free = parseInt(util.getValue(lines, 'memfree'), 10);\n            result.free = result.free ? result.free * 1024 : os.freemem();\n            result.used = result.total - result.free;\n\n            result.buffers = parseInt(util.getValue(lines, 'buffers'), 10);\n            result.buffers = result.buffers ? result.buffers * 1024 : 0;\n            result.cached = parseInt(util.getValue(lines, 'cached'), 10);\n            result.cached = result.cached ? result.cached * 1024 : 0;\n            result.slab = parseInt(util.getValue(lines, 'slab'), 10);\n            result.slab = result.slab ? result.slab * 1024 : 0;\n            result.buffcache = result.buffers + result.cached + result.slab;\n\n            let available = parseInt(util.getValue(lines, 'memavailable'), 10);\n            result.available = available ? available * 1024 : result.free + result.buffcache;\n            result.active = result.total - result.available;\n\n            result.swaptotal = parseInt(util.getValue(lines, 'swaptotal'), 10);\n            result.swaptotal = result.swaptotal ? result.swaptotal * 1024 : 0;\n            result.swapfree = parseInt(util.getValue(lines, 'swapfree'), 10);\n            result.swapfree = result.swapfree ? result.swapfree * 1024 : 0;\n            result.swapused = result.swaptotal - result.swapfree;\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('/sbin/sysctl -a 2>/dev/null | grep -E \"hw.realmem|hw.physmem|vm.stats.vm.v_page_count|vm.stats.vm.v_wire_count|vm.stats.vm.v_active_count|vm.stats.vm.v_inactive_count|vm.stats.vm.v_cache_count|vm.stats.vm.v_free_count|vm.stats.vm.v_page_size\"', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            const pagesize = parseInt(util.getValue(lines, 'vm.stats.vm.v_page_size'), 10);\n            const inactive = parseInt(util.getValue(lines, 'vm.stats.vm.v_inactive_count'), 10) * pagesize;\n            const cache = parseInt(util.getValue(lines, 'vm.stats.vm.v_cache_count'), 10) * pagesize;\n\n            result.total = parseInt(util.getValue(lines, 'hw.realmem'), 10);\n            if (isNaN(result.total)) { result.total = parseInt(util.getValue(lines, 'hw.physmem'), 10); }\n            result.free = parseInt(util.getValue(lines, 'vm.stats.vm.v_free_count'), 10) * pagesize;\n            result.buffcache = inactive + cache;\n            result.available = result.buffcache + result.free;\n            result.active = result.total - result.free - result.buffcache;\n\n            result.swaptotal = 0;\n            result.swapfree = 0;\n            result.swapused = 0;\n\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_darwin) {\n        exec('vm_stat 2>/dev/null | grep \"Pages active\"', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n\n            result.active = parseInt(lines[0].split(':')[1], 10) * 4096;\n            result.buffcache = result.used - result.active;\n            result.available = result.free + result.buffcache;\n          }\n          exec('sysctl -n vm.swapusage 2>/dev/null', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              if (lines.length > 0) {\n                let line = lines[0].replace(/,/g, '.').replace(/M/g, '');\n                line = line.trim().split('  ');\n                for (let i = 0; i < line.length; i++) {\n                  if (line[i].toLowerCase().indexOf('total') !== -1) { result.swaptotal = parseFloat(line[i].split('=')[1].trim()) * 1024 * 1024; }\n                  if (line[i].toLowerCase().indexOf('used') !== -1) { result.swapused = parseFloat(line[i].split('=')[1].trim()) * 1024 * 1024; }\n                  if (line[i].toLowerCase().indexOf('free') !== -1) { result.swapfree = parseFloat(line[i].split('=')[1].trim()) * 1024 * 1024; }\n                }\n              }\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        });\n      }\n      if (_windows) {\n        let swaptotal = 0;\n        let swapused = 0;\n        try {\n          util.wmic('pagefile get AllocatedBaseSize, CurrentUsage').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n              lines.forEach(function (line) {\n                if (line !== '') {\n                  line = line.trim().split(/\\s\\s+/);\n                  swaptotal = swaptotal + parseInt(line[0], 10);\n                  swapused = swapused + parseInt(line[1], 10);\n                }\n              });\n            }\n            result.swaptotal = swaptotal * 1024 * 1024;\n            result.swapused = swapused * 1024 * 1024;\n            result.swapfree = result.swaptotal - result.swapused;\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.mem = mem;\n\nfunction memLayout(callback) {\n\n  function getManufacturerDarwin(manId) {\n    if ({}.hasOwnProperty.call(OSX_RAM_manufacturers, manId)) {\n      return (OSX_RAM_manufacturers[manId]);\n    }\n    return manId;\n  }\n\n  function getManufacturerLinux(manId) {\n    const manIdSearch = manId.replace('0x', '').toUpperCase();\n    if (manIdSearch.length === 4 && {}.hasOwnProperty.call(LINUX_RAM_manufacturers, manIdSearch)) {\n      return (LINUX_RAM_manufacturers[manIdSearch]);\n    }\n    return manId;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = [];\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t memory 2>/dev/null | grep -iE \"Size:|Type|Speed|Manufacturer|Form Factor|Locator|Memory Device|Serial Number|Voltage|Part Number\"; unset LC_ALL', function (error, stdout) {\n          if (!error) {\n            let devices = stdout.toString().split('Memory Device');\n            devices.shift();\n            devices.forEach(function (device) {\n              let lines = device.split('\\n');\n              const sizeString = util.getValue(lines, 'Size');\n              const size = sizeString.indexOf('GB') >= 0 ? parseInt(sizeString, 10) * 1024 * 1024 * 1024 : parseInt(sizeString, 10) * 1024 * 1024;\n              if (parseInt(util.getValue(lines, 'Size'), 10) > 0) {\n                const totalWidth = util.toInt(util.getValue(lines, 'Total Width'));\n                const dataWidth = util.toInt(util.getValue(lines, 'Data Width'));\n                result.push({\n                  size,\n                  bank: util.getValue(lines, 'Bank Locator'),\n                  type: util.getValue(lines, 'Type:'),\n                  ecc: dataWidth && totalWidth ? totalWidth > dataWidth : false,\n                  clockSpeed: (util.getValue(lines, 'Configured Clock Speed:') ? parseInt(util.getValue(lines, 'Configured Clock Speed:'), 10) : (util.getValue(lines, 'Speed:') ? parseInt(util.getValue(lines, 'Speed:'), 10) : null)),\n                  formFactor: util.getValue(lines, 'Form Factor:'),\n                  manufacturer: getManufacturerLinux(util.getValue(lines, 'Manufacturer:')),\n                  partNum: util.getValue(lines, 'Part Number:'),\n                  serialNum: util.getValue(lines, 'Serial Number:'),\n                  voltageConfigured: parseFloat(util.getValue(lines, 'Configured Voltage:') || null),\n                  voltageMin: parseFloat(util.getValue(lines, 'Minimum Voltage:') || null),\n                  voltageMax: parseFloat(util.getValue(lines, 'Maximum Voltage:') || null),\n                });\n              } else {\n                result.push({\n                  size: 0,\n                  bank: util.getValue(lines, 'Bank Locator'),\n                  type: 'Empty',\n                  ecc: null,\n                  clockSpeed: 0,\n                  formFactor: util.getValue(lines, 'Form Factor:'),\n                  partNum: '',\n                  serialNum: '',\n                  voltageConfigured: null,\n                  voltageMin: null,\n                  voltageMax: null,\n                });\n              }\n            });\n          }\n          if (!result.length) {\n            result.push({\n              size: os.totalmem(),\n              bank: '',\n              type: '',\n              ecc: null,\n              clockSpeed: 0,\n              formFactor: '',\n              partNum: '',\n              serialNum: '',\n              voltageConfigured: null,\n              voltageMin: null,\n              voltageMax: null,\n            });\n\n            // Try Raspberry PI\n            try {\n              let stdout = execSync('cat /proc/cpuinfo 2>/dev/null');\n              let lines = stdout.toString().split('\\n');\n              let model = util.getValue(lines, 'hardware', ':', true).toUpperCase();\n              let version = util.getValue(lines, 'revision', ':', true).toLowerCase();\n\n              if (model === 'BCM2835' || model === 'BCM2708' || model === 'BCM2709' || model === 'BCM2835' || model === 'BCM2837') {\n\n                const clockSpeed = {\n                  '0': 400,\n                  '1': 450,\n                  '2': 450,\n                  '3': 3200\n                };\n                result[0].type = 'LPDDR2';\n                result[0].type = version && version[2] && version[2] === '3' ? 'LPDDR4' : result[0].type;\n                result[0].ecc = false;\n                result[0].clockSpeed = version && version[2] && clockSpeed[version[2]] || 400;\n                result[0].clockSpeed = version && version[4] && version[4] === 'd' ? '500' : result[0].clockSpeed;\n                result[0].formFactor = 'SoC';\n\n                stdout = execSync('vcgencmd get_config sdram_freq 2>/dev/null');\n                lines = stdout.toString().split('\\n');\n                let freq = parseInt(util.getValue(lines, 'sdram_freq', '=', true), 10) || 0;\n                if (freq) {\n                  result.clockSpeed = freq;\n                }\n\n                stdout = execSync('vcgencmd measure_volts sdram_p 2>/dev/null');\n                lines = stdout.toString().split('\\n');\n                let voltage = parseFloat(util.getValue(lines, 'volt', '=', true)) || 0;\n                if (voltage) {\n                  result[0].voltageConfigured = voltage;\n                  result[0].voltageMin = voltage;\n                  result[0].voltageMax = voltage;\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('system_profiler SPMemoryDataType', function (error, stdout) {\n          if (!error) {\n            const allLines = stdout.toString().split('\\n');\n            const eccStatus = util.getValue(allLines, 'ecc', ':', true).toLowerCase();\n            let devices = stdout.toString().split('        BANK ');\n            let hasBank = true;\n            if (devices.length === 1) {\n              devices = stdout.toString().split('        DIMM');\n              hasBank = false;\n            }\n            devices.shift();\n            devices.forEach(function (device) {\n              let lines = device.split('\\n');\n              const bank = (hasBank ? 'BANK ' : 'DIMM') + lines[0].trim().split('/')[0];\n              const size = parseInt(util.getValue(lines, '          Size'));\n              if (size) {\n                result.push({\n                  size: size * 1024 * 1024 * 1024,\n                  bank: bank,\n                  type: util.getValue(lines, '          Type:'),\n                  ecc: eccStatus ? eccStatus === 'enabled' : null,\n                  clockSpeed: parseInt(util.getValue(lines, '          Speed:'), 10),\n                  formFactor: '',\n                  manufacturer: getManufacturerDarwin(util.getValue(lines, '          Manufacturer:')),\n                  partNum: util.getValue(lines, '          Part Number:'),\n                  serialNum: util.getValue(lines, '          Serial Number:'),\n                  voltageConfigured: null,\n                  voltageMin: null,\n                  voltageMax: null,\n                });\n              } else {\n                result.push({\n                  size: 0,\n                  bank: bank,\n                  type: 'Empty',\n                  ecc: null,\n                  clockSpeed: 0,\n                  formFactor: '',\n                  manufacturer: '',\n                  partNum: '',\n                  serialNum: '',\n                  voltageConfigured: null,\n                  voltageMin: null,\n                  voltageMax: null,\n                });\n              }\n            });\n          }\n          if (!result.length) {\n            const lines = stdout.toString().split('\\n');\n            const size = parseInt(util.getValue(lines, '      Memory:'));\n            const type = util.getValue(lines, '      Type:');\n            if (size && type) {\n              result.push({\n                size: size * 1024 * 1024 * 1024,\n                bank: 0,\n                type,\n                ecc: false,\n                clockSpeed: 0,\n                formFactor: '',\n                manufacturer: 'Apple',\n                partNum: '',\n                serialNum: '',\n                voltageConfigured: null,\n                voltageMin: null,\n                voltageMax: null,\n              });\n\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        const memoryTypes = 'Unknown|Other|DRAM|Synchronous DRAM|Cache DRAM|EDO|EDRAM|VRAM|SRAM|RAM|ROM|FLASH|EEPROM|FEPROM|EPROM|CDRAM|3DRAM|SDRAM|SGRAM|RDRAM|DDR|DDR2|DDR2 FB-DIMM|Reserved|DDR3|FBD2|DDR4|LPDDR|LPDDR2|LPDDR3|LPDDR4'.split('|');\n        const FormFactors = 'Unknown|Other|SIP|DIP|ZIP|SOJ|Proprietary|SIMM|DIMM|TSOP|PGA|RIMM|SODIMM|SRIMM|SMD|SSMP|QFP|TQFP|SOIC|LCC|PLCC|BGA|FPBGA|LGA'.split('|');\n\n        try {\n          util.wmic('memorychip get /value').then((stdout, error) => {\n            if (!error) {\n              let devices = stdout.toString().split('BankL');\n              devices.shift();\n              devices.forEach(function (device) {\n                let lines = device.split('\\r\\n');\n                const dataWidth = util.toInt(util.getValue(lines, 'DataWidth', '='));\n                const totalWidth = util.toInt(util.getValue(lines, 'TotalWidth', '='));\n                result.push({\n                  size: parseInt(util.getValue(lines, 'Capacity', '='), 10) || 0,\n                  bank: util.getValue(lines, 'abel', '='), // BankLabel\n                  type: memoryTypes[parseInt(util.getValue(lines, 'MemoryType', '='), 10) || parseInt(util.getValue(lines, 'SMBIOSMemoryType', '='), 10)],\n                  ecc: dataWidth && totalWidth ? totalWidth > dataWidth : false,\n                  clockSpeed: parseInt(util.getValue(lines, 'ConfiguredClockSpeed', '='), 10) || parseInt(util.getValue(lines, 'Speed', '='), 10) || 0,\n                  formFactor: FormFactors[parseInt(util.getValue(lines, 'FormFactor', '='), 10) || 0],\n                  manufacturer: util.getValue(lines, 'Manufacturer', '='),\n                  partNum: util.getValue(lines, 'PartNumber', '='),\n                  serialNum: util.getValue(lines, 'SerialNumber', '='),\n                  voltageConfigured: (parseInt(util.getValue(lines, 'ConfiguredVoltage', '='), 10) || 0) / 1000.0,\n                  voltageMin: (parseInt(util.getValue(lines, 'MinVoltage', '='), 10) || 0) / 1000.0,\n                  voltageMax: (parseInt(util.getValue(lines, 'MaxVoltage', '='), 10) || 0) / 1000.0,\n                });\n              });\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.memLayout = memLayout;\n\n","'use strict';\n// @ts-check\n// ==================================================================================\n// network.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 9. Network\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _network = {};\nlet _default_iface = '';\nlet _ifaces = {};\nlet _dhcpNics = [];\nlet _networkInterfaces = [];\nlet _mac = {};\nlet pathToIp;\n\nfunction getDefaultNetworkInterface() {\n\n  let ifacename = '';\n  let ifacenameFirst = '';\n  try {\n    let ifaces = os.networkInterfaces();\n\n    let scopeid = 9999;\n\n    // fallback - \"first\" external interface (sorted by scopeid)\n    for (let dev in ifaces) {\n      if ({}.hasOwnProperty.call(ifaces, dev)) {\n        ifaces[dev].forEach(function (details) {\n          if (details && details.internal === false) {\n            ifacenameFirst = ifacenameFirst || dev; // fallback if no scopeid\n            if (details.scopeid && details.scopeid < scopeid) {\n              ifacename = dev;\n              scopeid = details.scopeid;\n            }\n          }\n        });\n      }\n    }\n    ifacename = ifacename || ifacenameFirst || '';\n\n    if (_windows) {\n      // https://www.inetdaemon.com/tutorials/internet/ip/routing/default_route.shtml\n      let defaultIp = '';\n      const cmd = 'netstat -r';\n      const result = execSync(cmd, util.execOptsWin);\n      const lines = result.toString().split(os.EOL);\n      lines.forEach(line => {\n        line = line.replace(/\\s+/g, ' ').trim();\n        if (line.indexOf('0.0.0.0 0.0.0.0') > -1 && !(/[a-zA-Z]/.test(line))) {\n          const parts = line.split(' ');\n          if (parts.length >= 5) {\n            defaultIp = parts[parts.length - 2];\n          }\n        }\n      });\n      if (defaultIp) {\n        for (let dev in ifaces) {\n          if ({}.hasOwnProperty.call(ifaces, dev)) {\n            ifaces[dev].forEach(function (details) {\n              if (details && details.address && details.address === defaultIp) {\n                ifacename = dev;\n              }\n            });\n          }\n        }\n      }\n    }\n    if (_linux) {\n      let cmd = 'ip route 2> /dev/null | grep default';\n      let result = execSync(cmd);\n      let parts = result.toString().split('\\n')[0].split(/\\s+/);\n      if (parts[0] === 'none' && parts[5]) {\n        ifacename = parts[5];\n      } else if (parts[4]) {\n        ifacename = parts[4];\n      }\n\n      if (ifacename.indexOf(':') > -1) {\n        ifacename = ifacename.split(':')[1].trim();\n      }\n    }\n    if (_darwin || _freebsd || _openbsd || _netbsd || _sunos) {\n      let cmd = '';\n      if (_linux) { cmd = 'ip route 2> /dev/null | grep default | awk \\'{print $5}\\''; }\n      if (_darwin) { cmd = 'route -n get default 2>/dev/null | grep interface: | awk \\'{print $2}\\''; }\n      if (_freebsd || _openbsd || _netbsd || _sunos) { cmd = 'route get 0.0.0.0 | grep interface:'; }\n      let result = execSync(cmd);\n      ifacename = result.toString().split('\\n')[0];\n      if (ifacename.indexOf(':') > -1) {\n        ifacename = ifacename.split(':')[1].trim();\n      }\n    }\n  } catch (e) {\n    util.noop();\n  }\n  if (ifacename) { _default_iface = ifacename; }\n  return _default_iface;\n}\n\nexports.getDefaultNetworkInterface = getDefaultNetworkInterface;\n\nfunction getMacAddresses() {\n  let iface = '';\n  let mac = '';\n  let result = {};\n  if (_linux || _freebsd || _openbsd || _netbsd) {\n    if (typeof pathToIp === 'undefined') {\n      try {\n        const lines = execSync('which ip').toString().split('\\n');\n        if (lines.length && lines[0].indexOf(':') === -1 && lines[0].indexOf('/') === 0) {\n          pathToIp = lines[0];\n        } else {\n          pathToIp = '';\n        }\n      } catch (e) {\n        pathToIp = '';\n      }\n    }\n    try {\n      const cmd = 'export LC_ALL=C; ' + ((pathToIp) ? pathToIp + ' link show up' : '/sbin/ifconfig') + '; unset LC_ALL';\n      let res = execSync(cmd);\n      const lines = res.toString().split('\\n');\n      for (let i = 0; i < lines.length; i++) {\n        if (lines[i] && lines[i][0] !== ' ') {\n          if (pathToIp) {\n            let nextline = lines[i + 1].trim().split(' ');\n            if (nextline[0] === 'link/ether') {\n              iface = lines[i].split(' ')[1];\n              iface = iface.slice(0, iface.length - 1);\n              mac = nextline[1];\n            }\n          } else {\n            iface = lines[i].split(' ')[0];\n            mac = lines[i].split('HWaddr ')[1];\n          }\n\n          if (iface && mac) {\n            result[iface] = mac.trim();\n            iface = '';\n            mac = '';\n          }\n        }\n      }\n    } catch (e) {\n      util.noop();\n    }\n  }\n  if (_darwin) {\n    try {\n      const cmd = '/sbin/ifconfig';\n      let res = execSync(cmd);\n      const lines = res.toString().split('\\n');\n      for (let i = 0; i < lines.length; i++) {\n        if (lines[i] && lines[i][0] !== '\\t' && lines[i].indexOf(':') > 0) {\n          iface = lines[i].split(':')[0];\n        } else if (lines[i].indexOf('\\tether ') === 0) {\n          mac = lines[i].split('\\tether ')[1];\n          if (iface && mac) {\n            result[iface] = mac.trim();\n            iface = '';\n            mac = '';\n          }\n        }\n      }\n    } catch (e) {\n      util.noop();\n    }\n  }\n  return result;\n}\n\nfunction networkInterfaceDefault(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = getDefaultNetworkInterface();\n      if (callback) { callback(result); }\n      resolve(result);\n    });\n  });\n}\n\nexports.networkInterfaceDefault = networkInterfaceDefault;\n\n// --------------------------\n// NET - interfaces\n\nfunction parseLinesWindowsNics(sections, nconfigsections) {\n  let nics = [];\n  for (let i in sections) {\n    if ({}.hasOwnProperty.call(sections, i)) {\n\n      if (sections[i].trim() !== '') {\n\n        let lines = sections[i].trim().split('\\r\\n');\n        let linesNicConfig = nconfigsections[i].trim().split('\\r\\n');\n        let netEnabled = util.getValue(lines, 'NetEnabled', '=');\n        let adapterType = util.getValue(lines, 'AdapterTypeID', '=') === '9' ? 'wireless' : 'wired';\n        let ifacename = util.getValue(lines, 'Name', '=').replace(/\\]/g, ')').replace(/\\[/g, '(');\n        let iface = util.getValue(lines, 'NetConnectionID', '=').replace(/\\]/g, ')').replace(/\\[/g, '(');\n        if (ifacename.toLowerCase().indexOf('wi-fi') >= 0 || ifacename.toLowerCase().indexOf('wireless') >= 0) {\n          adapterType = 'wireless';\n        }\n        if (netEnabled !== '') {\n          const speed = parseInt(util.getValue(lines, 'speed', '=').trim(), 10) / 1000000;\n          nics.push({\n            mac: util.getValue(lines, 'MACAddress', '=').toLowerCase(),\n            dhcp: util.getValue(linesNicConfig, 'dhcpEnabled', '=').toLowerCase(),\n            name: ifacename,\n            iface,\n            netEnabled: netEnabled === 'TRUE',\n            speed: isNaN(speed) ? null : speed,\n            operstate: util.getValue(lines, 'NetConnectionStatus', '=') === '2' ? 'up' : 'down',\n            type: adapterType\n          });\n        }\n      }\n    }\n  }\n  return nics;\n}\n\nfunction getWindowsNics() {\n  const cmd = util.getWmic() + ' nic get /value';\n  const cmdnicconfig = util.getWmic() + ' nicconfig get dhcpEnabled /value';\n  try {\n    const nsections = execSync(cmd, util.execOptsWin).split(/\\n\\s*\\n/);\n    const nconfigsections = execSync(cmdnicconfig, util.execOptsWin).split(/\\n\\s*\\n/);\n    return (parseLinesWindowsNics(nsections, nconfigsections));\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction getWindowsDNSsuffixes() {\n\n  let iface = {};\n\n  let dnsSuffixes = {\n    primaryDNS: '',\n    exitCode: 0,\n    ifaces: [],\n  };\n\n  try {\n    const ipconfig = execSync('ipconfig /all', util.execOptsWin);\n    const ipconfigArray = ipconfig.split('\\r\\n\\r\\n');\n\n    ipconfigArray.forEach((element, index) => {\n\n      if (index == 1) {\n        const longPrimaryDNS = element.split('\\r\\n').filter((element) => {\n          return element.toUpperCase().includes('DNS');\n        });\n        const primaryDNS = longPrimaryDNS[0].substring(longPrimaryDNS[0].lastIndexOf(':') + 1);\n        dnsSuffixes.primaryDNS = primaryDNS.trim();\n        if (!dnsSuffixes.primaryDNS) { dnsSuffixes.primaryDNS = 'Not defined'; }\n      }\n      if (index > 1) {\n        if (index % 2 == 0) {\n          const name = element.substring(element.lastIndexOf(' ') + 1).replace(':', '');\n          iface.name = name;\n        } else {\n          const connectionSpecificDNS = element.split('\\r\\n').filter((element) => {\n            return element.toUpperCase().includes('DNS');\n          });\n          const dnsSuffix = connectionSpecificDNS[0].substring(connectionSpecificDNS[0].lastIndexOf(':') + 1);\n          iface.dnsSuffix = dnsSuffix.trim();\n          dnsSuffixes.ifaces.push(iface);\n          iface = {};\n        }\n      }\n    });\n\n    return dnsSuffixes;\n  } catch (error) {\n    // console.log('An error occurred trying to bring the Connection-specific DNS suffix', error.message);\n    return {\n      primaryDNS: '',\n      exitCode: 0,\n      ifaces: [],\n    };\n  }\n}\n\nfunction getWindowsIfaceDNSsuffix(ifaces, ifacename) {\n  let dnsSuffix = '';\n  // Adding (.) to ensure ifacename compatibility when duplicated iface-names\n  const interfaceName = ifacename + '.';\n  try {\n    const connectionDnsSuffix = ifaces.filter((iface) => {\n      return interfaceName.includes(iface.name + '.');\n    }).map((iface) => iface.dnsSuffix);\n    if (connectionDnsSuffix[0]) {\n      dnsSuffix = connectionDnsSuffix[0];\n    }\n    if (!dnsSuffix) { dnsSuffix = ''; }\n    return dnsSuffix;\n  } catch (error) {\n    // console.log('Error getting Connection-specific DNS suffix: ', error.message);\n    return 'Unknown';\n  }\n}\n\nfunction getWindowsWiredProfilesInformation() {\n  try {\n    const result = execSync('netsh lan show profiles', util.execOptsWin);\n    const profileList = result.split('\\r\\nProfile on interface');\n    return profileList;\n  } catch (error) {\n    if (error.status === 1 && error.stdout.includes('AutoConfig')) {\n      return 'Disabled';\n    }\n    return [];\n  }\n}\n\nfunction getWindowsWirelessIfaceSSID(interfaceName) {\n  try {\n    const result = execSync(`netsh wlan show  interface name=\"${interfaceName}\" | findstr \"SSID\"`, util.execOptsWin);\n    const SSID = result.split('\\r\\n').shift();\n    const parseSSID = SSID.split(':').pop();\n    return parseSSID;\n  } catch (error) {\n    return 'Unknown';\n  }\n}\nfunction getWindowsIEEE8021x(connectionType, iface, ifaces) {\n  let i8021x = {\n    state: 'Unknown',\n    protocol: 'Unknown',\n  };\n\n  if (ifaces === 'Disabled') {\n    i8021x.state = 'Disabled';\n    i8021x.protocol = 'Not defined';\n    return i8021x;\n  }\n\n  if (connectionType == 'wired' && ifaces.length > 0) {\n    try {\n      // Get 802.1x information by interface name\n      const iface8021xInfo = ifaces.find((element) => {\n        return element.includes(iface + '\\r\\n');\n      });\n      const arrayIface8021xInfo = iface8021xInfo.split('\\r\\n');\n      const state8021x = arrayIface8021xInfo.find((element) => {\n        return element.includes('802.1x');\n      });\n\n      if (state8021x.includes('Disabled')) {\n        i8021x.state = 'Disabled';\n        i8021x.protocol = 'Not defined';\n      } else if (state8021x.includes('Enabled')) {\n        const protocol8021x = arrayIface8021xInfo.find((element) => {\n          return element.includes('EAP');\n        });\n        i8021x.protocol = protocol8021x.split(':').pop();\n        i8021x.state = 'Enabled';\n      }\n    } catch (error) {\n      // console.log('Error getting wired information:', error);\n      return i8021x;\n    }\n  } else if (connectionType == 'wireless') {\n\n    let i8021xState = '';\n    let i8021xProtocol = '';\n\n\n\n    try {\n      const SSID = getWindowsWirelessIfaceSSID(iface);\n      if (SSID !== 'Unknown') {\n        i8021xState = execSync(`netsh wlan show profiles \"${SSID}\" | findstr \"802.1X\"`, util.execOptsWin);\n        i8021xProtocol = execSync(`netsh wlan show profiles \"${SSID}\" | findstr \"EAP\"`, util.execOptsWin);\n      }\n\n      if (i8021xState.includes(':') && i8021xProtocol.includes(':')) {\n        i8021x.state = i8021xState.split(':').pop();\n        i8021x.protocol = i8021xProtocol.split(':').pop();\n      }\n    } catch (error) {\n      // console.log('Error getting wireless information:', error);\n      if (error.status === 1 && error.stdout.includes('AutoConfig')) {\n        i8021x.state = 'Disabled';\n        i8021x.protocol = 'Not defined';\n      }\n      return i8021x;\n    }\n  }\n\n  return i8021x;\n}\n\nfunction splitSectionsNics(lines) {\n  const result = [];\n  let section = [];\n  lines.forEach(function (line) {\n    if (!line.startsWith('\\t') && !line.startsWith(' ')) {\n      if (section.length) {\n        result.push(section);\n        section = [];\n      }\n    }\n    section.push(line);\n  });\n  if (section.length) {\n    result.push(section);\n  }\n  return result;\n}\n\nfunction parseLinesDarwinNics(sections) {\n  let nics = [];\n  sections.forEach(section => {\n    let nic = {\n      iface: '',\n      mtu: null,\n      mac: '',\n      ip6: '',\n      ip4: '',\n      speed: null,\n      type: '',\n      operstate: '',\n      duplex: '',\n      internal: false\n    };\n    const first = section[0];\n    nic.iface = first.split(':')[0].trim();\n    let parts = first.split('> mtu');\n    nic.mtu = parts.length > 1 ? parseInt(parts[1], 10) : null;\n    if (isNaN(nic.mtu)) {\n      nic.mtu = null;\n    }\n    nic.internal = parts[0].toLowerCase().indexOf('loopback') > -1;\n    section.forEach(line => {\n      if (line.trim().startsWith('ether ')) {\n        nic.mac = line.split('ether ')[1].toLowerCase().trim();\n      }\n      if (line.trim().startsWith('inet6 ') && !nic.ip6) {\n        nic.ip6 = line.split('inet6 ')[1].toLowerCase().split('%')[0].split(' ')[0];\n      }\n      if (line.trim().startsWith('inet ') && !nic.ip4) {\n        nic.ip4 = line.split('inet ')[1].toLowerCase().split(' ')[0];\n      }\n    });\n    let speed = util.getValue(section, 'link rate');\n    nic.speed = speed ? parseFloat(speed) : null;\n    if (nic.speed === null) {\n      speed = util.getValue(section, 'uplink rate');\n      nic.speed = speed ? parseFloat(speed) : null;\n      if (nic.speed !== null && speed.toLowerCase().indexOf('gbps') >= 0) {\n        nic.speed = nic.speed * 1000;\n      }\n    } else {\n      if (speed.toLowerCase().indexOf('gbps') >= 0) {\n        nic.speed = nic.speed * 1000;\n      }\n    }\n    nic.type = util.getValue(section, 'type').toLowerCase().indexOf('wi-fi') > -1 ? 'wireless' : 'wired';\n    nic.operstate = util.getValue(section, 'status').toLowerCase().indexOf('active') > -1 ? 'up' : 'down';\n    nic.duplex = util.getValue(section, 'media').toLowerCase().indexOf('half-duplex') > -1 ? 'half' : 'full';\n    if (nic.ip6 || nic.ip4 || nic.mac) {\n      nics.push(nic);\n    }\n  });\n  return nics;\n}\n\nfunction getDarwinNics() {\n  const cmd = '/sbin/ifconfig -v';\n  try {\n    const lines = execSync(cmd, { maxBuffer: 1024 * 20000 }).toString().split('\\n');\n    const nsections = splitSectionsNics(lines);\n    return (parseLinesDarwinNics(nsections));\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction getLinuxIfaceConnectionName(interfaceName) {\n  const cmd = `nmcli device status 2>/dev/null | grep ${interfaceName}`;\n\n  try {\n    const result = execSync(cmd).toString();\n    const resultFormat = result.replace(/\\s+/g, ' ').trim();\n    const connectionNameLines = resultFormat.split(' ').slice(3);\n    const connectionName = connectionNameLines.join(' ');\n    return connectionName != '--' ? connectionName : '';\n  } catch (e) {\n    return '';\n  }\n}\n\nfunction checkLinuxDCHPInterfaces(file) {\n  let result = [];\n  try {\n    let cmd = `cat ${file} 2> /dev/null | grep 'iface\\\\|source'`;\n    const lines = execSync(cmd, { maxBuffer: 1024 * 20000 }).toString().split('\\n');\n\n    lines.forEach(line => {\n      const parts = line.replace(/\\s+/g, ' ').trim().split(' ');\n      if (parts.length >= 4) {\n        if (line.toLowerCase().indexOf(' inet ') >= 0 && line.toLowerCase().indexOf('dhcp') >= 0) {\n          result.push(parts[1]);\n        }\n      }\n      if (line.toLowerCase().includes('source')) {\n        let file = line.split(' ')[1];\n        result = result.concat(checkLinuxDCHPInterfaces(file));\n      }\n    });\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction getLinuxDHCPNics() {\n  // alternate methods getting interfaces using DHCP\n  let cmd = 'ip a 2> /dev/null';\n  let result = [];\n  try {\n    const lines = execSync(cmd, { maxBuffer: 1024 * 20000 }).toString().split('\\n');\n    const nsections = splitSectionsNics(lines);\n    result = (parseLinuxDHCPNics(nsections));\n  } catch (e) {\n    util.noop();\n  }\n  try {\n    result = checkLinuxDCHPInterfaces('/etc/network/interfaces');\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction parseLinuxDHCPNics(sections) {\n  const result = [];\n  if (sections && sections.length) {\n    sections.forEach(lines => {\n      if (lines && lines.length) {\n        const parts = lines[0].split(':');\n        if (parts.length > 2) {\n          for (let line of lines) {\n            if (line.indexOf(' inet ') >= 0 && line.indexOf(' dynamic ') >= 0) {\n              const parts2 = line.split(' ');\n              const nic = parts2[parts2.length - 1].trim();\n              result.push(nic);\n              break;\n            }\n          }\n        }\n      }\n    });\n  }\n  return result;\n}\n\nfunction getLinuxIfaceDHCPstatus(iface, connectionName, DHCPNics) {\n  let result = false;\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null | grep ipv4.method;`;\n    try {\n      const lines = execSync(cmd).toString();\n      const resultFormat = lines.replace(/\\s+/g, ' ').trim();\n\n      let dhcStatus = resultFormat.split(' ').slice(1).toString();\n      switch (dhcStatus) {\n        case 'auto':\n          result = true;\n          break;\n\n        default:\n          result = false;\n          break;\n      }\n      return result;\n    } catch (e) {\n      return (DHCPNics.indexOf(iface) >= 0);\n    }\n  } else {\n    return (DHCPNics.indexOf(iface) >= 0);\n  }\n}\n\nfunction getDarwinIfaceDHCPstatus(iface) {\n  let result = false;\n  const cmd = `ipconfig getpacket \"${iface}\" 2>/dev/null | grep lease_time;`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    if (lines.length && lines[0].startsWith('lease_time')) {\n      result = true;\n    }\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction getLinuxIfaceDNSsuffix(connectionName) {\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null | grep ipv4.dns-search;`;\n    try {\n      const result = execSync(cmd).toString();\n      const resultFormat = result.replace(/\\s+/g, ' ').trim();\n      const dnsSuffix = resultFormat.split(' ').slice(1).toString();\n      return dnsSuffix == '--' ? 'Not defined' : dnsSuffix;\n    } catch (e) {\n      return 'Unknown';\n    }\n  } else {\n    return 'Unknown';\n  }\n}\n\nfunction getLinuxIfaceIEEE8021xAuth(connectionName) {\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null | grep 802-1x.eap;`;\n    try {\n      const result = execSync(cmd).toString();\n      const resultFormat = result.replace(/\\s+/g, ' ').trim();\n      const authenticationProtocol = resultFormat.split(' ').slice(1).toString();\n\n\n      return authenticationProtocol == '--' ? '' : authenticationProtocol;\n    } catch (e) {\n      return 'Not defined';\n    }\n  } else {\n    return 'Not defined';\n  }\n}\n\nfunction getLinuxIfaceIEEE8021xState(authenticationProtocol) {\n  if (authenticationProtocol) {\n    if (authenticationProtocol == 'Not defined') {\n      return 'Disabled';\n    }\n    return 'Enabled';\n  } else {\n    return 'Unknown';\n  }\n}\n\nfunction testVirtualNic(iface, ifaceName, mac) {\n  const virtualMacs = ['00:00:00:00:00:00', '00:03:FF', '00:05:69', '00:0C:29', '00:0F:4B', '00:0F:4B', '00:13:07', '00:13:BE', '00:15:5d', '00:16:3E', '00:1C:42', '00:21:F6', '00:21:F6', '00:24:0B', '00:24:0B', '00:50:56', '00:A0:B1', '00:E0:C8', '08:00:27', '0A:00:27', '18:92:2C', '16:DF:49', '3C:F3:92', '54:52:00', 'FC:15:97'];\n  if (mac) {\n    return virtualMacs.filter(item => { return mac.toUpperCase().toUpperCase().startsWith(item.substr(0, mac.length)); }).length > 0 ||\n      iface.toLowerCase().indexOf(' virtual ') > -1 ||\n      ifaceName.toLowerCase().indexOf(' virtual ') > -1 ||\n      iface.toLowerCase().indexOf('vethernet ') > -1 ||\n      ifaceName.toLowerCase().indexOf('vethernet ') > -1 ||\n      iface.toLowerCase().startsWith('veth') ||\n      ifaceName.toLowerCase().startsWith('veth') ||\n      iface.toLowerCase().startsWith('vboxnet') ||\n      ifaceName.toLowerCase().startsWith('vboxnet');\n  } else { return false; }\n}\n\nfunction networkInterfaces(callback, rescan) {\n\n  if (typeof callback === 'boolean') {\n    rescan = callback;\n    callback = null;\n  }\n  if (typeof rescan === 'undefined') {\n    rescan = true;\n  }\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let ifaces = os.networkInterfaces();\n\n      let result = [];\n      let nics = [];\n      let dnsSuffixes = [];\n      let nics8021xInfo = [];\n      // seperate handling in OSX\n      if (_darwin || _freebsd || _openbsd || _netbsd) {\n        nics = getDarwinNics();\n\n\n        nics.forEach(nic => {\n\n          if ({}.hasOwnProperty.call(ifaces, nic.iface)) {\n            ifaces[nic.iface].forEach(function (details) {\n              if (details.family === 'IPv4') {\n                nic.ip4subnet = details.netmask;\n              }\n              if (details.family === 'IPv6') {\n                nic.ip6subnet = details.netmask;\n              }\n            });\n          }\n\n          result.push({\n            iface: nic.iface,\n            ifaceName: nic.iface,\n            ip4: nic.ip4,\n            ip4subnet: nic.ip4subnet || '',\n            ip6: nic.ip6,\n            ip6subnet: nic.ip6subnet || '',\n            mac: nic.mac,\n            internal: nic.internal,\n            virtual: nic.internal ? false : testVirtualNic(nic.iface, nic.iface, nic.mac),\n            operstate: nic.operstate,\n            type: nic.type,\n            duplex: nic.duplex,\n            mtu: nic.mtu,\n            speed: nic.speed,\n            dhcp: getDarwinIfaceDHCPstatus(nic.iface),\n            dnsSuffix: '',\n            ieee8021xAuth: '',\n            ieee8021xState: '',\n            carrierChanges: 0\n          });\n        });\n        _networkInterfaces = result;\n        if (callback) { callback(result); }\n        resolve(result);\n      } else {\n        if ((JSON.stringify(ifaces) === JSON.stringify(_ifaces)) && !rescan) {\n          // no changes - just return object\n          result = _networkInterfaces;\n\n          if (callback) { callback(result); }\n          resolve(result);\n        } else {\n          _ifaces = Object.assign({}, ifaces);\n\n          if (_windows) {\n            nics = getWindowsNics();\n            nics.forEach(nic => {\n              let found = false;\n              Object.keys(ifaces).forEach(key => {\n                if (!found) {\n                  ifaces[key].forEach(value => {\n                    if (Object.keys(value).indexOf('mac') >= 0) {\n                      found = value['mac'] === nic.mac;\n                    }\n                  });\n                }\n              });\n\n              if (!found) {\n                ifaces[nic.name] = [{ mac: nic.mac }];\n              }\n            });\n\n            nics8021xInfo = getWindowsWiredProfilesInformation();\n            dnsSuffixes = getWindowsDNSsuffixes();\n          }\n          if (_linux) {\n            _dhcpNics = getLinuxDHCPNics();\n          }\n          for (let dev in ifaces) {\n            let iface = dev;\n            let ip4 = '';\n            let ip4subnet = '';\n            let ip6 = '';\n            let ip6subnet = '';\n            let mac = '';\n            let duplex = '';\n            let mtu = '';\n            let speed = null;\n            let carrierChanges = 0;\n            let operstate = 'down';\n            let dhcp = false;\n            let dnsSuffix = '';\n            let ieee8021xAuth = '';\n            let ieee8021xState = '';\n            let type = '';\n\n            if ({}.hasOwnProperty.call(ifaces, dev)) {\n              let ifaceName = dev;\n              ifaces[dev].forEach(function (details) {\n                if (details.family === 'IPv4') {\n                  ip4 = details.address;\n                  ip4subnet = details.netmask;\n                }\n                if (details.family === 'IPv6') {\n                  if (!ip6 || ip6.match(/^fe80::/i)) {\n                    ip6 = details.address;\n                    ip6subnet = details.netmask;\n                  }\n                }\n                mac = details.mac;\n                // fallback due to https://github.com/nodejs/node/issues/13581 (node 8.1 - node 8.2)\n                const nodeMainVersion = parseInt(process.versions.node.split('.'), 10);\n                if (mac.indexOf('00:00:0') > -1 && (_linux || _darwin) && (!details.internal) && nodeMainVersion >= 8 && nodeMainVersion <= 11) {\n                  if (Object.keys(_mac).length === 0) {\n                    _mac = getMacAddresses();\n                  }\n                  mac = _mac[dev] || '';\n                }\n              });\n              if (_linux) {\n                let iface = dev.split(':')[0].trim().toLowerCase();\n                const cmd = `echo -n \"addr_assign_type: \"; cat /sys/class/net/${iface}/addr_assign_type 2>/dev/null; echo;\n            echo -n \"address: \"; cat /sys/class/net/${iface}/address 2>/dev/null; echo;\n            echo -n \"addr_len: \"; cat /sys/class/net/${iface}/addr_len 2>/dev/null; echo;\n            echo -n \"broadcast: \"; cat /sys/class/net/${iface}/broadcast 2>/dev/null; echo;\n            echo -n \"carrier: \"; cat /sys/class/net/${iface}/carrier 2>/dev/null; echo;\n            echo -n \"carrier_changes: \"; cat /sys/class/net/${iface}/carrier_changes 2>/dev/null; echo;\n            echo -n \"dev_id: \"; cat /sys/class/net/${iface}/dev_id 2>/dev/null; echo;\n            echo -n \"dev_port: \"; cat /sys/class/net/${iface}/dev_port 2>/dev/null; echo;\n            echo -n \"dormant: \"; cat /sys/class/net/${iface}/dormant 2>/dev/null; echo;\n            echo -n \"duplex: \"; cat /sys/class/net/${iface}/duplex 2>/dev/null; echo;\n            echo -n \"flags: \"; cat /sys/class/net/${iface}/flags 2>/dev/null; echo;\n            echo -n \"gro_flush_timeout: \"; cat /sys/class/net/${iface}/gro_flush_timeout 2>/dev/null; echo;\n            echo -n \"ifalias: \"; cat /sys/class/net/${iface}/ifalias 2>/dev/null; echo;\n            echo -n \"ifindex: \"; cat /sys/class/net/${iface}/ifindex 2>/dev/null; echo;\n            echo -n \"iflink: \"; cat /sys/class/net/${iface}/iflink 2>/dev/null; echo;\n            echo -n \"link_mode: \"; cat /sys/class/net/${iface}/link_mode 2>/dev/null; echo;\n            echo -n \"mtu: \"; cat /sys/class/net/${iface}/mtu 2>/dev/null; echo;\n            echo -n \"netdev_group: \"; cat /sys/class/net/${iface}/netdev_group 2>/dev/null; echo;\n            echo -n \"operstate: \"; cat /sys/class/net/${iface}/operstate 2>/dev/null; echo;\n            echo -n \"proto_down: \"; cat /sys/class/net/${iface}/proto_down 2>/dev/null; echo;\n            echo -n \"speed: \"; cat /sys/class/net/${iface}/speed 2>/dev/null; echo;\n            echo -n \"tx_queue_len: \"; cat /sys/class/net/${iface}/tx_queue_len 2>/dev/null; echo;\n            echo -n \"type: \"; cat /sys/class/net/${iface}/type 2>/dev/null; echo;\n            echo -n \"wireless: \"; cat /proc/net/wireless 2>/dev/null | grep ${iface}; echo;\n            echo -n \"wirelessspeed: \"; iw dev ${iface} link 2>&1 | grep bitrate; echo;`;\n\n                let lines = [];\n                try {\n                  lines = execSync(cmd).toString().split('\\n');\n                  const connectionName = getLinuxIfaceConnectionName(iface);\n                  dhcp = getLinuxIfaceDHCPstatus(iface, connectionName, _dhcpNics);\n                  dnsSuffix = getLinuxIfaceDNSsuffix(connectionName);\n                  ieee8021xAuth = getLinuxIfaceIEEE8021xAuth(connectionName);\n                  ieee8021xState = getLinuxIfaceIEEE8021xState(ieee8021xAuth);\n                } catch (e) {\n                  util.noop();\n                }\n                duplex = util.getValue(lines, 'duplex');\n                duplex = duplex.startsWith('cat') ? '' : duplex;\n                mtu = parseInt(util.getValue(lines, 'mtu'), 10);\n                let myspeed = parseInt(util.getValue(lines, 'speed'), 10);\n                speed = isNaN(myspeed) ? null : myspeed;\n                let wirelessspeed = util.getValue(lines, 'wirelessspeed').split('tx bitrate: ');\n                if (speed === null && wirelessspeed.length === 2) {\n                  myspeed = parseFloat(wirelessspeed[1]);\n                  speed = isNaN(myspeed) ? null : myspeed;\n                }\n                carrierChanges = parseInt(util.getValue(lines, 'carrier_changes'), 10);\n                operstate = util.getValue(lines, 'operstate');\n                type = operstate === 'up' ? (util.getValue(lines, 'wireless').trim() ? 'wireless' : 'wired') : 'unknown';\n                if (iface === 'lo' || iface.startsWith('bond')) { type = 'virtual'; }\n              }\n              if (_windows) {\n\n\n                dnsSuffix = getWindowsIfaceDNSsuffix(dnsSuffixes.ifaces, dev);\n                let foundFirst = false;\n                nics.forEach(detail => {\n                  if (detail.mac === mac && !foundFirst) {\n                    iface = detail.iface || iface;\n                    ifaceName = detail.name;\n                    dhcp = detail.dhcp;\n                    operstate = detail.operstate;\n                    speed = detail.speed;\n                    type = detail.type;\n                    foundFirst = true;\n                  }\n                });\n\n                if (dev.toLowerCase().indexOf('wlan') >= 0 || ifaceName.toLowerCase().indexOf('wlan') >= 0 || ifaceName.toLowerCase().indexOf('802.11n') >= 0 || ifaceName.toLowerCase().indexOf('wireless') >= 0 || ifaceName.toLowerCase().indexOf('wi-fi') >= 0 || ifaceName.toLowerCase().indexOf('wifi') >= 0) {\n                  type = 'wireless';\n                }\n\n                const IEEE8021x = getWindowsIEEE8021x(type, dev, nics8021xInfo);\n                ieee8021xAuth = IEEE8021x.protocol;\n                ieee8021xState = IEEE8021x.state;\n              }\n              let internal = (ifaces[dev] && ifaces[dev][0]) ? ifaces[dev][0].internal : false;\n              if (dev.toLowerCase().indexOf('loopback') > -1 || ifaceName.toLowerCase().indexOf('loopback') > -1) {\n                internal = true;\n              }\n              const virtual = internal ? false : testVirtualNic(dev, ifaceName, mac);\n              result.push({\n                iface,\n                ifaceName,\n                ip4,\n                ip4subnet,\n                ip6,\n                ip6subnet,\n                mac,\n                internal,\n                virtual,\n                operstate,\n                type,\n                duplex,\n                mtu,\n                speed,\n                dhcp,\n                dnsSuffix,\n                ieee8021xAuth,\n                ieee8021xState,\n                carrierChanges,\n              });\n            }\n          }\n          _networkInterfaces = result;\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.networkInterfaces = networkInterfaces;\n\n// --------------------------\n// NET - Speed\n\nfunction calcNetworkSpeed(iface, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors) {\n  let result = {\n    iface,\n    operstate,\n    rx_bytes,\n    rx_dropped,\n    rx_errors,\n    tx_bytes,\n    tx_dropped,\n    tx_errors,\n    rx_sec: null,\n    tx_sec: null,\n    ms: 0\n  };\n\n  if (_network[iface] && _network[iface].ms) {\n    result.ms = Date.now() - _network[iface].ms;\n    result.rx_sec = (rx_bytes - _network[iface].rx_bytes) >= 0 ? (rx_bytes - _network[iface].rx_bytes) / (result.ms / 1000) : 0;\n    result.tx_sec = (tx_bytes - _network[iface].tx_bytes) >= 0 ? (tx_bytes - _network[iface].tx_bytes) / (result.ms / 1000) : 0;\n    _network[iface].rx_bytes = rx_bytes;\n    _network[iface].tx_bytes = tx_bytes;\n    _network[iface].rx_sec = result.rx_sec;\n    _network[iface].tx_sec = result.tx_sec;\n    _network[iface].ms = Date.now();\n    _network[iface].last_ms = result.ms;\n    _network[iface].operstate = operstate;\n  } else {\n    if (!_network[iface]) { _network[iface] = {}; }\n    _network[iface].rx_bytes = rx_bytes;\n    _network[iface].tx_bytes = tx_bytes;\n    _network[iface].rx_sec = null;\n    _network[iface].tx_sec = null;\n    _network[iface].ms = Date.now();\n    _network[iface].last_ms = 0;\n    _network[iface].operstate = operstate;\n  }\n  return result;\n}\n\nfunction networkStats(ifaces, callback) {\n\n  let ifacesArray = [];\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      // fallback - if only callback is given\n      if (util.isFunction(ifaces) && !callback) {\n        callback = ifaces;\n        ifacesArray = [getDefaultNetworkInterface()];\n      } else {\n        if (typeof ifaces !== 'string' && ifaces !== undefined) {\n          if (callback) { callback([]); }\n          return resolve([]);\n        }\n        ifaces = ifaces || getDefaultNetworkInterface();\n\n        ifaces.__proto__.toLowerCase = util.stringToLower;\n        ifaces.__proto__.replace = util.stringReplace;\n        ifaces.__proto__.trim = util.stringTrim;\n\n        ifaces = ifaces.trim().toLowerCase().replace(/,+/g, '|');\n        ifacesArray = ifaces.split('|');\n      }\n\n      const result = [];\n\n      const workload = [];\n      if (ifacesArray.length && ifacesArray[0].trim() === '*') {\n        ifacesArray = [];\n        networkInterfaces(false).then(allIFaces => {\n          for (let iface of allIFaces) {\n            ifacesArray.push(iface.iface);\n          }\n          networkStats(ifacesArray.join(',')).then(result => {\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        });\n      } else {\n        for (let iface of ifacesArray) {\n          workload.push(networkStatsSingle(iface.trim()));\n        }\n        if (workload.length) {\n          Promise.all(\n            workload\n          ).then(data => {\n            if (callback) { callback(data); }\n            resolve(data);\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nfunction networkStatsSingle(iface) {\n\n  function parseLinesWindowsPerfData(sections) {\n    let perfData = [];\n    for (let i in sections) {\n      if ({}.hasOwnProperty.call(sections, i)) {\n        if (sections[i].trim() !== '') {\n          let lines = sections[i].trim().split('\\r\\n');\n          perfData.push({\n            name: util.getValue(lines, 'Name', '=').replace(/[()[\\] ]+/g, '').replace('#', '_').toLowerCase(),\n            rx_bytes: parseInt(util.getValue(lines, 'BytesReceivedPersec', '='), 10),\n            rx_errors: parseInt(util.getValue(lines, 'PacketsReceivedErrors', '='), 10),\n            rx_dropped: parseInt(util.getValue(lines, 'PacketsReceivedDiscarded', '='), 10),\n            tx_bytes: parseInt(util.getValue(lines, 'BytesSentPersec', '='), 10),\n            tx_errors: parseInt(util.getValue(lines, 'PacketsOutboundErrors', '='), 10),\n            tx_dropped: parseInt(util.getValue(lines, 'PacketsOutboundDiscarded', '='), 10)\n          });\n        }\n      }\n    }\n    return perfData;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let ifaceSanitized = '';\n      const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(iface);\n      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n        if (!(s[i] === undefined)) {\n          ifaceSanitized = ifaceSanitized + s[i];\n        }\n      }\n\n      let result = {\n        iface: ifaceSanitized,\n        operstate: 'unknown',\n        rx_bytes: 0,\n        rx_dropped: 0,\n        rx_errors: 0,\n        tx_bytes: 0,\n        tx_dropped: 0,\n        tx_errors: 0,\n        rx_sec: null,\n        tx_sec: null,\n        ms: 0\n      };\n\n      let operstate = 'unknown';\n      let rx_bytes = 0;\n      let tx_bytes = 0;\n      let rx_dropped = 0;\n      let rx_errors = 0;\n      let tx_dropped = 0;\n      let tx_errors = 0;\n\n      let cmd, lines, stats;\n      if (!_network[ifaceSanitized] || (_network[ifaceSanitized] && !_network[ifaceSanitized].ms) || (_network[ifaceSanitized] && _network[ifaceSanitized].ms && Date.now() - _network[ifaceSanitized].ms >= 500)) {\n        if (_linux) {\n          if (fs.existsSync('/sys/class/net/' + ifaceSanitized)) {\n            cmd =\n              'cat /sys/class/net/' + ifaceSanitized + '/operstate; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_bytes; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_bytes; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_dropped; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_errors; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_dropped; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_errors; ';\n            exec(cmd, function (error, stdout) {\n              if (!error) {\n                lines = stdout.toString().split('\\n');\n                operstate = lines[0].trim();\n                rx_bytes = parseInt(lines[1], 10);\n                tx_bytes = parseInt(lines[2], 10);\n                rx_dropped = parseInt(lines[3], 10);\n                rx_errors = parseInt(lines[4], 10);\n                tx_dropped = parseInt(lines[5], 10);\n                tx_errors = parseInt(lines[6], 10);\n\n                result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n\n              }\n              resolve(result);\n            });\n          } else {\n            resolve(result);\n          }\n        }\n        if (_freebsd || _openbsd || _netbsd) {\n          cmd = 'netstat -ibndI ' + ifaceSanitized;   // lgtm [js/shell-command-constructed-from-input]\n          exec(cmd, function (error, stdout) {\n            if (!error) {\n              lines = stdout.toString().split('\\n');\n              for (let i = 1; i < lines.length; i++) {\n                const line = lines[i].replace(/ +/g, ' ').split(' ');\n                if (line && line[0] && line[7] && line[10]) {\n                  rx_bytes = rx_bytes + parseInt(line[7]);\n                  if (line[6].trim() !== '-') { rx_dropped = rx_dropped + parseInt(line[6]); }\n                  if (line[5].trim() !== '-') { rx_errors = rx_errors + parseInt(line[5]); }\n                  tx_bytes = tx_bytes + parseInt(line[10]);\n                  if (line[12].trim() !== '-') { tx_dropped = tx_dropped + parseInt(line[12]); }\n                  if (line[9].trim() !== '-') { tx_errors = tx_errors + parseInt(line[9]); }\n                  operstate = 'up';\n                }\n              }\n              result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n            }\n            resolve(result);\n          });\n        }\n        if (_darwin) {\n          cmd = 'ifconfig ' + ifaceSanitized + ' | grep \"status\"';    // lgtm [js/shell-command-constructed-from-input]\n          exec(cmd, function (error, stdout) {\n            result.operstate = (stdout.toString().split(':')[1] || '').trim();\n            result.operstate = (result.operstate || '').toLowerCase();\n            result.operstate = (result.operstate === 'active' ? 'up' : (result.operstate === 'inactive' ? 'down' : 'unknown'));\n            cmd = 'netstat -bdI ' + ifaceSanitized;   // lgtm [js/shell-command-constructed-from-input]\n            exec(cmd, function (error, stdout) {\n              if (!error) {\n                lines = stdout.toString().split('\\n');\n                // if there is less than 2 lines, no information for this interface was found\n                if (lines.length > 1 && lines[1].trim() !== '') {\n                  // skip header line\n                  // use the second line because it is tied to the NIC instead of the ipv4 or ipv6 address\n                  stats = lines[1].replace(/ +/g, ' ').split(' ');\n                  const offset = stats.length > 11 ? 1 : 0;\n                  rx_bytes = parseInt(stats[offset + 5]);\n                  rx_dropped = parseInt(stats[offset + 10]);\n                  rx_errors = parseInt(stats[offset + 4]);\n                  tx_bytes = parseInt(stats[offset + 8]);\n                  tx_dropped = parseInt(stats[offset + 10]);\n                  tx_errors = parseInt(stats[offset + 7]);\n                  result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, result.operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n                }\n              }\n              resolve(result);\n            });\n          });\n        }\n        if (_windows) {\n          let perfData = [];\n          let ifaceName = ifaceSanitized;\n\n          // Performance Data\n          util.wmic('path Win32_PerfRawData_Tcpip_NetworkInterface Get name,BytesReceivedPersec,BytesSentPersec,BytesTotalPersec,PacketsOutboundDiscarded,PacketsOutboundErrors,PacketsReceivedDiscarded,PacketsReceivedErrors /value').then((stdout, error) => {\n            if (!error) {\n              const psections = stdout.toString().split(/\\n\\s*\\n/);\n              perfData = parseLinesWindowsPerfData(psections);\n            }\n\n            // Network Interfaces\n            networkInterfaces(false).then(interfaces => {\n              // get bytes sent, received from perfData by name\n              rx_bytes = 0;\n              tx_bytes = 0;\n              perfData.forEach(detail => {\n                interfaces.forEach(det => {\n                  if ((det.iface.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.mac.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.ip4.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.ip6.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.ifaceName.replace(/[()[\\] ]+/g, '').replace('#', '_').toLowerCase() === ifaceSanitized.replace(/[()[\\] ]+/g, '').replace('#', '_').toLowerCase()) &&\n                    (det.ifaceName.replace(/[()[\\] ]+/g, '').replace('#', '_').toLowerCase() === detail.name)) {\n                    ifaceName = det.iface;\n                    rx_bytes = detail.rx_bytes;\n                    rx_dropped = detail.rx_dropped;\n                    rx_errors = detail.rx_errors;\n                    tx_bytes = detail.tx_bytes;\n                    tx_dropped = detail.tx_dropped;\n                    tx_errors = detail.tx_errors;\n                    operstate = det.operstate;\n                  }\n                });\n              });\n              if (rx_bytes && tx_bytes) {\n                result = calcNetworkSpeed(ifaceName, parseInt(rx_bytes), parseInt(tx_bytes), operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n              }\n              resolve(result);\n            });\n          });\n        }\n      } else {\n        result.rx_bytes = _network[ifaceSanitized].rx_bytes;\n        result.tx_bytes = _network[ifaceSanitized].tx_bytes;\n        result.rx_sec = _network[ifaceSanitized].rx_sec;\n        result.tx_sec = _network[ifaceSanitized].tx_sec;\n        result.ms = _network[ifaceSanitized].last_ms;\n        result.operstate = _network[ifaceSanitized].operstate;\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.networkStats = networkStats;\n\n// --------------------------\n// NET - connections (sockets)\n\nfunction networkConnections(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'export LC_ALL=C; netstat -tunap | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"; unset LC_ALL';\n        if (_freebsd || _openbsd || _netbsd) { cmd = 'export LC_ALL=C; netstat -na | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"; unset LC_ALL'; }\n        exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          if (!error && (lines.length > 1 || lines[0] != '')) {\n            lines.forEach(function (line) {\n              line = line.replace(/ +/g, ' ').split(' ');\n              if (line.length >= 7) {\n                let localip = line[3];\n                let localport = '';\n                let localaddress = line[3].split(':');\n                if (localaddress.length > 1) {\n                  localport = localaddress[localaddress.length - 1];\n                  localaddress.pop();\n                  localip = localaddress.join(':');\n                }\n                let peerip = line[4];\n                let peerport = '';\n                let peeraddress = line[4].split(':');\n                if (peeraddress.length > 1) {\n                  peerport = peeraddress[peeraddress.length - 1];\n                  peeraddress.pop();\n                  peerip = peeraddress.join(':');\n                }\n                let connstate = line[5];\n                // if (connstate === 'VERBUNDEN') connstate = 'ESTABLISHED';\n                let proc = line[6].split('/');\n\n                if (connstate) {\n                  result.push({\n                    protocol: line[0],\n                    localAddress: localip,\n                    localPort: localport,\n                    peerAddress: peerip,\n                    peerPort: peerport,\n                    state: connstate,\n                    pid: proc[0] && proc[0] !== '-' ? parseInt(proc[0], 10) : null,\n                    process: proc[1] ? proc[1].split(' ')[0] : ''\n                  });\n                }\n              }\n            });\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          } else {\n            cmd = 'ss -tunap | grep \"ESTAB\\\\|SYN-SENT\\\\|SYN-RECV\\\\|FIN-WAIT1\\\\|FIN-WAIT2\\\\|TIME-WAIT\\\\|CLOSE\\\\|CLOSE-WAIT\\\\|LAST-ACK\\\\|LISTEN\\\\|CLOSING\"';\n            exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                lines.forEach(function (line) {\n                  line = line.replace(/ +/g, ' ').split(' ');\n                  if (line.length >= 6) {\n                    let localip = line[4];\n                    let localport = '';\n                    let localaddress = line[4].split(':');\n                    if (localaddress.length > 1) {\n                      localport = localaddress[localaddress.length - 1];\n                      localaddress.pop();\n                      localip = localaddress.join(':');\n                    }\n                    let peerip = line[5];\n                    let peerport = '';\n                    let peeraddress = line[5].split(':');\n                    if (peeraddress.length > 1) {\n                      peerport = peeraddress[peeraddress.length - 1];\n                      peeraddress.pop();\n                      peerip = peeraddress.join(':');\n                    }\n                    let connstate = line[1];\n                    if (connstate === 'ESTAB') { connstate = 'ESTABLISHED'; }\n                    if (connstate === 'TIME-WAIT') { connstate = 'TIME_WAIT'; }\n                    let pid = null;\n                    let process = '';\n                    if (line.length >= 7 && line[6].indexOf('users:') > -1) {\n                      let proc = line[6].replace('users:((\"', '').replace(/\"/g, '').split(',');\n                      if (proc.length > 2) {\n                        process = proc[0].split(' ')[0];\n                        pid = parseInt(proc[1], 10);\n                      }\n                    }\n                    if (connstate) {\n                      result.push({\n                        protocol: line[0],\n                        localAddress: localip,\n                        localPort: localport,\n                        peerAddress: peerip,\n                        peerPort: peerport,\n                        state: connstate,\n                        pid,\n                        process\n                      });\n                    }\n                  }\n                });\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          }\n        });\n      }\n      if (_darwin) {\n        let cmd = 'netstat -natv | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"';\n        exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n          if (!error) {\n\n            let lines = stdout.toString().split('\\n');\n\n            lines.forEach(function (line) {\n              line = line.replace(/ +/g, ' ').split(' ');\n              if (line.length >= 8) {\n                let localip = line[3];\n                let localport = '';\n                let localaddress = line[3].split('.');\n                if (localaddress.length > 1) {\n                  localport = localaddress[localaddress.length - 1];\n                  localaddress.pop();\n                  localip = localaddress.join('.');\n                }\n                let peerip = line[4];\n                let peerport = '';\n                let peeraddress = line[4].split('.');\n                if (peeraddress.length > 1) {\n                  peerport = peeraddress[peeraddress.length - 1];\n                  peeraddress.pop();\n                  peerip = peeraddress.join('.');\n                }\n                let connstate = line[5];\n                let pid = parseInt(line[8], 10);\n                if (connstate) {\n                  result.push({\n                    protocol: line[0],\n                    localAddress: localip,\n                    localPort: localport,\n                    peerAddress: peerip,\n                    peerPort: peerport,\n                    state: connstate,\n                    pid: pid,\n                    process: ''\n                  });\n                }\n              }\n            });\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        });\n      }\n      if (_windows) {\n        let cmd = 'netstat -nao';\n        try {\n          exec(cmd, util.execOptsWin, function (error, stdout) {\n            if (!error) {\n\n              let lines = stdout.toString().split('\\r\\n');\n\n              lines.forEach(function (line) {\n                line = line.trim().replace(/ +/g, ' ').split(' ');\n                if (line.length >= 4) {\n                  let localip = line[1];\n                  let localport = '';\n                  let localaddress = line[1].split(':');\n                  if (localaddress.length > 1) {\n                    localport = localaddress[localaddress.length - 1];\n                    localaddress.pop();\n                    localip = localaddress.join(':');\n                  }\n                  let peerip = line[2];\n                  let peerport = '';\n                  let peeraddress = line[2].split(':');\n                  if (peeraddress.length > 1) {\n                    peerport = peeraddress[peeraddress.length - 1];\n                    peeraddress.pop();\n                    peerip = peeraddress.join(':');\n                  }\n                  let pid = line[4];\n                  let connstate = line[3];\n                  if (connstate === 'HERGESTELLT') { connstate = 'ESTABLISHED'; }\n                  if (connstate.startsWith('ABH')) { connstate = 'LISTEN'; }\n                  if (connstate === 'SCHLIESSEN_WARTEN') { connstate = 'CLOSE_WAIT'; }\n                  if (connstate === 'WARTEND') { connstate = 'TIME_WAIT'; }\n                  if (connstate === 'SYN_GESENDET') { connstate = 'SYN_SENT'; }\n\n                  if (connstate === 'LISTENING') { connstate = 'LISTEN'; }\n                  if (connstate === 'SYN_RECEIVED') { connstate = 'SYN_RECV'; }\n                  if (connstate === 'FIN_WAIT_1') { connstate = 'FIN_WAIT1'; }\n                  if (connstate === 'FIN_WAIT_2') { connstate = 'FIN_WAIT2'; }\n                  if (connstate) {\n                    result.push({\n                      protocol: line[0].toLowerCase(),\n                      localAddress: localip,\n                      localPort: localport,\n                      peerAddress: peerip,\n                      peerPort: peerport,\n                      state: connstate,\n                      pid,\n                      process: ''\n                    });\n                  }\n                }\n              });\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.networkConnections = networkConnections;\n\nfunction networkGatewayDefault(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = '';\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'ip route get 1';\n        try {\n          exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              const line = lines && lines[0] ? lines[0] : '';\n              let parts = line.split(' via ');\n              if (parts && parts[1]) {\n                parts = parts[1].split(' ');\n                result = parts[0];\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_darwin) {\n        let cmd = 'route -n get default';\n        try {\n          exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n            if (!error) {\n              const lines = stdout.toString().split('\\n').map(line => line.trim());\n              result = util.getValue(lines, 'gateway');\n            }\n            if (!result) {\n              cmd = 'netstat -rn | awk \\'/default/ {print $2}\\'';\n              exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                const lines = stdout.toString().split('\\n').map(line => line.trim());\n                result = lines.find(line => (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(line)));\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_windows) {\n        try {\n          exec('netstat -r', util.execOptsWin, function (error, stdout) {\n            const lines = stdout.toString().split(os.EOL);\n            lines.forEach(line => {\n              line = line.replace(/\\s+/g, ' ').trim();\n              if (line.indexOf('0.0.0.0 0.0.0.0') > -1 && !(/[a-zA-Z]/.test(line))) {\n                const parts = line.split(' ');\n                if (parts.length >= 5 && (parts[parts.length - 3]).indexOf('.') > -1) {\n                  result = parts[parts.length - 3];\n                }\n              }\n            });\n            if (!result) {\n              util.powerShell('Get-CimInstance -ClassName Win32_IP4RouteTable | Where-Object { $_.Destination -eq \\'0.0.0.0\\' -and $_.Mask -eq \\'0.0.0.0\\' }')\n                .then(data => {\n                  let lines = data.toString().split('\\r\\n');\n                  if (lines.length > 1 && !result) {\n                    result = util.getValue(lines, 'NextHop');\n                    if (callback) {\n                      callback(result);\n                    }\n                    resolve(result);\n                    // } else {\n                    //   exec('ipconfig', util.execOptsWin, function (error, stdout) {\n                    //     let lines = stdout.toString().split('\\r\\n');\n                    //     lines.forEach(function (line) {\n                    //       line = line.trim().replace(/\\. /g, '');\n                    //       line = line.trim().replace(/ +/g, '');\n                    //       const parts = line.split(':');\n                    //       if ((parts[0].toLowerCase().startsWith('standardgate') || parts[0].toLowerCase().indexOf('gateway') > -1 || parts[0].toLowerCase().indexOf('enlace') > -1) && parts[1]) {\n                    //         result = parts[1];\n                    //       }\n                    //     });\n                    //     if (callback) { callback(result); }\n                    //     resolve(result);\n                    //   });\n                  }\n                });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.networkGatewayDefault = networkGatewayDefault;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// osinfo.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 3. Operating System\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst fs = require('fs');\nconst util = require('./util');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\n// const execPromise = util.promisify(require('child_process').exec);\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\n// --------------------------\n// Get current time and OS uptime\n\nfunction time() {\n  let t = new Date().toString().split(' ');\n\n  return {\n    current: Date.now(),\n    uptime: os.uptime(),\n    timezone: (t.length >= 7) ? t[5] : '',\n    timezoneName: (t.length >= 7) ? t.slice(6).join(' ').replace(/\\(/g, '').replace(/\\)/g, '') : ''\n  };\n}\n\nexports.time = time;\n\n// --------------------------\n// Get logo filename of OS distribution\n\nfunction getLogoFile(distro) {\n  distro = distro || '';\n  distro = distro.toLowerCase();\n  let result = _platform;\n  if (_windows) {\n    result = 'windows';\n  }\n  else if (distro.indexOf('mac os') !== -1) {\n    result = 'apple';\n  }\n  else if (distro.indexOf('arch') !== -1) {\n    result = 'arch';\n  }\n  else if (distro.indexOf('centos') !== -1) {\n    result = 'centos';\n  }\n  else if (distro.indexOf('coreos') !== -1) {\n    result = 'coreos';\n  }\n  else if (distro.indexOf('debian') !== -1) {\n    result = 'debian';\n  }\n  else if (distro.indexOf('deepin') !== -1) {\n    result = 'deepin';\n  }\n  else if (distro.indexOf('elementary') !== -1) {\n    result = 'elementary';\n  }\n  else if (distro.indexOf('fedora') !== -1) {\n    result = 'fedora';\n  }\n  else if (distro.indexOf('gentoo') !== -1) {\n    result = 'gentoo';\n  }\n  else if (distro.indexOf('mageia') !== -1) {\n    result = 'mageia';\n  }\n  else if (distro.indexOf('mandriva') !== -1) {\n    result = 'mandriva';\n  }\n  else if (distro.indexOf('manjaro') !== -1) {\n    result = 'manjaro';\n  }\n  else if (distro.indexOf('mint') !== -1) {\n    result = 'mint';\n  }\n  else if (distro.indexOf('mx') !== -1) {\n    result = 'mx';\n  }\n  else if (distro.indexOf('openbsd') !== -1) {\n    result = 'openbsd';\n  }\n  else if (distro.indexOf('freebsd') !== -1) {\n    result = 'freebsd';\n  }\n  else if (distro.indexOf('opensuse') !== -1) {\n    result = 'opensuse';\n  }\n  else if (distro.indexOf('pclinuxos') !== -1) {\n    result = 'pclinuxos';\n  }\n  else if (distro.indexOf('puppy') !== -1) {\n    result = 'puppy';\n  }\n  else if (distro.indexOf('raspbian') !== -1) {\n    result = 'raspbian';\n  }\n  else if (distro.indexOf('reactos') !== -1) {\n    result = 'reactos';\n  }\n  else if (distro.indexOf('redhat') !== -1) {\n    result = 'redhat';\n  }\n  else if (distro.indexOf('slackware') !== -1) {\n    result = 'slackware';\n  }\n  else if (distro.indexOf('sugar') !== -1) {\n    result = 'sugar';\n  }\n  else if (distro.indexOf('steam') !== -1) {\n    result = 'steam';\n  }\n  else if (distro.indexOf('suse') !== -1) {\n    result = 'suse';\n  }\n  else if (distro.indexOf('mate') !== -1) {\n    result = 'ubuntu-mate';\n  }\n  else if (distro.indexOf('lubuntu') !== -1) {\n    result = 'lubuntu';\n  }\n  else if (distro.indexOf('xubuntu') !== -1) {\n    result = 'xubuntu';\n  }\n  else if (distro.indexOf('ubuntu') !== -1) {\n    result = 'ubuntu';\n  }\n  else if (distro.indexOf('solaris') !== -1) {\n    result = 'solaris';\n  }\n  else if (distro.indexOf('tails') !== -1) {\n    result = 'tails';\n  }\n  else if (distro.indexOf('feren') !== -1) {\n    result = 'ferenos';\n  }\n  else if (distro.indexOf('robolinux') !== -1) {\n    result = 'robolinux';\n  } else if (_linux && distro) {\n    result = distro.toLowerCase().trim().replace(/\\s+/g, '-');\n  }\n  return result;\n}\n\n// --------------------------\n// FQDN\n\nfunction getFQDN() {\n  let fqdn = os.hostname;\n  if (_linux || _darwin || _freebsd || _openbsd || _netbsd) {\n    try {\n      const stdout = execSync('hostname -f');\n      fqdn = stdout.toString().split(os.EOL)[0];\n    } catch (e) {\n      util.noop();\n    }\n  }\n  if (_windows) {\n    try {\n      const stdout = execSync('echo %COMPUTERNAME%.%USERDNSDOMAIN%', util.execOptsWin);\n      fqdn = stdout.toString().replace('.%USERDNSDOMAIN%', '').split(os.EOL)[0];\n    } catch (e) {\n      util.noop();\n    }\n  }\n  return fqdn;\n}\n\n// --------------------------\n// OS Information\n\nfunction osInfo(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n\n        platform: (_platform === 'Windows_NT' ? 'Windows' : _platform),\n        distro: 'unknown',\n        release: 'unknown',\n        codename: '',\n        kernel: os.release(),\n        arch: os.arch(),\n        hostname: os.hostname(),\n        fqdn: getFQDN(),\n        codepage: '',\n        logofile: '',\n        serial: '',\n        build: '',\n        servicepack: '',\n        uefi: false\n      };\n\n      if (_linux) {\n\n        exec('cat /etc/*-release; cat /usr/lib/os-release; cat /etc/openwrt_release', function (error, stdout) {\n          //if (!error) {\n          /**\n           * @namespace\n           * @property {string}  DISTRIB_ID\n           * @property {string}  NAME\n           * @property {string}  DISTRIB_RELEASE\n           * @property {string}  VERSION_ID\n           * @property {string}  DISTRIB_CODENAME\n           */\n          let release = {};\n          let lines = stdout.toString().split('\\n');\n          lines.forEach(function (line) {\n            if (line.indexOf('=') !== -1) {\n              release[line.split('=')[0].trim().toUpperCase()] = line.split('=')[1].trim();\n            }\n          });\n          let releaseVersion = (release.VERSION || '').replace(/\"/g, '');\n          let codename = (release.DISTRIB_CODENAME || release.VERSION_CODENAME || '').replace(/\"/g, '');\n          if (releaseVersion.indexOf('(') >= 0) {\n            codename = releaseVersion.split('(')[1].replace(/[()]/g, '').trim();\n            releaseVersion = releaseVersion.split('(')[0].trim();\n          }\n          result.distro = (release.DISTRIB_ID || release.NAME || 'unknown').replace(/\"/g, '');\n          result.logofile = getLogoFile(result.distro);\n          result.release = (releaseVersion || release.DISTRIB_RELEASE || release.VERSION_ID || 'unknown').replace(/\"/g, '');\n          result.codename = codename;\n          result.codepage = util.getCodepage();\n          result.build = (release.BUILD_ID || '').replace(/\"/g, '').trim();\n          isUefiLinux().then(uefi => {\n            result.uefi = uefi;\n            uuid().then(data => {\n              result.serial = data.os;\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          });\n          //}\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n\n        exec('sysctl kern.ostype kern.osrelease kern.osrevision kern.hostuuid machdep.bootmethod', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            result.distro = util.getValue(lines, 'kern.ostype');\n            result.logofile = getLogoFile(result.distro);\n            result.release = util.getValue(lines, 'kern.osrelease').split('-')[0];\n            result.serial = util.getValue(lines, 'kern.uuid');\n            result.codename = '';\n            result.codepage = util.getCodepage();\n            result.uefi = util.getValue(lines, 'machdep.bootmethod').toLowerCase().indexOf('uefi') >= 0;\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('sw_vers; sysctl kern.ostype kern.osrelease kern.osrevision kern.uuid', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.serial = util.getValue(lines, 'kern.uuid');\n          result.distro = util.getValue(lines, 'ProductName');\n          result.release = util.getValue(lines, 'ProductVersion');\n          result.build = util.getValue(lines, 'BuildVersion');\n          result.logofile = getLogoFile(result.distro);\n          result.codename = 'macOS';\n          result.codename = (result.release.indexOf('10.4') > -1 ? 'Mac OS X Tiger' : result.codename);\n          result.codename = (result.release.indexOf('10.4') > -1 ? 'Mac OS X Tiger' : result.codename);\n          result.codename = (result.release.indexOf('10.4') > -1 ? 'Mac OS X Tiger' : result.codename);\n          result.codename = (result.release.indexOf('10.5') > -1 ? 'Mac OS X Leopard' : result.codename);\n          result.codename = (result.release.indexOf('10.6') > -1 ? 'Mac OS X Snow Leopard' : result.codename);\n          result.codename = (result.release.indexOf('10.7') > -1 ? 'Mac OS X Lion' : result.codename);\n          result.codename = (result.release.indexOf('10.8') > -1 ? 'OS X Mountain Lion' : result.codename);\n          result.codename = (result.release.indexOf('10.9') > -1 ? 'OS X Mavericks' : result.codename);\n          result.codename = (result.release.indexOf('10.10') > -1 ? 'OS X Yosemite' : result.codename);\n          result.codename = (result.release.indexOf('10.11') > -1 ? 'OS X El Capitan' : result.codename);\n          result.codename = (result.release.indexOf('10.12') > -1 ? 'macOS Sierra' : result.codename);\n          result.codename = (result.release.indexOf('10.13') > -1 ? 'macOS High Sierra' : result.codename);\n          result.codename = (result.release.indexOf('10.14') > -1 ? 'macOS Mojave' : result.codename);\n          result.codename = (result.release.indexOf('10.15') > -1 ? 'macOS Catalina' : result.codename);\n          result.codename = (result.release.startsWith('11.') ? 'macOS Big Sur' : result.codename);\n          result.uefi = true;\n          result.codepage = util.getCodepage();\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        result.release = result.kernel;\n        exec('uname -o', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.distro = lines[0];\n          result.logofile = getLogoFile(result.distro);\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        result.logofile = getLogoFile();\n        result.release = result.kernel;\n        try {\n          const workload = [];\n          workload.push(util.wmic('os get /value'));\n          // workload.push(execPromise('systeminfo', util.execOptsWin));\n          // workload.push(util.powerShell('Get-ComputerInfo -property \"HyperV*\"'));\n          workload.push(util.powerShell('(Get-CimInstance Win32_ComputerSystem).HypervisorPresent'));\n          workload.push(util.powerShell('Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.SystemInformation]::TerminalServerSession'));\n          util.promiseAll(\n            workload\n          ).then(data => {\n            let lines = data.results[0] ? data.results[0].toString().split('\\r\\n') : [''];\n            result.distro = util.getValue(lines, 'Caption', '=').trim();\n            result.serial = util.getValue(lines, 'SerialNumber', '=').trim();\n            result.build = util.getValue(lines, 'BuildNumber', '=').trim();\n            result.servicepack = util.getValue(lines, 'ServicePackMajorVersion', '=').trim() + '.' + util.getValue(lines, 'ServicePackMinorVersion', '=').trim();\n            result.codepage = util.getCodepage();\n            // const systeminfo = data.results[1] ? data.results[1].toString() : '';\n            // result.hypervisor = (systeminfo.indexOf('hypervisor has been detected') !== -1) || (systeminfo.indexOf('ein Hypervisor erkannt') !== -1) || (systeminfo.indexOf('Un hyperviseur a ') !== -1);\n            // const hyperv = data.results[1] ? data.results[1].toString().split('\\r\\n') : [];\n            // result.hypervisor = (util.getValue(hyperv, 'HyperVisorPresent').toLowerCase() === 'true');\n            const hyperv = data.results[1] ? data.results[1].toString().toLowerCase() : '';\n            result.hypervisor = hyperv.indexOf('true') !== -1;\n            const term = data.results[2] ? data.results[2].toString() : '';\n            result.remoteSession = (term.toString().toLowerCase().indexOf('true') >= 0);\n            isUefiWindows().then(uefi => {\n              result.uefi = uefi;\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.osInfo = osInfo;\n\nfunction isUefiLinux() {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      fs.stat('/sys/firmware/efi', function (err) {\n        if (!err) {\n          return resolve(true);\n        } else {\n          exec('dmesg | grep -E \"EFI v\"', function (error, stdout) {\n            if (!error) {\n              const lines = stdout.toString().split('\\n');\n              return resolve(lines.length > 0);\n            }\n            return resolve(false);\n          });\n        }\n      });\n    });\n  });\n}\n\nfunction isUefiWindows() {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        exec('findstr /C:\"Detected boot environment\" \"%windir%\\\\Panther\\\\setupact.log\"', util.execOptsWin, function (error, stdout) {\n          if (!error) {\n            const line = stdout.toString().split('\\n\\r')[0];\n            return resolve(line.toLowerCase().indexOf('efi') >= 0);\n          } else {\n            exec('echo %firmware_type%', util.execOptsWin, function (error, stdout) {\n              if (!error) {\n                const line = stdout.toString() || '';\n                return resolve(line.toLowerCase().indexOf('efi') >= 0);\n              } else {\n                return resolve(false);\n              }\n            });\n          }\n        });\n      } catch (e) {\n        return resolve(false);\n      }\n    });\n  });\n}\n\nfunction versions(apps, callback) {\n  let versionObject = {\n    kernel: os.release(),\n    openssl: '',\n    systemOpenssl: '',\n    systemOpensslLib: '',\n    node: process.versions.node,\n    v8: process.versions.v8,\n    npm: '',\n    yarn: '',\n    pm2: '',\n    gulp: '',\n    grunt: '',\n    git: '',\n    tsc: '',\n    mysql: '',\n    redis: '',\n    mongodb: '',\n    apache: '',\n    nginx: '',\n    php: '',\n    docker: '',\n    postfix: '',\n    postgresql: '',\n    perl: '',\n    python: '',\n    python3: '',\n    pip: '',\n    pip3: '',\n    java: '',\n    gcc: '',\n    virtualbox: '',\n    bash: '',\n    zsh: '',\n    fish: '',\n    powershell: '',\n    dotnet: ''\n  };\n\n  function checkVersionParam(apps) {\n    if (apps === '*') {\n      return {\n        versions: versionObject,\n        counter: 30\n      };\n    }\n    if (!Array.isArray(apps)) {\n      apps = apps.trim().toLowerCase().replace(/,+/g, '|').replace(/ /g, '|');\n      apps = apps.split('|');\n      const result = {\n        versions: {},\n        counter: 0\n      };\n      apps.forEach(el => {\n        if (el) {\n          for (let key in versionObject) {\n            if ({}.hasOwnProperty.call(versionObject, key)) {\n              if (key.toLowerCase() === el.toLowerCase() && !{}.hasOwnProperty.call(result.versions, key)) {\n                result.versions[key] = versionObject[key];\n                if (key === 'openssl') {\n                  result.versions.systemOpenssl = '';\n                  result.versions.systemOpensslLib = '';\n                }\n\n                if (!result.versions[key]) { result.counter++; }\n              }\n            }\n          }\n        }\n      });\n      return result;\n    }\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (util.isFunction(apps) && !callback) {\n        callback = apps;\n        apps = '*';\n      } else {\n        apps = apps || '*';\n        if (typeof apps !== 'string') {\n          if (callback) { callback({}); }\n          return resolve({});\n        }\n      }\n      const appsObj = checkVersionParam(apps);\n      let totalFunctions = appsObj.counter;\n\n      let functionProcessed = (function () {\n        return function () {\n          if (--totalFunctions === 0) {\n            if (callback) {\n              callback(appsObj.versions);\n            }\n            resolve(appsObj.versions);\n          }\n        };\n      })();\n\n      let cmd = '';\n      try {\n        if ({}.hasOwnProperty.call(appsObj.versions, 'openssl')) {\n          appsObj.versions.openssl = process.versions.openssl;\n          exec('openssl version', function (error, stdout) {\n            if (!error) {\n              let openssl_string = stdout.toString().split('\\n')[0].trim();\n              let openssl = openssl_string.split(' ');\n              appsObj.versions.systemOpenssl = openssl.length > 0 ? openssl[1] : openssl[0];\n              appsObj.versions.systemOpensslLib = openssl.length > 0 ? openssl[0] : 'openssl';\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'npm')) {\n          exec('npm -v', function (error, stdout) {\n            if (!error) {\n              appsObj.versions.npm = stdout.toString().split('\\n')[0];\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pm2')) {\n          cmd = 'pm2';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} -v`, function (error, stdout) {\n            if (!error) {\n              let pm2 = stdout.toString().split('\\n')[0].trim();\n              if (!pm2.startsWith('[PM2]')) {\n                appsObj.versions.pm2 = pm2;\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'yarn')) {\n          exec('yarn --version', function (error, stdout) {\n            if (!error) {\n              appsObj.versions.yarn = stdout.toString().split('\\n')[0];\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'gulp')) {\n          cmd = 'gulp';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const gulp = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.gulp = (gulp.toLowerCase().split('version')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'tsc')) {\n          cmd = 'tsc';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const tsc = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.tsc = (tsc.toLowerCase().split('version')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'grunt')) {\n          cmd = 'grunt';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const grunt = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.grunt = (grunt.toLowerCase().split('cli v')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'git')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/git');\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('git --version', function (error, stdout) {\n                if (!error) {\n                  let git = stdout.toString().split('\\n')[0] || '';\n                  git = (git.toLowerCase().split('version')[1] || '').trim();\n                  appsObj.versions.git = (git.split(' ')[0] || '').trim();\n                }\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('git --version', function (error, stdout) {\n              if (!error) {\n                let git = stdout.toString().split('\\n')[0] || '';\n                git = (git.toLowerCase().split('version')[1] || '').trim();\n                appsObj.versions.git = (git.split(' ')[0] || '').trim();\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'apache')) {\n          exec('apachectl -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const apache = (stdout.toString().split('\\n')[0] || '').split(':');\n              appsObj.versions.apache = (apache.length > 1 ? apache[1].replace('Apache', '').replace('/', '').split('(')[0].trim() : '');\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'nginx')) {\n          exec('nginx -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const nginx = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.nginx = (nginx.toLowerCase().split('/')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'mysql')) {\n          exec('mysql -V', function (error, stdout) {\n            if (!error) {\n              let mysql = stdout.toString().split('\\n')[0] || '';\n              mysql = mysql.toLowerCase();\n              if (mysql.indexOf(',') > -1) {\n                mysql = (mysql.split(',')[0] || '').trim();\n                const parts = mysql.split(' ');\n                appsObj.versions.mysql = (parts[parts.length - 1] || '').trim();\n              } else {\n                if (mysql.indexOf(' ver ') > -1) {\n                  mysql = mysql.split(' ver ')[1];\n                  appsObj.versions.mysql = mysql.split(' ')[0];\n                }\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'php')) {\n          exec('php -v', function (error, stdout) {\n            if (!error) {\n              const php = stdout.toString().split('\\n')[0] || '';\n              let parts = php.split('(');\n              if (parts[0].indexOf('-')) {\n                parts = parts[0].split('-');\n              }\n              appsObj.versions.php = parts[0].replace(/[^0-9.]/g, '');\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'redis')) {\n          exec('redis-server --version', function (error, stdout) {\n            if (!error) {\n              const redis = stdout.toString().split('\\n')[0] || '';\n              const parts = redis.split(' ');\n              appsObj.versions.redis = util.getValue(parts, 'v', '=', true);\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'docker')) {\n          exec('docker --version', function (error, stdout) {\n            if (!error) {\n              const docker = stdout.toString().split('\\n')[0] || '';\n              const parts = docker.split(' ');\n              appsObj.versions.docker = parts.length > 2 && parts[2].endsWith(',') ? parts[2].slice(0, -1) : '';\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'postfix')) {\n          exec('postconf -d | grep mail_version', function (error, stdout) {\n            if (!error) {\n              const postfix = stdout.toString().split('\\n') || [];\n              appsObj.versions.postfix = util.getValue(postfix, 'mail_version', '=', true);\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'mongodb')) {\n          exec('mongod --version', function (error, stdout) {\n            if (!error) {\n              const mongodb = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.mongodb = (mongodb.toLowerCase().split(',')[0] || '').replace(/[^0-9.]/g, '');\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'postgresql')) {\n          if (_linux) {\n            exec('locate bin/postgres', function (error, stdout) {\n              if (!error) {\n                const postgresqlBin = stdout.toString().split('\\n').sort();\n                if (postgresqlBin.length) {\n                  exec(postgresqlBin[postgresqlBin.length - 1] + ' -V', function (error, stdout) {\n                    if (!error) {\n                      const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                      appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                    }\n                    functionProcessed();\n                  });\n                } else {\n                  functionProcessed();\n                }\n              } else {\n                exec('psql -V', function (error, stdout) {\n                  if (!error) {\n                    const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                    appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                    appsObj.versions.postgresql = appsObj.versions.postgresql.split('-')[0];\n                  }\n                  functionProcessed();\n                });\n                functionProcessed();\n              }\n            });\n          } else {\n            if (_windows) {\n              util.wmic('service get /value').then((stdout) => {\n                let serviceSections = stdout.split(/\\n\\s*\\n/);\n                for (let i = 0; i < serviceSections.length; i++) {\n                  if (serviceSections[i].trim() !== '') {\n                    let lines = serviceSections[i].trim().split('\\r\\n');\n                    let srvCaption = util.getValue(lines, 'caption', '=', true).toLowerCase();\n                    if (srvCaption.indexOf('postgresql') > -1) {\n                      const parts = srvCaption.split(' server ');\n                      if (parts.length > 1) {\n                        appsObj.versions.postgresql = parts[1];\n                      }\n                    }\n                  }\n                }\n                functionProcessed();\n              });\n            } else {\n              exec('postgres -V', function (error, stdout) {\n                if (!error) {\n                  const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                  appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                }\n                functionProcessed();\n              });\n            }\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'perl')) {\n          exec('perl -v', function (error, stdout) {\n            if (!error) {\n              const perl = stdout.toString().split('\\n') || '';\n              while (perl.length > 0 && perl[0].trim() === '') {\n                perl.shift();\n              }\n              if (perl.length > 0) {\n                appsObj.versions.perl = perl[0].split('(').pop().split(')')[0].replace('v', '');\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'python')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/python');\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('python -V 2>&1', function (error, stdout) {\n                if (!error) {\n                  const python = stdout.toString().split('\\n')[0] || '';\n                  appsObj.versions.python = python.toLowerCase().replace('python', '').trim();\n                }\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('python -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const python = stdout.toString().split('\\n')[0] || '';\n                appsObj.versions.python = python.toLowerCase().replace('python', '').trim();\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'python3')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/python3');\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('python3 -V 2>&1', function (error, stdout) {\n                if (!error) {\n                  const python = stdout.toString().split('\\n')[0] || '';\n                  appsObj.versions.python3 = python.toLowerCase().replace('python', '').trim();\n                }\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('python3 -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const python = stdout.toString().split('\\n')[0] || '';\n                appsObj.versions.python3 = python.toLowerCase().replace('python', '').trim();\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pip')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/pip');\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('pip -V 2>&1', function (error, stdout) {\n                if (!error) {\n                  const pip = stdout.toString().split('\\n')[0] || '';\n                  const parts = pip.split(' ');\n                  appsObj.versions.pip = parts.length >= 2 ? parts[1] : '';\n                }\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('pip -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const pip = stdout.toString().split('\\n')[0] || '';\n                const parts = pip.split(' ');\n                appsObj.versions.pip = parts.length >= 2 ? parts[1] : '';\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pip3')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/pip3');\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('pip3 -V 2>&1', function (error, stdout) {\n                if (!error) {\n                  const pip = stdout.toString().split('\\n')[0] || '';\n                  const parts = pip.split(' ');\n                  appsObj.versions.pip3 = parts.length >= 2 ? parts[1] : '';\n                }\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('pip3 -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const pip = stdout.toString().split('\\n')[0] || '';\n                const parts = pip.split(' ');\n                appsObj.versions.pip3 = parts.length >= 2 ? parts[1] : '';\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'java')) {\n          if (_darwin) {\n            // check if any JVM is installed but avoid dialog box that Java needs to be installed\n            exec('/usr/libexec/java_home -V 2>&1', function (error, stdout) {\n              if (!error && stdout.toString().toLowerCase().indexOf('no java runtime') === -1) {\n                // now this can be done savely\n                exec('java -version 2>&1', function (error, stdout) {\n                  if (!error) {\n                    const java = stdout.toString().split('\\n')[0] || '';\n                    const parts = java.split('\"');\n                    appsObj.versions.java = parts.length === 3 ? parts[1].trim() : '';\n                  }\n                  functionProcessed();\n                });\n              } else {\n                functionProcessed();\n              }\n            });\n          } else {\n            exec('java -version 2>&1', function (error, stdout) {\n              if (!error) {\n                const java = stdout.toString().split('\\n')[0] || '';\n                const parts = java.split('\"');\n                appsObj.versions.java = parts.length === 3 ? parts[1].trim() : '';\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'gcc')) {\n          if ((_darwin && util.darwinXcodeExists()) || !_darwin) {\n            exec('gcc -dumpversion', function (error, stdout) {\n              if (!error) {\n                appsObj.versions.gcc = stdout.toString().split('\\n')[0].trim() || '';\n              }\n              if (appsObj.versions.gcc.indexOf('.') > -1) {\n                functionProcessed();\n              } else {\n                exec('gcc --version', function (error, stdout) {\n                  if (!error) {\n                    const gcc = stdout.toString().split('\\n')[0].trim();\n                    if (gcc.indexOf('gcc') > -1 && gcc.indexOf(')') > -1) {\n                      const parts = gcc.split(')');\n                      appsObj.versions.gcc = parts[1].trim() || appsObj.versions.gcc;\n                    }\n                  }\n                  functionProcessed();\n                });\n              }\n            });\n          } else {\n            functionProcessed();\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'virtualbox')) {\n          exec(util.getVboxmanage() + ' -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const vbox = stdout.toString().split('\\n')[0] || '';\n              const parts = vbox.split('r');\n              appsObj.versions.virtualbox = parts[0];\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'bash')) {\n          exec('bash --version', function (error, stdout) {\n            if (!error) {\n              const line = stdout.toString().split('\\n')[0];\n              const parts = line.split(' version ');\n              if (parts.length > 1) {\n                appsObj.versions.bash = parts[1].split(' ')[0].split('(')[0];\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'zsh')) {\n          exec('zsh --version', function (error, stdout) {\n            if (!error) {\n              const line = stdout.toString().split('\\n')[0];\n              const parts = line.split('zsh ');\n              if (parts.length > 1) {\n                appsObj.versions.zsh = parts[1].split(' ')[0];\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'fish')) {\n          exec('fish --version', function (error, stdout) {\n            if (!error) {\n              const line = stdout.toString().split('\\n')[0];\n              const parts = line.split(' version ');\n              if (parts.length > 1) {\n                appsObj.versions.fish = parts[1].split(' ')[0];\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'powershell')) {\n          if (_windows) {\n            util.powerShell('$PSVersionTable').then(stdout => {\n              const lines = stdout.toString().split('\\n').map(line => line.replace(/ +/g, ' ').replace(/ +/g, ':'));\n              appsObj.versions.powershell = util.getValue(lines, 'psversion');\n              functionProcessed();\n            });\n          } else {\n            functionProcessed();\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'dotnet')) {\n          util.powerShell('gci \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\" -recurse | gp -name Version,Release -EA 0 | where { $_.PSChildName -match \"^(?!S)\\\\p{L}\"} | select PSChildName, Version, Release').then(stdout => {\n            const lines = stdout.toString().split('\\r\\n');\n            let dotnet = '';\n            lines.forEach(line => {\n              line = line.replace(/ +/g, ' ');\n              const parts = line.split(' ');\n              dotnet = dotnet || ((parts[0].toLowerCase().startsWith('client') && parts.length > 2 ? parts[1].trim() : (parts[0].toLowerCase().startsWith('full') && parts.length > 2 ? parts[1].trim() : '')));\n            });\n            appsObj.versions.dotnet = dotnet.trim();\n            functionProcessed();\n          });\n        }\n      } catch (e) {\n        if (callback) { callback(appsObj.versions); }\n        resolve(appsObj.versions);\n      }\n    });\n  });\n}\n\nexports.versions = versions;\n\nfunction shell(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (_windows) {\n        resolve('cmd');\n      } else {\n        let result = '';\n        exec('echo $SHELL', function (error, stdout) {\n          if (!error) {\n            result = stdout.toString().split('\\n')[0];\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n    });\n  });\n}\n\nexports.shell = shell;\n\nfunction getUniqueMacAdresses() {\n  const ifaces = os.networkInterfaces();\n  let macs = [];\n  for (let dev in ifaces) {\n    if ({}.hasOwnProperty.call(ifaces, dev)) {\n      ifaces[dev].forEach(function (details) {\n        if (details && details.mac && details.mac !== '00:00:00:00:00:00') {\n          const mac = details.mac.toLowerCase();\n          if (macs.indexOf(mac) === -1) {\n            macs.push(mac);\n          }\n        }\n      });\n    }\n  }\n  macs = macs.sort(function (a, b) {\n    if (a < b) { return -1; }\n    if (a > b) { return 1; }\n    return 0;\n  });\n  return macs;\n}\n\nfunction uuid(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        os: '',\n        hardware: '',\n        macs: getUniqueMacAdresses()\n      };\n      let parts;\n\n      if (_darwin) {\n        exec('system_profiler SPHardwareDataType -json', function (error, stdout) {\n          if (!error) {\n            try {\n              const jsonObj = JSON.parse(stdout.toString());\n              if (jsonObj.SPHardwareDataType && jsonObj.SPHardwareDataType.length > 0) {\n                const spHardware = jsonObj.SPHardwareDataType[0];\n                // result.os = parts.length > 1 ? parts[1].trim().toLowerCase() : '';\n                result.os = spHardware.platform_UUID.toLowerCase();\n                result.hardware = spHardware.serial_number;\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_linux) {\n        const cmd = `echo -n \"os: \"; cat /var/lib/dbus/machine-id 2> /dev/null; echo;\necho -n \"os: \"; cat /etc/machine-id 2> /dev/null; echo;\necho -n \"hardware: \"; cat /sys/class/dmi/id/product_uuid 2> /dev/null; echo;`;\n        exec(cmd, function (error, stdout) {\n          const lines = stdout.toString().split('\\n');\n          result.os = util.getValue(lines, 'os').toLowerCase();\n          result.hardware = util.getValue(lines, 'hardware').toLowerCase();\n          if (!result.hardware) {\n            const lines = fs.readFileSync('/proc/cpuinfo', { encoding: 'utf8' }).toString().split('\\n');\n            const serial = util.getValue(lines, 'serial');\n            result.hardware = serial || '';\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        const cmd = `echo -n \"os: \"; sysctl -n kern.hostid; echo;\necho -n \"hardware: \"; sysctl -n kern.hostuuid; echo;`;\n        exec(cmd, function (error, stdout) {\n          const lines = stdout.toString().split('\\n');\n          result.os = util.getValue(lines, 'os').toLowerCase();\n          result.hardware = util.getValue(lines, 'hardware').toLowerCase();\n          if (result.os.indexOf('unknown') >= 0) { result.os = ''; }\n          if (result.hardware.indexOf('unknown') >= 0) { result.hardware = ''; }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        let sysdir = '%windir%\\\\System32';\n        if (process.arch === 'ia32' && Object.prototype.hasOwnProperty.call(process.env, 'PROCESSOR_ARCHITEW6432')) {\n          sysdir = '%windir%\\\\sysnative\\\\cmd.exe /c %windir%\\\\System32';\n        }\n        exec(`${sysdir}\\\\reg query \"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Cryptography\" /v MachineGuid`, util.execOptsWin, function (error, stdout) {\n          parts = stdout.toString().split('\\n\\r')[0].split('REG_SZ');\n          result.os = parts.length > 1 ? parts[1].replace(/\\r+|\\n+|\\s+/ig, '').toLowerCase() : '';\n          util.wmic('csproduct get /value').then((stdout) => {\n            // let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0)[0].trim().split(/\\s\\s+/);\n            let lines = stdout.split('\\r\\n');\n            result.hardware = util.getValue(lines, 'uuid', '=').toLowerCase();\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        });\n      }\n    });\n  });\n}\n\nexports.uuid = uuid;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// printers.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 15. printers\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\n// const execSync = require('child_process').execSync;\nconst util = require('./util');\n// const fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nconst winPrinterStatus = {\n  1: 'Other',\n  2: 'Unknown',\n  3: 'Idle',\n  4: 'Printing',\n  5: 'Warmup',\n  6: 'Stopped Printing',\n  7: 'Offline',\n};\n\nfunction parseLinuxCupsHeader(lines) {\n  const result = {};\n  if (lines && lines.length) {\n    if (lines[0].indexOf(' CUPS v') > 0) {\n      const parts = lines[0].split(' CUPS v');\n      result.cupsVersion = parts[1];\n    }\n  }\n  return result;\n}\n\nfunction parseLinuxCupsPrinter(lines) {\n  const result = {};\n  const printerId = util.getValue(lines, 'PrinterId', ' ');\n  result.id = printerId ? parseInt(printerId, 10) : null;\n  result.name = util.getValue(lines, 'Info', ' ');\n  result.model = lines.length > 0 && lines[0] ? lines[0].split(' ')[0] : '';\n  result.uri = util.getValue(lines, 'DeviceURI', ' ');\n  result.uuid = util.getValue(lines, 'UUID', ' ');\n  result.status = util.getValue(lines, 'State', ' ');\n  result.local = util.getValue(lines, 'Location', ' ').toLowerCase().startsWith('local');\n  result.default = null;\n  result.shared = util.getValue(lines, 'Shared', ' ').toLowerCase().startsWith('yes');\n\n  return result;\n}\n\nfunction parseLinuxLpstatPrinter(lines, id) {\n  const result = {};\n  result.id = id;\n  result.name = util.getValue(lines, 'Description', ':', true);\n  result.model = lines.length > 0 && lines[0] ? lines[0].split(' ')[0] : '';\n  result.uri = null;\n  result.uuid = null;\n  result.status = lines.length > 0 && lines[0] ? (lines[0].indexOf(' idle') > 0 ? 'idle' : (lines[0].indexOf(' printing') > 0 ? 'printing' : 'unknown')) : null;\n  result.local = util.getValue(lines, 'Location', ':', true).toLowerCase().startsWith('local');\n  result.default = null;\n  result.shared = util.getValue(lines, 'Shared', ' ').toLowerCase().startsWith('yes');\n\n  return result;\n}\n\nfunction parseDarwinPrinters(printerObject, id) {\n  const result = {};\n  const uriParts = printerObject.uri.split('/');\n  result.id = id;\n  result.name = printerObject._name;\n  result.model = uriParts.length ? uriParts[uriParts.length - 1] : '';\n  result.uri = printerObject.uri;\n  result.uuid = null;\n  result.status = printerObject.status;\n  result.local = printerObject.printserver === 'local';\n  result.default = printerObject.default === 'yes';\n  result.shared = printerObject.shared === 'yes';\n\n  return result;\n}\n\nfunction parseWindowsPrinters(lines, id) {\n  const result = {};\n  const status = parseInt(util.getValue(lines, 'PrinterStatus', '='), 10);\n\n  result.id = id;\n  result.name = util.getValue(lines, 'name', '=');\n  result.model = util.getValue(lines, 'DriverName', '=');\n  result.uri = null;\n  result.uuid = null;\n  result.status = winPrinterStatus[status] ? winPrinterStatus[status] : null;\n  result.local = util.getValue(lines, 'Local', '=') === 'TRUE';\n  result.default = util.getValue(lines, 'Default', '=') === 'TRUE';\n  result.shared = util.getValue(lines, 'Shared', '=') === 'TRUE';\n\n  return result;\n}\n\nfunction printer(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'cat /etc/cups/printers.conf 2>/dev/null';\n        exec(cmd, function (error, stdout) {\n          // printers.conf\n          if (!error) {\n            const parts = stdout.toString().split('<Printer ');\n            const printerHeader = parseLinuxCupsHeader(parts[0]);\n            for (let i = 1; i < parts.length; i++) {\n              const printers = parseLinuxCupsPrinter(parts[i].split('\\n'));\n              if (printers.name) {\n                printers.engine = 'CUPS';\n                printers.engineVersion = printerHeader.cupsVersion;\n                result.push(printers);\n              }\n            }\n          }\n          if (result.length === 0) {\n            if (_linux) {\n              cmd = 'export LC_ALL=C; lpstat -lp 2>/dev/null; unset LC_ALL';\n              // lpstat\n              exec(cmd, function (error, stdout) {\n                const parts = ('\\n' + stdout.toString()).split('\\nprinter ');\n                for (let i = 1; i < parts.length; i++) {\n                  const printers = parseLinuxLpstatPrinter(parts[i].split('\\n'), i);\n                  result.push(printers);\n                }\n              });\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          } else {\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        });\n      }\n      if (_darwin) {\n        let cmd = 'system_profiler SPPrintersDataType -json';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              const outObj = JSON.parse(stdout.toString());\n              if (outObj.SPPrintersDataType && outObj.SPPrintersDataType.length) {\n                for (let i = 0; i < outObj.SPPrintersDataType.length; i++) {\n                  const printer = parseDarwinPrinters(outObj.SPPrintersDataType[i], i);\n                  result.push(printer);\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        util.wmic('printer get /value', function (error, stdout) {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n            for (let i = 0; i < parts.length; i++) {\n              const printer = parseWindowsPrinters(parts[i].split('\\n'), i);\n              if (printer.name || printer.model) {\n                result.push(parseWindowsPrinters(parts[i].split('\\n'), i));\n              }\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.printer = printer;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// processes.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 10. Processes\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst fs = require('fs');\nconst path = require('path');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\n\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nconst _processes_cpu = {\n  all: 0,\n  all_utime: 0,\n  all_stime: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\nconst _services_cpu = {\n  all: 0,\n  all_utime: 0,\n  all_stime: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\nconst _process_cpu = {\n  all: 0,\n  all_utime: 0,\n  all_stime: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\n\nconst _winStatusValues = {\n  '0': 'unknown',\n  '1': 'other',\n  '2': 'ready',\n  '3': 'running',\n  '4': 'blocked',\n  '5': 'suspended blocked',\n  '6': 'suspended ready',\n  '7': 'terminated',\n  '8': 'stopped',\n  '9': 'growing',\n};\n\n\nfunction parseTimeWin(time) {\n  time = time || '';\n  if (time) {\n    return (time.substr(0, 4) + '-' + time.substr(4, 2) + '-' + time.substr(6, 2) + ' ' + time.substr(8, 2) + ':' + time.substr(10, 2) + ':' + time.substr(12, 2));\n  } else {\n    return '';\n  }\n}\n\nfunction parseTimeUnix(time) {\n  let result = time;\n  let parts = time.replace(/ +/g, ' ').split(' ');\n  if (parts.length === 5) {\n    result = parts[4] + '-' + ('0' + ('JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'.indexOf(parts[1].toUpperCase()) / 3 + 1)).slice(-2) + '-' + ('0' + parts[2]).slice(-2) + ' ' + parts[3];\n  }\n  return result;\n}\n\n// --------------------------\n// PS - services\n// pass a comma separated string with services to check (mysql, apache, postgresql, ...)\n// this function gives an array back, if the services are running.\n\nfunction services(srv, callback) {\n\n  // fallback - if only callback is given\n  if (util.isFunction(srv) && !callback) {\n    callback = srv;\n    srv = '';\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (typeof srv !== 'string') {\n        if (callback) { callback([]); }\n        return resolve([]);\n      }\n\n      if (srv) {\n        let srvString = '';\n        srvString.__proto__.toLowerCase = util.stringToLower;\n        srvString.__proto__.replace = util.stringReplace;\n        srvString.__proto__.trim = util.stringTrim;\n\n        const s = util.sanitizeShellString(srv);\n        for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n          if (!(s[i] === undefined)) {\n            srvString = srvString + s[i];\n          }\n        }\n\n        srvString = srvString.trim().toLowerCase().replace(/, /g, '|').replace(/,+/g, '|');\n        if (srvString === '') {\n          srvString = '*';\n        }\n        if (util.isPrototypePolluted() && srvString !== '*') {\n          srvString = '------';\n        }\n        let srvs = srvString.split('|');\n        let result = [];\n        let dataSrv = [];\n        // let allSrv = [];\n\n        if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n          if ((_linux || _freebsd || _openbsd || _netbsd) && srvString === '*') {\n            try {\n              const tmpsrv = execSync('systemctl --type=service --no-legend 2> /dev/null').toString().split('\\n');\n              srvs = [];\n              for (const s of tmpsrv) {\n                const name = s.split('.service')[0];\n                if (name) {\n                  srvs.push(name);\n                }\n              }\n              srvString = srvs.join('|');\n            } catch (d) {\n              try {\n                srvString = '';\n                const tmpsrv = execSync('service --status-all 2> /dev/null').toString().split('\\n');\n                for (const s of tmpsrv) {\n                  const parts = s.split(']');\n                  if (parts.length === 2) {\n                    srvString += (srvString !== '' ? '|' : '') + parts[1].trim();\n                    // allSrv.push({ name: parts[1].trim(), running: parts[0].indexOf('+') > 0 });\n                  }\n                }\n                srvs = srvString.split('|');\n              } catch (e) {\n                try {\n                  const srvStr = execSync('ls /etc/init.d/ -m 2> /dev/null').toString().split('\\n').join('');\n                  srvString = '';\n                  if (srvStr) {\n                    const tmpsrv = srvStr.split(',');\n                    for (const s of tmpsrv) {\n                      const name = s.trim();\n                      if (name) {\n                        srvString += (srvString !== '' ? '|' : '') + name;\n                        // allSrv.push({ name: name, running: null });\n                      }\n                    }\n                    srvs = srvString.split('|');\n                  }\n                } catch (f) {\n                  // allSrv = [];\n                  srvString = '';\n                  srvs = [];\n                }\n              }\n            }\n          }\n          if ((_darwin) && srvString === '*') { // service enumeration not yet suported on mac OS\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n          let args = (_darwin) ? ['-caxo', 'pcpu,pmem,pid,command'] : ['-axo', 'pcpu,pmem,pid,command'];\n          if (srvString !== '' && srvs.length > 0) {\n            util.execSafe('ps', args).then((stdout) => {\n              if (stdout) {\n                let lines = stdout.replace(/ +/g, ' ').replace(/,+/g, '.').split('\\n');\n                srvs.forEach(function (srv) {\n                  let ps;\n                  if (_darwin) {\n                    ps = lines.filter(function (e) {\n                      return (e.toLowerCase().indexOf(srv) !== -1);\n                    });\n\n                  } else {\n                    ps = lines.filter(function (e) {\n                      return (e.toLowerCase().indexOf(' ' + srv + ':') !== -1) || (e.toLowerCase().indexOf('/' + srv) !== -1);\n                    });\n                  }\n                  // let singleSrv = allSrv.filter(item => { return item.name === srv; });\n                  const pids = [];\n                  for (const p of ps) {\n                    const pid = p.trim().split(' ')[2];\n                    if (pid) {\n                      pids.push(parseInt(pid, 10));\n                    }\n                  }\n                  result.push({\n                    name: srv,\n                    //                    running: (allSrv.length && singleSrv.length && singleSrv[0].running !== null ? singleSrv[0].running : ps.length > 0),\n                    running: ps.length > 0,\n                    startmode: '',\n                    pids: pids,\n                    cpu: parseFloat((ps.reduce(function (pv, cv) {\n                      return pv + parseFloat(cv.trim().split(' ')[0]);\n                    }, 0)).toFixed(2)),\n                    mem: parseFloat((ps.reduce(function (pv, cv) {\n                      return pv + parseFloat(cv.trim().split(' ')[1]);\n                    }, 0)).toFixed(2))\n                  });\n                });\n                if (_linux) {\n                  // calc process_cpu - ps is not accurate in linux!\n                  let cmd = 'cat /proc/stat | grep \"cpu \"';\n                  for (let i in result) {\n                    for (let j in result[i].pids) {\n                      cmd += (';cat /proc/' + result[i].pids[j] + '/stat');\n                    }\n                  }\n                  exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                    let curr_processes = stdout.toString().split('\\n');\n\n                    // first line (all - /proc/stat)\n                    let all = parseProcStat(curr_processes.shift());\n\n                    // process\n                    let list_new = {};\n                    let resultProcess = {};\n                    for (let i = 0; i < curr_processes.length; i++) {\n                      resultProcess = calcProcStatLinux(curr_processes[i], all, _services_cpu);\n\n                      if (resultProcess.pid) {\n                        let listPos = -1;\n                        for (let i in result) {\n                          for (let j in result[i].pids) {\n                            if (parseInt(result[i].pids[j]) === parseInt(resultProcess.pid)) {\n                              listPos = i;\n                            }\n                          }\n                        }\n                        if (listPos >= 0) {\n                          result[listPos].cpu += resultProcess.cpuu + resultProcess.cpus;\n                        }\n\n                        // save new values\n                        list_new[resultProcess.pid] = {\n                          cpuu: resultProcess.cpuu,\n                          cpus: resultProcess.cpus,\n                          utime: resultProcess.utime,\n                          stime: resultProcess.stime,\n                          cutime: resultProcess.cutime,\n                          cstime: resultProcess.cstime\n                        };\n                      }\n                    }\n\n                    // store old values\n                    _services_cpu.all = all;\n                    // _services_cpu.list = list_new;\n                    _services_cpu.list = Object.assign({}, list_new);\n                    _services_cpu.ms = Date.now() - _services_cpu.ms;\n                    // _services_cpu.result = result;\n                    _services_cpu.result = Object.assign({}, result);\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  });\n                } else {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                }\n              } else {\n                args = ['-o', 'comm'];\n                util.execSafe('ps', args).then((stdout) => {\n                  if (stdout) {\n                    let lines = stdout.replace(/ +/g, ' ').replace(/,+/g, '.').split('\\n');\n                    srvs.forEach(function (srv) {\n                      let ps = lines.filter(function (e) {\n                        return e.indexOf(srv) !== -1;\n                      });\n                      result.push({\n                        name: srv,\n                        running: ps.length > 0,\n                        startmode: '',\n                        cpu: 0,\n                        mem: 0\n                      });\n                    });\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  } else {\n                    srvs.forEach(function (srv) {\n                      result.push({\n                        name: srv,\n                        running: false,\n                        startmode: '',\n                        cpu: 0,\n                        mem: 0\n                      });\n                    });\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  }\n                });\n              }\n            });\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        }\n        if (_windows) {\n          try {\n            util.wmic('service get /value').then((stdout, error) => {\n              if (!error) {\n                let serviceSections = stdout.split(/\\n\\s*\\n/);\n                for (let i = 0; i < serviceSections.length; i++) {\n                  if (serviceSections[i].trim() !== '') {\n                    let lines = serviceSections[i].trim().split('\\r\\n');\n                    let srvName = util.getValue(lines, 'Name', '=', true).toLowerCase();\n                    let srvCaption = util.getValue(lines, 'Caption', '=', true).toLowerCase();\n                    let started = util.getValue(lines, 'Started', '=', true);\n                    let startMode = util.getValue(lines, 'StartMode', '=', true);\n                    let pid = util.getValue(lines, 'ProcessId', '=', true);\n                    if (srvString === '*' || srvs.indexOf(srvName) >= 0 || srvs.indexOf(srvCaption) >= 0) {\n                      result.push({\n                        name: srvName,\n                        running: (started === 'TRUE'),\n                        startmode: startMode,\n                        pids: [pid],\n                        cpu: 0,\n                        mem: 0\n                      });\n                      dataSrv.push(srvName);\n                      dataSrv.push(srvCaption);\n                    }\n                  }\n                }\n                if (srvString !== '*') {\n                  let srvsMissing = srvs.filter(function (e) {\n                    return dataSrv.indexOf(e) === -1;\n                  });\n                  srvsMissing.forEach(function (srvName) {\n                    result.push({\n                      name: srvName,\n                      running: false,\n                      startmode: '',\n                      pids: [],\n                      cpu: 0,\n                      mem: 0\n                    });\n                  });\n                }\n                if (callback) { callback(result); }\n                resolve(result);\n              } else {\n                srvs.forEach(function (srvName) {\n                  result.push({\n                    name: srvName,\n                    running: false,\n                    startmode: '',\n                    cpu: 0,\n                    mem: 0\n                  });\n                });\n                if (callback) { callback(result); }\n                resolve(result);\n              }\n            });\n          } catch (e) {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        }\n      } else {\n        if (callback) { callback([]); }\n        resolve([]);\n      }\n    });\n  });\n}\n\nexports.services = services;\n\nfunction parseProcStat(line) {\n  let parts = line.replace(/ +/g, ' ').split(' ');\n  let user = (parts.length >= 2 ? parseInt(parts[1]) : 0);\n  let nice = (parts.length >= 3 ? parseInt(parts[2]) : 0);\n  let system = (parts.length >= 4 ? parseInt(parts[3]) : 0);\n  let idle = (parts.length >= 5 ? parseInt(parts[4]) : 0);\n  let iowait = (parts.length >= 6 ? parseInt(parts[5]) : 0);\n  let irq = (parts.length >= 7 ? parseInt(parts[6]) : 0);\n  let softirq = (parts.length >= 8 ? parseInt(parts[7]) : 0);\n  let steal = (parts.length >= 9 ? parseInt(parts[8]) : 0);\n  let guest = (parts.length >= 10 ? parseInt(parts[9]) : 0);\n  let guest_nice = (parts.length >= 11 ? parseInt(parts[10]) : 0);\n  return user + nice + system + idle + iowait + irq + softirq + steal + guest + guest_nice;\n}\n\nfunction calcProcStatLinux(line, all, _cpu_old) {\n  let statparts = line.replace(/ +/g, ' ').split(')');\n  if (statparts.length >= 2) {\n    let parts = statparts[1].split(' ');\n    if (parts.length >= 16) {\n      let pid = parseInt(statparts[0].split(' ')[0]);\n      let utime = parseInt(parts[12]);\n      let stime = parseInt(parts[13]);\n      let cutime = parseInt(parts[14]);\n      let cstime = parseInt(parts[15]);\n\n      // calc\n      let cpuu = 0;\n      let cpus = 0;\n      if (_cpu_old.all > 0 && _cpu_old.list[pid]) {\n        cpuu = (utime + cutime - _cpu_old.list[pid].utime - _cpu_old.list[pid].cutime) / (all - _cpu_old.all) * 100; // user\n        cpus = (stime + cstime - _cpu_old.list[pid].stime - _cpu_old.list[pid].cstime) / (all - _cpu_old.all) * 100; // system\n      } else {\n        cpuu = (utime + cutime) / (all) * 100; // user\n        cpus = (stime + cstime) / (all) * 100; // system\n      }\n      return {\n        pid: pid,\n        utime: utime,\n        stime: stime,\n        cutime: cutime,\n        cstime: cstime,\n        cpuu: cpuu,\n        cpus: cpus\n      };\n    } else {\n      return {\n        pid: 0,\n        utime: 0,\n        stime: 0,\n        cutime: 0,\n        cstime: 0,\n        cpuu: 0,\n        cpus: 0\n      };\n    }\n  } else {\n    return {\n      pid: 0,\n      utime: 0,\n      stime: 0,\n      cutime: 0,\n      cstime: 0,\n      cpuu: 0,\n      cpus: 0\n    };\n  }\n}\n\nfunction calcProcStatWin(procStat, all, _cpu_old) {\n  // calc\n  let cpuu = 0;\n  let cpus = 0;\n  if (_cpu_old.all > 0 && _cpu_old.list[procStat.pid]) {\n    cpuu = (procStat.utime - _cpu_old.list[procStat.pid].utime) / (all - _cpu_old.all) * 100; // user\n    cpus = (procStat.stime - _cpu_old.list[procStat.pid].stime) / (all - _cpu_old.all) * 100; // system\n  } else {\n    cpuu = (procStat.utime) / (all) * 100; // user\n    cpus = (procStat.stime) / (all) * 100; // system\n  }\n  return {\n    pid: procStat.pid,\n    utime: cpuu > 0 ? procStat.utime : 0,\n    stime: cpus > 0 ? procStat.stime : 0,\n    cpuu: cpuu > 0 ? cpuu : 0,\n    cpus: cpus > 0 ? cpus : 0\n  };\n}\n\n\n\n// --------------------------\n// running processes\n\nfunction processes(callback) {\n\n  let parsedhead = [];\n\n  function getName(command) {\n    command = command || '';\n    let result = command.split(' ')[0];\n    if (result.substr(-1) === ':') {\n      result = result.substr(0, result.length - 1);\n    }\n    if (result.substr(0, 1) !== '[') {\n      let parts = result.split('/');\n      if (isNaN(parseInt(parts[parts.length - 1]))) {\n        result = parts[parts.length - 1];\n      } else {\n        result = parts[0];\n      }\n    }\n    return result;\n  }\n\n  function parseLine(line) {\n\n    let offset = 0;\n    let offset2 = 0;\n\n    function checkColumn(i) {\n      offset = offset2;\n      if (parsedhead[i]) {\n        offset2 = line.substring(parsedhead[i].to + offset, 10000).indexOf(' ');\n      } else {\n        offset2 = 10000;\n      }\n    }\n\n    checkColumn(0);\n    const pid = parseInt(line.substring(parsedhead[0].from + offset, parsedhead[0].to + offset2));\n    checkColumn(1);\n    const ppid = parseInt(line.substring(parsedhead[1].from + offset, parsedhead[1].to + offset2));\n    checkColumn(2);\n    const cpu = parseFloat(line.substring(parsedhead[2].from + offset, parsedhead[2].to + offset2).replace(/,/g, '.'));\n    checkColumn(3);\n    const mem = parseFloat(line.substring(parsedhead[3].from + offset, parsedhead[3].to + offset2).replace(/,/g, '.'));\n    checkColumn(4);\n    const priority = parseInt(line.substring(parsedhead[4].from + offset, parsedhead[4].to + offset2));\n    checkColumn(5);\n    const vsz = parseInt(line.substring(parsedhead[5].from + offset, parsedhead[5].to + offset2));\n    checkColumn(6);\n    const rss = parseInt(line.substring(parsedhead[6].from + offset, parsedhead[6].to + offset2));\n    checkColumn(7);\n    const nice = parseInt(line.substring(parsedhead[7].from + offset, parsedhead[7].to + offset2)) || 0;\n    checkColumn(8);\n    const started = parseTimeUnix(line.substring(parsedhead[8].from + offset, parsedhead[8].to + offset2).trim());\n    checkColumn(9);\n    let state = line.substring(parsedhead[9].from + offset, parsedhead[9].to + offset2).trim();\n    state = (state[0] === 'R' ? 'running' : (state[0] === 'S' ? 'sleeping' : (state[0] === 'T' ? 'stopped' : (state[0] === 'W' ? 'paging' : (state[0] === 'X' ? 'dead' : (state[0] === 'Z' ? 'zombie' : ((state[0] === 'D' || state[0] === 'U') ? 'blocked' : 'unknown')))))));\n    checkColumn(10);\n    let tty = line.substring(parsedhead[10].from + offset, parsedhead[10].to + offset2).trim();\n    if (tty === '?' || tty === '??') { tty = ''; }\n    checkColumn(11);\n    const user = line.substring(parsedhead[11].from + offset, parsedhead[11].to + offset2).trim();\n    checkColumn(12);\n    let cmdPath = '';\n    let command = '';\n    let params = '';\n    let fullcommand = line.substring(parsedhead[12].from + offset, parsedhead[12].to + offset2).trim();\n    if (fullcommand.substr(fullcommand.length - 1) === ']') { fullcommand = fullcommand.slice(0, -1); }\n    if (fullcommand.substr(0, 1) === '[') { command = fullcommand.substring(1); }\n    else {\n      // try to figure out where parameter starts\n      let firstParamPos = fullcommand.indexOf(' -');\n      let firstParamPathPos = fullcommand.indexOf(' /');\n      firstParamPos = (firstParamPos >= 0 ? firstParamPos : 10000);\n      firstParamPathPos = (firstParamPathPos >= 0 ? firstParamPathPos : 10000);\n      const firstPos = Math.min(firstParamPos, firstParamPathPos);\n      let tmpCommand = fullcommand.substr(0, firstPos);\n      const tmpParams = fullcommand.substr(firstPos);\n      const lastSlashPos = tmpCommand.lastIndexOf('/');\n      if (lastSlashPos >= 0) {\n        cmdPath = tmpCommand.substr(0, lastSlashPos);\n        tmpCommand = tmpCommand.substr(lastSlashPos + 1);\n      }\n\n      if (firstPos === 10000 && tmpCommand.indexOf(' ') > -1) {\n        const parts = tmpCommand.split(' ');\n        if (fs.existsSync(path.join(cmdPath, parts[0]))) {\n          command = parts.shift();\n          params = (parts.join(' ') + ' ' + tmpParams).trim();\n        } else {\n          command = tmpCommand.trim();\n          params = tmpParams.trim();\n        }\n      } else {\n        command = tmpCommand.trim();\n        params = tmpParams.trim();\n      }\n    }\n\n    return ({\n      pid: pid,\n      parentPid: ppid,\n      name: _linux ? getName(command) : command,\n      cpu: cpu,\n      cpuu: 0,\n      cpus: 0,\n      mem: mem,\n      priority: priority,\n      memVsz: vsz,\n      memRss: rss,\n      nice: nice,\n      started: started,\n      state: state,\n      tty: tty,\n      user: user,\n      command: command,\n      params: params,\n      path: cmdPath\n    });\n  }\n\n  function parseProcesses(lines) {\n    let result = [];\n    if (lines.length > 1) {\n      let head = lines[0];\n      parsedhead = util.parseHead(head, 8);\n      lines.shift();\n      lines.forEach(function (line) {\n        if (line.trim() !== '') {\n          result.push(parseLine(line));\n        }\n      });\n    }\n    return result;\n  }\n  function parseProcesses2(lines) {\n\n    function formatDateTime(time) {\n      const month = ('0' + (time.getMonth() + 1).toString()).substr(-2);\n      const year = time.getFullYear().toString();\n      const day = ('0' + time.getDay().toString()).substr(-2);\n      const hours = time.getHours().toString();\n      const mins = time.getMinutes().toString();\n      const secs = ('0' + time.getSeconds().toString()).substr(-2);\n\n      return (year + '-' + month + '-' + day + ' ' + hours + ':' + mins + ':' + secs);\n    }\n\n    let result = [];\n    lines.forEach(function (line) {\n      if (line.trim() !== '') {\n        line = line.trim().replace(/ +/g, ' ').replace(/,+/g, '.');\n        const parts = line.split(' ');\n        const command = parts.slice(9).join(' ');\n        const pmem = parseFloat((1.0 * parseInt(parts[3]) * 1024 / os.totalmem()).toFixed(1));\n        const elapsed_parts = parts[5].split(':');\n        const started = formatDateTime(new Date(Date.now() - (elapsed_parts.length > 1 ? (elapsed_parts[0] * 60 + elapsed_parts[1]) * 1000 : elapsed_parts[0] * 1000)));\n\n        result.push({\n          pid: parseInt(parts[0]),\n          parentPid: parseInt(parts[1]),\n          name: getName(command),\n          cpu: 0,\n          cpuu: 0,\n          cpus: 0,\n          mem: pmem,\n          priority: 0,\n          memVsz: parseInt(parts[2]),\n          memRss: parseInt(parts[3]),\n          nice: parseInt(parts[4]),\n          started: started,\n          state: (parts[6] === 'R' ? 'running' : (parts[6] === 'S' ? 'sleeping' : (parts[6] === 'T' ? 'stopped' : (parts[6] === 'W' ? 'paging' : (parts[6] === 'X' ? 'dead' : (parts[6] === 'Z' ? 'zombie' : ((parts[6] === 'D' || parts[6] === 'U') ? 'blocked' : 'unknown'))))))),\n          tty: parts[7],\n          user: parts[8],\n          command: command\n        });\n      }\n    });\n    return result;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        all: 0,\n        running: 0,\n        blocked: 0,\n        sleeping: 0,\n        unknown: 0,\n        list: []\n      };\n\n      let cmd = '';\n\n      if ((_processes_cpu.ms && Date.now() - _processes_cpu.ms >= 500) || _processes_cpu.ms === 0) {\n        if (_linux || _freebsd || _openbsd || _netbsd || _darwin || _sunos) {\n          if (_linux) { cmd = 'export LC_ALL=C; ps -axo pid:11,ppid:11,pcpu:6,pmem:6,pri:5,vsz:11,rss:11,ni:5,lstart:30,state:5,tty:15,user:20,command; unset LC_ALL'; }\n          if (_freebsd || _openbsd || _netbsd) { cmd = 'export LC_ALL=C; ps -axo pid,ppid,pcpu,pmem,pri,vsz,rss,ni,lstart,state,tty,user,command; unset LC_ALL'; }\n          if (_darwin) { cmd = 'export LC_ALL=C; ps -axo pid,ppid,pcpu,pmem,pri,vsz,rss,nice,lstart,state,tty,user,command -r; unset LC_ALL'; }\n          if (_sunos) { cmd = 'ps -Ao pid,ppid,pcpu,pmem,pri,vsz,rss,nice,stime,s,tty,user,comm'; }\n          exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n            if (!error && stdout.toString().trim()) {\n              result.list = (parseProcesses(stdout.toString().split('\\n'))).slice();\n              result.all = result.list.length;\n              result.running = result.list.filter(function (e) {\n                return e.state === 'running';\n              }).length;\n              result.blocked = result.list.filter(function (e) {\n                return e.state === 'blocked';\n              }).length;\n              result.sleeping = result.list.filter(function (e) {\n                return e.state === 'sleeping';\n              }).length;\n\n              if (_linux) {\n                // calc process_cpu - ps is not accurate in linux!\n                cmd = 'cat /proc/stat | grep \"cpu \"';\n                for (let i = 0; i < result.list.length; i++) {\n                  cmd += (';cat /proc/' + result.list[i].pid + '/stat');\n                }\n                exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                  let curr_processes = stdout.toString().split('\\n');\n\n                  // first line (all - /proc/stat)\n                  let all = parseProcStat(curr_processes.shift());\n\n                  // process\n                  let list_new = {};\n                  let resultProcess = {};\n                  for (let i = 0; i < curr_processes.length; i++) {\n                    resultProcess = calcProcStatLinux(curr_processes[i], all, _processes_cpu);\n\n                    if (resultProcess.pid) {\n\n                      // store pcpu in outer array\n                      let listPos = result.list.map(function (e) { return e.pid; }).indexOf(resultProcess.pid);\n                      if (listPos >= 0) {\n                        result.list[listPos].cpu = resultProcess.cpuu + resultProcess.cpus;\n                        result.list[listPos].cpuu = resultProcess.cpuu;\n                        result.list[listPos].cpus = resultProcess.cpus;\n                      }\n\n                      // save new values\n                      list_new[resultProcess.pid] = {\n                        cpuu: resultProcess.cpuu,\n                        cpus: resultProcess.cpus,\n                        utime: resultProcess.utime,\n                        stime: resultProcess.stime,\n                        cutime: resultProcess.cutime,\n                        cstime: resultProcess.cstime\n                      };\n                    }\n                  }\n\n                  // store old values\n                  _processes_cpu.all = all;\n                  // _processes_cpu.list = list_new;\n                  _processes_cpu.list = Object.assign({}, list_new);\n                  _processes_cpu.ms = Date.now() - _processes_cpu.ms;\n                  // _processes_cpu.result = result;\n                  _processes_cpu.result = Object.assign({}, result);\n                  if (callback) { callback(result); }\n                  resolve(result);\n                });\n              } else {\n                if (callback) { callback(result); }\n                resolve(result);\n              }\n            } else {\n              cmd = 'ps -o pid,ppid,vsz,rss,nice,etime,stat,tty,user,comm';\n              if (_sunos) {\n                cmd = 'ps -o pid,ppid,vsz,rss,nice,etime,s,tty,user,comm';\n              }\n              exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  lines.shift();\n\n                  result.list = parseProcesses2(lines).slice();\n                  result.all = result.list.length;\n                  result.running = result.list.filter(function (e) {\n                    return e.state === 'running';\n                  }).length;\n                  result.blocked = result.list.filter(function (e) {\n                    return e.state === 'blocked';\n                  }).length;\n                  result.sleeping = result.list.filter(function (e) {\n                    return e.state === 'sleeping';\n                  }).length;\n                  if (callback) { callback(result); }\n                  resolve(result);\n                } else {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                }\n              });\n            }\n          });\n        } else if (_windows) {\n          try {\n            util.wmic('process get /value').then((stdout, error) => {\n              if (!error) {\n                let processSections = stdout.split(/\\n\\s*\\n/);\n                let procs = [];\n                let procStats = [];\n                let list_new = {};\n                let allcpuu = _processes_cpu.all_utime;\n                let allcpus = _processes_cpu.all_stime;\n                for (let i = 0; i < processSections.length; i++) {\n                  if (processSections[i].trim() !== '') {\n                    let lines = processSections[i].trim().split('\\r\\n');\n                    let pid = parseInt(util.getValue(lines, 'ProcessId', '=', true), 10);\n                    let parentPid = parseInt(util.getValue(lines, 'ParentProcessId', '=', true), 10);\n                    let statusValue = util.getValue(lines, 'ExecutionState', '=');\n                    let name = util.getValue(lines, 'Caption', '=', true);\n                    let commandLine = util.getValue(lines, 'CommandLine', '=', true);\n                    let commandPath = util.getValue(lines, 'ExecutablePath', '=', true);\n                    let utime = parseInt(util.getValue(lines, 'UserModeTime', '=', true), 10);\n                    let stime = parseInt(util.getValue(lines, 'KernelModeTime', '=', true), 10);\n                    let memw = parseInt(util.getValue(lines, 'WorkingSetSize', '=', true), 10);\n                    allcpuu = allcpuu + utime;\n                    allcpus = allcpus + stime;\n                    result.all++;\n                    if (!statusValue) { result.unknown++; }\n                    if (statusValue === '3') { result.running++; }\n                    if (statusValue === '4' || statusValue === '5') { result.blocked++; }\n\n                    procStats.push({\n                      pid: pid,\n                      utime: utime,\n                      stime: stime,\n                      cpu: 0,\n                      cpuu: 0,\n                      cpus: 0,\n                    });\n                    procs.push({\n                      pid: pid,\n                      parentPid: parentPid,\n                      name: name,\n                      cpu: 0,\n                      cpuu: 0,\n                      cpus: 0,\n                      mem: memw / os.totalmem() * 100,\n                      priority: parseInt(util.getValue(lines, 'Priority', '=', true), 10),\n                      memVsz: parseInt(util.getValue(lines, 'PageFileUsage', '=', true), 10),\n                      memRss: Math.floor(parseInt(util.getValue(lines, 'WorkingSetSize', '=', true), 10) / 1024),\n                      nice: 0,\n                      started: parseTimeWin(util.getValue(lines, 'CreationDate', '=', true)),\n                      state: (!statusValue ? _winStatusValues[0] : _winStatusValues[statusValue]),\n                      tty: '',\n                      user: '',\n                      command: commandLine || name,\n                      path: commandPath,\n                      params: ''\n                    });\n                  }\n                }\n                result.sleeping = result.all - result.running - result.blocked - result.unknown;\n                result.list = procs;\n                for (let i = 0; i < procStats.length; i++) {\n                  let resultProcess = calcProcStatWin(procStats[i], allcpuu + allcpus, _processes_cpu);\n\n                  // store pcpu in outer array\n                  let listPos = result.list.map(function (e) { return e.pid; }).indexOf(resultProcess.pid);\n                  if (listPos >= 0) {\n                    result.list[listPos].cpu = resultProcess.cpuu + resultProcess.cpus;\n                    result.list[listPos].cpuu = resultProcess.cpuu;\n                    result.list[listPos].cpus = resultProcess.cpus;\n                  }\n\n                  // save new values\n                  list_new[resultProcess.pid] = {\n                    cpuu: resultProcess.cpuu,\n                    cpus: resultProcess.cpus,\n                    utime: resultProcess.utime,\n                    stime: resultProcess.stime\n                  };\n                }\n                // store old values\n                _processes_cpu.all = allcpuu + allcpus;\n                _processes_cpu.all_utime = allcpuu;\n                _processes_cpu.all_stime = allcpus;\n                // _processes_cpu.list = list_new;\n                _processes_cpu.list = Object.assign({}, list_new);\n                _processes_cpu.ms = Date.now() - _processes_cpu.ms;\n                // _processes_cpu.result = result;\n                _processes_cpu.result = Object.assign({}, result);\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          } catch (e) {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      } else {\n        if (callback) { callback(_processes_cpu.result); }\n        resolve(_processes_cpu.result);\n      }\n    });\n  });\n}\n\nexports.processes = processes;\n\n// --------------------------\n// PS - process load\n// get detailed information about a certain process\n// (PID, CPU-Usage %, Mem-Usage %)\n\nfunction processLoad(proc, callback) {\n\n  // fallback - if only callback is given\n  if (util.isFunction(proc) && !callback) {\n    callback = proc;\n    proc = '';\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      proc = proc || '';\n\n      if (typeof proc !== 'string') {\n        if (callback) { callback([]); }\n        return resolve([]);\n      }\n\n      let processesString = '';\n      processesString.__proto__.toLowerCase = util.stringToLower;\n      processesString.__proto__.replace = util.stringReplace;\n      processesString.__proto__.trim = util.stringTrim;\n\n      const s = util.sanitizeShellString(proc);\n      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n        if (!(s[i] === undefined)) {\n          processesString = processesString + s[i];\n        }\n      }\n\n      processesString = processesString.trim().toLowerCase().replace(/, /g, '|').replace(/,+/g, '|');\n      if (processesString === '') {\n        processesString = '*';\n      }\n      if (util.isPrototypePolluted() && processesString !== '*') {\n        processesString = '------';\n      }\n      let processes = processesString.split('|');\n      let result = [];\n\n      const procSanitized = util.isPrototypePolluted() ? '' : util.sanitizeShellString(proc);\n\n      // from here new\n      // let result = {\n      //   'proc': procSanitized,\n      //   'pid': null,\n      //   'cpu': 0,\n      //   'mem': 0\n      // };\n      if (procSanitized && processes.length && processes[0] !== '------') {\n        if (_windows) {\n          try {\n            util.wmic('process get /value').then((stdout, error) => {\n              if (!error) {\n                let processSections = stdout.split(/\\n\\s*\\n/);\n                let procStats = [];\n                let list_new = {};\n                let allcpuu = _process_cpu.all_utime;\n                let allcpus = _process_cpu.all_stime;\n\n                // go through all processes\n                for (let i = 0; i < processSections.length; i++) {\n                  if (processSections[i].trim() !== '') {\n                    let lines = processSections[i].trim().split('\\r\\n');\n                    let pid = parseInt(util.getValue(lines, 'ProcessId', '=', true), 10);\n                    let name = util.getValue(lines, 'Caption', '=', true);\n                    let utime = parseInt(util.getValue(lines, 'UserModeTime', '=', true), 10);\n                    let stime = parseInt(util.getValue(lines, 'KernelModeTime', '=', true), 10);\n                    let mem = parseInt(util.getValue(lines, 'WorkingSetSize', '=', true), 10);\n                    allcpuu = allcpuu + utime;\n                    allcpus = allcpus + stime;\n\n                    procStats.push({\n                      pid: pid,\n                      name,\n                      utime: utime,\n                      stime: stime,\n                      cpu: 0,\n                      cpuu: 0,\n                      cpus: 0,\n                      mem\n                    });\n                    let pname = '';\n                    let inList = false;\n                    processes.forEach(function (proc) {\n                      // console.log(proc)\n                      // console.log(item)\n                      // inList = inList || item.name.toLowerCase() === proc.toLowerCase();\n                      if (name.toLowerCase().indexOf(proc.toLowerCase()) >= 0 && !inList) {\n                        inList = true;\n                        pname = proc;\n                      }\n                    });\n\n                    if (processesString === '*' || inList) {\n                      let processFound = false;\n                      result.forEach(function (item) {\n                        if (item.proc.toLowerCase() === pname.toLowerCase()) {\n                          item.pids.push(pid);\n                          item.mem += mem / os.totalmem() * 100;\n                          processFound = true;\n                        }\n                      });\n                      if (!processFound) {\n                        result.push({\n                          proc: pname,\n                          pid: pid,\n                          pids: [pid],\n                          cpu: 0,\n                          mem: mem / os.totalmem() * 100\n                        });\n                      }\n                    }\n                  }\n                }\n                // add missing processes\n                if (processesString !== '*') {\n                  let processesMissing = processes.filter(function (name) {\n                    // return procStats.filter(function(item) { return item.name.toLowerCase() === name }).length === 0;\n                    return procStats.filter(function (item) { return item.name.toLowerCase().indexOf(name) >= 0; }).length === 0;\n\n                  });\n                  processesMissing.forEach(function (procName) {\n                    result.push({\n                      proc: procName,\n                      pid: null,\n                      pids: [],\n                      cpu: 0,\n                      mem: 0\n                    });\n                  });\n                }\n\n                // calculate proc stats for each proc\n                for (let i = 0; i < procStats.length; i++) {\n                  let resultProcess = calcProcStatWin(procStats[i], allcpuu + allcpus, _process_cpu);\n\n                  let listPos = -1;\n                  for (let j = 0; j < result.length; j++) {\n                    if (result[j].pid === resultProcess.pid || result[j].pids.indexOf(resultProcess.pid) >= 0) { listPos = j; }\n                  }\n                  if (listPos >= 0) {\n                    result[listPos].cpu += resultProcess.cpuu + resultProcess.cpus;\n                  }\n\n                  // save new values\n                  list_new[resultProcess.pid] = {\n                    cpuu: resultProcess.cpuu,\n                    cpus: resultProcess.cpus,\n                    utime: resultProcess.utime,\n                    stime: resultProcess.stime\n                  };\n                }\n                // store old values\n                _process_cpu.all = allcpuu + allcpus;\n                _process_cpu.all_utime = allcpuu;\n                _process_cpu.all_stime = allcpus;\n                // _process_cpu.list = list_new;\n                _process_cpu.list = Object.assign({}, list_new);\n                _process_cpu.ms = Date.now() - _process_cpu.ms;\n                _process_cpu.result = JSON.parse(JSON.stringify(result));\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              }\n            });\n          } catch (e) {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        }\n\n        if (_darwin || _linux || _freebsd || _openbsd || _netbsd) {\n          const params = ['-axo', 'pid,pcpu,pmem,comm'];\n          util.execSafe('ps', params).then((stdout) => {\n            if (stdout) {\n              let procStats = [];\n              let lines = stdout.toString().split('\\n').filter(function (line) {\n                if (processesString === '*') { return true; }\n                if (line.toLowerCase().indexOf('grep') !== -1) { return false; } // remove this??\n                let found = false;\n                processes.forEach(function (item) {\n                  found = found || (line.toLowerCase().indexOf(item.toLowerCase()) >= 0);\n                });\n                return found;\n              });\n\n              lines.forEach(function (line) {\n                let data = line.trim().replace(/ +/g, ' ').split(' ');\n                if (data.length > 3) {\n                  procStats.push({\n                    name: data[3].substring(data[3].lastIndexOf('/') + 1),\n                    pid: parseInt(data[0]) || 0,\n                    cpu: parseFloat(data[1].replace(',', '.')),\n                    mem: parseFloat(data[2].replace(',', '.'))\n                  });\n                }\n              });\n\n              procStats.forEach(function (item) {\n                let listPos = -1;\n                let inList = false;\n                let name = '';\n                for (let j = 0; j < result.length; j++) {\n                  // if (result[j].proc.toLowerCase() === item.name.toLowerCase()) {\n                  // if (result[j].proc.toLowerCase().indexOf(item.name.toLowerCase()) >= 0) {\n                  if (item.name.toLowerCase().indexOf(result[j].proc.toLowerCase()) >= 0) {\n                    listPos = j;\n                  }\n                }\n                // console.log(listPos);\n                processes.forEach(function (proc) {\n                  // console.log(proc)\n                  // console.log(item)\n                  // inList = inList || item.name.toLowerCase() === proc.toLowerCase();\n                  if (item.name.toLowerCase().indexOf(proc.toLowerCase()) >= 0 && !inList) {\n                    inList = true;\n                    name = proc;\n                  }\n                });\n                // console.log(item);\n                // console.log(listPos);\n                if ((processesString === '*') || inList) {\n                  if (listPos < 0) {\n                    result.push({\n                      proc: name,\n                      pid: item.pid,\n                      pids: [item.pid],\n                      cpu: item.cpu,\n                      mem: item.mem\n                    });\n                  } else {\n                    result[listPos].pids.push(item.pid);\n                    result[listPos].cpu += item.cpu;\n                    result[listPos].mem += item.mem;\n                  }\n                }\n              });\n\n              if (processesString !== '*') {\n                // add missing processes\n                let processesMissing = processes.filter(function (name) {\n                  return procStats.filter(function (item) { return item.name.toLowerCase().indexOf(name) >= 0; }).length === 0;\n                });\n                processesMissing.forEach(function (procName) {\n                  result.push({\n                    proc: procName,\n                    pid: null,\n                    pids: [],\n                    cpu: 0,\n                    mem: 0\n                  });\n                });\n              }\n              if (_linux) {\n                // calc process_cpu - ps is not accurate in linux!\n                result.forEach(function (item) {\n                  item.cpu = 0;\n                });\n                let cmd = 'cat /proc/stat | grep \"cpu \"';\n                for (let i in result) {\n                  for (let j in result[i].pids) {\n                    cmd += (';cat /proc/' + result[i].pids[j] + '/stat');\n                  }\n                }\n                exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                  let curr_processes = stdout.toString().split('\\n');\n\n                  // first line (all - /proc/stat)\n                  let all = parseProcStat(curr_processes.shift());\n\n                  // process\n                  let list_new = {};\n                  let resultProcess = {};\n\n                  for (let i = 0; i < curr_processes.length; i++) {\n                    resultProcess = calcProcStatLinux(curr_processes[i], all, _process_cpu);\n\n                    if (resultProcess.pid) {\n\n                      // find result item\n                      let resultItemId = -1;\n                      for (let i in result) {\n                        if (result[i].pids.indexOf(resultProcess.pid) >= 0) {\n                          resultItemId = i;\n                        }\n                      }\n                      // store pcpu in outer result\n                      if (resultItemId >= 0) {\n                        result[resultItemId].cpu += resultProcess.cpuu + resultProcess.cpus;\n                      }\n\n                      // save new values\n                      list_new[resultProcess.pid] = {\n                        cpuu: resultProcess.cpuu,\n                        cpus: resultProcess.cpus,\n                        utime: resultProcess.utime,\n                        stime: resultProcess.stime,\n                        cutime: resultProcess.cutime,\n                        cstime: resultProcess.cstime\n                      };\n                    }\n                  }\n\n                  result.forEach(function (item) {\n                    item.cpu = Math.round(item.cpu * 100) / 100;\n                  });\n\n                  _process_cpu.all = all;\n                  // _process_cpu.list = list_new;\n                  _process_cpu.list = Object.assign({}, list_new);\n                  _process_cpu.ms = Date.now() - _process_cpu.ms;\n                  // _process_cpu.result = result;\n                  _process_cpu.result = Object.assign({}, result);\n                  if (callback) { callback(result); }\n                  resolve(result);\n                });\n              } else {\n                if (callback) { callback(result); }\n                resolve(result);\n              }\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        }\n      }\n    });\n  });\n}\n\nexports.processLoad = processLoad;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// system.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 2. System (Hardware, BIOS, Base Board)\n// ----------------------------------------------------------------------------------\n\nconst fs = require('fs');\nconst os = require('os');\nconst util = require('./util');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst execPromise = util.promisify(require('child_process').exec);\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction system(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        manufacturer: '',\n        model: 'Computer',\n        version: '',\n        serial: '-',\n        uuid: '-',\n        sku: '-',\n        virtual: false\n      };\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t system 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          // if (!error) {\n          let lines = stdout.toString().split('\\n');\n          result.manufacturer = util.getValue(lines, 'manufacturer');\n          result.model = util.getValue(lines, 'product name');\n          result.version = util.getValue(lines, 'version');\n          result.serial = util.getValue(lines, 'serial number');\n          result.uuid = util.getValue(lines, 'uuid').toLowerCase();\n          result.sku = util.getValue(lines, 'sku number');\n          // }\n          // Non-Root values\n          const cmd = `echo -n \"product_name: \"; cat /sys/devices/virtual/dmi/id/product_name 2>/dev/null; echo;\n            echo -n \"product_serial: \"; cat /sys/devices/virtual/dmi/id/product_serial 2>/dev/null; echo;\n            echo -n \"product_uuid: \"; cat /sys/devices/virtual/dmi/id/product_uuid 2>/dev/null; echo;\n            echo -n \"product_version: \"; cat /sys/devices/virtual/dmi/id/product_version 2>/dev/null; echo;\n            echo -n \"sys_vendor: \"; cat /sys/devices/virtual/dmi/id/sys_vendor 2>/dev/null; echo;`;\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.manufacturer = result.manufacturer === '' ? util.getValue(lines, 'sys_vendor') : result.manufacturer;\n            result.model = result.model === '' ? util.getValue(lines, 'product_name') : result.model;\n            result.version = result.version === '' ? util.getValue(lines, 'product_version') : result.version;\n            result.serial = result.serial === '' ? util.getValue(lines, 'product_serial') : result.serial;\n            result.uuid = result.uuid === '' ? util.getValue(lines, 'product_uuid').toLowerCase() : result.uuid;\n          } catch (e) {\n            util.noop();\n          }\n          if (!result.serial || result.serial.toLowerCase().indexOf('o.e.m.') !== -1) { result.serial = '-'; }\n          if (!result.manufacturer || result.manufacturer.toLowerCase().indexOf('o.e.m.') !== -1) { result.manufacturer = ''; }\n          if (!result.model || result.model.toLowerCase().indexOf('o.e.m.') !== -1) { result.model = 'Computer'; }\n          if (!result.version || result.version.toLowerCase().indexOf('o.e.m.') !== -1) { result.version = ''; }\n          if (!result.sku || result.sku.toLowerCase().indexOf('o.e.m.') !== -1) { result.sku = '-'; }\n\n          // detect virtual (1)\n          if (result.model.toLowerCase() === 'virtualbox' || result.model.toLowerCase() === 'kvm' || result.model.toLowerCase() === 'virtual machine' || result.model.toLowerCase() === 'bochs' || result.model.toLowerCase().startsWith('vmware') || result.model.toLowerCase().startsWith('droplet')) {\n            result.virtual = true;\n            switch (result.model.toLowerCase()) {\n              case 'virtualbox':\n                result.virtualHost = 'VirtualBox';\n                break;\n              case 'vmware':\n                result.virtualHost = 'VMware';\n                break;\n              case 'kvm':\n                result.virtualHost = 'KVM';\n                break;\n              case 'bochs':\n                result.virtualHost = 'bochs';\n                break;\n            }\n          }\n          if (result.manufacturer.toLowerCase().startsWith('vmware') || result.manufacturer.toLowerCase() === 'xen') {\n            result.virtual = true;\n            switch (result.manufacturer.toLowerCase()) {\n              case 'vmware':\n                result.virtualHost = 'VMware';\n                break;\n              case 'xen':\n                result.virtualHost = 'Xen';\n                break;\n            }\n          }\n          if (!result.virtual) {\n            try {\n              const disksById = execSync('ls -1 /dev/disk/by-id/ 2>/dev/null').toString();\n              if (disksById.indexOf('_QEMU_') >= 0) {\n                result.virtual = true;\n                result.virtualHost = 'QEMU';\n              }\n              if (disksById.indexOf('_VBOX_') >= 0) {\n                result.virtual = true;\n                result.virtualHost = 'VirtualBox';\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (!result.virtual && util.linuxVersion().toLowerCase().indexOf('microsoft') >= 0) {\n            let versionStr = util.linuxVersion().toLowerCase();\n            versionStr = versionStr.split('-')[0].replace('#', '');\n            const version = parseInt(versionStr, 10) || null;\n            result.virtual = true;\n            result.manufacturer = 'Microsoft';\n            result.model = 'WSL';\n            result.version = version;\n          }\n          if ((_freebsd || _openbsd || _netbsd) && !result.virtualHost) {\n            try {\n              const procInfo = execSync('dmidecode -t 4');\n              const procLines = procInfo.toString().split('\\n');\n              const procManufacturer = util.getValue(procLines, 'manufacturer', ':', true);\n              switch (procManufacturer.toLowerCase()) {\n                case 'virtualbox':\n                  result.virtualHost = 'VirtualBox';\n                  break;\n                case 'vmware':\n                  result.virtualHost = 'VMware';\n                  break;\n                case 'kvm':\n                  result.virtualHost = 'KVM';\n                  break;\n                case 'bochs':\n                  result.virtualHost = 'bochs';\n                  break;\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          // detect docker\n          if (fs.existsSync('/.dockerenv') || fs.existsSync('/.dockerinit')) {\n            result.model = 'Docker Container';\n          }\n          try {\n            const stdout = execSync('dmesg 2>/dev/null | grep -iE \"virtual|hypervisor\" | grep -iE \"vmware|qemu|kvm|xen\" | grep -viE \"Nested Virtualization|/virtual/\"');\n            // detect virtual machines\n            let lines = stdout.toString().split('\\n');\n            if (lines.length > 0) {\n              if (result.model === 'Computer') { result.model = 'Virtual machine'; }\n              result.virtual = true;\n              if (stdout.toString().toLowerCase().indexOf('vmware') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'VMware';\n              }\n              if (stdout.toString().toLowerCase().indexOf('qemu') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'QEMU';\n              }\n              if (stdout.toString().toLowerCase().indexOf('xen') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'Xen';\n              }\n              if (stdout.toString().toLowerCase().indexOf('kvm') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'KVM';\n              }\n            }\n          } catch (e) {\n            util.noop();\n          }\n\n          if (result.manufacturer === '' && result.model === 'Computer' && result.version === '') {\n            // Check Raspberry Pi\n            fs.readFile('/proc/cpuinfo', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                result.model = util.getValue(lines, 'hardware', ':', true).toUpperCase();\n                result.version = util.getValue(lines, 'revision', ':', true).toLowerCase();\n                result.serial = util.getValue(lines, 'serial', ':', true);\n                const model = util.getValue(lines, 'model:', ':', true);\n                // reference values: https://elinux.org/RPi_HardwareHistory\n                // https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md\n                if ((result.model === 'BCM2835' || result.model === 'BCM2708' || result.model === 'BCM2709' || result.model === 'BCM2710' || result.model === 'BCM2711' || result.model === 'BCM2836' || result.model === 'BCM2837') && model.toLowerCase().indexOf('raspberry') >= 0) {\n                  const rPIRevision = util.decodePiCpuinfo(lines);\n                  result.model = rPIRevision.model;\n                  result.version = rPIRevision.revisionCode;\n                  result.manufacturer = 'Raspberry Pi Foundation';\n                  result.raspberry = {\n                    manufacturer: rPIRevision.manufacturer,\n                    processor: rPIRevision.processor,\n                    type: rPIRevision.type,\n                    revision: rPIRevision.revision\n                  };\n                }\n\n                // if (result.model === 'BCM2835' || result.model === 'BCM2708' || result.model === 'BCM2709' || result.model === 'BCM2835' || result.model === 'BCM2837') {\n\n\n                //   // Pi 4\n                //   if (['d03114'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 4 Model B';\n                //     result.version = result.version + ' - Rev. 1.4';\n                //   }\n                //   if (['b03112', 'c03112'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 4 Model B';\n                //     result.version = result.version + ' - Rev. 1.2';\n                //   }\n                //   if (['a03111', 'b03111', 'c03111'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 4 Model B';\n                //     result.version = result.version + ' - Rev. 1.1';\n                //   }\n                //   // Pi 3\n                //   if (['a02082', 'a22082', 'a32082', 'a52082'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 3 Model B';\n                //     result.version = result.version + ' - Rev. 1.2';\n                //   }\n                //   if (['a22083'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 3 Model B';\n                //     result.version = result.version + ' - Rev. 1.3';\n                //   }\n                //   if (['a020d3'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 3 Model B+';\n                //     result.version = result.version + ' - Rev. 1.3';\n                //   }\n                //   if (['9020e0'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 3 Model A+';\n                //     result.version = result.version + ' - Rev. 1.3';\n                //   }\n                //   // Pi 2 Model B\n                //   if (['a01040'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 2 Model B';\n                //     result.version = result.version + ' - Rev. 1.0';\n                //   }\n                //   if (['a01041', 'a21041'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 2 Model B';\n                //     result.version = result.version + ' - Rev. 1.1';\n                //   }\n                //   if (['a22042', 'a02042'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 2 Model B';\n                //     result.version = result.version + ' - Rev. 1.2';\n                //   }\n\n                //   // Compute Model\n                //   if (['a02100'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi CM3+';\n                //     result.version = result.version + ' - Rev 1.0';\n                //   }\n                //   if (['a020a0', 'a220a0'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi CM3';\n                //     result.version = result.version + ' - Rev 1.0';\n                //   }\n                //   if (['900061'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi CM';\n                //     result.version = result.version + ' - Rev 1.1';\n                //   }\n\n                //   // Pi Zero\n                //   if (['900092', '920092'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Zero';\n                //     result.version = result.version + ' - Rev 1.2';\n                //   }\n                //   if (['900093', '920093'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Zero';\n                //     result.version = result.version + ' - Rev 1.3';\n                //   }\n                //   if (['9000c1'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Zero W';\n                //     result.version = result.version + ' - Rev 1.1';\n                //   }\n\n                //   // A, B, A+ B+\n                //   if (['0002', '0003'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model B';\n                //     result.version = result.version + ' - Rev 1.0';\n                //   }\n                //   if (['0004', '0005', '0006', '000d', '000e', '000f'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model B';\n                //     result.version = result.version + ' - Rev 2.0';\n                //   }\n                //   if (['0007', '0008', '0009'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model A';\n                //     result.version = result.version + ' - Rev 2.0';\n                //   }\n                //   if (['0010'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model B+';\n                //     result.version = result.version + ' - Rev 1.0';\n                //   }\n                //   if (['0012'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model A+';\n                //     result.version = result.version + ' - Rev 1.0';\n                //   }\n                //   if (['0013', '900032'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model B+';\n                //     result.version = result.version + ' - Rev 1.2';\n                //   }\n                //   if (['0015', '900021'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model A+';\n                //     result.version = result.version + ' - Rev 1.1';\n                //   }\n                //   if (result.model.indexOf('Pi') !== -1 && result.version) {  // Pi, Pi Zero\n                //     result.manufacturer = 'Raspberry Pi Foundation';\n                //   }\n                // }\n              }\n              if (callback) { callback(result); }\n              resolve(result);\n            });\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        });\n      }\n      if (_darwin) {\n        exec('ioreg -c IOPlatformExpertDevice -d 2', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().replace(/[<>\"]/g, '').split('\\n');\n            result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n            result.model = util.getValue(lines, 'model', '=', true);\n            result.version = util.getValue(lines, 'version', '=', true);\n            result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n            result.uuid = util.getValue(lines, 'ioplatformuuid', '=', true).toLowerCase();\n            result.sku = util.getValue(lines, 'board-id', '=', true);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('csproduct get /value').then((stdout, error) => {\n            if (!error) {\n              // let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0)[0].trim().split(/\\s\\s+/);\n              let lines = stdout.split('\\r\\n');\n              result.manufacturer = util.getValue(lines, 'vendor', '=');\n              result.model = util.getValue(lines, 'name', '=');\n              result.version = util.getValue(lines, 'version', '=');\n              result.serial = util.getValue(lines, 'identifyingnumber', '=');\n              result.uuid = util.getValue(lines, 'uuid', '=').toLowerCase();\n              // detect virtual (1)\n              if (result.model.toLowerCase() === 'virtualbox' || result.model.toLowerCase() === 'kvm' || result.model.toLowerCase() === 'virtual machine' || result.model.toLowerCase() === 'bochs' || result.model.toLowerCase().startsWith('vmware')) {\n                result.virtual = true;\n                switch (result.model.toLowerCase()) {\n                  case 'virtualbox':\n                    result.virtualHost = 'VirtualBox';\n                    break;\n                  case 'vmware':\n                    result.virtualHost = 'VMware';\n                    break;\n                  case 'kvm':\n                    result.virtualHost = 'KVM';\n                    break;\n                  case 'bochs':\n                    result.virtualHost = 'bochs';\n                    break;\n                }\n              }\n              if (result.manufacturer.toLowerCase().startsWith('vmware') || result.manufacturer.toLowerCase() === 'xen') {\n                result.virtual = true;\n                switch (result.manufacturer.toLowerCase()) {\n                  case 'vmware':\n                    result.virtualHost = 'VMware';\n                    break;\n                  case 'xen':\n                    result.virtualHost = 'Xen';\n                    break;\n                }\n              }\n              util.wmic('/namespace:\\\\\\\\root\\\\wmi path MS_SystemInformation get /value').then((stdout, error) => {\n                if (!error) {\n                  let lines = stdout.split('\\r\\n');\n                  result.sku = util.getValue(lines, 'systemsku', '=');\n                }\n                if (!result.virtual) {\n                  util.wmic('bios get Version, SerialNumber, SMBIOSBIOSVersion').then((stdout, error) => {\n                    if (!error) {\n                      let lines = stdout.toString();\n                      if (lines.indexOf('VRTUAL') >= 0 || lines.indexOf('A M I ') >= 0 || lines.indexOf('VirtualBox') >= 0 || lines.indexOf('VMWare') >= 0 || lines.indexOf('Xen') >= 0) {\n                        result.virtual = true;\n                        if (lines.indexOf('VirtualBox') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'VirtualBox';\n                        }\n                        if (lines.indexOf('VMware') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'VMware';\n                        }\n                        if (lines.indexOf('Xen') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'Xen';\n                        }\n                        if (lines.indexOf('VRTUAL') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'Hyper-V';\n                        }\n                        if (lines.indexOf('A M I') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'Virtual PC';\n                        }\n                      }\n                      if (callback) { callback(result); }\n                      resolve(result);\n                    } else {\n                      if (callback) { callback(result); }\n                      resolve(result);\n                    }\n                  });\n                } else {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                }\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.system = system;\n\nfunction bios(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        vendor: '',\n        version: '',\n        releaseDate: '',\n        revision: '',\n      };\n      let cmd = '';\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        if (process.arch === 'arm') {\n          cmd = 'cat /proc/cpuinfo | grep Serial';\n        } else {\n          cmd = 'export LC_ALL=C; dmidecode -t bios 2>/dev/null; unset LC_ALL';\n        }\n        exec(cmd, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.vendor = util.getValue(lines, 'Vendor');\n          result.version = util.getValue(lines, 'Version');\n          let datetime = util.getValue(lines, 'Release Date');\n          result.releaseDate = util.parseDateTime(datetime).date;\n          result.revision = util.getValue(lines, 'BIOS Revision');\n          let language = util.getValue(lines, 'Currently Installed Language').split('|')[0];\n          if (language) {\n            result.language = language;\n          }\n          if (lines.length && stdout.toString().indexOf('Characteristics:') >= 0) {\n            const features = [];\n            lines.forEach(line => {\n              if (line.indexOf(' is supported') >= 0) {\n                const feature = line.split(' is supported')[0].trim();\n                features.push(feature);\n              }\n            });\n            result.features = features;\n          }\n          // Non-Root values\n          const cmd = `echo -n \"bios_date: \"; cat /sys/devices/virtual/dmi/id/bios_date 2>/dev/null; echo;\n            echo -n \"bios_vendor: \"; cat /sys/devices/virtual/dmi/id/bios_vendor 2>/dev/null; echo;\n            echo -n \"bios_version: \"; cat /sys/devices/virtual/dmi/id/bios_version 2>/dev/null; echo;`;\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.vendor = !result.vendor ? util.getValue(lines, 'bios_vendor') : result.vendor;\n            result.version = !result.version ? util.getValue(lines, 'bios_version') : result.version;\n            datetime = util.getValue(lines, 'bios_date');\n            result.releaseDate = !result.releaseDate ? util.parseDateTime(datetime).date : result.releaseDate;\n          } catch (e) {\n            util.noop();\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        result.vendor = 'Apple Inc.';\n        exec(\n          'system_profiler SPHardwareDataType -json', function (error, stdout) {\n            try {\n              const hardwareData = JSON.parse(stdout.toString());\n              if (hardwareData && hardwareData.SPHardwareDataType && hardwareData.SPHardwareDataType.length) {\n                let bootRomVersion = hardwareData.SPHardwareDataType[0].boot_rom_version;\n                bootRomVersion = bootRomVersion ? bootRomVersion.split('(')[0].trim() : null;\n                result.version = bootRomVersion;\n              }\n            } catch (e) {\n              util.noop();\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n      }\n      if (_sunos) {\n        result.vendor = 'Sun Microsystems';\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('bios get /value').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.toString().split('\\r\\n');\n              const description = util.getValue(lines, 'description', '=');\n              if (description.indexOf(' Version ') !== -1) {\n                // ... Phoenix ROM BIOS PLUS Version 1.10 A04\n                result.vendor = description.split(' Version ')[0].trim();\n                result.version = description.split(' Version ')[1].trim();\n              } else if (description.indexOf(' Ver: ') !== -1) {\n                // ... BIOS Date: 06/27/16 17:50:16 Ver: 1.4.5\n                result.vendor = util.getValue(lines, 'manufacturer', '=');\n                result.version = description.split(' Ver: ')[1].trim();\n              } else {\n                result.vendor = util.getValue(lines, 'manufacturer', '=');\n                result.version = util.getValue(lines, 'version', '=');\n              }\n              result.releaseDate = util.getValue(lines, 'releasedate', '=');\n              if (result.releaseDate.length >= 10) {\n                result.releaseDate = result.releaseDate.substr(0, 4) + '-' + result.releaseDate.substr(4, 2) + '-' + result.releaseDate.substr(6, 2);\n              }\n              result.revision = util.getValue(lines, 'buildnumber', '=');\n            }\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.bios = bios;\n\nfunction baseboard(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        manufacturer: '',\n        model: '',\n        version: '',\n        serial: '-',\n        assetTag: '-',\n        memMax: null,\n        memSlots: null\n      };\n      let cmd = '';\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        if (process.arch === 'arm') {\n          cmd = 'cat /proc/cpuinfo | grep Serial';\n          // 'BCM2709', 'BCM2835', 'BCM2708' -->\n        } else {\n          cmd = 'export LC_ALL=C; dmidecode -t 2 2>/dev/null; unset LC_ALL';\n        }\n        const workload = [];\n        workload.push(execPromise(cmd));\n        workload.push(execPromise('export LC_ALL=C; dmidecode -t memory 2>/dev/null'));\n        util.promiseAll(\n          workload\n        ).then(data => {\n          let lines = data.results[0] ? data.results[0].toString().split('\\n') : [''];\n          result.manufacturer = util.getValue(lines, 'Manufacturer');\n          result.model = util.getValue(lines, 'Product Name');\n          result.version = util.getValue(lines, 'Version');\n          result.serial = util.getValue(lines, 'Serial Number');\n          result.assetTag = util.getValue(lines, 'Asset Tag');\n          // Non-Root values\n          const cmd = `echo -n \"board_asset_tag: \"; cat /sys/devices/virtual/dmi/id/board_asset_tag 2>/dev/null; echo;\n            echo -n \"board_name: \"; cat /sys/devices/virtual/dmi/id/board_name 2>/dev/null; echo;\n            echo -n \"board_serial: \"; cat /sys/devices/virtual/dmi/id/board_serial 2>/dev/null; echo;\n            echo -n \"board_vendor: \"; cat /sys/devices/virtual/dmi/id/board_vendor 2>/dev/null; echo;\n            echo -n \"board_version: \"; cat /sys/devices/virtual/dmi/id/board_version 2>/dev/null; echo;`;\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.manufacturer = !result.manufacturer ? util.getValue(lines, 'board_vendor') : result.manufacturer;\n            result.model = !result.model ? util.getValue(lines, 'board_name') : result.model;\n            result.version = !result.version ? util.getValue(lines, 'board_version') : result.version;\n            result.serial = !result.serial ? util.getValue(lines, 'board_serial') : result.serial;\n            result.assetTag = !result.assetTag ? util.getValue(lines, 'board_asset_tag') : result.assetTag;\n          } catch (e) {\n            util.noop();\n          }\n          if (result.serial.toLowerCase().indexOf('o.e.m.') !== -1) { result.serial = '-'; }\n          if (result.assetTag.toLowerCase().indexOf('o.e.m.') !== -1) { result.assetTag = '-'; }\n\n          // mem\n          lines = data.results[1] ? data.results[1].toString().split('\\n') : [''];\n          result.memMax = util.toInt(util.getValue(lines, 'Maximum Capacity')) * 1024 * 1024 * 1024 || null;\n          result.memSlots = util.toInt(util.getValue(lines, 'Number Of Devices')) || null;\n\n          // raspberry\n          let linesRpi = '';\n          try {\n            linesRpi = fs.readFileSync('/proc/cpuinfo').toString().split('\\n');\n          } catch (e) {\n            util.noop();\n          }\n          const hardware = util.getValue(linesRpi, 'hardware');\n          if (hardware.startsWith('BCM')) {\n            const rpi = util.decodePiCpuinfo(linesRpi);\n            result.manufacturer = rpi.manufacturer;\n            result.model = 'Raspberry Pi';\n            result.serial = rpi.serial;\n            result.version = rpi.type + ' - ' + rpi.revision;\n            result.memMax = os.totalmem();\n            result.memSlots = 0;\n          }\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        const workload = [];\n        workload.push(execPromise('ioreg -c IOPlatformExpertDevice -d 2'));\n        workload.push(execPromise('system_profiler SPMemoryDataType'));\n        util.promiseAll(\n          workload\n        ).then(data => {\n          let lines = data.results[0] ? data.results[0].toString().replace(/[<>\"]/g, '').split('\\n') : [''];\n          result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n          result.model = util.getValue(lines, 'model', '=', true);\n          result.version = util.getValue(lines, 'version', '=', true);\n          result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n          result.assetTag = util.getValue(lines, 'board-id', '=', true);\n\n          // mem\n          let devices = data.results[1] ? data.results[1].toString().split('        BANK ') : [''];\n          if (devices.length === 1) {\n            devices = data.results[1] ? data.results[1].toString().split('        DIMM') : [''];\n          }\n          devices.shift();\n          result.memSlots = devices.length;\n\n          if (os.arch() === 'arm64') {\n            result.memSlots = 0;\n            result.memMax = os.totalmem();\n          }\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          const workload = [];\n          workload.push(util.wmic('baseboard get /value'));\n          workload.push(util.wmic('memphysical get MaxCapacity, MemoryDevices\t/value'));\n          util.promiseAll(\n            workload\n          ).then(data => {\n            let lines = data.results[0] ? data.results[0].toString().split('\\r\\n') : [''];\n\n            result.manufacturer = util.getValue(lines, 'manufacturer', '=');\n            result.model = util.getValue(lines, 'model', '=');\n            if (!result.model) {\n              result.model = util.getValue(lines, 'product', '=');\n            }\n            result.version = util.getValue(lines, 'version', '=');\n            result.serial = util.getValue(lines, 'serialnumber', '=');\n            result.assetTag = util.getValue(lines, 'partnumber', '=');\n            if (!result.assetTag) {\n              result.assetTag = util.getValue(lines, 'sku', '=');\n            }\n\n            // memphysical\n            lines = data.results[1] ? data.results[1].toString().split('\\r\\n') : [''];\n            result.memMax = util.toInt(util.getValue(lines, 'MaxCapacity', '=')) || null;\n            result.memSlots = util.toInt(util.getValue(lines, 'MemoryDevices', '=')) || null;\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.baseboard = baseboard;\n\nfunction chassis(callback) {\n  const chassisTypes = ['Other',\n    'Unknown',\n    'Desktop',\n    'Low Profile Desktop',\n    'Pizza Box',\n    'Mini Tower',\n    'Tower',\n    'Portable',\n    'Laptop',\n    'Notebook',\n    'Hand Held',\n    'Docking Station',\n    'All in One',\n    'Sub Notebook',\n    'Space-Saving',\n    'Lunch Box',\n    'Main System Chassis',\n    'Expansion Chassis',\n    'SubChassis',\n    'Bus Expansion Chassis',\n    'Peripheral Chassis',\n    'Storage Chassis',\n    'Rack Mount Chassis',\n    'Sealed-Case PC',\n    'Multi-System Chassis',\n    'Compact PCI',\n    'Advanced TCA',\n    'Blade',\n    'Blade Enclosure',\n    'Tablet',\n    'Convertible',\n    'Detachable',\n    'IoT Gateway ',\n    'Embedded PC',\n    'Mini PC',\n    'Stick PC',\n  ];\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        manufacturer: '',\n        model: '',\n        type: '',\n        version: '',\n        serial: '-',\n        assetTag: '-',\n        sku: '',\n      };\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        const cmd = `echo -n \"chassis_asset_tag: \"; cat /sys/devices/virtual/dmi/id/chassis_asset_tag 2>/dev/null; echo;\n            echo -n \"chassis_serial: \"; cat /sys/devices/virtual/dmi/id/chassis_serial 2>/dev/null; echo;\n            echo -n \"chassis_type: \"; cat /sys/devices/virtual/dmi/id/chassis_type 2>/dev/null; echo;\n            echo -n \"chassis_vendor: \"; cat /sys/devices/virtual/dmi/id/chassis_vendor 2>/dev/null; echo;\n            echo -n \"chassis_version: \"; cat /sys/devices/virtual/dmi/id/chassis_version 2>/dev/null; echo;`;\n        exec(cmd, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.manufacturer = util.getValue(lines, 'chassis_vendor');\n          const ctype = parseInt(util.getValue(lines, 'chassis_type').replace(/\\D/g, ''));\n          result.type = (ctype && !isNaN(ctype) && ctype < chassisTypes.length) ? chassisTypes[ctype - 1] : '';\n          result.version = util.getValue(lines, 'chassis_version');\n          result.serial = util.getValue(lines, 'chassis_serial');\n          result.assetTag = util.getValue(lines, 'chassis_asset_tag');\n          if (result.manufacturer.toLowerCase().indexOf('o.e.m.') !== -1) { result.manufacturer = '-'; }\n          if (result.version.toLowerCase().indexOf('o.e.m.') !== -1) { result.version = '-'; }\n          if (result.serial.toLowerCase().indexOf('o.e.m.') !== -1) { result.serial = '-'; }\n          if (result.assetTag.toLowerCase().indexOf('o.e.m.') !== -1) { result.assetTag = '-'; }\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('ioreg -c IOPlatformExpertDevice -d 2', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().replace(/[<>\"]/g, '').split('\\n');\n            result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n            result.model = util.getValue(lines, 'model', '=', true);\n            result.version = util.getValue(lines, 'version', '=', true);\n            result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n            result.assetTag = util.getValue(lines, 'board-id', '=', true);\n          }\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('path Win32_SystemEnclosure get /value').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.toString().split('\\r\\n');\n\n              result.manufacturer = util.getValue(lines, 'manufacturer', '=');\n              result.model = util.getValue(lines, 'model', '=');\n              const ctype = parseInt(util.getValue(lines, 'ChassisTypes', '=').replace(/\\D/g, ''));\n              result.type = (ctype && !isNaN(ctype) && ctype < chassisTypes.length) ? chassisTypes[ctype - 1] : '';\n              result.version = util.getValue(lines, 'version', '=');\n              result.serial = util.getValue(lines, 'serialnumber', '=');\n              result.assetTag = util.getValue(lines, 'partnumber', '=');\n              result.sku = util.getValue(lines, 'sku', '=');\n              if (result.manufacturer.toLowerCase().indexOf('o.e.m.') !== -1) { result.manufacturer = '-'; }\n              if (result.version.toLowerCase().indexOf('o.e.m.') !== -1) { result.version = '-'; }\n              if (result.serial.toLowerCase().indexOf('o.e.m.') !== -1) { result.serial = '-'; }\n              if (result.assetTag.toLowerCase().indexOf('o.e.m.') !== -1) { result.assetTag = '-'; }\n            }\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.chassis = chassis;\n\n","'use strict';\n// @ts-check\n// ==================================================================================\n// usb.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 16. usb\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\n// const execSync = require('child_process').execSync;\nconst util = require('./util');\n// const fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction getLinuxUsbType(type, name) {\n  let result = type;\n  const str = (name + ' ' + type).toLowerCase();\n  if (str.indexOf('camera') >= 0) { result = 'Camera'; }\n  else if (str.indexOf('hub') >= 0) { result = 'Hub'; }\n  else if (str.indexOf('keybrd') >= 0) { result = 'Keyboard'; }\n  else if (str.indexOf('keyboard') >= 0) { result = 'Keyboard'; }\n  else if (str.indexOf('mouse') >= 0) { result = 'Mouse'; }\n  else if (str.indexOf('stora') >= 0) { result = 'Storage'; }\n  else if (str.indexOf('mic') >= 0) { result = 'Microphone'; }\n  else if (str.indexOf('headset') >= 0) { result = 'Audio'; }\n  else if (str.indexOf('audio') >= 0) { result = 'Audio'; }\n\n  return result;\n}\n\nfunction parseLinuxUsb(usb) {\n  const result = {};\n  const lines = usb.split('\\n');\n  if (lines && lines.length && lines[0].indexOf('Device') >= 0) {\n    const parts = lines[0].split(' ');\n    result.bus = parseInt(parts[0], 10);\n    if (parts[2]) {\n      result.deviceId = parseInt(parts[2], 10);\n    } else {\n      result.deviceId = null;\n    }\n  } else {\n    result.bus = null;\n    result.deviceId = null;\n  }\n  const idVendor = util.getValue(lines, 'idVendor', ' ', true).trim();\n  let vendorParts = idVendor.split(' ');\n  vendorParts.shift();\n  const vendor = vendorParts.join(' ');\n\n  const idProduct = util.getValue(lines, 'idProduct', ' ', true).trim();\n  let productParts = idProduct.split(' ');\n  productParts.shift();\n  const product = productParts.join(' ');\n\n  const interfaceClass = util.getValue(lines, 'bInterfaceClass', ' ', true).trim();\n  let interfaceClassParts = interfaceClass.split(' ');\n  interfaceClassParts.shift();\n  const usbType = interfaceClassParts.join(' ');\n\n  const iManufacturer = util.getValue(lines, 'iManufacturer', ' ', true).trim();\n  let iManufacturerParts = iManufacturer.split(' ');\n  iManufacturerParts.shift();\n  const manufacturer = iManufacturerParts.join(' ');\n\n  result.id = (idVendor.startsWith('0x') ? idVendor.split(' ')[0].substr(2, 10) : '') + ':' + (idProduct.startsWith('0x') ? idProduct.split(' ')[0].substr(2, 10) : '');\n  result.name = product;\n  result.type = getLinuxUsbType(usbType, product);\n  result.removable = null;\n  result.vendor = vendor;\n  result.manufacturer = manufacturer;\n  result.maxPower = util.getValue(lines, 'MaxPower', ' ', true);\n  result.serialNumber = null;\n\n  return result;\n}\n\n// bus\n// deviceId\n// id\n// name(product)\n// type(bInterfaceClass)\n// removable / hotplug\n// vendor\n// manufacturer\n// maxpower(linux)\n\nfunction getDarwinUsbType(name) {\n  let result = '';\n  if (name.indexOf('camera') >= 0) { result = 'Camera'; }\n  else if (name.indexOf('touch bar') >= 0) { result = 'Touch Bar'; }\n  else if (name.indexOf('controller') >= 0) { result = 'Controller'; }\n  else if (name.indexOf('headset') >= 0) { result = 'Audio'; }\n  else if (name.indexOf('keyboard') >= 0) { result = 'Keyboard'; }\n  else if (name.indexOf('trackpad') >= 0) { result = 'Trackpad'; }\n  else if (name.indexOf('sensor') >= 0) { result = 'Sensor'; }\n  else if (name.indexOf('bthusb') >= 0) { result = 'Bluetooth'; }\n  else if (name.indexOf('bth') >= 0) { result = 'Bluetooth'; }\n  else if (name.indexOf('rfcomm') >= 0) { result = 'Bluetooth'; }\n  else if (name.indexOf('usbhub') >= 0) { result = 'Hub'; }\n  else if (name.indexOf(' hub') >= 0) { result = 'Hub'; }\n  else if (name.indexOf('mouse') >= 0) { result = 'Mouse'; }\n  else if (name.indexOf('mic') >= 0) { result = 'Microphone'; }\n  else if (name.indexOf('removable') >= 0) { result = 'Storage'; }\n  return result;\n}\n\n\nfunction parseDarwinUsb(usb, id) {\n  const result = {};\n  result.id = id;\n\n  usb = usb.replace(/ \\|/g, '');\n  usb = usb.trim();\n  let lines = usb.split('\\n');\n  lines.shift();\n  try {\n    for (let i = 0; i < lines.length; i++) {\n      lines[i] = lines[i].trim();\n      lines[i] = lines[i].replace(/=/g, ':');\n      if (lines[i] !== '{' && lines[i] !== '}' && lines[i + 1] && lines[i + 1].trim() !== '}') {\n        lines[i] = lines[i] + ',';\n      }\n      lines[i] = lines[i].replace(': Yes,', ': \"Yes\",');\n      lines[i] = lines[i].replace(': No,', ': \"No\",');\n    }\n    const usbObj = JSON.parse(lines.join('\\n'));\n    const removableDrive = usbObj['Built-In'].toLowerCase() !== 'yes' && usbObj['non-removable'].toLowerCase() === 'no';\n\n    result.bus = null;\n    result.deviceId = null;\n    result.id = usbObj['USB Address'] || null;\n    result.name = usbObj['kUSBProductString'] || usbObj['USB Product Name'] || null;\n    result.type = getDarwinUsbType((usbObj['kUSBProductString'] || usbObj['USB Product Name'] || '').toLowerCase() + (removableDrive ? ' removable' : ''));\n    result.removable = usbObj['non-removable'].toLowerCase() === 'no';\n    result.vendor = usbObj['kUSBVendorString'] || usbObj['USB Vendor Name'] || null;\n    result.manufacturer = usbObj['kUSBVendorString'] || usbObj['USB Vendor Name'] || null;\n    result.maxPower = null;\n    result.serialNumber = usbObj['kUSBSerialNumberString'] || null;\n\n    if (result.name) {\n      return result;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    return null;\n  }\n}\n\n// function getWindowsUsbType(service) {\n//   let result = ''\n//   if (service.indexOf('usbhub3') >= 0) { result = 'Hub'; }\n//   else if (service.indexOf('usbstor') >= 0) { result = 'Storage'; }\n//   else if (service.indexOf('hidusb') >= 0) { result = 'Input'; }\n//   else if (service.indexOf('usbccgp') >= 0) { result = 'Controller'; }\n//   else if (service.indexOf('usbxhci') >= 0) { result = 'Controller'; }\n//   else if (service.indexOf('usbehci') >= 0) { result = 'Controller'; }\n//   else if (service.indexOf('kbdhid') >= 0) { result = 'Keyboard'; }\n//   else if (service.indexOf('keyboard') >= 0) { result = 'Keyboard'; }\n//   else if (service.indexOf('pointing') >= 0) { result = 'Mouse'; }\n//   else if (service.indexOf('disk') >= 0) { result = 'Storage'; }\n//   else if (service.indexOf('usbhub') >= 0) { result = 'Hub'; }\n//   else if (service.indexOf('bthusb') >= 0) { result = ''; }\n//   else if (service.indexOf('bth') >= 0) { result = ''; }\n//   else if (service.indexOf('rfcomm') >= 0) { result = ''; }\n//   return result;\n// }\n\nfunction getWindowsUsbTypeCreation(creationclass, name) {\n  let result = '';\n  if (name.indexOf('storage') >= 0) { result = 'Storage'; }\n  else if (name.indexOf('speicher') >= 0) { result = 'Storage'; }\n  else if (creationclass.indexOf('usbhub') >= 0) { result = 'Hub'; }\n  else if (creationclass.indexOf('storage') >= 0) { result = 'Storage'; }\n  else if (creationclass.indexOf('usbcontroller') >= 0) { result = 'Controller'; }\n  else if (creationclass.indexOf('keyboard') >= 0) { result = 'Keyboard'; }\n  else if (creationclass.indexOf('pointing') >= 0) { result = 'Mouse'; }\n  else if (creationclass.indexOf('disk') >= 0) { result = 'Storage'; }\n  return result;\n}\n\nfunction parseWindowsUsb(lines, id) {\n  const usbType = getWindowsUsbTypeCreation(util.getValue(lines, 'CreationClassName', '=').toLowerCase(), util.getValue(lines, 'name', '=').toLowerCase());\n\n  if (usbType) {\n    const result = {};\n    result.bus = null;\n    result.deviceId = util.getValue(lines, 'deviceid', '=');\n    result.id = id;\n    result.name = util.getValue(lines, 'name', '=');\n    result.type = usbType;\n    result.removable = null;\n    result.vendor = null;\n    result.manufacturer = util.getValue(lines, 'Manufacturer', '=');\n    result.maxPower = null;\n    result.serialNumber = null;\n\n    return result;\n  } else {\n    return null;\n  }\n\n}\n\nfunction usb(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux) {\n        const cmd = 'export LC_ALL=C; lsusb -v 2>/dev/null; unset LC_ALL';\n        exec(cmd, { maxBuffer: 1024 * 1024 * 128 }, function (error, stdout) {\n          if (!error) {\n            const parts = ('\\n\\n' + stdout.toString()).split('\\n\\nBus ');\n            for (let i = 1; i < parts.length; i++) {\n              const usb = parseLinuxUsb(parts[i]);\n              result.push(usb);\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        let cmd = 'ioreg -p IOUSB -c AppleUSBRootHubDevice -w0 -l';\n        exec(cmd, { maxBuffer: 1024 * 1024 * 128 }, function (error, stdout) {\n          if (!error) {\n            const parts = (stdout.toString()).split(' +-o ');\n            for (let i = 1; i < parts.length; i++) {\n              const usb = parseDarwinUsb(parts[i]);\n              if (usb) {\n                result.push(usb);\n              }\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        util.wmic('Path CIM_LogicalDevice where \"Description like \\'USB%\\'\" get /value', function (error, stdout) {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n            for (let i = 0; i < parts.length; i++) {\n              const usb = parseWindowsUsb(parts[i].split('\\n'), i);\n              if (usb) {\n                result.push(usb);\n              }\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n\n        // util.powerShell(\"gwmi Win32_USBControllerDevice |\\%{[wmi]($_.Dependent)}\").then(data => {\n\n        //   const parts = data.toString().split(/\\n\\s*\\n/);\n        //   for (let i = 0; i < parts.length; i++) {\n        //     const usb = parseWindowsUsb(parts[i].split('\\n'), i)\n        //     if (usb) {\n        //       result.push(usb)\n        //     }\n        //   }\n        //   if (callback) {\n        //     callback(result);\n        //   }\n        //   resolve(result);\n        // });\n      }\n      if (_sunos || _freebsd || _openbsd || _netbsd) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.usb = usb;\n\n","'use strict';\n// @ts-check\n// ==================================================================================\n// users.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 11. Users/Sessions\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _winDateFormat = {\n  dateFormat: '',\n  dateSeperator: '',\n  timeFormat: '',\n  timeSeperator: '',\n  amDesignator: '',\n  pmDesignator: ''\n};\n\n// --------------------------\n// array of users online = sessions\n\nfunction getWinCulture() {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_winDateFormat.dateFormat) {\n        util.powerShell('(get-culture).DateTimeFormat')\n          .then(data => {\n            let lines = data.toString().split('\\r\\n');\n            _winDateFormat.dateFormat = util.getValue(lines, 'ShortDatePattern', ':');\n            _winDateFormat.dateSeperator = util.getValue(lines, 'DateSeparator', ':');\n            _winDateFormat.timeFormat = util.getValue(lines, 'ShortTimePattern', ':');\n            _winDateFormat.timeSeperator = util.getValue(lines, 'TimeSeparator', ':');\n            _winDateFormat.amDesignator = util.getValue(lines, 'AMDesignator', ':');\n            _winDateFormat.pmDesignator = util.getValue(lines, 'PMDesignator', ':');\n\n            resolve(_winDateFormat);\n          })\n          .catch(() => {\n            resolve(_winDateFormat);\n          });\n      } else {\n        resolve(_winDateFormat);\n      }\n    });\n  });\n}\n\nfunction parseUsersLinux(lines, phase) {\n  let result = [];\n  let result_who = [];\n  let result_w = {};\n  let w_first = true;\n  let w_header = [];\n  let w_pos = [];\n  let who_line = {};\n\n  let is_whopart = true;\n  lines.forEach(function (line) {\n    if (line === '---') {\n      is_whopart = false;\n    } else {\n      let l = line.replace(/ +/g, ' ').split(' ');\n\n      // who part\n      if (is_whopart) {\n        result_who.push({\n          user: l[0],\n          tty: l[1],\n          date: l[2],\n          time: l[3],\n          ip: (l && l.length > 4) ? l[4].replace(/\\(/g, '').replace(/\\)/g, '') : ''\n        });\n      } else {\n        // w part\n        if (w_first) {    // header\n          w_header = l;\n          w_header.forEach(function (item) {\n            w_pos.push(line.indexOf(item));\n          });\n          w_first = false;\n        } else {\n          // split by w_pos\n          result_w.user = line.substring(w_pos[0], w_pos[1] - 1).trim();\n          result_w.tty = line.substring(w_pos[1], w_pos[2] - 1).trim();\n          result_w.ip = line.substring(w_pos[2], w_pos[3] - 1).replace(/\\(/g, '').replace(/\\)/g, '').trim();\n          result_w.command = line.substring(w_pos[7], 1000).trim();\n          // find corresponding 'who' line\n          who_line = result_who.filter(function (obj) {\n            return (obj.user.substring(0, 8).trim() === result_w.user && obj.tty === result_w.tty);\n          });\n          if (who_line.length === 1) {\n            result.push({\n              user: who_line[0].user,\n              tty: who_line[0].tty,\n              date: who_line[0].date,\n              time: who_line[0].time,\n              ip: who_line[0].ip,\n              command: result_w.command\n            });\n          }\n        }\n      }\n    }\n  });\n  if (result.length === 0 && phase === 2) {\n    return result_who;\n  } else {\n    return result;\n  }\n}\n\nfunction parseUsersDarwin(lines) {\n  let result = [];\n  let result_who = [];\n  let result_w = {};\n  let who_line = {};\n\n  let is_whopart = true;\n  lines.forEach(function (line) {\n    if (line === '---') {\n      is_whopart = false;\n    } else {\n      let l = line.replace(/ +/g, ' ').split(' ');\n\n      // who part\n      if (is_whopart) {\n        result_who.push({\n          user: l[0],\n          tty: l[1],\n          date: ('' + new Date().getFullYear()) + '-' + ('0' + ('JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'.indexOf(l[2].toUpperCase()) / 3 + 1)).slice(-2) + '-' + ('0' + l[3]).slice(-2),\n          time: l[4],\n        });\n      } else {\n        // w part\n        // split by w_pos\n        result_w.user = l[0];\n        result_w.tty = l[1];\n        result_w.ip = (l[2] !== '-') ? l[2] : '';\n        result_w.command = l.slice(5, 1000).join(' ');\n        // find corresponding 'who' line\n        who_line = result_who.filter(function (obj) {\n          return (obj.user === result_w.user && (obj.tty.substring(3, 1000) === result_w.tty || obj.tty === result_w.tty));\n        });\n        if (who_line.length === 1) {\n          result.push({\n            user: who_line[0].user,\n            tty: who_line[0].tty,\n            date: who_line[0].date,\n            time: who_line[0].time,\n            ip: result_w.ip,\n            command: result_w.command\n          });\n        }\n      }\n    }\n  });\n  return result;\n}\n\nfunction parseUsersWin(lines, culture) {\n\n  let result = [];\n  const header = lines[0];\n  const headerDelimiter = [];\n  if (header) {\n    const start = (header[0] === ' ') ? 1 : 0;\n    headerDelimiter.push(start - 1);\n    let nextSpace = 0;\n    for (let i = start + 1; i < header.length; i++) {\n      if (header[i] === ' ' && ((header[i - 1] === ' ') || (header[i - 1] === '.'))) {\n        nextSpace = i;\n      } else {\n        if (nextSpace) {\n          headerDelimiter.push(nextSpace);\n          nextSpace = 0;\n        }\n      }\n    }\n    for (let i = 1; i < lines.length; i++) {\n      if (lines[i].trim()) {\n        const user = lines[i].substring(headerDelimiter[0] + 1, headerDelimiter[1]).trim() || '';\n        const tty = lines[i].substring(headerDelimiter[1] + 1, headerDelimiter[2] - 2).trim() || '';\n        const dateTime = util.parseDateTime(lines[i].substring(headerDelimiter[5] + 1, 2000).trim(), culture) || '';\n        result.push({\n          user: user,\n          tty: tty,\n          date: dateTime.date,\n          time: dateTime.time,\n          ip: '',\n          command: ''\n        });\n      }\n    }\n  }\n  return result;\n}\n\nfunction users(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n\n      // linux\n      if (_linux) {\n        exec('who --ips; echo \"---\"; w | tail -n +2', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersLinux(lines, 1);\n            if (result.length === 0) {\n              exec('who; echo \"---\"; w | tail -n +2', function (error, stdout) {\n                if (!error) {\n                  // lines / split\n                  lines = stdout.toString().split('\\n');\n                  result = parseUsersLinux(lines, 2);\n                }\n                if (callback) { callback(result); }\n                resolve(result);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('who; echo \"---\"; w -ih', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        exec('who; echo \"---\"; w -h', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('who; echo \"---\"; w -ih', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        try {\n          exec('query user', util.execOptsWin, function (error, stdout) {\n            if (stdout) {\n              // lines / split\n              let lines = stdout.toString().split('\\r\\n');\n              getWinCulture()\n                .then(culture => {\n                  result = parseUsersWin(lines, culture);\n                  if (callback) { callback(result); }\n                  resolve(result);\n                });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n\n    });\n  });\n}\n\nexports.users = users;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// utils.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 0. helper functions\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst fs = require('fs');\nconst path = require('path');\nconst spawn = require('child_process').spawn;\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('util');\n\nlet _platform = process.platform;\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\n// const _sunos = (_platform === 'sunos');\n\nlet _cores = 0;\nlet wmicPath = '';\nlet codepage = '';\nlet _smartMonToolsInstalled = null;\n\nconst WINDIR = process.env.WINDIR || 'C:\\\\Windows';\n\nconst execOptsWin = {\n  windowsHide: true,\n  maxBuffer: 1024 * 20000,\n  encoding: 'UTF-8',\n  env: util._extend({}, process.env, { LANG: 'en_US.UTF-8' })\n};\n\nfunction toInt(value) {\n  let result = parseInt(value, 10);\n  if (isNaN(result)) {\n    result = 0;\n  }\n  return result;\n}\n\n\nconst stringReplace = new String().replace;\nconst stringToLower = new String().toLowerCase;\nconst stringToString = new String().toString;\nconst stringSubstr = new String().substr;\nconst stringTrim = new String().trim;\nconst stringStartWith = new String().startsWith;\nconst mathMin = Math.min;\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\nfunction unique(obj) {\n  let uniques = [];\n  let stringify = {};\n  for (let i = 0; i < obj.length; i++) {\n    let keys = Object.keys(obj[i]);\n    keys.sort(function (a, b) { return a - b; });\n    let str = '';\n    for (let j = 0; j < keys.length; j++) {\n      str += JSON.stringify(keys[j]);\n      str += JSON.stringify(obj[i][keys[j]]);\n    }\n    if (!{}.hasOwnProperty.call(stringify, str)) {\n      uniques.push(obj[i]);\n      stringify[str] = true;\n    }\n  }\n  return uniques;\n}\n\nfunction sortByKey(array, keys) {\n  return array.sort(function (a, b) {\n    let x = '';\n    let y = '';\n    keys.forEach(function (key) {\n      x = x + a[key]; y = y + b[key];\n    });\n    return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n  });\n}\n\nfunction cores() {\n  if (_cores === 0) {\n    _cores = os.cpus().length;\n  }\n  return _cores;\n}\n\nfunction getValue(lines, property, separator, trimmed, lineMatch) {\n  separator = separator || ':';\n  property = property.toLowerCase();\n  trimmed = trimmed || false;\n  lineMatch = lineMatch || false;\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i].toLowerCase().replace(/\\t/g, '');\n    if (trimmed) {\n      line = line.trim();\n    }\n    if (line.startsWith(property) && (lineMatch ? (line.match(property + separator)) : true)) {\n      const parts = trimmed ? lines[i].trim().split(separator) : lines[i].split(separator);\n      if (parts.length >= 2) {\n        parts.shift();\n        return parts.join(separator).trim();\n      } else {\n        return '';\n      }\n    }\n  }\n  return '';\n}\n\nfunction decodeEscapeSequence(str, base) {\n  base = base || 16;\n  return str.replace(/\\\\x([0-9A-Fa-f]{2})/g, function () {\n    return String.fromCharCode(parseInt(arguments[1], base));\n  });\n}\n\nfunction detectSplit(str) {\n  let seperator = '';\n  let part = 0;\n  str.split('').forEach(element => {\n    if (element >= '0' && element <= '9') {\n      if (part === 1) { part++; }\n    } else {\n      if (part === 0) { part++; }\n      if (part === 1) {\n        seperator += element;\n      }\n    }\n  });\n  return seperator;\n}\n\nfunction parseTime(t, pmDesignator) {\n  pmDesignator = pmDesignator || '';\n  t = t.toUpperCase();\n  let hour = 0;\n  let min = 0;\n  let splitter = detectSplit(t);\n  let parts = t.split(splitter);\n  if (parts.length >= 2) {\n    if (parts[2]) {\n      parts[1] += parts[2];\n    }\n    let isPM = (parts[1] && (parts[1].toLowerCase().indexOf('pm') > -1) || (parts[1].toLowerCase().indexOf('p.m.') > -1) || (parts[1].toLowerCase().indexOf('p. m.') > -1) || (parts[1].toLowerCase().indexOf('n') > -1) || (parts[1].toLowerCase().indexOf('ch') > -1) || (parts[1].toLowerCase().indexOf('ös') > -1) || (pmDesignator && parts[1].toLowerCase().indexOf(pmDesignator) > -1));\n    hour = parseInt(parts[0], 10);\n    min = parseInt(parts[1], 10);\n    hour = isPM && hour < 12 ? hour + 12 : hour;\n    return ('0' + hour).substr(-2) + ':' + ('0' + min).substr(-2);\n  }\n}\n\nfunction parseDateTime(dt, culture) {\n  const result = {\n    date: '',\n    time: ''\n  };\n  culture = culture || {};\n  let dateFormat = (culture.dateFormat || '').toLowerCase();\n  let pmDesignator = (culture.pmDesignator || '');\n\n  const parts = dt.split(' ');\n  if (parts[0]) {\n    if (parts[0].indexOf('/') >= 0) {\n      // Dateformat: mm/dd/yyyy or dd/mm/yyyy or dd/mm/yy or yyyy/mm/dd\n      const dtparts = parts[0].split('/');\n      if (dtparts.length === 3) {\n        if (dtparts[0].length === 4) {\n          // Dateformat: yyyy/mm/dd\n          result.date = dtparts[0] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[2]).substr(-2);\n        } else if (dtparts[2].length === 2) {\n          if ((dateFormat.indexOf('/d/') > -1 || dateFormat.indexOf('/dd/') > -1)) {\n            // Dateformat: mm/dd/yy\n            result.date = '20' + dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          } else {\n            // Dateformat: dd/mm/yy\n            result.date = '20' + dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          }\n        } else {\n          // Dateformat: mm/dd/yyyy or dd/mm/yyyy\n          const isEN = ((dt.toLowerCase().indexOf('pm') > -1) || (dt.toLowerCase().indexOf('p.m.') > -1) || (dt.toLowerCase().indexOf('p. m.') > -1) || (dt.toLowerCase().indexOf('am') > -1) || (dt.toLowerCase().indexOf('a.m.') > -1) || (dt.toLowerCase().indexOf('a. m.') > -1));\n          if ((isEN || dateFormat.indexOf('/d/') > -1 || dateFormat.indexOf('/dd/') > -1) && dateFormat.indexOf('dd/') !== 0) {\n            // Dateformat: mm/dd/yyyy\n            result.date = dtparts[2] + '-' + ('0' + dtparts[0]).substr(-2) + '-' + ('0' + dtparts[1]).substr(-2);\n          } else {\n            // Dateformat: dd/mm/yyyy\n            result.date = dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          }\n        }\n      }\n    }\n    if (parts[0].indexOf('.') >= 0) {\n      const dtparts = parts[0].split('.');\n      if (dtparts.length === 3) {\n        if (dateFormat.indexOf('.d.') > -1 || dateFormat.indexOf('.dd.') > -1) {\n          // Dateformat: mm.dd.yyyy\n          result.date = dtparts[2] + '-' + ('0' + dtparts[0]).substr(-2) + '-' + ('0' + dtparts[1]).substr(-2);\n        } else {\n          // Dateformat: dd.mm.yyyy\n          result.date = dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n        }\n      }\n    }\n    if (parts[0].indexOf('-') >= 0) {\n      // Dateformat: yyyy-mm-dd\n      const dtparts = parts[0].split('-');\n      if (dtparts.length === 3) {\n        result.date = dtparts[0] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[2]).substr(-2);\n      }\n    }\n  }\n  if (parts[1]) {\n    parts.shift();\n    let time = parts.join(' ');\n    result.time = parseTime(time, pmDesignator);\n  }\n  return result;\n}\n\nfunction parseHead(head, rights) {\n  let space = (rights > 0);\n  let count = 1;\n  let from = 0;\n  let to = 0;\n  let result = [];\n  for (let i = 0; i < head.length; i++) {\n    if (count <= rights) {\n      // if (head[i] === ' ' && !space) {\n      if (/\\s/.test(head[i]) && !space) {\n        to = i - 1;\n        result.push({\n          from: from,\n          to: to + 1,\n          cap: head.substring(from, to + 1)\n        });\n        from = to + 2;\n        count++;\n      }\n      space = head[i] === ' ';\n    } else {\n      if (!/\\s/.test(head[i]) && space) {\n        to = i - 1;\n        if (from < to) {\n          result.push({\n            from: from,\n            to: to,\n            cap: head.substring(from, to)\n          });\n        }\n        from = to + 1;\n        count++;\n      }\n      space = head[i] === ' ';\n    }\n  }\n  to = 1000;\n  result.push({\n    from: from,\n    to: to,\n    cap: head.substring(from, to)\n  });\n  let len = result.length;\n  for (var i = 0; i < len; i++) {\n    if (result[i].cap.replace(/\\s/g, '').length === 0) {\n      if (i + 1 < len) {\n        result[i].to = result[i + 1].to;\n        result[i].cap = result[i].cap + result[i + 1].cap;\n        result.splice(i + 1, 1);\n        len = len - 1;\n      }\n    }\n  }\n  return result;\n}\n\nfunction findObjectByKey(array, key, value) {\n  for (let i = 0; i < array.length; i++) {\n    if (array[i][key] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction getWmic() {\n  if (os.type() === 'Windows_NT' && !wmicPath) {\n    wmicPath = WINDIR + '\\\\system32\\\\wbem\\\\wmic.exe';\n    if (!fs.existsSync(wmicPath)) {\n      try {\n        const wmicPathArray = execSync('WHERE WMIC', execOptsWin).toString().split('\\r\\n');\n        if (wmicPathArray && wmicPathArray.length) {\n          wmicPath = wmicPathArray[0];\n        } else {\n          wmicPath = 'wmic';\n        }\n      } catch (e) {\n        wmicPath = 'wmic';\n      }\n    }\n  }\n  return wmicPath;\n}\n\nfunction wmic(command, options) {\n  options = options || execOptsWin;\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        exec(WINDIR + '\\\\system32\\\\chcp.com 65001 | ' + getWmic() + ' ' + command, options, function (error, stdout) {\n          resolve(stdout, error);\n        }).stdin.end();\n      } catch (e) {\n        resolve('', e);\n      }\n    });\n  });\n}\n\nfunction getVboxmanage() {\n  return _windows ? `\"${process.env.VBOX_INSTALL_PATH || process.env.VBOX_MSI_INSTALL_PATH}\\\\VBoxManage.exe\"` : 'vboxmanage';\n}\n\nfunction powerShell(cmd) {\n\n  let result = '';\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        const child = spawn('powershell.exe', ['-NoLogo', '-InputFormat', 'Text', '-NoExit', '-ExecutionPolicy', 'Unrestricted', '-Command', '-'], {\n          stdio: 'pipe',\n          windowsHide: true,\n          maxBuffer: 1024 * 20000,\n          encoding: 'UTF-8',\n          env: util._extend({}, process.env, { LANG: 'en_US.UTF-8' })\n        });\n\n        if (child && !child.pid) {\n          child.on('error', function () {\n            resolve(result);\n          });\n        }\n        if (child && child.pid) {\n          child.stdout.on('data', function (data) {\n            result = result + data.toString('utf8');\n          });\n          child.stderr.on('data', function () {\n            child.kill();\n            resolve(result);\n          });\n          child.on('close', function () {\n            child.kill();\n            resolve(result);\n          });\n          child.on('error', function () {\n            child.kill();\n            resolve(result);\n          });\n          try {\n            child.stdin.write(cmd + os.EOL);\n            child.stdin.write('exit' + os.EOL);\n            child.stdin.end();\n          } catch (e) {\n            child.kill();\n            resolve(result);\n          }\n        } else {\n          resolve(result);\n        }\n      } catch (e) {\n        resolve(result);\n      }\n    });\n  });\n}\n\nfunction execSafe(cmd, args, options) {\n  let result = '';\n  options = options || {};\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        const child = spawn(cmd, args, options);\n\n        if (child && !child.pid) {\n          child.on('error', function () {\n            resolve(result);\n          });\n        }\n        if (child && child.pid) {\n          child.stdout.on('data', function (data) {\n            result += data.toString();\n          });\n          child.on('close', function () {\n            child.kill();\n            resolve(result);\n          });\n          child.on('error', function () {\n            child.kill();\n            resolve(result);\n          });\n        } else {\n          resolve(result);\n        }\n      } catch (e) {\n        resolve(result);\n      }\n    });\n  });\n}\n\nfunction getCodepage() {\n  if (_windows) {\n    if (!codepage) {\n      try {\n        const stdout = execSync('chcp', execOptsWin);\n        const lines = stdout.toString().split('\\r\\n');\n        const parts = lines[0].split(':');\n        codepage = parts.length > 1 ? parts[1].replace('.', '') : '';\n      } catch (err) {\n        codepage = '437';\n      }\n    }\n    return codepage;\n  }\n  if (_linux || _darwin || _freebsd || _openbsd || _netbsd) {\n    if (!codepage) {\n      try {\n        const stdout = execSync('echo $LANG');\n        const lines = stdout.toString().split('\\r\\n');\n        const parts = lines[0].split('.');\n        codepage = parts.length > 1 ? parts[1].trim() : '';\n        if (!codepage) {\n          codepage = 'UTF-8';\n        }\n      } catch (err) {\n        codepage = 'UTF-8';\n      }\n    }\n    return codepage;\n  }\n}\n\nfunction smartMonToolsInstalled() {\n  if (_smartMonToolsInstalled !== null) {\n    return _smartMonToolsInstalled;\n  }\n  _smartMonToolsInstalled = false;\n  if (_windows) {\n    try {\n      const pathArray = execSync('WHERE smartctl 2>nul', execOptsWin).toString().split('\\r\\n');\n      if (pathArray && pathArray.length) {\n        _smartMonToolsInstalled = pathArray[0].indexOf(':\\\\') >= 0;\n      } else {\n        _smartMonToolsInstalled = false;\n      }\n    } catch (e) {\n      _smartMonToolsInstalled = false;\n    }\n  }\n  if (_linux || _darwin || _freebsd || _openbsd || _netbsd) {\n    const pathArray = execSync('which smartctl 2>/dev/null', execOptsWin).toString().split('\\r\\n');\n    _smartMonToolsInstalled = pathArray.length > 0;\n  }\n  return _smartMonToolsInstalled;\n}\n\nfunction isRaspberry() {\n  const PI_MODEL_NO = [\n    'BCM2708',\n    'BCM2709',\n    'BCM2710',\n    'BCM2711',\n    'BCM2835',\n    'BCM2836',\n    'BCM2837',\n    'BCM2837B0'\n  ];\n  let cpuinfo = [];\n  try {\n    cpuinfo = fs.readFileSync('/proc/cpuinfo', { encoding: 'utf8' }).toString().split('\\n');\n  } catch (e) {\n    return false;\n  }\n  const hardware = getValue(cpuinfo, 'hardware');\n  return (hardware && PI_MODEL_NO.indexOf(hardware) > -1);\n}\n\nfunction isRaspbian() {\n  let osrelease = [];\n  try {\n    osrelease = fs.readFileSync('/etc/os-release', { encoding: 'utf8' }).toString().split('\\n');\n  } catch (e) {\n    return false;\n  }\n  const id = getValue(osrelease, 'id', '=');\n  return (id && id.indexOf('raspbian') > -1);\n}\n\nfunction execWin(cmd, opts, callback) {\n  if (!callback) {\n    callback = opts;\n    opts = execOptsWin;\n  }\n  let newCmd = 'chcp 65001 > nul && cmd /C ' + cmd + ' && chcp ' + codepage + ' > nul';\n  exec(newCmd, opts, function (error, stdout) {\n    callback(error, stdout);\n  });\n}\n\nfunction darwinXcodeExists() {\n  const cmdLineToolsExists = fs.existsSync('/Library/Developer/CommandLineTools/usr/bin/');\n  const xcodeAppExists = fs.existsSync('/Applications/Xcode.app/Contents/Developer/Tools');\n  const xcodeExists = fs.existsSync('/Library/Developer/Xcode/');\n  return (cmdLineToolsExists || xcodeExists || xcodeAppExists);\n}\n\nfunction nanoSeconds() {\n  const time = process.hrtime();\n  if (!Array.isArray(time) || time.length !== 2) {\n    return 0;\n  }\n  return +time[0] * 1e9 + +time[1];\n}\n\nfunction countUniqueLines(lines, startingWith) {\n  startingWith = startingWith || '';\n  const uniqueLines = [];\n  lines.forEach(line => {\n    if (line.startsWith(startingWith)) {\n      if (uniqueLines.indexOf(line) === -1) {\n        uniqueLines.push(line);\n      }\n    }\n  });\n  return uniqueLines.length;\n}\n\nfunction countLines(lines, startingWith) {\n  startingWith = startingWith || '';\n  const uniqueLines = [];\n  lines.forEach(line => {\n    if (line.startsWith(startingWith)) {\n      uniqueLines.push(line);\n    }\n  });\n  return uniqueLines.length;\n}\n\nfunction sanitizeShellString(str, strict) {\n  if (typeof strict === 'undefined') { strict = false; }\n  const s = str || '';\n  let result = '';\n  for (let i = 0; i <= mathMin(s.length, 2000); i++) {\n    if (!(s[i] === undefined ||\n      s[i] === '>' ||\n      s[i] === '<' ||\n      s[i] === '*' ||\n      s[i] === '?' ||\n      s[i] === '[' ||\n      s[i] === ']' ||\n      s[i] === '|' ||\n      s[i] === '˚' ||\n      s[i] === '$' ||\n      s[i] === ';' ||\n      s[i] === '&' ||\n      s[i] === '(' ||\n      s[i] === ')' ||\n      s[i] === ']' ||\n      s[i] === '#' ||\n      s[i] === '\\\\' ||\n      s[i] === '\\t' ||\n      s[i] === '\\n' ||\n      s[i] === '\\'' ||\n      s[i] === '`' ||\n      s[i] === '\"' ||\n      s[i].length > 1 ||\n      (strict && s[i] === '@') ||\n      (strict && s[i] === ' ') ||\n      (strict && s[i] == '{') ||\n      (strict && s[i] == ')'))) {\n      result = result + s[i];\n    }\n  }\n  return result;\n}\n\nfunction isPrototypePolluted() {\n  const s = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let notPolluted = true;\n  let st = '';\n\n  st.__proto__.replace = stringReplace;\n  st.__proto__.toLowerCase = stringToLower;\n  st.__proto__.toString = stringToString;\n  st.__proto__.substr = stringSubstr;\n\n  notPolluted = notPolluted || !(s.length === 62);\n  const ms = Date.now();\n  if (typeof ms === 'number' && ms > 1600000000000) {\n    const l = ms % 100 + 15;\n    for (let i = 0; i < l; i++) {\n      const r = Math.random() * 61.99999999 + 1;\n      const rs = parseInt(Math.floor(r).toString(), 10);\n      const rs2 = parseInt(r.toString().split('.')[0], 10);\n      const q = Math.random() * 61.99999999 + 1;\n      const qs = parseInt(Math.floor(q).toString(), 10);\n      const qs2 = parseInt(q.toString().split('.')[0], 10);\n      notPolluted = notPolluted && !(r === q);\n      notPolluted = notPolluted && rs === rs2 && qs === qs2;\n      st += s[rs - 1];\n    }\n    notPolluted = notPolluted && st.length === l;\n    // string manipulation\n    let p = Math.random() * l * 0.9999999999;\n    let stm = st.substr(0, p) + ' ' + st.substr(p, 2000);\n    stm.__proto__.replace = stringReplace;\n    let sto = stm.replace(/ /g, '');\n    notPolluted = notPolluted && st === sto;\n    p = Math.random() * l * 0.9999999999;\n    stm = st.substr(0, p) + '{' + st.substr(p, 2000);\n    sto = stm.replace(/{/g, '');\n    notPolluted = notPolluted && st === sto;\n    p = Math.random() * l * 0.9999999999;\n    stm = st.substr(0, p) + '*' + st.substr(p, 2000);\n    sto = stm.replace(/\\*/g, '');\n    notPolluted = notPolluted && st === sto;\n    p = Math.random() * l * 0.9999999999;\n    stm = st.substr(0, p) + '$' + st.substr(p, 2000);\n    sto = stm.replace(/\\$/g, '');\n    notPolluted = notPolluted && st === sto;\n\n    // lower\n    const stl = st.toLowerCase();\n    notPolluted = notPolluted && (stl.length === l) && stl[l - 1] && !(stl[l]);\n    for (let i = 0; i < l; i++) {\n      const s1 = st[i];\n      s1.__proto__.toLowerCase = stringToLower;\n      const s2 = stl ? stl[i] : '';\n      const s1l = s1.toLowerCase();\n      notPolluted = notPolluted && s1l[0] === s2 && s1l[0] && !(s1l[1]);\n    }\n  }\n  return !notPolluted;\n}\n\nfunction hex2bin(hex) {\n  return ('00000000' + (parseInt(hex, 16)).toString(2)).substr(-8);\n}\n\nfunction getFilesInPath(source) {\n  const lstatSync = fs.lstatSync;\n  const readdirSync = fs.readdirSync;\n  const join = path.join;\n\n  function isDirectory(source) {\n    return lstatSync(source).isDirectory();\n  }\n  function isFile(source) { return lstatSync(source).isFile(); }\n\n  function getDirectories(source) {\n    return readdirSync(source).map(function (name) { return join(source, name); }).filter(isDirectory);\n  }\n  function getFiles(source) {\n    return readdirSync(source).map(function (name) { return join(source, name); }).filter(isFile);\n  }\n\n  function getFilesRecursively(source) {\n    try {\n      let dirs = getDirectories(source);\n      let files = dirs\n        .map(function (dir) { return getFilesRecursively(dir); })\n        .reduce(function (a, b) { return a.concat(b); }, []);\n      return files.concat(getFiles(source));\n    } catch (e) {\n      return [];\n    }\n  }\n\n  if (fs.existsSync(source)) {\n    return getFilesRecursively(source);\n  } else {\n    return [];\n  }\n}\n\nfunction decodePiCpuinfo(lines) {\n\n  // https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md\n\n  const oldRevisionCodes = {\n    '0002': {\n      type: 'B',\n      revision: '1.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0003': {\n      type: 'B',\n      revision: '1.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0004': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0005': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Qisda',\n      processor: 'BCM2835'\n    },\n    '0006': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0007': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0008': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0009': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Qisda',\n      processor: 'BCM2835'\n    },\n    '000d': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '000e': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '000f': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0010': {\n      type: 'B+',\n      revision: '1.2',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0011': {\n      type: 'CM1',\n      revision: '1.0',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0012': {\n      type: 'A+',\n      revision: '1.1',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0013': {\n      type: 'B+',\n      revision: '1.2',\n      memory: 512,\n      manufacturer: 'Embest',\n      processor: 'BCM2835'\n    },\n    '0014': {\n      type: 'CM1',\n      revision: '1.0',\n      memory: 512,\n      manufacturer: 'Embest',\n      processor: 'BCM2835'\n    },\n    '0015': {\n      type: 'A+',\n      revision: '1.1',\n      memory: 256,\n      manufacturer: '512MB\tEmbest',\n      processor: 'BCM2835'\n    }\n  };\n\n  const processorList = [\n    'BCM2835',\n    'BCM2836',\n    'BCM2837',\n    'BCM2711',\n  ];\n  const manufacturerList = [\n    'Sony UK',\n    'Egoman',\n    'Embest',\n    'Sony Japan',\n    'Embest',\n    'Stadium'\n  ];\n  const typeList = {\n    '00': 'A',\n    '01': 'B',\n    '02': 'A+',\n    '03': 'B+',\n    '04': '2B',\n    '05': 'Alpha (early prototype)',\n    '06': 'CM1',\n    '08': '3B',\n    '09': 'Zero',\n    '0a': 'CM3',\n    '0c': 'Zero W',\n    '0d': '3B+',\n    '0e': '3A+',\n    '0f': 'Internal use only',\n    '10': 'CM3+',\n    '11': '4B',\n    '13': '400',\n    '14': 'CM4'\n  };\n\n  const revisionCode = getValue(lines, 'revision', ':', true);\n  const model = getValue(lines, 'model:', ':', true);\n  const serial = getValue(lines, 'serial', ':', true);\n\n  let result = {};\n  if ({}.hasOwnProperty.call(oldRevisionCodes, revisionCode)) {\n    // old revision codes\n    result = {\n      model,\n      serial,\n      revisionCode,\n      memory: oldRevisionCodes[revisionCode].memory,\n      manufacturer: oldRevisionCodes[revisionCode].manufacturer,\n      processor: oldRevisionCodes[revisionCode].processor,\n      type: oldRevisionCodes[revisionCode].type,\n      revision: oldRevisionCodes[revisionCode].revision,\n    };\n\n  } else {\n    // new revision code\n    const revision = ('00000000' + getValue(lines, 'revision', ':', true).toLowerCase()).substr(-8);\n    // const revisionStyleNew = hex2bin(revision.substr(2, 1)).substr(4, 1) === '1';\n    const memSizeCode = parseInt(hex2bin(revision.substr(2, 1)).substr(5, 3), 2) || 0;\n    const manufacturer = manufacturerList[parseInt(revision.substr(3, 1), 10)];\n    const processor = processorList[parseInt(revision.substr(4, 1), 10)];\n    const typeCode = revision.substr(5, 2);\n\n\n    result = {\n      model,\n      serial,\n      revisionCode,\n      memory: 256 * Math.pow(2, memSizeCode),\n      manufacturer,\n      processor,\n      type: {}.hasOwnProperty.call(typeList, typeCode) ? typeList[typeCode] : '',\n      revision: '1.' + revision.substr(7, 1),\n    };\n  }\n  return result;\n}\n\nfunction promiseAll(promises) {\n  const resolvingPromises = promises.map(function (promise) {\n    return new Promise(function (resolve) {\n      var payload = new Array(2);\n      promise.then(function (result) {\n        payload[0] = result;\n      })\n        .catch(function (error) {\n          payload[1] = error;\n        })\n        .then(function () {\n          // The wrapped Promise returns an array: 0 = result, 1 = error ... we resolve all\n          resolve(payload);\n        });\n    });\n  });\n  var errors = [];\n  var results = [];\n\n  // Execute all wrapped Promises\n  return Promise.all(resolvingPromises)\n    .then(function (items) {\n      items.forEach(function (payload) {\n        if (payload[1]) {\n          errors.push(payload[1]);\n          results.push(null);\n        } else {\n          errors.push(null);\n          results.push(payload[0]);\n        }\n      });\n\n      return {\n        errors: errors,\n        results: results\n      };\n    });\n}\n\nfunction promisify(nodeStyleFunction) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    return new Promise(function (resolve, reject) {\n      args.push(function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n      nodeStyleFunction.apply(null, args);\n    });\n  };\n}\n\nfunction promisifySave(nodeStyleFunction) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    return new Promise(function (resolve) {\n      args.push(function (err, data) {\n        resolve(data);\n      });\n      nodeStyleFunction.apply(null, args);\n    });\n  };\n}\n\nfunction linuxVersion() {\n  let result = '';\n  if (_linux) {\n    try {\n      result = execSync('uname -v').toString();\n    } catch (e) {\n      result = '';\n    }\n  }\n  return result;\n}\n\nfunction plistParser(xmlStr) {\n  const tags = ['array', 'dict', 'key', 'string', 'integer', 'date', 'real', 'data'];\n\n  function getNextTagPos() {\n    let result = {\n      pos: 999999,\n      tag: ''\n    };\n    tags.forEach((tag) => {\n      const ii = xmlStr.indexOf(`<${tag}>`);\n      if (ii !== -1 && ii < result.pos) {\n        result = {\n          pos: ii,\n          tag\n        };\n      }\n    });\n    return result;\n  }\n\n  function getNextClosingTagPos(tag) {\n    return xmlStr.indexOf(`</${tag}>`);\n  }\n\n  function parseXmlTree(isArray, closingTag) {\n    // start parsing\n    let obj = {};\n    let arr = [];\n    let cpos = getNextTagPos();\n    let key = '';\n    let valueStr = null;\n\n    while (cpos.pos >= 0 && cpos.tag) {\n      let nextTagPos = getNextTagPos();\n      // let nextClosePos = getNextClosingTagPos(cpos.tag);\n      let nextClosePosBlock = closingTag ? getNextClosingTagPos(closingTag) : 999999;\n      if (nextClosePosBlock <= nextTagPos.pos) {\n        return (isArray ? arr : obj);\n      }\n      xmlStr = xmlStr.substring((cpos.pos + cpos.tag.length + 2));\n      if (cpos.tag === 'array') {\n        const res = parseXmlTree(true, cpos.tag);\n        if (key) {\n          obj[key] = res;\n        } else {\n          obj = res;\n        }\n      } else if (cpos.tag === 'dict') {\n        const res = parseXmlTree(false, cpos.tag);\n        if (!isArray) {\n          obj[key] = res;\n        } else {\n          arr.push(res);\n        }\n        xmlStr = xmlStr.substring((cpos.pos + cpos.tag.length + 3));\n      } else {\n        let nextTagPos = getNextTagPos();\n        let nextClosePos = getNextClosingTagPos(cpos.tag);\n        // nextClosePosBlock = closingTag ? getNextClosingTagPos(closingTag) : 999999;\n        if (nextClosePos < nextTagPos.pos) {\n          if (cpos.tag === 'key') {\n            key = xmlStr.substring(0, nextClosePos);\n            xmlStr = xmlStr.substring(key.length + cpos.tag.length + 3); // key done\n          } else {\n            valueStr = xmlStr.substring(0, nextClosePos).replace(/\\t/g, '');\n            if (cpos.tag === 'string') { if (!isArray) { obj[key] = valueStr; } else { arr.push(valueStr); } }\n            if (cpos.tag === 'integer') { if (!isArray) { obj[key] = parseInt(valueStr); } else { arr.push(parseInt(valueStr)); } }\n            if (cpos.tag === 'date') { if (!isArray) { obj[key] = valueStr; } else { arr.push(valueStr); } }\n            if (cpos.tag === 'data') { if (!isArray) { obj[key] = valueStr; } else { arr.push(valueStr); } }\n            if (cpos.tag === 'real') { if (!isArray) { obj[key] = parseFloat(valueStr); } else { arr.push(parseFloat(valueStr)); } }\n\n            key = '';\n            xmlStr = xmlStr.substring(valueStr.length + cpos.tag.length + 3); // property done\n          }\n        }\n      }\n      cpos = getNextTagPos();\n    }\n    return (isArray ? arr : obj);\n  }\n  try {\n    const result = parseXmlTree(false, '');\n    return result;\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction noop() { }\n\nexports.toInt = toInt;\nexports.execOptsWin = execOptsWin;\nexports.getCodepage = getCodepage;\nexports.execWin = execWin;\nexports.isFunction = isFunction;\nexports.unique = unique;\nexports.sortByKey = sortByKey;\nexports.cores = cores;\nexports.getValue = getValue;\nexports.decodeEscapeSequence = decodeEscapeSequence;\nexports.parseDateTime = parseDateTime;\nexports.parseHead = parseHead;\nexports.findObjectByKey = findObjectByKey;\nexports.getWmic = getWmic;\nexports.wmic = wmic;\nexports.darwinXcodeExists = darwinXcodeExists;\nexports.getVboxmanage = getVboxmanage;\nexports.powerShell = powerShell;\nexports.execSafe = execSafe;\nexports.nanoSeconds = nanoSeconds;\nexports.countUniqueLines = countUniqueLines;\nexports.countLines = countLines;\nexports.noop = noop;\nexports.isRaspberry = isRaspberry;\nexports.isRaspbian = isRaspbian;\nexports.sanitizeShellString = sanitizeShellString;\nexports.isPrototypePolluted = isPrototypePolluted;\nexports.decodePiCpuinfo = decodePiCpuinfo;\nexports.promiseAll = promiseAll;\nexports.promisify = promisify;\nexports.promisifySave = promisifySave;\nexports.smartMonToolsInstalled = smartMonToolsInstalled;\nexports.linuxVersion = linuxVersion;\nexports.plistParser = plistParser;\nexports.stringReplace = stringReplace;\nexports.stringToLower = stringToLower;\nexports.stringToString = stringToString;\nexports.stringSubstr = stringSubstr;\nexports.stringTrim = stringTrim;\nexports.stringStartWith = stringStartWith;\nexports.mathMin = mathMin;\nexports.WINDIR = WINDIR;\nexports.getFilesInPath = getFilesInPath;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// virtualbox.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 14. Docker\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst util = require('./util');\n\nfunction vboxInfo(callback) {\n\n  // fallback - if only callback is given\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        exec(util.getVboxmanage() + ' list vms --long', function (error, stdout) {\n          let parts = (os.EOL + stdout.toString()).split(os.EOL + 'Name:');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = ('Name:' + part).split(os.EOL);\n            const state = util.getValue(lines, 'State');\n            const running = state.startsWith('running');\n            const runningSinceString = running ? state.replace('running (since ', '').replace(')', '').trim() : '';\n            let runningSince = 0;\n            try {\n              if (running) {\n                const sinceDateObj = new Date(runningSinceString);\n                const offset = sinceDateObj.getTimezoneOffset();\n                runningSince = Math.round((Date.now() - Date.parse(sinceDateObj)) / 1000) + offset * 60;\n              }\n            } catch (e) {\n              util.noop();\n            }\n            const stoppedSinceString = !running ? state.replace('powered off (since', '').replace(')', '').trim() : '';\n            let stoppedSince = 0;\n            try {\n              if (!running) {\n                const sinceDateObj = new Date(stoppedSinceString);\n                const offset = sinceDateObj.getTimezoneOffset();\n                stoppedSince = Math.round((Date.now() - Date.parse(sinceDateObj)) / 1000) + offset * 60;\n              }\n            } catch (e) {\n              util.noop();\n            }\n            result.push({\n              id: util.getValue(lines, 'UUID'),\n              name: util.getValue(lines, 'Name'),\n              running,\n              started: runningSinceString,\n              runningSince,\n              stopped: stoppedSinceString,\n              stoppedSince,\n              guestOS: util.getValue(lines, 'Guest OS'),\n              hardwareUUID: util.getValue(lines, 'Hardware UUID'),\n              memory: parseInt(util.getValue(lines, 'Memory size', '     '), 10),\n              vram: parseInt(util.getValue(lines, 'VRAM size'), 10),\n              cpus: parseInt(util.getValue(lines, 'Number of CPUs'), 10),\n              cpuExepCap: util.getValue(lines, 'CPU exec cap'),\n              cpuProfile: util.getValue(lines, 'CPUProfile'),\n              chipset: util.getValue(lines, 'Chipset'),\n              firmware: util.getValue(lines, 'Firmware'),\n              pageFusion: util.getValue(lines, 'Page Fusion') === 'enabled',\n              configFile: util.getValue(lines, 'Config file'),\n              snapshotFolder: util.getValue(lines, 'Snapshot folder'),\n              logFolder: util.getValue(lines, 'Log folder'),\n              hpet: util.getValue(lines, 'HPET') === 'enabled',\n              pae: util.getValue(lines, 'PAE') === 'enabled',\n              longMode: util.getValue(lines, 'Long Mode') === 'enabled',\n              tripleFaultReset: util.getValue(lines, 'Triple Fault Reset') === 'enabled',\n              apic: util.getValue(lines, 'APIC') === 'enabled',\n              x2Apic: util.getValue(lines, 'X2APIC') === 'enabled',\n              acpi: util.getValue(lines, 'ACPI') === 'enabled',\n              ioApic: util.getValue(lines, 'IOAPIC') === 'enabled',\n              biosApicMode: util.getValue(lines, 'BIOS APIC mode'),\n              bootMenuMode: util.getValue(lines, 'Boot menu mode'),\n              bootDevice1: util.getValue(lines, 'Boot Device 1'),\n              bootDevice2: util.getValue(lines, 'Boot Device 2'),\n              bootDevice3: util.getValue(lines, 'Boot Device 3'),\n              bootDevice4: util.getValue(lines, 'Boot Device 4'),\n              timeOffset: util.getValue(lines, 'Time offset'),\n              rtc: util.getValue(lines, 'RTC'),\n            });\n          });\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      } catch (e) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.vboxInfo = vboxInfo;\n","'use strict';\n// @ts-check\n// ==================================================================================\n// wifi.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2021\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 9. wifi\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\n\nfunction wifiDBFromQuality(quality) {\n  return (parseFloat(quality) / 2 - 100);\n}\n\nfunction wifiQualityFromDB(db) {\n  const result = 2 * (parseFloat(db) + 100);\n  return result <= 100 ? result : 100;\n}\n\nconst _wifi_frequencies = {\n  1: 2412,\n  2: 2417,\n  3: 2422,\n  4: 2427,\n  5: 2432,\n  6: 2437,\n  7: 2442,\n  8: 2447,\n  9: 2452,\n  10: 2457,\n  11: 2462,\n  12: 2467,\n  13: 2472,\n  14: 2484,\n  32: 5160,\n  34: 5170,\n  36: 5180,\n  38: 5190,\n  40: 5200,\n  42: 5210,\n  44: 5220,\n  46: 5230,\n  48: 5240,\n  50: 5250,\n  52: 5260,\n  54: 5270,\n  56: 5280,\n  58: 5290,\n  60: 5300,\n  62: 5310,\n  64: 5320,\n  68: 5340,\n  96: 5480,\n  100: 5500,\n  102: 5510,\n  104: 5520,\n  106: 5530,\n  108: 5540,\n  110: 5550,\n  112: 5560,\n  114: 5570,\n  116: 5580,\n  118: 5590,\n  120: 5600,\n  122: 5610,\n  124: 5620,\n  126: 5630,\n  128: 5640,\n  132: 5660,\n  134: 5670,\n  136: 5680,\n  138: 5690,\n  140: 5700,\n  142: 5710,\n  144: 5720,\n  149: 5745,\n  151: 5755,\n  153: 5765,\n  155: 5775,\n  157: 5785,\n  159: 5795,\n  161: 5805,\n  165: 5825,\n  169: 5845,\n  173: 5865,\n  183: 4915,\n  184: 4920,\n  185: 4925,\n  187: 4935,\n  188: 4940,\n  189: 4945,\n  192: 4960,\n  196: 4980\n};\n\nfunction wifiFrequencyFromChannel(channel) {\n  return {}.hasOwnProperty.call(_wifi_frequencies, channel) ? _wifi_frequencies[channel] : null;\n}\n\nfunction wifiChannelFromFrequencs(frequency) {\n  let channel = 0;\n  for (let key in _wifi_frequencies) {\n    if ({}.hasOwnProperty.call(_wifi_frequencies, key)) {\n      if (_wifi_frequencies[key] === frequency) { channel = util.toInt(key); }\n    }\n  }\n  return channel;\n}\n\nfunction ifaceListLinux() {\n  const result = [];\n  const cmd = 'iw dev';\n  try {\n    const all = execSync(cmd).toString().split('\\n').map(line => line.trim()).join('\\n');\n    const parts = all.split('\\nInterface ');\n    parts.shift();\n    parts.forEach(ifaceDetails => {\n      const lines = ifaceDetails.split('\\n');\n      const iface = lines[0];\n      const id = util.toInt(util.getValue(lines, 'ifindex', ' '));\n      const mac = util.getValue(lines, 'addr', ' ');\n      const channel = util.toInt(util.getValue(lines, 'channel', ' '));\n      result.push({\n        id,\n        iface,\n        mac,\n        channel\n      });\n    });\n    return result;\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction nmiDeviceLinux(iface) {\n  const cmd = `nmcli -t -f general,wifi-properties,capabilities,ip4,ip6 device show ${iface} 2>/dev/null`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const ssid = util.getValue(lines, 'GENERAL.CONNECTION');\n    return {\n      iface,\n      type: util.getValue(lines, 'GENERAL.TYPE'),\n      vendor: util.getValue(lines, 'GENERAL.VENDOR'),\n      product: util.getValue(lines, 'GENERAL.PRODUCT'),\n      mac: util.getValue(lines, 'GENERAL.HWADDR').toLowerCase(),\n      ssid: ssid !== '--' ? ssid : null\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction nmiConnectionLinux(ssid) {\n  const cmd = `nmcli -t --show-secrets connection show ${ssid} 2>/dev/null`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const bssid = util.getValue(lines, '802-11-wireless.seen-bssids').toLowerCase();\n    return {\n      ssid: ssid !== '--' ? ssid : null,\n      uuid: util.getValue(lines, 'connection.uuid'),\n      type: util.getValue(lines, 'connection.type'),\n      autoconnect: util.getValue(lines, 'connection.autoconnect') === 'yes',\n      security: util.getValue(lines, '802-11-wireless-security.key-mgmt'),\n      bssid: bssid !== '--' ? bssid : null\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction wpaConnectionLinux(iface) {\n  const cmd = `wpa_cli -i ${iface} status 2>&1`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const freq = util.toInt(util.getValue(lines, 'freq', '='));\n    return {\n      ssid: util.getValue(lines, 'ssid', '='),\n      uuid: util.getValue(lines, 'uuid', '='),\n      security: util.getValue(lines, 'key_mgmt', '='),\n      freq,\n      channel: wifiChannelFromFrequencs(freq),\n      bssid: util.getValue(lines, 'bssid', '=').toLowerCase()\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction getWifiNetworkListNmi() {\n  const result = [];\n  const cmd = 'nmcli -t -m multiline --fields active,ssid,bssid,mode,chan,freq,signal,security,wpa-flags,rsn-flags device wifi list 2>/dev/null';\n  try {\n    const stdout = execSync(cmd, { maxBuffer: 1024 * 20000 });\n    const parts = stdout.toString().split('ACTIVE:');\n    parts.shift();\n    parts.forEach(part => {\n      part = 'ACTIVE:' + part;\n      const lines = part.split(os.EOL);\n      const channel = util.getValue(lines, 'CHAN');\n      const frequency = util.getValue(lines, 'FREQ').toLowerCase().replace('mhz', '').trim();\n      const security = util.getValue(lines, 'SECURITY').replace('(', '').replace(')', '');\n      const wpaFlags = util.getValue(lines, 'WPA-FLAGS').replace('(', '').replace(')', '');\n      const rsnFlags = util.getValue(lines, 'RSN-FLAGS').replace('(', '').replace(')', '');\n      result.push({\n        ssid: util.getValue(lines, 'SSID'),\n        bssid: util.getValue(lines, 'BSSID').toLowerCase(),\n        mode: util.getValue(lines, 'MODE'),\n        channel: channel ? parseInt(channel, 10) : null,\n        frequency: frequency ? parseInt(frequency, 10) : null,\n        signalLevel: wifiDBFromQuality(util.getValue(lines, 'SIGNAL')),\n        quality: parseFloat(util.getValue(lines, 'SIGNAL')),\n        security: security && security !== 'none' ? security.split(' ') : [],\n        wpaFlags: wpaFlags && wpaFlags !== 'none' ? wpaFlags.split(' ') : [],\n        rsnFlags: rsnFlags && rsnFlags !== 'none' ? rsnFlags.split(' ') : []\n      });\n    });\n    return result;\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction getWifiNetworkListIw(iface) {\n  const result = [];\n  try {\n    let iwlistParts = execSync(`export LC_ALL=C; iwlist ${iface} scan 2>&1; unset LC_ALL`).toString().split('        Cell ');\n    if (iwlistParts[0].indexOf('resource busy') >= 0) { return -1; }\n    if (iwlistParts.length > 1) {\n      iwlistParts.shift();\n      for (let i = 0; i < iwlistParts.length; i++) {\n        const lines = iwlistParts[i].split('\\n');\n        const channel = util.getValue(lines, 'channel', ':', true);\n        const address = (lines && lines.length && lines[0].indexOf('Address:') >= 0 ? lines[0].split('Address:')[1].trim().toLowerCase() : '');\n        const mode = util.getValue(lines, 'mode', ':', true);\n        const frequency = util.getValue(lines, 'frequency', ':', true);\n        const qualityString = util.getValue(lines, 'Quality', '=', true);\n        const dbParts = qualityString.toLowerCase().split('signal level=');\n        const db = dbParts.length > 1 ? util.toInt(dbParts[1]) : 0;\n        const quality = db ? wifiQualityFromDB(db) : 0;\n        const ssid = util.getValue(lines, 'essid', ':', true);\n\n        // security and wpa-flags\n        const isWpa = iwlistParts[i].indexOf(' WPA ') >= 0;\n        const isWpa2 = iwlistParts[i].indexOf('WPA2 ') >= 0;\n        const security = [];\n        if (isWpa) { security.push('WPA'); }\n        if (isWpa2) { security.push('WPA2'); }\n        const wpaFlags = [];\n        let wpaFlag = '';\n        lines.forEach(function (line) {\n          const l = line.trim().toLowerCase();\n          if (l.indexOf('group cipher') >= 0) {\n            if (wpaFlag) {\n              wpaFlags.push(wpaFlag);\n            }\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              wpaFlag = parts[1].trim().toUpperCase();\n            }\n          }\n          if (l.indexOf('pairwise cipher') >= 0) {\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              if (parts[1].indexOf('tkip')) { wpaFlag = (wpaFlag ? 'TKIP/' + wpaFlag : 'TKIP'); }\n              else if (parts[1].indexOf('ccmp')) { wpaFlag = (wpaFlag ? 'CCMP/' + wpaFlag : 'CCMP'); }\n              else if (parts[1].indexOf('proprietary')) { wpaFlag = (wpaFlag ? 'PROP/' + wpaFlag : 'PROP'); }\n            }\n          }\n          if (l.indexOf('authentication suites') >= 0) {\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              if (parts[1].indexOf('802.1x')) { wpaFlag = (wpaFlag ? '802.1x/' + wpaFlag : '802.1x'); }\n              else if (parts[1].indexOf('psk')) { wpaFlag = (wpaFlag ? 'PSK/' + wpaFlag : 'PSK'); }\n            }\n          }\n        });\n        if (wpaFlag) {\n          wpaFlags.push(wpaFlag);\n        }\n\n        result.push({\n          ssid,\n          bssid: address,\n          mode,\n          channel: channel ? util.toInt(channel) : null,\n          frequency: frequency ? util.toInt(frequency.replace('.', '')) : null,\n          signalLevel: db,\n          quality,\n          security,\n          wpaFlags,\n          rsnFlags: []\n        });\n      }\n    }\n    return result;\n  } catch (e) {\n    return -1;\n  }\n}\n\nfunction wifiNetworks(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux) {\n        result = getWifiNetworkListNmi();\n        if (result.length === 0) {\n          try {\n            const iwconfigParts = execSync('export LC_ALL=C; iwconfig 2>/dev/null; unset LC_ALL').toString().split('\\n\\n');\n            let iface = '';\n            for (let i = 0; i < iwconfigParts.length; i++) {\n              if (iwconfigParts[i].indexOf('no wireless') === -1 && iwconfigParts[i].trim() !== '') {\n                iface = iwconfigParts[i].split(' ')[0];\n              }\n            }\n            if (iface) {\n              const res = getWifiNetworkListIw(iface);\n              if (res === -1) {\n                // try again after 4 secs\n                setTimeout(function (iface) {\n                  const res = getWifiNetworkListIw(iface);\n                  if (res != -1) { result = res; }\n                  if (callback) {\n                    callback(result);\n                  }\n                  resolve(result);\n                }, 4000);\n              } else {\n                result = res;\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              }\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          } catch (e) {\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        } else {\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        }\n      } else if (_darwin) {\n        let cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -s';\n        exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n          const lines = stdout.toString().split(os.EOL);\n          if (lines && lines.length > 1) {\n            const parsedhead = util.parseHead(lines[0], 1);\n            if (parsedhead.length >= 7) {\n              lines.shift();\n              lines.forEach(line => {\n                if (line.trim()) {\n                  const channelStr = line.substring(parsedhead[3].from, parsedhead[3].to).trim();\n                  const channel = channelStr ? parseInt(channelStr, 10) : null;\n                  const signalLevel = line.substring(parsedhead[2].from, parsedhead[2].to).trim();\n                  const securityAll = line.substring(parsedhead[6].from, 1000).trim().split(' ');\n                  let security = [];\n                  let wpaFlags = [];\n                  securityAll.forEach(securitySingle => {\n                    if (securitySingle.indexOf('(') > 0) {\n                      const parts = securitySingle.split('(');\n                      security.push(parts[0]);\n                      wpaFlags = wpaFlags.concat(parts[1].replace(')', '').split(','));\n                    }\n                  });\n                  wpaFlags = Array.from(new Set(wpaFlags));\n                  result.push({\n                    ssid: line.substring(parsedhead[0].from, parsedhead[0].to).trim(),\n                    bssid: line.substring(parsedhead[1].from, parsedhead[1].to).trim().toLowerCase(),\n                    mode: '',\n                    channel,\n                    frequency: wifiFrequencyFromChannel(channel),\n                    signalLevel: signalLevel ? parseInt(signalLevel, 10) : null,\n                    quality: wifiQualityFromDB(signalLevel),\n                    security,\n                    wpaFlags,\n                    rsnFlags: []\n                  });\n                }\n              });\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else if (_windows) {\n        let cmd = 'chcp 65001 && netsh wlan show networks mode=Bssid';\n        exec(cmd, util.execOptsWin, function (error, stdout) {\n\n          const ssidParts = stdout.toString('utf8').split(os.EOL + os.EOL + 'SSID ');\n          ssidParts.shift();\n\n          ssidParts.forEach(ssidPart => {\n            const ssidLines = ssidPart.split(os.EOL);\n            if (ssidLines && ssidLines.length >= 8 && ssidLines[0].indexOf(':') >= 0) {\n              const bssidsParts = ssidPart.split('BSSID ');\n              bssidsParts.shift();\n\n              bssidsParts.forEach((bssidPart) => {\n                const bssidLines = bssidPart.split(os.EOL);\n                const bssidLine = bssidLines[0].split(':');\n                bssidLine.shift();\n                const bssid = bssidLine.join(':').trim().toLowerCase();\n                const channel = bssidLines[3].split(':').pop().trim();\n                const quality = bssidLines[1].split(':').pop().trim();\n\n                result.push({\n                  ssid: ssidLines[0].split(':').pop().trim(),\n                  bssid,\n                  mode: '',\n                  channel: channel ? parseInt(channel, 10) : null,\n                  frequency: wifiFrequencyFromChannel(channel),\n                  signalLevel: wifiDBFromQuality(quality),\n                  quality: quality ? parseInt(quality, 10) : null,\n                  security: [ssidLines[2].split(':').pop().trim()],\n                  wpaFlags: [ssidLines[3].split(':').pop().trim()],\n                  rsnFlags: []\n                });\n              });\n            }\n          });\n\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiNetworks = wifiNetworks;\n\nfunction getVendor(model) {\n  model = model.toLowerCase();\n  let result = '';\n  if (model.indexOf('intel') >= 0) { result = 'Intel'; }\n  else if (model.indexOf('realtek') >= 0) { result = 'Realtek'; }\n  else if (model.indexOf('qualcom') >= 0) { result = 'Qualcom'; }\n  else if (model.indexOf('broadcom') >= 0) { result = 'Broadcom'; }\n  else if (model.indexOf('cavium') >= 0) { result = 'Cavium'; }\n  else if (model.indexOf('cisco') >= 0) { result = 'Cisco'; }\n  else if (model.indexOf('marvel') >= 0) { result = 'Marvel'; }\n  else if (model.indexOf('zyxel') >= 0) { result = 'Zyxel'; }\n  else if (model.indexOf('melanox') >= 0) { result = 'Melanox'; }\n  else if (model.indexOf('d-link') >= 0) { result = 'D-Link'; }\n  else if (model.indexOf('tp-link') >= 0) { result = 'TP-Link'; }\n  else if (model.indexOf('asus') >= 0) { result = 'Asus'; }\n  else if (model.indexOf('linksys') >= 0) { result = 'Linksys'; }\n  return result;\n}\n\nfunction wifiConnections(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const result = [];\n\n      if (_linux) {\n        const ifaces = ifaceListLinux();\n        const networkList = getWifiNetworkListNmi();\n        ifaces.forEach(ifaceDetail => {\n          const nmiDetails = nmiDeviceLinux(ifaceDetail.iface);\n          const wpaDetails = wpaConnectionLinux(ifaceDetail.iface);\n          const ssid = nmiDetails.ssid || wpaDetails.ssid;\n          const network = networkList.filter(nw => nw.ssid === ssid);\n          const nmiConnection = nmiConnectionLinux(ssid);\n          const channel = network && network.length && network[0].channel ? network[0].channel : (wpaDetails.channel ? wpaDetails.channel : null);\n          const bssid = network && network.length && network[0].bssid ? network[0].bssid : (wpaDetails.bssid ? wpaDetails.bssid : null);\n          if (ssid && bssid) {\n            result.push({\n              id: ifaceDetail.id,\n              iface: ifaceDetail.iface,\n              model: nmiDetails.product,\n              ssid,\n              bssid: network && network.length && network[0].bssid ? network[0].bssid : (wpaDetails.bssid ? wpaDetails.bssid : null),\n              channel,\n              frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n              type: nmiConnection.type ? nmiConnection.type : '802.11',\n              security: nmiConnection.security ? nmiConnection.security : (wpaDetails.security ? wpaDetails.security : null),\n              signalLevel: network && network.length && network[0].signalLevel ? network[0].signalLevel : null,\n              txRate: null\n            });\n          }\n        });\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      } else if (_darwin) {\n        let cmd = 'system_profiler SPNetworkDataType';\n        exec(cmd, function (error, stdout) {\n          const parts1 = stdout.toString().split('\\n\\n    Wi-Fi:\\n\\n');\n          if (parts1.length > 1) {\n            const lines = parts1[1].split('\\n\\n')[0].split('\\n');\n            const iface = util.getValue(lines, 'BSD Device Name', ':', true);\n            const model = util.getValue(lines, 'hardware', ':', true);\n            cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I';\n            exec(cmd, function (error, stdout) {\n              const lines2 = stdout.toString().split('\\n');\n              if (lines.length > 10) {\n                const ssid = util.getValue(lines2, 'ssid', ':', true);\n                const bssid = util.getValue(lines2, 'bssid', ':', true);\n                const security = util.getValue(lines2, 'link auth', ':', true);\n                const txRate = util.getValue(lines2, 'lastTxRate', ':', true);\n                const channel = util.getValue(lines2, 'channel', ':', true).split(',')[0];\n                const type = '802.11';\n                const rssi = util.toInt(util.getValue(lines2, 'agrCtlRSSI', ':', true));\n                const noise = util.toInt(util.getValue(lines2, 'agrCtlNoise', ':', true));\n                const signalLevel = rssi - noise;\n                // const signal = wifiQualityFromDB(signalLevel);\n                if (ssid && bssid) {\n                  result.push({\n                    id: 'Wi-Fi',\n                    iface,\n                    model,\n                    ssid,\n                    bssid,\n                    channel: util.toInt(channel),\n                    frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n                    type,\n                    security,\n                    signalLevel,\n                    txRate\n                  });\n\n                }\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          }\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show interfaces';\n        exec(cmd, util.execOptsWin, function (error, stdout) {\n          const parts = stdout.toString().split(': \\r\\n\\r\\n');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = part.split('\\r\\n');\n            if (lines.length >= 5) {\n              const iface = lines[0].indexOf(':') >= 0 ? lines[0].split(':')[1].trim() : '';\n              const model = lines[1].indexOf(':') >= 0 ? lines[1].split(':')[1].trim() : '';\n              const id = lines[2].indexOf(':') >= 0 ? lines[2].split(':')[1].trim() : '';\n              const ssid = util.getValue(lines, 'SSID', ':', true);\n              const bssid = util.getValue(lines, 'BSSID', ':', true);\n              const signalLevel = util.getValue(lines, 'Signal', ':', true);\n              const type = util.getValue(lines, 'Radio type', ':', true) || util.getValue(lines, 'Type de radio', ':', true) || util.getValue(lines, 'Funktyp', ':', true) || null;\n              const security = util.getValue(lines, 'authentication', ':', true) || util.getValue(lines, 'Authentification', ':', true) || util.getValue(lines, 'Authentifizierung', ':', true) || null;\n              const channel = util.getValue(lines, 'Channel', ':', true) || util.getValue(lines, 'Canal', ':', true) || util.getValue(lines, 'Kanal', ':', true) || null;\n              const txRate = util.getValue(lines, 'Transmit rate (mbps)', ':', true) || util.getValue(lines, 'Transmission (mbit/s)', ':', true) || util.getValue(lines, 'Empfangsrate (MBit/s)', ':', true) || null;\n              if (model && id && ssid && bssid) {\n                result.push({\n                  id,\n                  iface,\n                  model,\n                  ssid,\n                  bssid,\n                  channel: util.toInt(channel),\n                  frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n                  type,\n                  security,\n                  signalLevel,\n                  txRate: util.toInt(txRate) || null\n                });\n              }\n            }\n          });\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiConnections = wifiConnections;\n\nfunction wifiInterfaces(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const result = [];\n\n      if (_linux) {\n        const ifaces = ifaceListLinux();\n        ifaces.forEach(ifaceDetail => {\n          const nmiDetails = nmiDeviceLinux(ifaceDetail.iface);\n          result.push({\n            id: ifaceDetail.id,\n            iface: ifaceDetail.iface,\n            model: nmiDetails.product ? nmiDetails.product : null,\n            vendor: nmiDetails.vendor ? nmiDetails.vendor : null,\n            mac: ifaceDetail.mac,\n          });\n        });\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      } else if (_darwin) {\n        let cmd = 'system_profiler SPNetworkDataType';\n        exec(cmd, function (error, stdout) {\n          const parts1 = stdout.toString().split('\\n\\n    Wi-Fi:\\n\\n');\n          if (parts1.length > 1) {\n            const lines = parts1[1].split('\\n\\n')[0].split('\\n');\n            const iface = util.getValue(lines, 'BSD Device Name', ':', true);\n            const mac = util.getValue(lines, 'MAC Address', ':', true);\n            const model = util.getValue(lines, 'hardware', ':', true);\n            result.push({\n              id: 'Wi-Fi',\n              iface,\n              model,\n              vendor: '',\n              mac\n            });\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show interfaces';\n        exec(cmd, util.execOptsWin, function (error, stdout) {\n          const parts = stdout.toString().split(': \\r\\n\\r\\n');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = part.split('\\r\\n');\n            if (lines.length >= 5) {\n              const iface = lines[0].indexOf(':') >= 0 ? lines[0].split(':')[1].trim() : '';\n              const model = lines[1].indexOf(':') >= 0 ? lines[1].split(':')[1].trim() : '';\n              const id = lines[2].indexOf(':') >= 0 ? lines[2].split(':')[1].trim() : '';\n              const macParts = lines[3].indexOf(':') >= 0 ? lines[3].split(':') : [];\n              macParts.shift();\n              const mac = macParts.join(':').trim();\n              const vendor = getVendor(model);\n              if (iface && model && id && mac) {\n                result.push({\n                  id,\n                  iface,\n                  model,\n                  vendor,\n                  mac,\n                });\n              }\n            }\n          });\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiInterfaces = wifiInterfaces;\n","/**\n * Utility function that works like `Object.apply`, but copies getters and setters properly as well.  Additionally gives\n * the option to exclude properties by name.\n */\nconst copyProps = (dest, src, exclude = []) => {\n    const props = Object.getOwnPropertyDescriptors(src);\n    for (let prop of exclude)\n        delete props[prop];\n    Object.defineProperties(dest, props);\n};\n/**\n * Returns the full chain of prototypes up until Object.prototype given a starting object.  The order of prototypes will\n * be closest to farthest in the chain.\n */\nconst protoChain = (obj, currentChain = [obj]) => {\n    const proto = Object.getPrototypeOf(obj);\n    if (proto === null)\n        return currentChain;\n    return protoChain(proto, [...currentChain, proto]);\n};\n/**\n * Identifies the nearest ancestor common to all the given objects in their prototype chains.  For most unrelated\n * objects, this function should return Object.prototype.\n */\nconst nearestCommonProto = (...objs) => {\n    if (objs.length === 0)\n        return undefined;\n    let commonProto = undefined;\n    const protoChains = objs.map(obj => protoChain(obj));\n    while (protoChains.every(protoChain => protoChain.length > 0)) {\n        const protos = protoChains.map(protoChain => protoChain.pop());\n        const potentialCommonProto = protos[0];\n        if (protos.every(proto => proto === potentialCommonProto))\n            commonProto = potentialCommonProto;\n        else\n            break;\n    }\n    return commonProto;\n};\n/**\n * Creates a new prototype object that is a mixture of the given prototypes.  The mixing is achieved by first\n * identifying the nearest common ancestor and using it as the prototype for a new object.  Then all properties/methods\n * downstream of this prototype (ONLY downstream) are copied into the new object.\n *\n * The resulting prototype is more performant than softMixProtos(...), as well as ES5 compatible.  However, it's not as\n * flexible as updates to the source prototypes aren't captured by the mixed result.  See softMixProtos for why you may\n * want to use that instead.\n */\nconst hardMixProtos = (ingredients, constructor, exclude = []) => {\n    var _a;\n    const base = (_a = nearestCommonProto(...ingredients)) !== null && _a !== void 0 ? _a : Object.prototype;\n    const mixedProto = Object.create(base);\n    // Keeps track of prototypes we've already visited to avoid copying the same properties multiple times.  We init the\n    // list with the proto chain below the nearest common ancestor because we don't want any of those methods mixed in\n    // when they will already be accessible via prototype access.\n    const visitedProtos = protoChain(base);\n    for (let prototype of ingredients) {\n        let protos = protoChain(prototype);\n        // Apply the prototype chain in reverse order so that old methods don't override newer ones.\n        for (let i = protos.length - 1; i >= 0; i--) {\n            let newProto = protos[i];\n            if (visitedProtos.indexOf(newProto) === -1) {\n                copyProps(mixedProto, newProto, ['constructor', ...exclude]);\n                visitedProtos.push(newProto);\n            }\n        }\n    }\n    mixedProto.constructor = constructor;\n    return mixedProto;\n};\nconst unique = (arr) => arr.filter((e, i) => arr.indexOf(e) == i);\n\n/**\n * Finds the ingredient with the given prop, searching in reverse order and breadth-first if searching ingredient\n * prototypes is required.\n */\nconst getIngredientWithProp = (prop, ingredients) => {\n    const protoChains = ingredients.map(ingredient => protoChain(ingredient));\n    // since we search breadth-first, we need to keep track of our depth in the prototype chains\n    let protoDepth = 0;\n    // not all prototype chains are the same depth, so this remains true as long as at least one of the ingredients'\n    // prototype chains has an object at this depth\n    let protosAreLeftToSearch = true;\n    while (protosAreLeftToSearch) {\n        // with the start of each horizontal slice, we assume this is the one that's deeper than any of the proto chains\n        protosAreLeftToSearch = false;\n        // scan through the ingredients right to left\n        for (let i = ingredients.length - 1; i >= 0; i--) {\n            const searchTarget = protoChains[i][protoDepth];\n            if (searchTarget !== undefined && searchTarget !== null) {\n                // if we find something, this is proof that this horizontal slice potentially more objects to search\n                protosAreLeftToSearch = true;\n                // eureka, we found it\n                if (Object.getOwnPropertyDescriptor(searchTarget, prop) != undefined) {\n                    return protoChains[i][0];\n                }\n            }\n        }\n        protoDepth++;\n    }\n    return undefined;\n};\n/**\n * \"Mixes\" ingredients by wrapping them in a Proxy.  The optional prototype argument allows the mixed object to sit\n * downstream of an existing prototype chain.  Note that \"properties\" cannot be added, deleted, or modified.\n */\nconst proxyMix = (ingredients, prototype = Object.prototype) => new Proxy({}, {\n    getPrototypeOf() {\n        return prototype;\n    },\n    setPrototypeOf() {\n        throw Error('Cannot set prototype of Proxies created by ts-mixer');\n    },\n    getOwnPropertyDescriptor(_, prop) {\n        return Object.getOwnPropertyDescriptor(getIngredientWithProp(prop, ingredients) || {}, prop);\n    },\n    defineProperty() {\n        throw new Error('Cannot define new properties on Proxies created by ts-mixer');\n    },\n    has(_, prop) {\n        return getIngredientWithProp(prop, ingredients) !== undefined || prototype[prop] !== undefined;\n    },\n    get(_, prop) {\n        return (getIngredientWithProp(prop, ingredients) || prototype)[prop];\n    },\n    set(_, prop, val) {\n        const ingredientWithProp = getIngredientWithProp(prop, ingredients);\n        if (ingredientWithProp === undefined)\n            throw new Error('Cannot set new properties on Proxies created by ts-mixer');\n        ingredientWithProp[prop] = val;\n        return true;\n    },\n    deleteProperty() {\n        throw new Error('Cannot delete properties on Proxies created by ts-mixer');\n    },\n    ownKeys() {\n        return ingredients\n            .map(Object.getOwnPropertyNames)\n            .reduce((prev, curr) => curr.concat(prev.filter(key => curr.indexOf(key) < 0)));\n    },\n});\n/**\n * Creates a new proxy-prototype object that is a \"soft\" mixture of the given prototypes.  The mixing is achieved by\n * proxying all property access to the ingredients.  This is not ES5 compatible and less performant.  However, any\n * changes made to the source prototypes will be reflected in the proxy-prototype, which may be desirable.\n */\nconst softMixProtos = (ingredients, constructor) => proxyMix([...ingredients, { constructor }]);\n\nconst settings = {\n    initFunction: null,\n    staticsStrategy: 'copy',\n    prototypeStrategy: 'copy',\n    decoratorInheritance: 'deep',\n};\n\n// Keeps track of constituent classes for every mixin class created by ts-mixer.\nconst mixins = new Map();\nconst getMixinsForClass = (clazz) => mixins.get(clazz);\nconst registerMixins = (mixedClass, constituents) => mixins.set(mixedClass, constituents);\nconst hasMixin = (instance, mixin) => {\n    if (instance instanceof mixin)\n        return true;\n    const constructor = instance.constructor;\n    const visited = new Set();\n    let frontier = new Set();\n    frontier.add(constructor);\n    while (frontier.size > 0) {\n        // check if the frontier has the mixin we're looking for.  if not, we can say we visited every item in the frontier\n        if (frontier.has(mixin))\n            return true;\n        frontier.forEach(item => visited.add(item));\n        // build a new frontier based on the associated mixin classes and prototype chains of each frontier item\n        const newFrontier = new Set();\n        frontier.forEach(item => {\n            var _a;\n            const itemConstituents = (_a = mixins.get(item)) !== null && _a !== void 0 ? _a : protoChain(item.prototype).map(proto => proto.constructor).filter(item => item !== null);\n            if (itemConstituents)\n                itemConstituents.forEach(constituent => {\n                    if (!visited.has(constituent) && !frontier.has(constituent))\n                        newFrontier.add(constituent);\n                });\n        });\n        // we have a new frontier, now search again\n        frontier = newFrontier;\n    }\n    // if we get here, we couldn't find the mixin anywhere in the prototype chain or associated mixin classes\n    return false;\n};\n\nconst mergeObjectsOfDecorators = (o1, o2) => {\n    var _a, _b;\n    const allKeys = unique([...Object.getOwnPropertyNames(o1), ...Object.getOwnPropertyNames(o2)]);\n    const mergedObject = {};\n    for (let key of allKeys)\n        mergedObject[key] = unique([...((_a = o1 === null || o1 === void 0 ? void 0 : o1[key]) !== null && _a !== void 0 ? _a : []), ...((_b = o2 === null || o2 === void 0 ? void 0 : o2[key]) !== null && _b !== void 0 ? _b : [])]);\n    return mergedObject;\n};\nconst mergePropertyAndMethodDecorators = (d1, d2) => {\n    var _a, _b, _c, _d;\n    return ({\n        property: mergeObjectsOfDecorators((_a = d1 === null || d1 === void 0 ? void 0 : d1.property) !== null && _a !== void 0 ? _a : {}, (_b = d2 === null || d2 === void 0 ? void 0 : d2.property) !== null && _b !== void 0 ? _b : {}),\n        method: mergeObjectsOfDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.method) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.method) !== null && _d !== void 0 ? _d : {}),\n    });\n};\nconst mergeDecorators = (d1, d2) => {\n    var _a, _b, _c, _d, _e, _f;\n    return ({\n        class: unique([...(_a = d1 === null || d1 === void 0 ? void 0 : d1.class) !== null && _a !== void 0 ? _a : [], ...(_b = d2 === null || d2 === void 0 ? void 0 : d2.class) !== null && _b !== void 0 ? _b : []]),\n        static: mergePropertyAndMethodDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.static) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.static) !== null && _d !== void 0 ? _d : {}),\n        instance: mergePropertyAndMethodDecorators((_e = d1 === null || d1 === void 0 ? void 0 : d1.instance) !== null && _e !== void 0 ? _e : {}, (_f = d2 === null || d2 === void 0 ? void 0 : d2.instance) !== null && _f !== void 0 ? _f : {}),\n    });\n};\nconst decorators = new Map();\nconst findAllConstituentClasses = (...classes) => {\n    var _a;\n    const allClasses = new Set();\n    const frontier = new Set([...classes]);\n    while (frontier.size > 0) {\n        for (let clazz of frontier) {\n            const protoChainClasses = protoChain(clazz.prototype).map(proto => proto.constructor);\n            const mixinClasses = (_a = getMixinsForClass(clazz)) !== null && _a !== void 0 ? _a : [];\n            const potentiallyNewClasses = [...protoChainClasses, ...mixinClasses];\n            const newClasses = potentiallyNewClasses.filter(c => !allClasses.has(c));\n            for (let newClass of newClasses)\n                frontier.add(newClass);\n            allClasses.add(clazz);\n            frontier.delete(clazz);\n        }\n    }\n    return [...allClasses];\n};\nconst deepDecoratorSearch = (...classes) => {\n    const decoratorsForClassChain = findAllConstituentClasses(...classes)\n        .map(clazz => decorators.get(clazz))\n        .filter(decorators => !!decorators);\n    if (decoratorsForClassChain.length == 0)\n        return {};\n    if (decoratorsForClassChain.length == 1)\n        return decoratorsForClassChain[0];\n    return decoratorsForClassChain.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst directDecoratorSearch = (...classes) => {\n    const classDecorators = classes.map(clazz => getDecoratorsForClass(clazz));\n    if (classDecorators.length === 0)\n        return {};\n    if (classDecorators.length === 1)\n        return classDecorators[1];\n    return classDecorators.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst getDecoratorsForClass = (clazz) => {\n    let decoratorsForClass = decorators.get(clazz);\n    if (!decoratorsForClass) {\n        decoratorsForClass = {};\n        decorators.set(clazz, decoratorsForClass);\n    }\n    return decoratorsForClass;\n};\nconst decorateClass = (decorator) => ((clazz) => {\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    let classDecorators = decoratorsForClass.class;\n    if (!classDecorators) {\n        classDecorators = [];\n        decoratorsForClass.class = classDecorators;\n    }\n    classDecorators.push(decorator);\n    return decorator(clazz);\n});\nconst decorateMember = (decorator) => ((object, key, ...otherArgs) => {\n    const decoratorTargetType = typeof object === 'function' ? 'static' : 'instance';\n    const decoratorType = typeof object[key] === 'function' ? 'method' : 'property';\n    const clazz = decoratorTargetType === 'static' ? object : object.constructor;\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    let decoratorsForTargetType = decoratorsForClass === null || decoratorsForClass === void 0 ? void 0 : decoratorsForClass[decoratorTargetType];\n    if (!decoratorsForTargetType) {\n        decoratorsForTargetType = {};\n        decoratorsForClass[decoratorTargetType] = decoratorsForTargetType;\n    }\n    let decoratorsForType = decoratorsForTargetType === null || decoratorsForTargetType === void 0 ? void 0 : decoratorsForTargetType[decoratorType];\n    if (!decoratorsForType) {\n        decoratorsForType = {};\n        decoratorsForTargetType[decoratorType] = decoratorsForType;\n    }\n    let decoratorsForKey = decoratorsForType === null || decoratorsForType === void 0 ? void 0 : decoratorsForType[key];\n    if (!decoratorsForKey) {\n        decoratorsForKey = [];\n        decoratorsForType[key] = decoratorsForKey;\n    }\n    decoratorsForKey.push(decorator);\n    // @ts-ignore\n    return decorator(object, key, ...otherArgs);\n});\nconst decorate = (decorator) => ((...args) => {\n    if (args.length === 1)\n        return decorateClass(decorator)(args[0]);\n    return decorateMember(decorator)(...args);\n});\n\nfunction Mixin(...constructors) {\n    var _a, _b, _c;\n    const prototypes = constructors.map(constructor => constructor.prototype);\n    // Here we gather up the init functions of the ingredient prototypes, combine them into one init function, and\n    // attach it to the mixed class prototype.  The reason we do this is because we want the init functions to mix\n    // similarly to constructors -- not methods, which simply override each other.\n    const initFunctionName = settings.initFunction;\n    if (initFunctionName !== null) {\n        const initFunctions = prototypes\n            .map(proto => proto[initFunctionName])\n            .filter(func => typeof func === 'function');\n        const combinedInitFunction = function (...args) {\n            for (let initFunction of initFunctions)\n                initFunction.apply(this, args);\n        };\n        const extraProto = { [initFunctionName]: combinedInitFunction };\n        prototypes.push(extraProto);\n    }\n    function MixedClass(...args) {\n        for (const constructor of constructors)\n            // @ts-ignore: potentially abstract class\n            copyProps(this, new constructor(...args));\n        if (initFunctionName !== null && typeof this[initFunctionName] === 'function')\n            this[initFunctionName].apply(this, args);\n    }\n    MixedClass.prototype = settings.prototypeStrategy === 'copy'\n        ? hardMixProtos(prototypes, MixedClass)\n        : softMixProtos(prototypes, MixedClass);\n    Object.setPrototypeOf(MixedClass, settings.staticsStrategy === 'copy'\n        ? hardMixProtos(constructors, null, ['prototype'])\n        : proxyMix(constructors, Function.prototype));\n    let DecoratedMixedClass = MixedClass;\n    if (settings.decoratorInheritance !== 'none') {\n        const classDecorators = settings.decoratorInheritance === 'deep'\n            ? deepDecoratorSearch(...constructors)\n            : directDecoratorSearch(...constructors);\n        for (let decorator of (_a = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.class) !== null && _a !== void 0 ? _a : [])\n            DecoratedMixedClass = decorator(DecoratedMixedClass);\n        applyPropAndMethodDecorators((_b = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.static) !== null && _b !== void 0 ? _b : {}, DecoratedMixedClass);\n        applyPropAndMethodDecorators((_c = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.instance) !== null && _c !== void 0 ? _c : {}, DecoratedMixedClass.prototype);\n    }\n    registerMixins(DecoratedMixedClass, constructors);\n    return DecoratedMixedClass;\n}\nconst applyPropAndMethodDecorators = (propAndMethodDecorators, target) => {\n    const propDecorators = propAndMethodDecorators.property;\n    const methodDecorators = propAndMethodDecorators.method;\n    if (propDecorators)\n        for (let key in propDecorators)\n            for (let decorator of propDecorators[key])\n                decorator(target, key);\n    if (methodDecorators)\n        for (let key in methodDecorators)\n            for (let decorator of methodDecorators[key])\n                decorator(target, key, Object.getOwnPropertyDescriptor(target, key));\n};\n/**\n * A decorator version of the `Mixin` function.  You'll want to use this instead of `Mixin` for mixing generic classes.\n */\nconst mix = (...ingredients) => decoratedClass => {\n    // @ts-ignore\n    const mixedClass = Mixin(...ingredients.concat([decoratedClass]));\n    Object.defineProperty(mixedClass, 'name', {\n        value: decoratedClass.name,\n        writable: false,\n    });\n    return mixedClass;\n};\n\nexport { Mixin, decorate, hasMixin, mix, settings };\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/**\n * Convert a typed array to a Buffer without a copy\n *\n * Author:   Feross Aboukhadijeh <https://feross.org>\n * License:  MIT\n *\n * `npm install typedarray-to-buffer`\n */\n\nvar isTypedArray = require('is-typedarray').strict\n\nmodule.exports = function typedarrayToBuffer (arr) {\n  if (isTypedArray(arr)) {\n    // To avoid a copy, use the typed array's underlying ArrayBuffer to back new Buffer\n    var buf = Buffer.from(arr.buffer)\n    if (arr.byteLength !== arr.buffer.byteLength) {\n      // Respect the \"view\", i.e. byteOffset and byteLength, without doing a copy\n      buf = buf.slice(arr.byteOffset, arr.byteOffset + arr.byteLength)\n    }\n    return buf\n  } else {\n    // Pass through all other types to `Buffer.from`\n    return Buffer.from(arr)\n  }\n}\n","'use strict';\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0x00) {  // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {  // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0  // overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {  // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 ||  // overlong\n        buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0  // surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {  // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 ||  // overlong\n        buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4  // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = isValidUTF8;\n","'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","'use strict';\nmodule.exports = function (str) {\n\treturn !isNaN(Date.parse(str));\n};\n","module.exports = require('./lib/websocket');","/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar Deprecation = {\n    disableWarnings: false,\n\n    deprecationWarningMap: {\n\n    },\n\n    warn: function(deprecationName) {\n        if (!this.disableWarnings && this.deprecationWarningMap[deprecationName]) {\n            console.warn('DEPRECATION WARNING: ' + this.deprecationWarningMap[deprecationName]);\n            this.deprecationWarningMap[deprecationName] = false;\n        }\n    }\n};\n\nmodule.exports = Deprecation;\n","/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar WebSocketClient = require('./WebSocketClient');\nvar toBuffer = require('typedarray-to-buffer');\nvar yaeti = require('yaeti');\n\n\nconst CONNECTING = 0;\nconst OPEN = 1;\nconst CLOSING = 2;\nconst CLOSED = 3;\n\n\nmodule.exports = W3CWebSocket;\n\n\nfunction W3CWebSocket(url, protocols, origin, headers, requestOptions, clientConfig) {\n    // Make this an EventTarget.\n    yaeti.EventTarget.call(this);\n\n    // Sanitize clientConfig.\n    clientConfig = clientConfig || {};\n    clientConfig.assembleFragments = true;  // Required in the W3C API.\n\n    var self = this;\n\n    this._url = url;\n    this._readyState = CONNECTING;\n    this._protocol = undefined;\n    this._extensions = '';\n    this._bufferedAmount = 0;  // Hack, always 0.\n    this._binaryType = 'arraybuffer';  // TODO: Should be 'blob' by default, but Node has no Blob.\n\n    // The WebSocketConnection instance.\n    this._connection = undefined;\n\n    // WebSocketClient instance.\n    this._client = new WebSocketClient(clientConfig);\n\n    this._client.on('connect', function(connection) {\n        onConnect.call(self, connection);\n    });\n\n    this._client.on('connectFailed', function() {\n        onConnectFailed.call(self);\n    });\n\n    this._client.connect(url, protocols, origin, headers, requestOptions);\n}\n\n\n// Expose W3C read only attributes.\nObject.defineProperties(W3CWebSocket.prototype, {\n    url:            { get: function() { return this._url;            } },\n    readyState:     { get: function() { return this._readyState;     } },\n    protocol:       { get: function() { return this._protocol;       } },\n    extensions:     { get: function() { return this._extensions;     } },\n    bufferedAmount: { get: function() { return this._bufferedAmount; } }\n});\n\n\n// Expose W3C write/read attributes.\nObject.defineProperties(W3CWebSocket.prototype, {\n    binaryType: {\n        get: function() {\n            return this._binaryType;\n        },\n        set: function(type) {\n            // TODO: Just 'arraybuffer' supported.\n            if (type !== 'arraybuffer') {\n                throw new SyntaxError('just \"arraybuffer\" type allowed for \"binaryType\" attribute');\n            }\n            this._binaryType = type;\n        }\n    }\n});\n\n\n// Expose W3C readyState constants into the WebSocket instance as W3C states.\n[['CONNECTING',CONNECTING], ['OPEN',OPEN], ['CLOSING',CLOSING], ['CLOSED',CLOSED]].forEach(function(property) {\n    Object.defineProperty(W3CWebSocket.prototype, property[0], {\n        get: function() { return property[1]; }\n    });\n});\n\n// Also expose W3C readyState constants into the WebSocket class (not defined by the W3C,\n// but there are so many libs relying on them).\n[['CONNECTING',CONNECTING], ['OPEN',OPEN], ['CLOSING',CLOSING], ['CLOSED',CLOSED]].forEach(function(property) {\n    Object.defineProperty(W3CWebSocket, property[0], {\n        get: function() { return property[1]; }\n    });\n});\n\n\nW3CWebSocket.prototype.send = function(data) {\n    if (this._readyState !== OPEN) {\n        throw new Error('cannot call send() while not connected');\n    }\n\n    // Text.\n    if (typeof data === 'string' || data instanceof String) {\n        this._connection.sendUTF(data);\n    }\n    // Binary.\n    else {\n        // Node Buffer.\n        if (data instanceof Buffer) {\n            this._connection.sendBytes(data);\n        }\n        // If ArrayBuffer or ArrayBufferView convert it to Node Buffer.\n        else if (data.byteLength || data.byteLength === 0) {\n            data = toBuffer(data);\n            this._connection.sendBytes(data);\n        }\n        else {\n            throw new Error('unknown binary data:', data);\n        }\n    }\n};\n\n\nW3CWebSocket.prototype.close = function(code, reason) {\n    switch(this._readyState) {\n        case CONNECTING:\n            // NOTE: We don't have the WebSocketConnection instance yet so no\n            // way to close the TCP connection.\n            // Artificially invoke the onConnectFailed event.\n            onConnectFailed.call(this);\n            // And close if it connects after a while.\n            this._client.on('connect', function(connection) {\n                if (code) {\n                    connection.close(code, reason);\n                } else {\n                    connection.close();\n                }\n            });\n            break;\n        case OPEN:\n            this._readyState = CLOSING;\n            if (code) {\n                this._connection.close(code, reason);\n            } else {\n                this._connection.close();\n            }\n            break;\n        case CLOSING:\n        case CLOSED:\n            break;\n    }\n};\n\n\n/**\n * Private API.\n */\n\n\nfunction createCloseEvent(code, reason) {\n    var event = new yaeti.Event('close');\n\n    event.code = code;\n    event.reason = reason;\n    event.wasClean = (typeof code === 'undefined' || code === 1000);\n\n    return event;\n}\n\n\nfunction createMessageEvent(data) {\n    var event = new yaeti.Event('message');\n\n    event.data = data;\n\n    return event;\n}\n\n\nfunction onConnect(connection) {\n    var self = this;\n\n    this._readyState = OPEN;\n    this._connection = connection;\n    this._protocol = connection.protocol;\n    this._extensions = connection.extensions;\n\n    this._connection.on('close', function(code, reason) {\n        onClose.call(self, code, reason);\n    });\n\n    this._connection.on('message', function(msg) {\n        onMessage.call(self, msg);\n    });\n\n    this.dispatchEvent(new yaeti.Event('open'));\n}\n\n\nfunction onConnectFailed() {\n    destroy.call(this);\n    this._readyState = CLOSED;\n\n    try {\n        this.dispatchEvent(new yaeti.Event('error'));\n    } finally {\n        this.dispatchEvent(createCloseEvent(1006, 'connection failed'));\n    }\n}\n\n\nfunction onClose(code, reason) {\n    destroy.call(this);\n    this._readyState = CLOSED;\n\n    this.dispatchEvent(createCloseEvent(code, reason || ''));\n}\n\n\nfunction onMessage(message) {\n    if (message.utf8Data) {\n        this.dispatchEvent(createMessageEvent(message.utf8Data));\n    }\n    else if (message.binaryData) {\n        // Must convert from Node Buffer to ArrayBuffer.\n        // TODO: or to a Blob (which does not exist in Node!).\n        if (this.binaryType === 'arraybuffer') {\n            var buffer = message.binaryData;\n            var arraybuffer = new ArrayBuffer(buffer.length);\n            var view = new Uint8Array(arraybuffer);\n            for (var i=0, len=buffer.length; i<len; ++i) {\n                view[i] = buffer[i];\n            }\n            this.dispatchEvent(createMessageEvent(arraybuffer));\n        }\n    }\n}\n\n\nfunction destroy() {\n    this._client.removeAllListeners();\n    if (this._connection) {\n        this._connection.removeAllListeners();\n    }\n}\n","/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar utils = require('./utils');\nvar extend = utils.extend;\nvar util = require('util');\nvar EventEmitter = require('events').EventEmitter;\nvar http = require('http');\nvar https = require('https');\nvar url = require('url');\nvar crypto = require('crypto');\nvar WebSocketConnection = require('./WebSocketConnection');\nvar bufferAllocUnsafe = utils.bufferAllocUnsafe;\n\nvar protocolSeparators = [\n    '(', ')', '<', '>', '@',\n    ',', ';', ':', '\\\\', '\\\"',\n    '/', '[', ']', '?', '=',\n    '{', '}', ' ', String.fromCharCode(9)\n];\n\nvar excludedTlsOptions = ['hostname','port','method','path','headers'];\n\nfunction WebSocketClient(config) {\n    // Superclass Constructor\n    EventEmitter.call(this);\n\n    // TODO: Implement extensions\n\n    this.config = {\n        // 1MiB max frame size.\n        maxReceivedFrameSize: 0x100000,\n\n        // 8MiB max message size, only applicable if\n        // assembleFragments is true\n        maxReceivedMessageSize: 0x800000,\n\n        // Outgoing messages larger than fragmentationThreshold will be\n        // split into multiple fragments.\n        fragmentOutgoingMessages: true,\n\n        // Outgoing frames are fragmented if they exceed this threshold.\n        // Default is 16KiB\n        fragmentationThreshold: 0x4000,\n\n        // Which version of the protocol to use for this session.  This\n        // option will be removed once the protocol is finalized by the IETF\n        // It is only available to ease the transition through the\n        // intermediate draft protocol versions.\n        // At present, it only affects the name of the Origin header.\n        webSocketVersion: 13,\n\n        // If true, fragmented messages will be automatically assembled\n        // and the full message will be emitted via a 'message' event.\n        // If false, each frame will be emitted via a 'frame' event and\n        // the application will be responsible for aggregating multiple\n        // fragmented frames.  Single-frame messages will emit a 'message'\n        // event in addition to the 'frame' event.\n        // Most users will want to leave this set to 'true'\n        assembleFragments: true,\n\n        // The Nagle Algorithm makes more efficient use of network resources\n        // by introducing a small delay before sending small packets so that\n        // multiple messages can be batched together before going onto the\n        // wire.  This however comes at the cost of latency, so the default\n        // is to disable it.  If you don't need low latency and are streaming\n        // lots of small messages, you can change this to 'false'\n        disableNagleAlgorithm: true,\n\n        // The number of milliseconds to wait after sending a close frame\n        // for an acknowledgement to come back before giving up and just\n        // closing the socket.\n        closeTimeout: 5000,\n\n        // Options to pass to https.connect if connecting via TLS\n        tlsOptions: {}\n    };\n\n    if (config) {\n        var tlsOptions;\n        if (config.tlsOptions) {\n          tlsOptions = config.tlsOptions;\n          delete config.tlsOptions;\n        }\n        else {\n          tlsOptions = {};\n        }\n        extend(this.config, config);\n        extend(this.config.tlsOptions, tlsOptions);\n    }\n\n    this._req = null;\n    \n    switch (this.config.webSocketVersion) {\n        case 8:\n        case 13:\n            break;\n        default:\n            throw new Error('Requested webSocketVersion is not supported. Allowed values are 8 and 13.');\n    }\n}\n\nutil.inherits(WebSocketClient, EventEmitter);\n\nWebSocketClient.prototype.connect = function(requestUrl, protocols, origin, headers, extraRequestOptions) {\n    var self = this;\n    \n    if (typeof(protocols) === 'string') {\n        if (protocols.length > 0) {\n            protocols = [protocols];\n        }\n        else {\n            protocols = [];\n        }\n    }\n    if (!(protocols instanceof Array)) {\n        protocols = [];\n    }\n    this.protocols = protocols;\n    this.origin = origin;\n\n    if (typeof(requestUrl) === 'string') {\n        this.url = url.parse(requestUrl);\n    }\n    else {\n        this.url = requestUrl; // in case an already parsed url is passed in.\n    }\n    if (!this.url.protocol) {\n        throw new Error('You must specify a full WebSocket URL, including protocol.');\n    }\n    if (!this.url.host) {\n        throw new Error('You must specify a full WebSocket URL, including hostname. Relative URLs are not supported.');\n    }\n\n    this.secure = (this.url.protocol === 'wss:');\n\n    // validate protocol characters:\n    this.protocols.forEach(function(protocol) {\n        for (var i=0; i < protocol.length; i ++) {\n            var charCode = protocol.charCodeAt(i);\n            var character = protocol.charAt(i);\n            if (charCode < 0x0021 || charCode > 0x007E || protocolSeparators.indexOf(character) !== -1) {\n                throw new Error('Protocol list contains invalid character \"' + String.fromCharCode(charCode) + '\"');\n            }\n        }\n    });\n\n    var defaultPorts = {\n        'ws:': '80',\n        'wss:': '443'\n    };\n\n    if (!this.url.port) {\n        this.url.port = defaultPorts[this.url.protocol];\n    }\n\n    var nonce = bufferAllocUnsafe(16);\n    for (var i=0; i < 16; i++) {\n        nonce[i] = Math.round(Math.random()*0xFF);\n    }\n    this.base64nonce = nonce.toString('base64');\n\n    var hostHeaderValue = this.url.hostname;\n    if ((this.url.protocol === 'ws:' && this.url.port !== '80') ||\n        (this.url.protocol === 'wss:' && this.url.port !== '443'))  {\n        hostHeaderValue += (':' + this.url.port);\n    }\n\n    var reqHeaders = {};\n    if (this.secure && this.config.tlsOptions.hasOwnProperty('headers')) {\n      // Allow for additional headers to be provided when connecting via HTTPS\n      extend(reqHeaders, this.config.tlsOptions.headers);\n    }\n    if (headers) {\n      // Explicitly provided headers take priority over any from tlsOptions\n      extend(reqHeaders, headers);\n    }\n    extend(reqHeaders, {\n        'Upgrade': 'websocket',\n        'Connection': 'Upgrade',\n        'Sec-WebSocket-Version': this.config.webSocketVersion.toString(10),\n        'Sec-WebSocket-Key': this.base64nonce,\n        'Host': reqHeaders.Host || hostHeaderValue\n    });\n\n    if (this.protocols.length > 0) {\n        reqHeaders['Sec-WebSocket-Protocol'] = this.protocols.join(', ');\n    }\n    if (this.origin) {\n        if (this.config.webSocketVersion === 13) {\n            reqHeaders['Origin'] = this.origin;\n        }\n        else if (this.config.webSocketVersion === 8) {\n            reqHeaders['Sec-WebSocket-Origin'] = this.origin;\n        }\n    }\n\n    // TODO: Implement extensions\n\n    var pathAndQuery;\n    // Ensure it begins with '/'.\n    if (this.url.pathname) {\n        pathAndQuery = this.url.path;\n    }\n    else if (this.url.path) {\n        pathAndQuery = '/' + this.url.path;\n    }\n    else {\n        pathAndQuery = '/';\n    }\n\n    function handleRequestError(error) {\n        self._req = null;\n        self.emit('connectFailed', error);\n    }\n\n    var requestOptions = {\n        agent: false\n    };\n    if (extraRequestOptions) {\n        extend(requestOptions, extraRequestOptions);\n    }\n    // These options are always overridden by the library.  The user is not\n    // allowed to specify these directly.\n    extend(requestOptions, {\n        hostname: this.url.hostname,\n        port: this.url.port,\n        method: 'GET',\n        path: pathAndQuery,\n        headers: reqHeaders\n    });\n    if (this.secure) {\n        var tlsOptions = this.config.tlsOptions;\n        for (var key in tlsOptions) {\n            if (tlsOptions.hasOwnProperty(key) && excludedTlsOptions.indexOf(key) === -1) {\n                requestOptions[key] = tlsOptions[key];\n            }\n        }\n    }\n\n    var req = this._req = (this.secure ? https : http).request(requestOptions);\n    req.on('upgrade', function handleRequestUpgrade(response, socket, head) {\n        self._req = null;\n        req.removeListener('error', handleRequestError);\n        self.socket = socket;\n        self.response = response;\n        self.firstDataChunk = head;\n        self.validateHandshake();\n    });\n    req.on('error', handleRequestError);\n\n    req.on('response', function(response) {\n        self._req = null;\n        if (utils.eventEmitterListenerCount(self, 'httpResponse') > 0) {\n            self.emit('httpResponse', response, self);\n            if (response.socket) {\n                response.socket.end();\n            }\n        }\n        else {\n            var headerDumpParts = [];\n            for (var headerName in response.headers) {\n                headerDumpParts.push(headerName + ': ' + response.headers[headerName]);\n            }\n            self.failHandshake(\n                'Server responded with a non-101 status: ' +\n                response.statusCode + ' ' + response.statusMessage +\n                '\\nResponse Headers Follow:\\n' +\n                headerDumpParts.join('\\n') + '\\n'\n            );\n        }\n    });\n    req.end();\n};\n\nWebSocketClient.prototype.validateHandshake = function() {\n    var headers = this.response.headers;\n\n    if (this.protocols.length > 0) {\n        this.protocol = headers['sec-websocket-protocol'];\n        if (this.protocol) {\n            if (this.protocols.indexOf(this.protocol) === -1) {\n                this.failHandshake('Server did not respond with a requested protocol.');\n                return;\n            }\n        }\n        else {\n            this.failHandshake('Expected a Sec-WebSocket-Protocol header.');\n            return;\n        }\n    }\n\n    if (!(headers['connection'] && headers['connection'].toLocaleLowerCase() === 'upgrade')) {\n        this.failHandshake('Expected a Connection: Upgrade header from the server');\n        return;\n    }\n\n    if (!(headers['upgrade'] && headers['upgrade'].toLocaleLowerCase() === 'websocket')) {\n        this.failHandshake('Expected an Upgrade: websocket header from the server');\n        return;\n    }\n\n    var sha1 = crypto.createHash('sha1');\n    sha1.update(this.base64nonce + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');\n    var expectedKey = sha1.digest('base64');\n\n    if (!headers['sec-websocket-accept']) {\n        this.failHandshake('Expected Sec-WebSocket-Accept header from server');\n        return;\n    }\n\n    if (headers['sec-websocket-accept'] !== expectedKey) {\n        this.failHandshake('Sec-WebSocket-Accept header from server didn\\'t match expected value of ' + expectedKey);\n        return;\n    }\n\n    // TODO: Support extensions\n\n    this.succeedHandshake();\n};\n\nWebSocketClient.prototype.failHandshake = function(errorDescription) {\n    if (this.socket && this.socket.writable) {\n        this.socket.end();\n    }\n    this.emit('connectFailed', new Error(errorDescription));\n};\n\nWebSocketClient.prototype.succeedHandshake = function() {\n    var connection = new WebSocketConnection(this.socket, [], this.protocol, true, this.config);\n\n    connection.webSocketVersion = this.config.webSocketVersion;\n    connection._addSocketEventListeners();\n\n    this.emit('connect', connection);\n    if (this.firstDataChunk.length > 0) {\n        connection.handleSocketData(this.firstDataChunk);\n    }\n    this.firstDataChunk = null;\n};\n\nWebSocketClient.prototype.abort = function() {\n    if (this._req) {\n        this._req.abort();\n    }\n};\n\nmodule.exports = WebSocketClient;\n","/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar util = require('util');\nvar utils = require('./utils');\nvar EventEmitter = require('events').EventEmitter;\nvar WebSocketFrame = require('./WebSocketFrame');\nvar BufferList = require('../vendor/FastBufferList');\nvar isValidUTF8 = require('utf-8-validate');\nvar bufferAllocUnsafe = utils.bufferAllocUnsafe;\nvar bufferFromString = utils.bufferFromString;\n\n// Connected, fully-open, ready to send and receive frames\nconst STATE_OPEN = 'open';\n// Received a close frame from the remote peer\nconst STATE_PEER_REQUESTED_CLOSE = 'peer_requested_close';\n// Sent close frame to remote peer.  No further data can be sent.\nconst STATE_ENDING = 'ending';\n// Connection is fully closed.  No further data can be sent or received.\nconst STATE_CLOSED = 'closed';\n\nvar setImmediateImpl = ('setImmediate' in global) ?\n                            global.setImmediate.bind(global) :\n                            process.nextTick.bind(process);\n\nvar idCounter = 0;\n\nfunction WebSocketConnection(socket, extensions, protocol, maskOutgoingPackets, config) {\n    this._debug = utils.BufferingLogger('websocket:connection', ++idCounter);\n    this._debug('constructor');\n    \n    if (this._debug.enabled) {\n        instrumentSocketForDebugging(this, socket);\n    }\n    \n    // Superclass Constructor\n    EventEmitter.call(this);\n\n    this._pingListenerCount = 0;\n    this.on('newListener', function(ev) {\n        if (ev === 'ping'){\n            this._pingListenerCount++;\n        }\n      }).on('removeListener', function(ev) {\n        if (ev === 'ping') {\n            this._pingListenerCount--;\n        }\n    });\n\n    this.config = config;\n    this.socket = socket;\n    this.protocol = protocol;\n    this.extensions = extensions;\n    this.remoteAddress = socket.remoteAddress;\n    this.closeReasonCode = -1;\n    this.closeDescription = null;\n    this.closeEventEmitted = false;\n\n    // We have to mask outgoing packets if we're acting as a WebSocket client.\n    this.maskOutgoingPackets = maskOutgoingPackets;\n\n    // We re-use the same buffers for the mask and frame header for all frames\n    // received on each connection to avoid a small memory allocation for each\n    // frame.\n    this.maskBytes = bufferAllocUnsafe(4);\n    this.frameHeader = bufferAllocUnsafe(10);\n\n    // the BufferList will handle the data streaming in\n    this.bufferList = new BufferList();\n\n    // Prepare for receiving first frame\n    this.currentFrame = new WebSocketFrame(this.maskBytes, this.frameHeader, this.config);\n    this.fragmentationSize = 0; // data received so far...\n    this.frameQueue = [];\n    \n    // Various bits of connection state\n    this.connected = true;\n    this.state = STATE_OPEN;\n    this.waitingForCloseResponse = false;\n    // Received TCP FIN, socket's readable stream is finished.\n    this.receivedEnd = false;\n\n    this.closeTimeout = this.config.closeTimeout;\n    this.assembleFragments = this.config.assembleFragments;\n    this.maxReceivedMessageSize = this.config.maxReceivedMessageSize;\n\n    this.outputBufferFull = false;\n    this.inputPaused = false;\n    this.receivedDataHandler = this.processReceivedData.bind(this);\n    this._closeTimerHandler = this.handleCloseTimer.bind(this);\n\n    // Disable nagle algorithm?\n    this.socket.setNoDelay(this.config.disableNagleAlgorithm);\n\n    // Make sure there is no socket inactivity timeout\n    this.socket.setTimeout(0);\n\n    if (this.config.keepalive && !this.config.useNativeKeepalive) {\n        if (typeof(this.config.keepaliveInterval) !== 'number') {\n            throw new Error('keepaliveInterval must be specified and numeric ' +\n                            'if keepalive is true.');\n        }\n        this._keepaliveTimerHandler = this.handleKeepaliveTimer.bind(this);\n        this.setKeepaliveTimer();\n\n        if (this.config.dropConnectionOnKeepaliveTimeout) {\n            if (typeof(this.config.keepaliveGracePeriod) !== 'number') {\n                throw new Error('keepaliveGracePeriod  must be specified and ' +\n                                'numeric if dropConnectionOnKeepaliveTimeout ' +\n                                'is true.');\n            }\n            this._gracePeriodTimerHandler = this.handleGracePeriodTimer.bind(this);\n        }\n    }\n    else if (this.config.keepalive && this.config.useNativeKeepalive) {\n        if (!('setKeepAlive' in this.socket)) {\n            throw new Error('Unable to use native keepalive: unsupported by ' +\n                            'this version of Node.');\n        }\n        this.socket.setKeepAlive(true, this.config.keepaliveInterval);\n    }\n    \n    // The HTTP Client seems to subscribe to socket error events\n    // and re-dispatch them in such a way that doesn't make sense\n    // for users of our client, so we want to make sure nobody\n    // else is listening for error events on the socket besides us.\n    this.socket.removeAllListeners('error');\n}\n\nWebSocketConnection.CLOSE_REASON_NORMAL = 1000;\nWebSocketConnection.CLOSE_REASON_GOING_AWAY = 1001;\nWebSocketConnection.CLOSE_REASON_PROTOCOL_ERROR = 1002;\nWebSocketConnection.CLOSE_REASON_UNPROCESSABLE_INPUT = 1003;\nWebSocketConnection.CLOSE_REASON_RESERVED = 1004; // Reserved value.  Undefined meaning.\nWebSocketConnection.CLOSE_REASON_NOT_PROVIDED = 1005; // Not to be used on the wire\nWebSocketConnection.CLOSE_REASON_ABNORMAL = 1006; // Not to be used on the wire\nWebSocketConnection.CLOSE_REASON_INVALID_DATA = 1007;\nWebSocketConnection.CLOSE_REASON_POLICY_VIOLATION = 1008;\nWebSocketConnection.CLOSE_REASON_MESSAGE_TOO_BIG = 1009;\nWebSocketConnection.CLOSE_REASON_EXTENSION_REQUIRED = 1010;\nWebSocketConnection.CLOSE_REASON_INTERNAL_SERVER_ERROR = 1011;\nWebSocketConnection.CLOSE_REASON_TLS_HANDSHAKE_FAILED = 1015; // Not to be used on the wire\n\nWebSocketConnection.CLOSE_DESCRIPTIONS = {\n    1000: 'Normal connection closure',\n    1001: 'Remote peer is going away',\n    1002: 'Protocol error',\n    1003: 'Unprocessable input',\n    1004: 'Reserved',\n    1005: 'Reason not provided',\n    1006: 'Abnormal closure, no further detail available',\n    1007: 'Invalid data received',\n    1008: 'Policy violation',\n    1009: 'Message too big',\n    1010: 'Extension requested by client is required',\n    1011: 'Internal Server Error',\n    1015: 'TLS Handshake Failed'\n};\n\nfunction validateCloseReason(code) {\n    if (code < 1000) {\n        // Status codes in the range 0-999 are not used\n        return false;\n    }\n    if (code >= 1000 && code <= 2999) {\n        // Codes from 1000 - 2999 are reserved for use by the protocol.  Only\n        // a few codes are defined, all others are currently illegal.\n        return [1000, 1001, 1002, 1003, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015].indexOf(code) !== -1;\n    }\n    if (code >= 3000 && code <= 3999) {\n        // Reserved for use by libraries, frameworks, and applications.\n        // Should be registered with IANA.  Interpretation of these codes is\n        // undefined by the WebSocket protocol.\n        return true;\n    }\n    if (code >= 4000 && code <= 4999) {\n        // Reserved for private use.  Interpretation of these codes is\n        // undefined by the WebSocket protocol.\n        return true;\n    }\n    if (code >= 5000) {\n        return false;\n    }\n}\n\nutil.inherits(WebSocketConnection, EventEmitter);\n\nWebSocketConnection.prototype._addSocketEventListeners = function() {\n    this.socket.on('error', this.handleSocketError.bind(this));\n    this.socket.on('end', this.handleSocketEnd.bind(this));\n    this.socket.on('close', this.handleSocketClose.bind(this));\n    this.socket.on('drain', this.handleSocketDrain.bind(this));\n    this.socket.on('pause', this.handleSocketPause.bind(this));\n    this.socket.on('resume', this.handleSocketResume.bind(this));\n    this.socket.on('data', this.handleSocketData.bind(this));\n};\n\n// set or reset the keepalive timer when data is received.\nWebSocketConnection.prototype.setKeepaliveTimer = function() {\n    this._debug('setKeepaliveTimer');\n    if (!this.config.keepalive  || this.config.useNativeKeepalive) { return; }\n    this.clearKeepaliveTimer();\n    this.clearGracePeriodTimer();\n    this._keepaliveTimeoutID = setTimeout(this._keepaliveTimerHandler, this.config.keepaliveInterval);\n};\n\nWebSocketConnection.prototype.clearKeepaliveTimer = function() {\n    if (this._keepaliveTimeoutID) {\n        clearTimeout(this._keepaliveTimeoutID);\n    }\n};\n\n// No data has been received within config.keepaliveTimeout ms.\nWebSocketConnection.prototype.handleKeepaliveTimer = function() {\n    this._debug('handleKeepaliveTimer');\n    this._keepaliveTimeoutID = null;\n    this.ping();\n\n    // If we are configured to drop connections if the client doesn't respond\n    // then set the grace period timer.\n    if (this.config.dropConnectionOnKeepaliveTimeout) {\n        this.setGracePeriodTimer();\n    }\n    else {\n        // Otherwise reset the keepalive timer to send the next ping.\n        this.setKeepaliveTimer();\n    }\n};\n\nWebSocketConnection.prototype.setGracePeriodTimer = function() {\n    this._debug('setGracePeriodTimer');\n    this.clearGracePeriodTimer();\n    this._gracePeriodTimeoutID = setTimeout(this._gracePeriodTimerHandler, this.config.keepaliveGracePeriod);\n};\n\nWebSocketConnection.prototype.clearGracePeriodTimer = function() {\n    if (this._gracePeriodTimeoutID) {\n        clearTimeout(this._gracePeriodTimeoutID);\n    }\n};\n\nWebSocketConnection.prototype.handleGracePeriodTimer = function() {\n    this._debug('handleGracePeriodTimer');\n    // If this is called, the client has not responded and is assumed dead.\n    this._gracePeriodTimeoutID = null;\n    this.drop(WebSocketConnection.CLOSE_REASON_ABNORMAL, 'Peer not responding.', true);\n};\n\nWebSocketConnection.prototype.handleSocketData = function(data) {\n    this._debug('handleSocketData');\n    // Reset the keepalive timer when receiving data of any kind.\n    this.setKeepaliveTimer();\n\n    // Add received data to our bufferList, which efficiently holds received\n    // data chunks in a linked list of Buffer objects.\n    this.bufferList.write(data);\n\n    this.processReceivedData();\n};\n\nWebSocketConnection.prototype.processReceivedData = function() {\n    this._debug('processReceivedData');\n    // If we're not connected, we should ignore any data remaining on the buffer.\n    if (!this.connected) { return; }\n\n    // Receiving/parsing is expected to be halted when paused.\n    if (this.inputPaused) { return; }\n\n    var frame = this.currentFrame;\n\n    // WebSocketFrame.prototype.addData returns true if all data necessary to\n    // parse the frame was available.  It returns false if we are waiting for\n    // more data to come in on the wire.\n    if (!frame.addData(this.bufferList)) { this._debug('-- insufficient data for frame'); return; }\n\n    var self = this;\n\n    // Handle possible parsing errors\n    if (frame.protocolError) {\n        // Something bad happened.. get rid of this client.\n        this._debug('-- protocol error');\n        process.nextTick(function() {\n            self.drop(WebSocketConnection.CLOSE_REASON_PROTOCOL_ERROR, frame.dropReason);\n        });\n        return;\n    }\n    else if (frame.frameTooLarge) {\n        this._debug('-- frame too large');\n        process.nextTick(function() {\n            self.drop(WebSocketConnection.CLOSE_REASON_MESSAGE_TOO_BIG, frame.dropReason);\n        });\n        return;\n    }\n\n    // For now since we don't support extensions, all RSV bits are illegal\n    if (frame.rsv1 || frame.rsv2 || frame.rsv3) {\n        this._debug('-- illegal rsv flag');\n        process.nextTick(function() {\n            self.drop(WebSocketConnection.CLOSE_REASON_PROTOCOL_ERROR,\n              'Unsupported usage of rsv bits without negotiated extension.');\n        });\n        return;\n    }\n\n    if (!this.assembleFragments) {\n        this._debug('-- emitting frame');\n        process.nextTick(function() { self.emit('frame', frame); });\n    }\n\n    process.nextTick(function() { self.processFrame(frame); });\n    \n    this.currentFrame = new WebSocketFrame(this.maskBytes, this.frameHeader, this.config);\n\n    // If there's data remaining, schedule additional processing, but yield\n    // for now so that other connections have a chance to have their data\n    // processed.  We use setImmediate here instead of process.nextTick to\n    // explicitly indicate that we wish for other I/O to be handled first.\n    if (this.bufferList.length > 0) {\n        setImmediateImpl(this.receivedDataHandler);\n    }\n};\n\nWebSocketConnection.prototype.handleSocketError = function(error) {\n    this._debug('handleSocketError: %j', error);\n    if (this.state === STATE_CLOSED) {\n\t\t// See https://github.com/theturtle32/WebSocket-Node/issues/288\n        this._debug('  --- Socket \\'error\\' after \\'close\\'');\n        return;\n    }\n    this.closeReasonCode = WebSocketConnection.CLOSE_REASON_ABNORMAL;\n    this.closeDescription = 'Socket Error: ' + error.syscall + ' ' + error.code;\n    this.connected = false;\n    this.state = STATE_CLOSED;\n    this.fragmentationSize = 0;\n    if (utils.eventEmitterListenerCount(this, 'error') > 0) {\n        this.emit('error', error);\n    }\n    this.socket.destroy();\n    this._debug.printOutput();\n};\n\nWebSocketConnection.prototype.handleSocketEnd = function() {\n    this._debug('handleSocketEnd: received socket end.  state = %s', this.state);\n    this.receivedEnd = true;\n    if (this.state === STATE_CLOSED) {\n        // When using the TLS module, sometimes the socket will emit 'end'\n        // after it emits 'close'.  I don't think that's correct behavior,\n        // but we should deal with it gracefully by ignoring it.\n        this._debug('  --- Socket \\'end\\' after \\'close\\'');\n        return;\n    }\n    if (this.state !== STATE_PEER_REQUESTED_CLOSE &&\n        this.state !== STATE_ENDING) {\n      this._debug('  --- UNEXPECTED socket end.');\n      this.socket.end();\n    }\n};\n\nWebSocketConnection.prototype.handleSocketClose = function(hadError) {\n    this._debug('handleSocketClose: received socket close');\n    this.socketHadError = hadError;\n    this.connected = false;\n    this.state = STATE_CLOSED;\n    // If closeReasonCode is still set to -1 at this point then we must\n    // not have received a close frame!!\n    if (this.closeReasonCode === -1) {\n        this.closeReasonCode = WebSocketConnection.CLOSE_REASON_ABNORMAL;\n        this.closeDescription = 'Connection dropped by remote peer.';\n    }\n    this.clearCloseTimer();\n    this.clearKeepaliveTimer();\n    this.clearGracePeriodTimer();\n    if (!this.closeEventEmitted) {\n        this.closeEventEmitted = true;\n        this._debug('-- Emitting WebSocketConnection close event');\n        this.emit('close', this.closeReasonCode, this.closeDescription);\n    }\n};\n\nWebSocketConnection.prototype.handleSocketDrain = function() {\n    this._debug('handleSocketDrain: socket drain event');\n    this.outputBufferFull = false;\n    this.emit('drain');\n};\n\nWebSocketConnection.prototype.handleSocketPause = function() {\n    this._debug('handleSocketPause: socket pause event');\n    this.inputPaused = true;\n    this.emit('pause');\n};\n\nWebSocketConnection.prototype.handleSocketResume = function() {\n    this._debug('handleSocketResume: socket resume event');\n    this.inputPaused = false;\n    this.emit('resume');\n    this.processReceivedData();\n};\n\nWebSocketConnection.prototype.pause = function() {\n    this._debug('pause: pause requested');\n    this.socket.pause();\n};\n\nWebSocketConnection.prototype.resume = function() {\n    this._debug('resume: resume requested');\n    this.socket.resume();\n};\n\nWebSocketConnection.prototype.close = function(reasonCode, description) {\n    if (this.connected) {\n        this._debug('close: Initating clean WebSocket close sequence.');\n        if ('number' !== typeof reasonCode) {\n            reasonCode = WebSocketConnection.CLOSE_REASON_NORMAL;\n        }\n        if (!validateCloseReason(reasonCode)) {\n            throw new Error('Close code ' + reasonCode + ' is not valid.');\n        }\n        if ('string' !== typeof description) {\n            description = WebSocketConnection.CLOSE_DESCRIPTIONS[reasonCode];\n        }\n        this.closeReasonCode = reasonCode;\n        this.closeDescription = description;\n        this.setCloseTimer();\n        this.sendCloseFrame(this.closeReasonCode, this.closeDescription);\n        this.state = STATE_ENDING;\n        this.connected = false;\n    }\n};\n\nWebSocketConnection.prototype.drop = function(reasonCode, description, skipCloseFrame) {\n    this._debug('drop');\n    if (typeof(reasonCode) !== 'number') {\n        reasonCode = WebSocketConnection.CLOSE_REASON_PROTOCOL_ERROR;\n    }\n\n    if (typeof(description) !== 'string') {\n        // If no description is provided, try to look one up based on the\n        // specified reasonCode.\n        description = WebSocketConnection.CLOSE_DESCRIPTIONS[reasonCode];\n    }\n\n    this._debug('Forcefully dropping connection. skipCloseFrame: %s, code: %d, description: %s',\n        skipCloseFrame, reasonCode, description\n    );\n\n    this.closeReasonCode = reasonCode;\n    this.closeDescription = description;\n    this.frameQueue = [];\n    this.fragmentationSize = 0;\n    if (!skipCloseFrame) {\n        this.sendCloseFrame(reasonCode, description);\n    }\n    this.connected = false;\n    this.state = STATE_CLOSED;\n    this.clearCloseTimer();\n    this.clearKeepaliveTimer();\n    this.clearGracePeriodTimer();\n\n    if (!this.closeEventEmitted) {\n        this.closeEventEmitted = true;\n        this._debug('Emitting WebSocketConnection close event');\n        this.emit('close', this.closeReasonCode, this.closeDescription);\n    }\n    \n    this._debug('Drop: destroying socket');\n    this.socket.destroy();\n};\n\nWebSocketConnection.prototype.setCloseTimer = function() {\n    this._debug('setCloseTimer');\n    this.clearCloseTimer();\n    this._debug('Setting close timer');\n    this.waitingForCloseResponse = true;\n    this.closeTimer = setTimeout(this._closeTimerHandler, this.closeTimeout);\n};\n\nWebSocketConnection.prototype.clearCloseTimer = function() {\n    this._debug('clearCloseTimer');\n    if (this.closeTimer) {\n        this._debug('Clearing close timer');\n        clearTimeout(this.closeTimer);\n        this.waitingForCloseResponse = false;\n        this.closeTimer = null;\n    }\n};\n\nWebSocketConnection.prototype.handleCloseTimer = function() {\n    this._debug('handleCloseTimer');\n    this.closeTimer = null;\n    if (this.waitingForCloseResponse) {\n        this._debug('Close response not received from client.  Forcing socket end.');\n        this.waitingForCloseResponse = false;\n        this.state = STATE_CLOSED;\n        this.socket.end();\n    }\n};\n\nWebSocketConnection.prototype.processFrame = function(frame) {\n    this._debug('processFrame');\n    this._debug(' -- frame: %s', frame);\n    \n    // Any non-control opcode besides 0x00 (continuation) received in the\n    // middle of a fragmented message is illegal.\n    if (this.frameQueue.length !== 0 && (frame.opcode > 0x00 && frame.opcode < 0x08)) {\n        this.drop(WebSocketConnection.CLOSE_REASON_PROTOCOL_ERROR,\n          'Illegal frame opcode 0x' + frame.opcode.toString(16) + ' ' +\n          'received in middle of fragmented message.');\n        return;\n    }\n\n    switch(frame.opcode) {\n        case 0x02: // WebSocketFrame.BINARY_FRAME\n            this._debug('-- Binary Frame');\n            if (this.assembleFragments) {\n                if (frame.fin) {\n                    // Complete single-frame message received\n                    this._debug('---- Emitting \\'message\\' event');\n                    this.emit('message', {\n                        type: 'binary',\n                        binaryData: frame.binaryPayload\n                    });\n                }\n                else {\n                    // beginning of a fragmented message\n                    this.frameQueue.push(frame);\n                    this.fragmentationSize = frame.length;\n                }\n            }\n            break;\n        case 0x01: // WebSocketFrame.TEXT_FRAME\n            this._debug('-- Text Frame');\n            if (this.assembleFragments) {\n                if (frame.fin) {\n                    if (!isValidUTF8(frame.binaryPayload)) {\n                        this.drop(WebSocketConnection.CLOSE_REASON_INVALID_DATA,\n                          'Invalid UTF-8 Data Received');\n                        return;\n                    }\n                    // Complete single-frame message received\n                    this._debug('---- Emitting \\'message\\' event');\n                    this.emit('message', {\n                        type: 'utf8',\n                        utf8Data: frame.binaryPayload.toString('utf8')\n                    });\n                }\n                else {\n                    // beginning of a fragmented message\n                    this.frameQueue.push(frame);\n                    this.fragmentationSize = frame.length;\n                }\n            }\n            break;\n        case 0x00: // WebSocketFrame.CONTINUATION\n            this._debug('-- Continuation Frame');\n            if (this.assembleFragments) {\n                if (this.frameQueue.length === 0) {\n                    this.drop(WebSocketConnection.CLOSE_REASON_PROTOCOL_ERROR,\n                      'Unexpected Continuation Frame');\n                    return;\n                }\n\n                this.fragmentationSize += frame.length;\n\n                if (this.fragmentationSize > this.maxReceivedMessageSize) {\n                    this.drop(WebSocketConnection.CLOSE_REASON_MESSAGE_TOO_BIG,\n                      'Maximum message size exceeded.');\n                    return;\n                }\n\n                this.frameQueue.push(frame);\n\n                if (frame.fin) {\n                    // end of fragmented message, so we process the whole\n                    // message now.  We also have to decode the utf-8 data\n                    // for text frames after combining all the fragments.\n                    var bytesCopied = 0;\n                    var binaryPayload = bufferAllocUnsafe(this.fragmentationSize);\n                    var opcode = this.frameQueue[0].opcode;\n                    this.frameQueue.forEach(function (currentFrame) {\n                        currentFrame.binaryPayload.copy(binaryPayload, bytesCopied);\n                        bytesCopied += currentFrame.binaryPayload.length;\n                    });\n                    this.frameQueue = [];\n                    this.fragmentationSize = 0;\n\n                    switch (opcode) {\n                        case 0x02: // WebSocketOpcode.BINARY_FRAME\n                            this.emit('message', {\n                                type: 'binary',\n                                binaryData: binaryPayload\n                            });\n                            break;\n                        case 0x01: // WebSocketOpcode.TEXT_FRAME\n                            if (!isValidUTF8(binaryPayload)) {\n                                this.drop(WebSocketConnection.CLOSE_REASON_INVALID_DATA,\n                                  'Invalid UTF-8 Data Received');\n                                return;\n                            }\n                            this.emit('message', {\n                                type: 'utf8',\n                                utf8Data: binaryPayload.toString('utf8')\n                            });\n                            break;\n                        default:\n                            this.drop(WebSocketConnection.CLOSE_REASON_PROTOCOL_ERROR,\n                              'Unexpected first opcode in fragmentation sequence: 0x' + opcode.toString(16));\n                            return;\n                    }\n                }\n            }\n            break;\n        case 0x09: // WebSocketFrame.PING\n            this._debug('-- Ping Frame');\n\n            if (this._pingListenerCount > 0) {\n                // logic to emit the ping frame: this is only done when a listener is known to exist\n                // Expose a function allowing the user to override the default ping() behavior\n                var cancelled = false;\n                var cancel = function() { \n                  cancelled = true; \n                };\n                this.emit('ping', cancel, frame.binaryPayload);\n\n                // Only send a pong if the client did not indicate that he would like to cancel\n                if (!cancelled) {\n                    this.pong(frame.binaryPayload);\n                }\n            }\n            else {\n                this.pong(frame.binaryPayload);\n            }\n\n            break;\n        case 0x0A: // WebSocketFrame.PONG\n            this._debug('-- Pong Frame');\n            this.emit('pong', frame.binaryPayload);\n            break;\n        case 0x08: // WebSocketFrame.CONNECTION_CLOSE\n            this._debug('-- Close Frame');\n            if (this.waitingForCloseResponse) {\n                // Got response to our request to close the connection.\n                // Close is complete, so we just hang up.\n                this._debug('---- Got close response from peer.  Completing closing handshake.');\n                this.clearCloseTimer();\n                this.waitingForCloseResponse = false;\n                this.state = STATE_CLOSED;\n                this.socket.end();\n                return;\n            }\n            \n            this._debug('---- Closing handshake initiated by peer.');\n            // Got request from other party to close connection.\n            // Send back acknowledgement and then hang up.\n            this.state = STATE_PEER_REQUESTED_CLOSE;\n            var respondCloseReasonCode;\n\n            // Make sure the close reason provided is legal according to\n            // the protocol spec.  Providing no close status is legal.\n            // WebSocketFrame sets closeStatus to -1 by default, so if it\n            // is still -1, then no status was provided.\n            if (frame.invalidCloseFrameLength) {\n                this.closeReasonCode = 1005; // 1005 = No reason provided.\n                respondCloseReasonCode = WebSocketConnection.CLOSE_REASON_PROTOCOL_ERROR;\n            }\n            else if (frame.closeStatus === -1 || validateCloseReason(frame.closeStatus)) {\n                this.closeReasonCode = frame.closeStatus;\n                respondCloseReasonCode = WebSocketConnection.CLOSE_REASON_NORMAL;\n            }\n            else {\n                this.closeReasonCode = frame.closeStatus;\n                respondCloseReasonCode = WebSocketConnection.CLOSE_REASON_PROTOCOL_ERROR;\n            }\n            \n            // If there is a textual description in the close frame, extract it.\n            if (frame.binaryPayload.length > 1) {\n                if (!isValidUTF8(frame.binaryPayload)) {\n                    this.drop(WebSocketConnection.CLOSE_REASON_INVALID_DATA,\n                      'Invalid UTF-8 Data Received');\n                    return;\n                }\n                this.closeDescription = frame.binaryPayload.toString('utf8');\n            }\n            else {\n                this.closeDescription = WebSocketConnection.CLOSE_DESCRIPTIONS[this.closeReasonCode];\n            }\n            this._debug(\n                '------ Remote peer %s - code: %d - %s - close frame payload length: %d',\n                this.remoteAddress, this.closeReasonCode,\n                this.closeDescription, frame.length\n            );\n            this._debug('------ responding to remote peer\\'s close request.');\n            this.sendCloseFrame(respondCloseReasonCode, null);\n            this.connected = false;\n            break;\n        default:\n            this._debug('-- Unrecognized Opcode %d', frame.opcode);\n            this.drop(WebSocketConnection.CLOSE_REASON_PROTOCOL_ERROR,\n              'Unrecognized Opcode: 0x' + frame.opcode.toString(16));\n            break;\n    }\n};\n\nWebSocketConnection.prototype.send = function(data, cb) {\n    this._debug('send');\n    if (Buffer.isBuffer(data)) {\n        this.sendBytes(data, cb);\n    }\n    else if (typeof(data['toString']) === 'function') {\n        this.sendUTF(data, cb);\n    }\n    else {\n        throw new Error('Data provided must either be a Node Buffer or implement toString()');\n    }\n};\n\nWebSocketConnection.prototype.sendUTF = function(data, cb) {\n    data = bufferFromString(data.toString(), 'utf8');\n    this._debug('sendUTF: %d bytes', data.length);\n    var frame = new WebSocketFrame(this.maskBytes, this.frameHeader, this.config);\n    frame.opcode = 0x01; // WebSocketOpcode.TEXT_FRAME\n    frame.binaryPayload = data;\n    this.fragmentAndSend(frame, cb);\n};\n\nWebSocketConnection.prototype.sendBytes = function(data, cb) {\n    this._debug('sendBytes');\n    if (!Buffer.isBuffer(data)) {\n        throw new Error('You must pass a Node Buffer object to WebSocketConnection.prototype.sendBytes()');\n    }\n    var frame = new WebSocketFrame(this.maskBytes, this.frameHeader, this.config);\n    frame.opcode = 0x02; // WebSocketOpcode.BINARY_FRAME\n    frame.binaryPayload = data;\n    this.fragmentAndSend(frame, cb);\n};\n\nWebSocketConnection.prototype.ping = function(data) {\n    this._debug('ping');\n    var frame = new WebSocketFrame(this.maskBytes, this.frameHeader, this.config);\n    frame.opcode = 0x09; // WebSocketOpcode.PING\n    frame.fin = true;\n    if (data) {\n        if (!Buffer.isBuffer(data)) {\n            data = bufferFromString(data.toString(), 'utf8');\n        }\n        if (data.length > 125) {\n            this._debug('WebSocket: Data for ping is longer than 125 bytes.  Truncating.');\n            data = data.slice(0,124);\n        }\n        frame.binaryPayload = data;\n    }\n    this.sendFrame(frame);\n};\n\n// Pong frames have to echo back the contents of the data portion of the\n// ping frame exactly, byte for byte.\nWebSocketConnection.prototype.pong = function(binaryPayload) {\n    this._debug('pong');\n    var frame = new WebSocketFrame(this.maskBytes, this.frameHeader, this.config);\n    frame.opcode = 0x0A; // WebSocketOpcode.PONG\n    if (Buffer.isBuffer(binaryPayload) && binaryPayload.length > 125) {\n        this._debug('WebSocket: Data for pong is longer than 125 bytes.  Truncating.');\n        binaryPayload = binaryPayload.slice(0,124);\n    }\n    frame.binaryPayload = binaryPayload;\n    frame.fin = true;\n    this.sendFrame(frame);\n};\n\nWebSocketConnection.prototype.fragmentAndSend = function(frame, cb) {\n    this._debug('fragmentAndSend');\n    if (frame.opcode > 0x07) {\n        throw new Error('You cannot fragment control frames.');\n    }\n\n    var threshold = this.config.fragmentationThreshold;\n    var length = frame.binaryPayload.length;\n\n    // Send immediately if fragmentation is disabled or the message is not\n    // larger than the fragmentation threshold.\n    if (!this.config.fragmentOutgoingMessages || (frame.binaryPayload && length <= threshold)) {\n        frame.fin = true;\n        this.sendFrame(frame, cb);\n        return;\n    }\n    \n    var numFragments = Math.ceil(length / threshold);\n    var sentFragments = 0;\n    var sentCallback = function fragmentSentCallback(err) {\n        if (err) {\n            if (typeof cb === 'function') {\n                // pass only the first error\n                cb(err);\n                cb = null;\n            }\n            return;\n        }\n        ++sentFragments;\n        if ((sentFragments === numFragments) && (typeof cb === 'function')) {\n            cb();\n        }\n    };\n    for (var i=1; i <= numFragments; i++) {\n        var currentFrame = new WebSocketFrame(this.maskBytes, this.frameHeader, this.config);\n        \n        // continuation opcode except for first frame.\n        currentFrame.opcode = (i === 1) ? frame.opcode : 0x00;\n        \n        // fin set on last frame only\n        currentFrame.fin = (i === numFragments);\n        \n        // length is likely to be shorter on the last fragment\n        var currentLength = (i === numFragments) ? length - (threshold * (i-1)) : threshold;\n        var sliceStart = threshold * (i-1);\n        \n        // Slice the right portion of the original payload\n        currentFrame.binaryPayload = frame.binaryPayload.slice(sliceStart, sliceStart + currentLength);\n        \n        this.sendFrame(currentFrame, sentCallback);\n    }\n};\n\nWebSocketConnection.prototype.sendCloseFrame = function(reasonCode, description, cb) {\n    if (typeof(reasonCode) !== 'number') {\n        reasonCode = WebSocketConnection.CLOSE_REASON_NORMAL;\n    }\n    \n    this._debug('sendCloseFrame state: %s, reasonCode: %d, description: %s', this.state, reasonCode, description);\n    \n    if (this.state !== STATE_OPEN && this.state !== STATE_PEER_REQUESTED_CLOSE) { return; }\n    \n    var frame = new WebSocketFrame(this.maskBytes, this.frameHeader, this.config);\n    frame.fin = true;\n    frame.opcode = 0x08; // WebSocketOpcode.CONNECTION_CLOSE\n    frame.closeStatus = reasonCode;\n    if (typeof(description) === 'string') {\n        frame.binaryPayload = bufferFromString(description, 'utf8');\n    }\n    \n    this.sendFrame(frame, cb);\n    this.socket.end();\n};\n\nWebSocketConnection.prototype.sendFrame = function(frame, cb) {\n    this._debug('sendFrame');\n    frame.mask = this.maskOutgoingPackets;\n    var flushed = this.socket.write(frame.toBuffer(), cb);\n    this.outputBufferFull = !flushed;\n    return flushed;\n};\n\nmodule.exports = WebSocketConnection;\n\n\n\nfunction instrumentSocketForDebugging(connection, socket) {\n    /* jshint loopfunc: true */\n    if (!connection._debug.enabled) { return; }\n    \n    var originalSocketEmit = socket.emit;\n    socket.emit = function(event) {\n        connection._debug('||| Socket Event  \\'%s\\'', event);\n        originalSocketEmit.apply(this, arguments);\n    };\n    \n    for (var key in socket) {\n        if ('function' !== typeof(socket[key])) { continue; }\n        if (['emit'].indexOf(key) !== -1) { continue; }\n        (function(key) {\n            var original = socket[key];\n            if (key === 'on') {\n                socket[key] = function proxyMethod__EventEmitter__On() {\n                    connection._debug('||| Socket method called:  %s (%s)', key, arguments[0]);\n                    return original.apply(this, arguments);\n                };\n                return;\n            }\n            socket[key] = function proxyMethod() {\n                connection._debug('||| Socket method called:  %s', key);\n                return original.apply(this, arguments);\n            };\n        })(key);\n    }\n}\n","/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar bufferUtil = require('bufferutil');\nvar bufferAllocUnsafe = require('./utils').bufferAllocUnsafe;\n\nconst DECODE_HEADER = 1;\nconst WAITING_FOR_16_BIT_LENGTH = 2;\nconst WAITING_FOR_64_BIT_LENGTH = 3;\nconst WAITING_FOR_MASK_KEY = 4;\nconst WAITING_FOR_PAYLOAD = 5;\nconst COMPLETE = 6;\n\n// WebSocketConnection will pass shared buffer objects for maskBytes and\n// frameHeader into the constructor to avoid tons of small memory allocations\n// for each frame we have to parse.  This is only used for parsing frames\n// we receive off the wire.\nfunction WebSocketFrame(maskBytes, frameHeader, config) {\n    this.maskBytes = maskBytes;\n    this.frameHeader = frameHeader;\n    this.config = config;\n    this.maxReceivedFrameSize = config.maxReceivedFrameSize;\n    this.protocolError = false;\n    this.frameTooLarge = false;\n    this.invalidCloseFrameLength = false;\n    this.parseState = DECODE_HEADER;\n    this.closeStatus = -1;\n}\n\nWebSocketFrame.prototype.addData = function(bufferList) {\n    if (this.parseState === DECODE_HEADER) {\n        if (bufferList.length >= 2) {\n            bufferList.joinInto(this.frameHeader, 0, 0, 2);\n            bufferList.advance(2);\n            var firstByte = this.frameHeader[0];\n            var secondByte = this.frameHeader[1];\n\n            this.fin     = Boolean(firstByte  & 0x80);\n            this.rsv1    = Boolean(firstByte  & 0x40);\n            this.rsv2    = Boolean(firstByte  & 0x20);\n            this.rsv3    = Boolean(firstByte  & 0x10);\n            this.mask    = Boolean(secondByte & 0x80);\n\n            this.opcode  = firstByte  & 0x0F;\n            this.length = secondByte & 0x7F;\n\n            // Control frame sanity check\n            if (this.opcode >= 0x08) {\n                if (this.length > 125) {\n                    this.protocolError = true;\n                    this.dropReason = 'Illegal control frame longer than 125 bytes.';\n                    return true;\n                }\n                if (!this.fin) {\n                    this.protocolError = true;\n                    this.dropReason = 'Control frames must not be fragmented.';\n                    return true;\n                }\n            }\n\n            if (this.length === 126) {\n                this.parseState = WAITING_FOR_16_BIT_LENGTH;\n            }\n            else if (this.length === 127) {\n                this.parseState = WAITING_FOR_64_BIT_LENGTH;\n            }\n            else {\n                this.parseState = WAITING_FOR_MASK_KEY;\n            }\n        }\n    }\n    if (this.parseState === WAITING_FOR_16_BIT_LENGTH) {\n        if (bufferList.length >= 2) {\n            bufferList.joinInto(this.frameHeader, 2, 0, 2);\n            bufferList.advance(2);\n            this.length = this.frameHeader.readUInt16BE(2);\n            this.parseState = WAITING_FOR_MASK_KEY;\n        }\n    }\n    else if (this.parseState === WAITING_FOR_64_BIT_LENGTH) {\n        if (bufferList.length >= 8) {\n            bufferList.joinInto(this.frameHeader, 2, 0, 8);\n            bufferList.advance(8);\n            var lengthPair = [\n              this.frameHeader.readUInt32BE(2),\n              this.frameHeader.readUInt32BE(2+4)\n            ];\n\n            if (lengthPair[0] !== 0) {\n                this.protocolError = true;\n                this.dropReason = 'Unsupported 64-bit length frame received';\n                return true;\n            }\n            this.length = lengthPair[1];\n            this.parseState = WAITING_FOR_MASK_KEY;\n        }\n    }\n\n    if (this.parseState === WAITING_FOR_MASK_KEY) {\n        if (this.mask) {\n            if (bufferList.length >= 4) {\n                bufferList.joinInto(this.maskBytes, 0, 0, 4);\n                bufferList.advance(4);\n                this.parseState = WAITING_FOR_PAYLOAD;\n            }\n        }\n        else {\n            this.parseState = WAITING_FOR_PAYLOAD;\n        }\n    }\n\n    if (this.parseState === WAITING_FOR_PAYLOAD) {\n        if (this.length > this.maxReceivedFrameSize) {\n            this.frameTooLarge = true;\n            this.dropReason = 'Frame size of ' + this.length.toString(10) +\n                              ' bytes exceeds maximum accepted frame size';\n            return true;\n        }\n\n        if (this.length === 0) {\n            this.binaryPayload = bufferAllocUnsafe(0);\n            this.parseState = COMPLETE;\n            return true;\n        }\n        if (bufferList.length >= this.length) {\n            this.binaryPayload = bufferList.take(this.length);\n            bufferList.advance(this.length);\n            if (this.mask) {\n                bufferUtil.unmask(this.binaryPayload, this.maskBytes);\n                // xor(this.binaryPayload, this.maskBytes, 0);\n            }\n\n            if (this.opcode === 0x08) { // WebSocketOpcode.CONNECTION_CLOSE\n                if (this.length === 1) {\n                    // Invalid length for a close frame.  Must be zero or at least two.\n                    this.binaryPayload = bufferAllocUnsafe(0);\n                    this.invalidCloseFrameLength = true;\n                }\n                if (this.length >= 2) {\n                    this.closeStatus = this.binaryPayload.readUInt16BE(0);\n                    this.binaryPayload = this.binaryPayload.slice(2);\n                }\n            }\n\n            this.parseState = COMPLETE;\n            return true;\n        }\n    }\n    return false;\n};\n\nWebSocketFrame.prototype.throwAwayPayload = function(bufferList) {\n    if (bufferList.length >= this.length) {\n        bufferList.advance(this.length);\n        this.parseState = COMPLETE;\n        return true;\n    }\n    return false;\n};\n\nWebSocketFrame.prototype.toBuffer = function(nullMask) {\n    var maskKey;\n    var headerLength = 2;\n    var data;\n    var outputPos;\n    var firstByte = 0x00;\n    var secondByte = 0x00;\n\n    if (this.fin) {\n        firstByte |= 0x80;\n    }\n    if (this.rsv1) {\n        firstByte |= 0x40;\n    }\n    if (this.rsv2) {\n        firstByte |= 0x20;\n    }\n    if (this.rsv3) {\n        firstByte |= 0x10;\n    }\n    if (this.mask) {\n        secondByte |= 0x80;\n    }\n\n    firstByte |= (this.opcode & 0x0F);\n\n    // the close frame is a special case because the close reason is\n    // prepended to the payload data.\n    if (this.opcode === 0x08) {\n        this.length = 2;\n        if (this.binaryPayload) {\n            this.length += this.binaryPayload.length;\n        }\n        data = bufferAllocUnsafe(this.length);\n        data.writeUInt16BE(this.closeStatus, 0);\n        if (this.length > 2) {\n            this.binaryPayload.copy(data, 2);\n        }\n    }\n    else if (this.binaryPayload) {\n        data = this.binaryPayload;\n        this.length = data.length;\n    }\n    else {\n        this.length = 0;\n    }\n\n    if (this.length <= 125) {\n        // encode the length directly into the two-byte frame header\n        secondByte |= (this.length & 0x7F);\n    }\n    else if (this.length > 125 && this.length <= 0xFFFF) {\n        // Use 16-bit length\n        secondByte |= 126;\n        headerLength += 2;\n    }\n    else if (this.length > 0xFFFF) {\n        // Use 64-bit length\n        secondByte |= 127;\n        headerLength += 8;\n    }\n\n    var output = bufferAllocUnsafe(this.length + headerLength + (this.mask ? 4 : 0));\n\n    // write the frame header\n    output[0] = firstByte;\n    output[1] = secondByte;\n\n    outputPos = 2;\n\n    if (this.length > 125 && this.length <= 0xFFFF) {\n        // write 16-bit length\n        output.writeUInt16BE(this.length, outputPos);\n        outputPos += 2;\n    }\n    else if (this.length > 0xFFFF) {\n        // write 64-bit length\n        output.writeUInt32BE(0x00000000, outputPos);\n        output.writeUInt32BE(this.length, outputPos + 4);\n        outputPos += 8;\n    }\n\n    if (this.mask) {\n        maskKey = nullMask ? 0 : ((Math.random() * 0xFFFFFFFF) >>> 0);\n        this.maskBytes.writeUInt32BE(maskKey, 0);\n\n        // write the mask key\n        this.maskBytes.copy(output, outputPos);\n        outputPos += 4;\n\n        if (data) {\n          bufferUtil.mask(data, this.maskBytes, output, outputPos, this.length);\n        }\n    }\n    else if (data) {\n        data.copy(output, outputPos);\n    }\n\n    return output;\n};\n\nWebSocketFrame.prototype.toString = function() {\n    return 'Opcode: ' + this.opcode + ', fin: ' + this.fin + ', length: ' + this.length + ', hasPayload: ' + Boolean(this.binaryPayload) + ', masked: ' + this.mask;\n};\n\n\nmodule.exports = WebSocketFrame;\n","/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar crypto = require('crypto');\nvar util = require('util');\nvar url = require('url');\nvar EventEmitter = require('events').EventEmitter;\nvar WebSocketConnection = require('./WebSocketConnection');\n\nvar headerValueSplitRegExp = /,\\s*/;\nvar headerParamSplitRegExp = /;\\s*/;\nvar headerSanitizeRegExp = /[\\r\\n]/g;\nvar xForwardedForSeparatorRegExp = /,\\s*/;\nvar separators = [\n    '(', ')', '<', '>', '@',\n    ',', ';', ':', '\\\\', '\\\"',\n    '/', '[', ']', '?', '=',\n    '{', '}', ' ', String.fromCharCode(9)\n];\nvar controlChars = [String.fromCharCode(127) /* DEL */];\nfor (var i=0; i < 31; i ++) {\n    /* US-ASCII Control Characters */\n    controlChars.push(String.fromCharCode(i));\n}\n\nvar cookieNameValidateRegEx = /([\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2f\\x3a-\\x3f\\x40\\x5b-\\x5e\\x7b\\x7d\\x7f])/;\nvar cookieValueValidateRegEx = /[^\\x21\\x23-\\x2b\\x2d-\\x3a\\x3c-\\x5b\\x5d-\\x7e]/;\nvar cookieValueDQuoteValidateRegEx = /^\"[^\"]*\"$/;\nvar controlCharsAndSemicolonRegEx = /[\\x00-\\x20\\x3b]/g;\n\nvar cookieSeparatorRegEx = /[;,] */;\n\nvar httpStatusDescriptions = {\n    100: 'Continue',\n    101: 'Switching Protocols',\n    200: 'OK',\n    201: 'Created',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    307: 'Temporary Redirect',\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    406: 'Not Acceptable',\n    407: 'Proxy Authorization Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Request Entity Too Long',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Requested Range Not Satisfiable',\n    417: 'Expectation Failed',\n    426: 'Upgrade Required',\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported'\n};\n\nfunction WebSocketRequest(socket, httpRequest, serverConfig) {\n    // Superclass Constructor\n    EventEmitter.call(this);\n\n    this.socket = socket;\n    this.httpRequest = httpRequest;\n    this.resource = httpRequest.url;\n    this.remoteAddress = socket.remoteAddress;\n    this.remoteAddresses = [this.remoteAddress];\n    this.serverConfig = serverConfig;\n\n    // Watch for the underlying TCP socket closing before we call accept\n    this._socketIsClosing = false;\n    this._socketCloseHandler = this._handleSocketCloseBeforeAccept.bind(this);\n    this.socket.on('end', this._socketCloseHandler);\n    this.socket.on('close', this._socketCloseHandler);\n\n    this._resolved = false;\n}\n\nutil.inherits(WebSocketRequest, EventEmitter);\n\nWebSocketRequest.prototype.readHandshake = function() {\n    var self = this;\n    var request = this.httpRequest;\n\n    // Decode URL\n    this.resourceURL = url.parse(this.resource, true);\n\n    this.host = request.headers['host'];\n    if (!this.host) {\n        throw new Error('Client must provide a Host header.');\n    }\n\n    this.key = request.headers['sec-websocket-key'];\n    if (!this.key) {\n        throw new Error('Client must provide a value for Sec-WebSocket-Key.');\n    }\n\n    this.webSocketVersion = parseInt(request.headers['sec-websocket-version'], 10);\n\n    if (!this.webSocketVersion || isNaN(this.webSocketVersion)) {\n        throw new Error('Client must provide a value for Sec-WebSocket-Version.');\n    }\n\n    switch (this.webSocketVersion) {\n        case 8:\n        case 13:\n            break;\n        default:\n            var e = new Error('Unsupported websocket client version: ' + this.webSocketVersion +\n                              'Only versions 8 and 13 are supported.');\n            e.httpCode = 426;\n            e.headers = {\n                'Sec-WebSocket-Version': '13'\n            };\n            throw e;\n    }\n\n    if (this.webSocketVersion === 13) {\n        this.origin = request.headers['origin'];\n    }\n    else if (this.webSocketVersion === 8) {\n        this.origin = request.headers['sec-websocket-origin'];\n    }\n\n    // Protocol is optional.\n    var protocolString = request.headers['sec-websocket-protocol'];\n    this.protocolFullCaseMap = {};\n    this.requestedProtocols = [];\n    if (protocolString) {\n        var requestedProtocolsFullCase = protocolString.split(headerValueSplitRegExp);\n        requestedProtocolsFullCase.forEach(function(protocol) {\n            var lcProtocol = protocol.toLocaleLowerCase();\n            self.requestedProtocols.push(lcProtocol);\n            self.protocolFullCaseMap[lcProtocol] = protocol;\n        });\n    }\n\n    if (!this.serverConfig.ignoreXForwardedFor &&\n        request.headers['x-forwarded-for']) {\n        var immediatePeerIP = this.remoteAddress;\n        this.remoteAddresses = request.headers['x-forwarded-for']\n            .split(xForwardedForSeparatorRegExp);\n        this.remoteAddresses.push(immediatePeerIP);\n        this.remoteAddress = this.remoteAddresses[0];\n    }\n\n    // Extensions are optional.\n    if (this.serverConfig.parseExtensions) {\n        var extensionsString = request.headers['sec-websocket-extensions'];\n        this.requestedExtensions = this.parseExtensions(extensionsString);\n    } else {\n        this.requestedExtensions = [];\n    }\n\n    // Cookies are optional\n    if (this.serverConfig.parseCookies) {\n        var cookieString = request.headers['cookie'];\n        this.cookies = this.parseCookies(cookieString);\n    } else {\n        this.cookies = [];\n    }\n};\n\nWebSocketRequest.prototype.parseExtensions = function(extensionsString) {\n    if (!extensionsString || extensionsString.length === 0) {\n        return [];\n    }\n    var extensions = extensionsString.toLocaleLowerCase().split(headerValueSplitRegExp);\n    extensions.forEach(function(extension, index, array) {\n        var params = extension.split(headerParamSplitRegExp);\n        var extensionName = params[0];\n        var extensionParams = params.slice(1);\n        extensionParams.forEach(function(rawParam, index, array) {\n            var arr = rawParam.split('=');\n            var obj = {\n                name: arr[0],\n                value: arr[1]\n            };\n            array.splice(index, 1, obj);\n        });\n        var obj = {\n            name: extensionName,\n            params: extensionParams\n        };\n        array.splice(index, 1, obj);\n    });\n    return extensions;\n};\n\n// This function adapted from node-cookie\n// https://github.com/shtylman/node-cookie\nWebSocketRequest.prototype.parseCookies = function(str) {\n    // Sanity Check\n    if (!str || typeof(str) !== 'string') {\n        return [];\n    }\n\n    var cookies = [];\n    var pairs = str.split(cookieSeparatorRegEx);\n\n    pairs.forEach(function(pair) {\n        var eq_idx = pair.indexOf('=');\n        if (eq_idx === -1) {\n            cookies.push({\n                name: pair,\n                value: null\n            });\n            return;\n        }\n\n        var key = pair.substr(0, eq_idx).trim();\n        var val = pair.substr(++eq_idx, pair.length).trim();\n\n        // quoted values\n        if ('\"' === val[0]) {\n            val = val.slice(1, -1);\n        }\n\n        cookies.push({\n            name: key,\n            value: decodeURIComponent(val)\n        });\n    });\n\n    return cookies;\n};\n\nWebSocketRequest.prototype.accept = function(acceptedProtocol, allowedOrigin, cookies) {\n    this._verifyResolution();\n\n    // TODO: Handle extensions\n\n    var protocolFullCase;\n\n    if (acceptedProtocol) {\n        protocolFullCase = this.protocolFullCaseMap[acceptedProtocol.toLocaleLowerCase()];\n        if (typeof(protocolFullCase) === 'undefined') {\n            protocolFullCase = acceptedProtocol;\n        }\n    }\n    else {\n        protocolFullCase = acceptedProtocol;\n    }\n    this.protocolFullCaseMap = null;\n\n    // Create key validation hash\n    var sha1 = crypto.createHash('sha1');\n    sha1.update(this.key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');\n    var acceptKey = sha1.digest('base64');\n\n    var response = 'HTTP/1.1 101 Switching Protocols\\r\\n' +\n                   'Upgrade: websocket\\r\\n' +\n                   'Connection: Upgrade\\r\\n' +\n                   'Sec-WebSocket-Accept: ' + acceptKey + '\\r\\n';\n\n    if (protocolFullCase) {\n        // validate protocol\n        for (var i=0; i < protocolFullCase.length; i++) {\n            var charCode = protocolFullCase.charCodeAt(i);\n            var character = protocolFullCase.charAt(i);\n            if (charCode < 0x21 || charCode > 0x7E || separators.indexOf(character) !== -1) {\n                this.reject(500);\n                throw new Error('Illegal character \"' + String.fromCharCode(character) + '\" in subprotocol.');\n            }\n        }\n        if (this.requestedProtocols.indexOf(acceptedProtocol) === -1) {\n            this.reject(500);\n            throw new Error('Specified protocol was not requested by the client.');\n        }\n\n        protocolFullCase = protocolFullCase.replace(headerSanitizeRegExp, '');\n        response += 'Sec-WebSocket-Protocol: ' + protocolFullCase + '\\r\\n';\n    }\n    this.requestedProtocols = null;\n\n    if (allowedOrigin) {\n        allowedOrigin = allowedOrigin.replace(headerSanitizeRegExp, '');\n        if (this.webSocketVersion === 13) {\n            response += 'Origin: ' + allowedOrigin + '\\r\\n';\n        }\n        else if (this.webSocketVersion === 8) {\n            response += 'Sec-WebSocket-Origin: ' + allowedOrigin + '\\r\\n';\n        }\n    }\n\n    if (cookies) {\n        if (!Array.isArray(cookies)) {\n            this.reject(500);\n            throw new Error('Value supplied for \"cookies\" argument must be an array.');\n        }\n        var seenCookies = {};\n        cookies.forEach(function(cookie) {\n            if (!cookie.name || !cookie.value) {\n                this.reject(500);\n                throw new Error('Each cookie to set must at least provide a \"name\" and \"value\"');\n            }\n\n            // Make sure there are no \\r\\n sequences inserted\n            cookie.name = cookie.name.replace(controlCharsAndSemicolonRegEx, '');\n            cookie.value = cookie.value.replace(controlCharsAndSemicolonRegEx, '');\n\n            if (seenCookies[cookie.name]) {\n                this.reject(500);\n                throw new Error('You may not specify the same cookie name twice.');\n            }\n            seenCookies[cookie.name] = true;\n\n            // token (RFC 2616, Section 2.2)\n            var invalidChar = cookie.name.match(cookieNameValidateRegEx);\n            if (invalidChar) {\n                this.reject(500);\n                throw new Error('Illegal character ' + invalidChar[0] + ' in cookie name');\n            }\n\n            // RFC 6265, Section 4.1.1\n            // *cookie-octet / ( DQUOTE *cookie-octet DQUOTE ) | %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n            if (cookie.value.match(cookieValueDQuoteValidateRegEx)) {\n                invalidChar = cookie.value.slice(1, -1).match(cookieValueValidateRegEx);\n            } else {\n                invalidChar = cookie.value.match(cookieValueValidateRegEx);\n            }\n            if (invalidChar) {\n                this.reject(500);\n                throw new Error('Illegal character ' + invalidChar[0] + ' in cookie value');\n            }\n\n            var cookieParts = [cookie.name + '=' + cookie.value];\n\n            // RFC 6265, Section 4.1.1\n            // 'Path=' path-value | <any CHAR except CTLs or ';'>\n            if(cookie.path){\n                invalidChar = cookie.path.match(controlCharsAndSemicolonRegEx);\n                if (invalidChar) {\n                    this.reject(500);\n                    throw new Error('Illegal character ' + invalidChar[0] + ' in cookie path');\n                }\n                cookieParts.push('Path=' + cookie.path);\n            }\n\n            // RFC 6265, Section 4.1.2.3\n            // 'Domain=' subdomain\n            if (cookie.domain) {\n                if (typeof(cookie.domain) !== 'string') {\n                    this.reject(500);\n                    throw new Error('Domain must be specified and must be a string.');\n                }\n                invalidChar = cookie.domain.match(controlCharsAndSemicolonRegEx);\n                if (invalidChar) {\n                    this.reject(500);\n                    throw new Error('Illegal character ' + invalidChar[0] + ' in cookie domain');\n                }\n                cookieParts.push('Domain=' + cookie.domain.toLowerCase());\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'Expires=' sane-cookie-date | Force Date object requirement by using only epoch\n            if (cookie.expires) {\n                if (!(cookie.expires instanceof Date)){\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"expires\" must be a vaild date object');\n                }\n                cookieParts.push('Expires=' + cookie.expires.toGMTString());\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'Max-Age=' non-zero-digit *DIGIT\n            if (cookie.maxage) {\n                var maxage = cookie.maxage;\n                if (typeof(maxage) === 'string') {\n                    maxage = parseInt(maxage, 10);\n                }\n                if (isNaN(maxage) || maxage <= 0 ) {\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"maxage\" must be a non-zero number');\n                }\n                maxage = Math.round(maxage);\n                cookieParts.push('Max-Age=' + maxage.toString(10));\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'Secure;'\n            if (cookie.secure) {\n                if (typeof(cookie.secure) !== 'boolean') {\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"secure\" must be of type boolean');\n                }\n                cookieParts.push('Secure');\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'HttpOnly;'\n            if (cookie.httponly) {\n                if (typeof(cookie.httponly) !== 'boolean') {\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"httponly\" must be of type boolean');\n                }\n                cookieParts.push('HttpOnly');\n            }\n\n            response += ('Set-Cookie: ' + cookieParts.join(';') + '\\r\\n');\n        }.bind(this));\n    }\n\n    // TODO: handle negotiated extensions\n    // if (negotiatedExtensions) {\n    //     response += 'Sec-WebSocket-Extensions: ' + negotiatedExtensions.join(', ') + '\\r\\n';\n    // }\n\n    // Mark the request resolved now so that the user can't call accept or\n    // reject a second time.\n    this._resolved = true;\n    this.emit('requestResolved', this);\n\n    response += '\\r\\n';\n\n    var connection = new WebSocketConnection(this.socket, [], acceptedProtocol, false, this.serverConfig);\n    connection.webSocketVersion = this.webSocketVersion;\n    connection.remoteAddress = this.remoteAddress;\n    connection.remoteAddresses = this.remoteAddresses;\n\n    var self = this;\n\n    if (this._socketIsClosing) {\n        // Handle case when the client hangs up before we get a chance to\n        // accept the connection and send our side of the opening handshake.\n        cleanupFailedConnection(connection);\n    }\n    else {\n        this.socket.write(response, 'ascii', function(error) {\n            if (error) {\n                cleanupFailedConnection(connection);\n                return;\n            }\n\n            self._removeSocketCloseListeners();\n            connection._addSocketEventListeners();\n        });\n    }\n\n    this.emit('requestAccepted', connection);\n    return connection;\n};\n\nWebSocketRequest.prototype.reject = function(status, reason, extraHeaders) {\n    this._verifyResolution();\n\n    // Mark the request resolved now so that the user can't call accept or\n    // reject a second time.\n    this._resolved = true;\n    this.emit('requestResolved', this);\n\n    if (typeof(status) !== 'number') {\n        status = 403;\n    }\n    var response = 'HTTP/1.1 ' + status + ' ' + httpStatusDescriptions[status] + '\\r\\n' +\n                   'Connection: close\\r\\n';\n    if (reason) {\n        reason = reason.replace(headerSanitizeRegExp, '');\n        response += 'X-WebSocket-Reject-Reason: ' + reason + '\\r\\n';\n    }\n\n    if (extraHeaders) {\n        for (var key in extraHeaders) {\n            var sanitizedValue = extraHeaders[key].toString().replace(headerSanitizeRegExp, '');\n            var sanitizedKey = key.replace(headerSanitizeRegExp, '');\n            response += (sanitizedKey + ': ' + sanitizedValue + '\\r\\n');\n        }\n    }\n\n    response += '\\r\\n';\n    this.socket.end(response, 'ascii');\n\n    this.emit('requestRejected', this);\n};\n\nWebSocketRequest.prototype._handleSocketCloseBeforeAccept = function() {\n    this._socketIsClosing = true;\n    this._removeSocketCloseListeners();\n};\n\nWebSocketRequest.prototype._removeSocketCloseListeners = function() {\n    this.socket.removeListener('end', this._socketCloseHandler);\n    this.socket.removeListener('close', this._socketCloseHandler);\n};\n\nWebSocketRequest.prototype._verifyResolution = function() {\n    if (this._resolved) {\n        throw new Error('WebSocketRequest may only be accepted or rejected one time.');\n    }\n};\n\nfunction cleanupFailedConnection(connection) {\n    // Since we have to return a connection object even if the socket is\n    // already dead in order not to break the API, we schedule a 'close'\n    // event on the connection object to occur immediately.\n    process.nextTick(function() {\n        // WebSocketConnection.CLOSE_REASON_ABNORMAL = 1006\n        // Third param: Skip sending the close frame to a dead socket\n        connection.drop(1006, 'TCP connection lost before handshake completed.', true);\n    });\n}\n\nmodule.exports = WebSocketRequest;\n","/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar extend = require('./utils').extend;\nvar util = require('util');\nvar EventEmitter = require('events').EventEmitter;\nvar WebSocketRouterRequest = require('./WebSocketRouterRequest');\n\nfunction WebSocketRouter(config) {\n    // Superclass Constructor\n    EventEmitter.call(this);\n\n    this.config = {\n        // The WebSocketServer instance to attach to.\n        server: null\n    };\n    if (config) {\n        extend(this.config, config);\n    }\n    this.handlers = [];\n\n    this._requestHandler = this.handleRequest.bind(this);\n    if (this.config.server) {\n        this.attachServer(this.config.server);\n    }\n}\n\nutil.inherits(WebSocketRouter, EventEmitter);\n\nWebSocketRouter.prototype.attachServer = function(server) {\n    if (server) {\n        this.server = server;\n        this.server.on('request', this._requestHandler);\n    }\n    else {\n        throw new Error('You must specify a WebSocketServer instance to attach to.');\n    }\n};\n\nWebSocketRouter.prototype.detachServer = function() {\n    if (this.server) {\n        this.server.removeListener('request', this._requestHandler);\n        this.server = null;\n    }\n    else {\n        throw new Error('Cannot detach from server: not attached.');\n    }\n};\n\nWebSocketRouter.prototype.mount = function(path, protocol, callback) {\n    if (!path) {\n        throw new Error('You must specify a path for this handler.');\n    }\n    if (!protocol) {\n        protocol = '____no_protocol____';\n    }\n    if (!callback) {\n        throw new Error('You must specify a callback for this handler.');\n    }\n\n    path = this.pathToRegExp(path);\n    if (!(path instanceof RegExp)) {\n        throw new Error('Path must be specified as either a string or a RegExp.');\n    }\n    var pathString = path.toString();\n\n    // normalize protocol to lower-case\n    protocol = protocol.toLocaleLowerCase();\n\n    if (this.findHandlerIndex(pathString, protocol) !== -1) {\n        throw new Error('You may only mount one handler per path/protocol combination.');\n    }\n\n    this.handlers.push({\n        'path': path,\n        'pathString': pathString,\n        'protocol': protocol,\n        'callback': callback\n    });\n};\nWebSocketRouter.prototype.unmount = function(path, protocol) {\n    var index = this.findHandlerIndex(this.pathToRegExp(path).toString(), protocol);\n    if (index !== -1) {\n        this.handlers.splice(index, 1);\n    }\n    else {\n        throw new Error('Unable to find a route matching the specified path and protocol.');\n    }\n};\n\nWebSocketRouter.prototype.findHandlerIndex = function(pathString, protocol) {\n    protocol = protocol.toLocaleLowerCase();\n    for (var i=0, len=this.handlers.length; i < len; i++) {\n        var handler = this.handlers[i];\n        if (handler.pathString === pathString && handler.protocol === protocol) {\n            return i;\n        }\n    }\n    return -1;\n};\n\nWebSocketRouter.prototype.pathToRegExp = function(path) {\n    if (typeof(path) === 'string') {\n        if (path === '*') {\n            path = /^.*$/;\n        }\n        else {\n            path = path.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n            path = new RegExp('^' + path + '$');\n        }\n    }\n    return path;\n};\n\nWebSocketRouter.prototype.handleRequest = function(request) {\n    var requestedProtocols = request.requestedProtocols;\n    if (requestedProtocols.length === 0) {\n        requestedProtocols = ['____no_protocol____'];\n    }\n\n    // Find a handler with the first requested protocol first\n    for (var i=0; i < requestedProtocols.length; i++) {\n        var requestedProtocol = requestedProtocols[i].toLocaleLowerCase();\n\n        // find the first handler that can process this request\n        for (var j=0, len=this.handlers.length; j < len; j++) {\n            var handler = this.handlers[j];\n            if (handler.path.test(request.resourceURL.pathname)) {\n                if (requestedProtocol === handler.protocol ||\n                    handler.protocol === '*')\n                {\n                    var routerRequest = new WebSocketRouterRequest(request, requestedProtocol);\n                    handler.callback(routerRequest);\n                    return;\n                }\n            }\n        }\n    }\n\n    // If we get here we were unable to find a suitable handler.\n    request.reject(404, 'No handler is available for the given request.');\n};\n\nmodule.exports = WebSocketRouter;\n","/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar util = require('util');\nvar EventEmitter = require('events').EventEmitter;\n\nfunction WebSocketRouterRequest(webSocketRequest, resolvedProtocol) {\n    // Superclass Constructor\n    EventEmitter.call(this);\n\n    this.webSocketRequest = webSocketRequest;\n    if (resolvedProtocol === '____no_protocol____') {\n        this.protocol = null;\n    }\n    else {\n        this.protocol = resolvedProtocol;\n    }\n    this.origin = webSocketRequest.origin;\n    this.resource = webSocketRequest.resource;\n    this.resourceURL = webSocketRequest.resourceURL;\n    this.httpRequest = webSocketRequest.httpRequest;\n    this.remoteAddress = webSocketRequest.remoteAddress;\n    this.webSocketVersion = webSocketRequest.webSocketVersion;\n    this.requestedExtensions = webSocketRequest.requestedExtensions;\n    this.cookies = webSocketRequest.cookies;\n}\n\nutil.inherits(WebSocketRouterRequest, EventEmitter);\n\nWebSocketRouterRequest.prototype.accept = function(origin, cookies) {\n    var connection = this.webSocketRequest.accept(this.protocol, origin, cookies);\n    this.emit('requestAccepted', connection);\n    return connection;\n};\n\nWebSocketRouterRequest.prototype.reject = function(status, reason, extraHeaders) {\n    this.webSocketRequest.reject(status, reason, extraHeaders);\n    this.emit('requestRejected', this);\n};\n\nmodule.exports = WebSocketRouterRequest;\n","/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar extend = require('./utils').extend;\nvar utils = require('./utils');\nvar util = require('util');\nvar debug = require('debug')('websocket:server');\nvar EventEmitter = require('events').EventEmitter;\nvar WebSocketRequest = require('./WebSocketRequest');\n\nvar WebSocketServer = function WebSocketServer(config) {\n    // Superclass Constructor\n    EventEmitter.call(this);\n\n    this._handlers = {\n        upgrade: this.handleUpgrade.bind(this),\n        requestAccepted: this.handleRequestAccepted.bind(this),\n        requestResolved: this.handleRequestResolved.bind(this)\n    };\n    this.connections = [];\n    this.pendingRequests = [];\n    if (config) {\n        this.mount(config);\n    }\n};\n\nutil.inherits(WebSocketServer, EventEmitter);\n\nWebSocketServer.prototype.mount = function(config) {\n    this.config = {\n        // The http server instance to attach to.  Required.\n        httpServer: null,\n\n        // 64KiB max frame size.\n        maxReceivedFrameSize: 0x10000,\n\n        // 1MiB max message size, only applicable if\n        // assembleFragments is true\n        maxReceivedMessageSize: 0x100000,\n\n        // Outgoing messages larger than fragmentationThreshold will be\n        // split into multiple fragments.\n        fragmentOutgoingMessages: true,\n\n        // Outgoing frames are fragmented if they exceed this threshold.\n        // Default is 16KiB\n        fragmentationThreshold: 0x4000,\n\n        // If true, the server will automatically send a ping to all\n        // clients every 'keepaliveInterval' milliseconds.  The timer is\n        // reset on any received data from the client.\n        keepalive: true,\n\n        // The interval to send keepalive pings to connected clients if the\n        // connection is idle.  Any received data will reset the counter.\n        keepaliveInterval: 20000,\n\n        // If true, the server will consider any connection that has not\n        // received any data within the amount of time specified by\n        // 'keepaliveGracePeriod' after a keepalive ping has been sent to\n        // be dead, and will drop the connection.\n        // Ignored if keepalive is false.\n        dropConnectionOnKeepaliveTimeout: true,\n\n        // The amount of time to wait after sending a keepalive ping before\n        // closing the connection if the connected peer does not respond.\n        // Ignored if keepalive is false.\n        keepaliveGracePeriod: 10000,\n\n        // Whether to use native TCP keep-alive instead of WebSockets ping\n        // and pong packets.  Native TCP keep-alive sends smaller packets\n        // on the wire and so uses bandwidth more efficiently.  This may\n        // be more important when talking to mobile devices.\n        // If this value is set to true, then these values will be ignored:\n        //   keepaliveGracePeriod\n        //   dropConnectionOnKeepaliveTimeout\n        useNativeKeepalive: false,\n\n        // If true, fragmented messages will be automatically assembled\n        // and the full message will be emitted via a 'message' event.\n        // If false, each frame will be emitted via a 'frame' event and\n        // the application will be responsible for aggregating multiple\n        // fragmented frames.  Single-frame messages will emit a 'message'\n        // event in addition to the 'frame' event.\n        // Most users will want to leave this set to 'true'\n        assembleFragments: true,\n\n        // If this is true, websocket connections will be accepted\n        // regardless of the path and protocol specified by the client.\n        // The protocol accepted will be the first that was requested\n        // by the client.  Clients from any origin will be accepted.\n        // This should only be used in the simplest of cases.  You should\n        // probably leave this set to 'false' and inspect the request\n        // object to make sure it's acceptable before accepting it.\n        autoAcceptConnections: false,\n\n        // Whether or not the X-Forwarded-For header should be respected.\n        // It's important to set this to 'true' when accepting connections\n        // from untrusted clients, as a malicious client could spoof its\n        // IP address by simply setting this header.  It's meant to be added\n        // by a trusted proxy or other intermediary within your own\n        // infrastructure.\n        // See:  http://en.wikipedia.org/wiki/X-Forwarded-For\n        ignoreXForwardedFor: false,\n\n        // If this is true, 'cookie' headers are parsed and exposed as WebSocketRequest.cookies\n        parseCookies: true,\n\n        // If this is true, 'sec-websocket-extensions' headers are parsed and exposed as WebSocketRequest.requestedExtensions\n        parseExtensions: true,\n\n        // The Nagle Algorithm makes more efficient use of network resources\n        // by introducing a small delay before sending small packets so that\n        // multiple messages can be batched together before going onto the\n        // wire.  This however comes at the cost of latency, so the default\n        // is to disable it.  If you don't need low latency and are streaming\n        // lots of small messages, you can change this to 'false'\n        disableNagleAlgorithm: true,\n\n        // The number of milliseconds to wait after sending a close frame\n        // for an acknowledgement to come back before giving up and just\n        // closing the socket.\n        closeTimeout: 5000\n    };\n    extend(this.config, config);\n\n    if (this.config.httpServer) {\n        if (!Array.isArray(this.config.httpServer)) {\n            this.config.httpServer = [this.config.httpServer];\n        }\n        var upgradeHandler = this._handlers.upgrade;\n        this.config.httpServer.forEach(function(httpServer) {\n            httpServer.on('upgrade', upgradeHandler);\n        });\n    }\n    else {\n        throw new Error('You must specify an httpServer on which to mount the WebSocket server.');\n    }\n};\n\nWebSocketServer.prototype.unmount = function() {\n    var upgradeHandler = this._handlers.upgrade;\n    this.config.httpServer.forEach(function(httpServer) {\n        httpServer.removeListener('upgrade', upgradeHandler);\n    });\n};\n\nWebSocketServer.prototype.closeAllConnections = function() {\n    this.connections.forEach(function(connection) {\n        connection.close();\n    });\n    this.pendingRequests.forEach(function(request) {\n        process.nextTick(function() {\n          request.reject(503); // HTTP 503 Service Unavailable\n        });\n    });\n};\n\nWebSocketServer.prototype.broadcast = function(data) {\n    if (Buffer.isBuffer(data)) {\n        this.broadcastBytes(data);\n    }\n    else if (typeof(data.toString) === 'function') {\n        this.broadcastUTF(data);\n    }\n};\n\nWebSocketServer.prototype.broadcastUTF = function(utfData) {\n    this.connections.forEach(function(connection) {\n        connection.sendUTF(utfData);\n    });\n};\n\nWebSocketServer.prototype.broadcastBytes = function(binaryData) {\n    this.connections.forEach(function(connection) {\n        connection.sendBytes(binaryData);\n    });\n};\n\nWebSocketServer.prototype.shutDown = function() {\n    this.unmount();\n    this.closeAllConnections();\n};\n\nWebSocketServer.prototype.handleUpgrade = function(request, socket) {\n    var self = this;\n    var wsRequest = new WebSocketRequest(socket, request, this.config);\n    try {\n        wsRequest.readHandshake();\n    }\n    catch(e) {\n        wsRequest.reject(\n            e.httpCode ? e.httpCode : 400,\n            e.message,\n            e.headers\n        );\n        debug('Invalid handshake: %s', e.message);\n        this.emit('upgradeError', e);\n        return;\n    }\n\n    this.pendingRequests.push(wsRequest);\n\n    wsRequest.once('requestAccepted', this._handlers.requestAccepted);\n    wsRequest.once('requestResolved', this._handlers.requestResolved);\n    socket.once('close', function () {\n        self._handlers.requestResolved(wsRequest);\n    });\n\n    if (!this.config.autoAcceptConnections && utils.eventEmitterListenerCount(this, 'request') > 0) {\n        this.emit('request', wsRequest);\n    }\n    else if (this.config.autoAcceptConnections) {\n        wsRequest.accept(wsRequest.requestedProtocols[0], wsRequest.origin);\n    }\n    else {\n        wsRequest.reject(404, 'No handler is configured to accept the connection.');\n    }\n};\n\nWebSocketServer.prototype.handleRequestAccepted = function(connection) {\n    var self = this;\n    connection.once('close', function(closeReason, description) {\n        self.handleConnectionClose(connection, closeReason, description);\n    });\n    this.connections.push(connection);\n    this.emit('connect', connection);\n};\n\nWebSocketServer.prototype.handleConnectionClose = function(connection, closeReason, description) {\n    var index = this.connections.indexOf(connection);\n    if (index !== -1) {\n        this.connections.splice(index, 1);\n    }\n    this.emit('close', connection, closeReason, description);\n};\n\nWebSocketServer.prototype.handleRequestResolved = function(request) {\n    var index = this.pendingRequests.indexOf(request);\n    if (index !== -1) { this.pendingRequests.splice(index, 1); }\n};\n\nmodule.exports = WebSocketServer;\n","var noop = exports.noop = function(){};\n\nexports.extend = function extend(dest, source) {\n    for (var prop in source) {\n        dest[prop] = source[prop];\n    }\n};\n\nexports.eventEmitterListenerCount =\n    require('events').EventEmitter.listenerCount ||\n    function(emitter, type) { return emitter.listeners(type).length; };\n\nexports.bufferAllocUnsafe = Buffer.allocUnsafe ?\n    Buffer.allocUnsafe :\n    function oldBufferAllocUnsafe(size) { return new Buffer(size); };\n\nexports.bufferFromString = Buffer.from ?\n    Buffer.from :\n    function oldBufferFromString(string, encoding) {\n      return new Buffer(string, encoding);\n    };\n\nexports.BufferingLogger = function createBufferingLogger(identifier, uniqueID) {\n    var logFunction = require('debug')(identifier);\n    if (logFunction.enabled) {\n        var logger = new BufferingLogger(identifier, uniqueID, logFunction);\n        var debug = logger.log.bind(logger);\n        debug.printOutput = logger.printOutput.bind(logger);\n        debug.enabled = logFunction.enabled;\n        return debug;\n    }\n    logFunction.printOutput = noop;\n    return logFunction;\n};\n\nfunction BufferingLogger(identifier, uniqueID, logFunction) {\n    this.logFunction = logFunction;\n    this.identifier = identifier;\n    this.uniqueID = uniqueID;\n    this.buffer = [];\n}\n\nBufferingLogger.prototype.log = function() {\n  this.buffer.push([ new Date(), Array.prototype.slice.call(arguments) ]);\n  return this;\n};\n\nBufferingLogger.prototype.clear = function() {\n  this.buffer = [];\n  return this;\n};\n\nBufferingLogger.prototype.printOutput = function(logFunction) {\n    if (!logFunction) { logFunction = this.logFunction; }\n    var uniqueID = this.uniqueID;\n    this.buffer.forEach(function(entry) {\n        var date = entry[0].toLocaleString();\n        var args = entry[1].slice();\n        var formatString = args[0];\n        if (formatString !== (void 0) && formatString !== null) {\n            formatString = '%s - %s - ' + formatString.toString();\n            args.splice(0, 1, formatString, date, uniqueID);\n            logFunction.apply(global, args);\n        }\n    });\n};\n","module.exports = require('../package.json').version;\n","module.exports = {\n    'server'       : require('./WebSocketServer'),\n    'client'       : require('./WebSocketClient'),\n    'router'       : require('./WebSocketRouter'),\n    'frame'        : require('./WebSocketFrame'),\n    'request'      : require('./WebSocketRequest'),\n    'connection'   : require('./WebSocketConnection'),\n    'w3cwebsocket' : require('./W3CWebSocket'),\n    'deprecation'  : require('./Deprecation'),\n    'version'      : require('./version')\n};\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","// This file was copied from https://github.com/substack/node-bufferlist\n// and modified to be able to copy bytes from the bufferlist directly into\n// a pre-existing fixed-size buffer without an additional memory allocation.\n\n// bufferlist.js\n// Treat a linked list of buffers as a single variable-size buffer.\nvar Buffer = require('buffer').Buffer;\nvar EventEmitter = require('events').EventEmitter;\nvar bufferAllocUnsafe = require('../lib/utils').bufferAllocUnsafe;\n\nmodule.exports = BufferList;\nmodule.exports.BufferList = BufferList; // backwards compatibility\n\nfunction BufferList(opts) {\n    if (!(this instanceof BufferList)) return new BufferList(opts);\n    EventEmitter.call(this);\n    var self = this;\n    \n    if (typeof(opts) == 'undefined') opts = {};\n    \n    // default encoding to use for take(). Leaving as 'undefined'\n    // makes take() return a Buffer instead.\n    self.encoding = opts.encoding;\n    \n    var head = { next : null, buffer : null };\n    var last = { next : null, buffer : null };\n    \n    // length can get negative when advanced past the end\n    // and this is the desired behavior\n    var length = 0;\n    self.__defineGetter__('length', function () {\n        return length;\n    });\n    \n    // keep an offset of the head to decide when to head = head.next\n    var offset = 0;\n    \n    // Write to the bufferlist. Emits 'write'. Always returns true.\n    self.write = function (buf) {\n        if (!head.buffer) {\n            head.buffer = buf;\n            last = head;\n        }\n        else {\n            last.next = { next : null, buffer : buf };\n            last = last.next;\n        }\n        length += buf.length;\n        self.emit('write', buf);\n        return true;\n    };\n    \n    self.end = function (buf) {\n        if (Buffer.isBuffer(buf)) self.write(buf);\n    };\n    \n    // Push buffers to the end of the linked list. (deprecated)\n    // Return this (self).\n    self.push = function () {\n        var args = [].concat.apply([], arguments);\n        args.forEach(self.write);\n        return self;\n    };\n    \n    // For each buffer, perform some action.\n    // If fn's result is a true value, cut out early.\n    // Returns this (self).\n    self.forEach = function (fn) {\n        if (!head.buffer) return bufferAllocUnsafe(0);\n        \n        if (head.buffer.length - offset <= 0) return self;\n        var firstBuf = head.buffer.slice(offset);\n        \n        var b = { buffer : firstBuf, next : head.next };\n        \n        while (b && b.buffer) {\n            var r = fn(b.buffer);\n            if (r) break;\n            b = b.next;\n        }\n        \n        return self;\n    };\n    \n    // Create a single Buffer out of all the chunks or some subset specified by\n    // start and one-past the end (like slice) in bytes.\n    self.join = function (start, end) {\n        if (!head.buffer) return bufferAllocUnsafe(0);\n        if (start == undefined) start = 0;\n        if (end == undefined) end = self.length;\n        \n        var big = bufferAllocUnsafe(end - start);\n        var ix = 0;\n        self.forEach(function (buffer) {\n            if (start < (ix + buffer.length) && ix < end) {\n                // at least partially contained in the range\n                buffer.copy(\n                    big,\n                    Math.max(0, ix - start),\n                    Math.max(0, start - ix),\n                    Math.min(buffer.length, end - ix)\n                );\n            }\n            ix += buffer.length;\n            if (ix > end) return true; // stop processing past end\n        });\n        \n        return big;\n    };\n    \n    self.joinInto = function (targetBuffer, targetStart, sourceStart, sourceEnd) {\n        if (!head.buffer) return new bufferAllocUnsafe(0);\n        if (sourceStart == undefined) sourceStart = 0;\n        if (sourceEnd == undefined) sourceEnd = self.length;\n        \n        var big = targetBuffer;\n        if (big.length - targetStart < sourceEnd - sourceStart) {\n            throw new Error(\"Insufficient space available in target Buffer.\");\n        }\n        var ix = 0;\n        self.forEach(function (buffer) {\n            if (sourceStart < (ix + buffer.length) && ix < sourceEnd) {\n                // at least partially contained in the range\n                buffer.copy(\n                    big,\n                    Math.max(targetStart, targetStart + ix - sourceStart),\n                    Math.max(0, sourceStart - ix),\n                    Math.min(buffer.length, sourceEnd - ix)\n                );\n            }\n            ix += buffer.length;\n            if (ix > sourceEnd) return true; // stop processing past end\n        });\n        \n        return big;\n    };\n    \n    // Advance the buffer stream by n bytes.\n    // If n the aggregate advance offset passes the end of the buffer list,\n    // operations such as .take() will return empty strings until enough data is\n    // pushed.\n    // Returns this (self).\n    self.advance = function (n) {\n        offset += n;\n        length -= n;\n        while (head.buffer && offset >= head.buffer.length) {\n            offset -= head.buffer.length;\n            head = head.next\n                ? head.next\n                : { buffer : null, next : null }\n            ;\n        }\n        if (head.buffer === null) last = { next : null, buffer : null };\n        self.emit('advance', n);\n        return self;\n    };\n    \n    // Take n bytes from the start of the buffers.\n    // Returns a string.\n    // If there are less than n bytes in all the buffers or n is undefined,\n    // returns the entire concatenated buffer string.\n    self.take = function (n, encoding) {\n        if (n == undefined) n = self.length;\n        else if (typeof n !== 'number') {\n            encoding = n;\n            n = self.length;\n        }\n        var b = head;\n        if (!encoding) encoding = self.encoding;\n        if (encoding) {\n            var acc = '';\n            self.forEach(function (buffer) {\n                if (n <= 0) return true;\n                acc += buffer.toString(\n                    encoding, 0, Math.min(n,buffer.length)\n                );\n                n -= buffer.length;\n            });\n            return acc;\n        } else {\n            // If no 'encoding' is specified, then return a Buffer.\n            return self.join(0, n);\n        }\n    };\n    \n    // The entire concatenated buffer as a string.\n    self.toString = function () {\n        return self.take('binary');\n    };\n}\nrequire('util').inherits(BufferList, EventEmitter);\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nmodule.exports = WebSocket;\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) return target.slice(0, offset);\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (let i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = Buffer.from(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n  const bu = bufferUtil.BufferUtil || bufferUtil;\n\n  module.exports = {\n    concat,\n    mask(source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bu.mask(source, mask, output, offset, length);\n    },\n    toArrayBuffer,\n    toBuffer,\n    unmask(buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bu.unmask(buffer, mask);\n    }\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = {\n    concat,\n    mask: _mask,\n    toArrayBuffer,\n    toBuffer,\n    unmask: _unmask\n  };\n}\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  EMPTY_BUFFER: Buffer.alloc(0),\n  NOOP: () => {}\n};\n","'use strict';\n\n/**\n * Class representing an event.\n *\n * @private\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was\n   *     dispatched\n   */\n  constructor(type, target) {\n    this.target = target;\n    this.type = type;\n  }\n}\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */\n  constructor(data, target) {\n    super('message', target);\n\n    this.data = data;\n  }\n}\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being\n   *     closed\n   * @param {String} reason A human-readable string explaining why the\n   *     connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */\n  constructor(code, reason, target) {\n    super('close', target);\n\n    this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n    this.reason = reason;\n    this.code = code;\n  }\n}\n\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */\nclass OpenEvent extends Event {\n  /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */\n  constructor(target) {\n    super('open', target);\n  }\n}\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n * @private\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {Object} error The error that generated this event\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */\n  constructor(error, target) {\n    super('error', target);\n\n    this.message = error.message;\n    this.error = error;\n  }\n}\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean`` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, listener, options) {\n    if (typeof listener !== 'function') return;\n\n    function onMessage(data) {\n      listener.call(this, new MessageEvent(data, this));\n    }\n\n    function onClose(code, message) {\n      listener.call(this, new CloseEvent(code, message, this));\n    }\n\n    function onError(error) {\n      listener.call(this, new ErrorEvent(error, this));\n    }\n\n    function onOpen() {\n      listener.call(this, new OpenEvent(this));\n    }\n\n    const method = options && options.once ? 'once' : 'on';\n\n    if (type === 'message') {\n      onMessage._listener = listener;\n      this[method](type, onMessage);\n    } else if (type === 'close') {\n      onClose._listener = listener;\n      this[method](type, onClose);\n    } else if (type === 'error') {\n      onError._listener = listener;\n      this[method](type, onError);\n    } else if (type === 'open') {\n      onOpen._listener = listener;\n      this[method](type, onOpen);\n    } else {\n      this[method](type, listener);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners(type);\n\n    for (let i = 0; i < listeners.length; i++) {\n      if (listeners[i] === listener || listeners[i]._listener === listener) {\n        this.removeListener(type, listeners[i]);\n      }\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n\n  if (header === undefined || header === '') return offers;\n\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 /* ' ' */ || code === 0x09 /* '\\t' */) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode, NOOP } = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // An `'error'` event is emitted, only on Node.js < 10.0.0, if the\n      // `zlib.DeflateRaw` instance is closed while data is being processed.\n      // This can happen if `PerMessageDeflate#cleanup()` is called at the wrong\n      // time due to an abnormal WebSocket closure.\n      //\n      this._deflate.on('error', NOOP);\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} [binaryType=nodebuffer] The type for binary data\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Boolean} [isServer=false] Specifies whether to operate in client or\n   *     server mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(binaryType, extensions, isServer, maxPayload) {\n    super();\n\n    this._binaryType = binaryType || BINARY_TYPES[0];\n    this[kWebSocket] = undefined;\n    this._extensions = extensions || {};\n    this._isServer = !!isServer;\n    this._maxPayload = maxPayload | 0;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n      if (this._masked) unmask(data, this._mask);\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its lenght is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf.toString());\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, '');\n        this.end();\n      } else if (data.length === 1) {\n        return error(\n          RangeError,\n          'invalid payload length 1',\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = data.slice(2);\n\n        if (!isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf.toString());\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */\n\n'use strict';\n\nconst net = require('net');\nconst tls = require('tls');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst mask = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   */\n  constructor(socket, extensions) {\n    this._extensions = extensions || {};\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame(data, options) {\n    const merge = options.mask && options.readOnly;\n    let offset = options.mask ? 6 : 2;\n    let payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2);\n      target.writeUInt32BE(data.length, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    randomFillSync(mask, 0, 4);\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {String} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || data === '') {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n      buf.write(data, 2);\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  doClose(data, mask, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x08,\n        mask,\n        readOnly: false\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    const buf = toBuffer(data);\n\n    if (buf.length > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPing, buf, mask, toBuffer.readOnly, cb]);\n    } else {\n      this.doPing(buf, mask, toBuffer.readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  doPing(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x09,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    const buf = toBuffer(data);\n\n    if (buf.length > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPong, buf, mask, toBuffer.readOnly, cb]);\n    } else {\n      this.doPong(buf, mask, toBuffer.readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  doPong(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x0a,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const buf = toBuffer(data);\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (rsv1 && perMessageDeflate) {\n        rsv1 = buf.length >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly: toBuffer.readOnly\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, buf, this._compress, opts, cb]);\n      } else {\n        this.dispatch(buf, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(buf, {\n          fin: options.fin,\n          rsv1: false,\n          opcode,\n          mask: options.mask,\n          readOnly: toBuffer.readOnly\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += data.length;\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const callback = this._queue[i][4];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= data.length;\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[1].length;\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[1].length;\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let resumeOnReceiverDrain = true;\n  let terminateOnDestroy = true;\n\n  function receiverOnDrain() {\n    if (resumeOnReceiverDrain) ws._socket.resume();\n  }\n\n  if (ws.readyState === ws.CONNECTING) {\n    ws.once('open', function open() {\n      ws._receiver.removeAllListeners('drain');\n      ws._receiver.on('drain', receiverOnDrain);\n    });\n  } else {\n    ws._receiver.removeAllListeners('drain');\n    ws._receiver.on('drain', receiverOnDrain);\n  }\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg) {\n    if (!duplex.push(msg)) {\n      resumeOnReceiverDrain = false;\n      ws._socket.pause();\n    }\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.readyState === ws.OPEN && !resumeOnReceiverDrain) {\n      resumeOnReceiverDrain = true;\n      if (!ws._receiver._writableState.needDrain) ws._socket.resume();\n    }\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\ntry {\n  let isValidUTF8 = require('utf-8-validate');\n\n  /* istanbul ignore if */\n  if (typeof isValidUTF8 === 'object') {\n    isValidUTF8 = isValidUTF8.Validation.isValidUTF8; // utf-8-validate@<3.0.0\n  }\n\n  module.exports = {\n    isValidStatusCode,\n    isValidUTF8(buf) {\n      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    }\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = {\n    isValidStatusCode,\n    isValidUTF8: _isValidUTF8\n  };\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst net = require('net');\nconst tls = require('tls');\nconst { createHash } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst WebSocket = require('./websocket');\nconst { format, parse } = require('./extension');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) this.clients = new Set();\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Close the server.\n   *\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(cb) {\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSED) {\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    //\n    // Terminate all associated clients.\n    //\n    if (this.clients) {\n      for (const client of this.clients) client.terminate();\n    }\n\n    const server = this._server;\n\n    if (server) {\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // Close the http server if it was internally created.\n      //\n      if (this.options.port != null) {\n        server.close(emitClose.bind(undefined, this));\n        return;\n      }\n    }\n\n    process.nextTick(emitClose, this);\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key =\n      req.headers['sec-websocket-key'] !== undefined\n        ? req.headers['sec-websocket-key'].trim()\n        : false;\n    const version = +req.headers['sec-websocket-version'];\n    const extensions = {};\n\n    if (\n      req.method !== 'GET' ||\n      req.headers.upgrade.toLowerCase() !== 'websocket' ||\n      !key ||\n      !keyRegex.test(key) ||\n      (version !== 8 && version !== 13) ||\n      !this.shouldHandle(req)\n    ) {\n      return abortHandshake(socket, 400);\n    }\n\n    if (this.options.perMessageDeflate) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = parse(req.headers['sec-websocket-extensions']);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        return abortHandshake(socket, 400);\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(key, extensions, req, socket, head, cb);\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(key, extensions, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Object} extensions The accepted extensions\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(key, extensions, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new WebSocket(null);\n    let protocol = req.headers['sec-websocket-protocol'];\n\n    if (protocol) {\n      protocol = protocol.split(',').map(trim);\n\n      //\n      // Optionally call external protocol selection handler.\n      //\n      if (this.options.handleProtocols) {\n        protocol = this.options.handleProtocols(protocol, req);\n      } else {\n        protocol = protocol[0];\n      }\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, this.options.maxPayload);\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => this.clients.delete(ws));\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle premature socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  if (socket.writable) {\n    message = message || http.STATUS_CODES[code];\n    headers = {\n      Connection: 'close',\n      'Content-Type': 'text/html',\n      'Content-Length': Buffer.byteLength(message),\n      ...headers\n    };\n\n    socket.write(\n      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n        Object.keys(headers)\n          .map((h) => `${h}: ${headers[h]}`)\n          .join('\\r\\n') +\n        '\\r\\n\\r\\n' +\n        message\n    );\n  }\n\n  socket.removeListener('error', socketOnError);\n  socket.destroy();\n}\n\n/**\n * Remove whitespace characters from both ends of a string.\n *\n * @param {String} str The string\n * @return {String} A new string representing `str` stripped of whitespace\n *     characters from both its beginning and end\n * @private\n */\nfunction trim(str) {\n  return str.trim();\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst { addEventListener, removeEventListener } = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._extensions = {};\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (Array.isArray(protocols)) {\n        protocols = protocols.join(', ');\n      } else if (typeof protocols === 'object' && protocols !== null) {\n        options = protocols;\n        protocols = undefined;\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return undefined;\n  }\n\n  /* istanbul ignore next */\n  set onclose(listener) {}\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return undefined;\n  }\n\n  /* istanbul ignore next */\n  set onerror(listener) {}\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return undefined;\n  }\n\n  /* istanbul ignore next */\n  set onopen(listener) {}\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return undefined;\n  }\n\n  /* istanbul ignore next */\n  set onmessage(listener) {}\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} [maxPayload=0] The maximum allowed message size\n   * @private\n   */\n  setSocket(socket, head, maxPayload) {\n    const receiver = new Receiver(\n      this.binaryType,\n      this._extensions,\n      this._isServer,\n      maxPayload\n    );\n\n    this._sender = new Sender(socket, this._extensions);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {String} [data] A string explaining why the connection is closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      const listeners = this.listeners(method);\n      for (let i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n\n      return undefined;\n    },\n    set(listener) {\n      const listeners = this.listeners(method);\n      for (let i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {String} [protocols] The subprotocols\n * @param {Object} [options] Connection options\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: undefined,\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket._url = address.href;\n  } else {\n    parsedUrl = new URL(address);\n    websocket._url = address;\n  }\n\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n\n  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n    throw new Error(`Invalid URL: ${websocket.url}`);\n  }\n\n  const isSecure =\n    parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const get = isSecure ? https.get : http.get;\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket',\n    ...opts.headers\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols) {\n    opts.headers['Sec-WebSocket-Protocol'] = protocols;\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req = (websocket._req = get(opts));\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req.aborted) return;\n\n    req = websocket._req = null;\n    websocket._readyState = WebSocket.CLOSING;\n    websocket.emit('error', err);\n    websocket.emitClose();\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      const addr = new URL(location, address);\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the `upgrade`\n    // event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (protocols || '').split(/, */);\n    let protError;\n\n    if (!protocols && serverProt) {\n      protError = 'Server sent a subprotocol but none was requested';\n    } else if (protocols && !serverProt) {\n      protError = 'Server sent no subprotocol';\n    } else if (serverProt && !protList.includes(serverProt)) {\n      protError = 'Server sent an invalid subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (extensionNames.length) {\n        if (\n          extensionNames.length !== 1 ||\n          extensionNames[0] !== PerMessageDeflate.extensionName\n        ) {\n          const message =\n            'Server indicated an extension that was not requested';\n          abortHandshake(websocket, socket, message);\n          return;\n        }\n\n        try {\n          perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n        } catch (err) {\n          const message = 'Invalid Sec-WebSocket-Extensions header';\n          abortHandshake(websocket, socket, message);\n          return;\n        }\n\n        websocket._extensions[PerMessageDeflate.extensionName] =\n          perMessageDeflate;\n      }\n    }\n\n    websocket.setSocket(socket, head, opts.maxPayload);\n  });\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    stream.once('abort', websocket.emitClose.bind(websocket));\n    websocket.emit('error', err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  this[kWebSocket]._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */\nfunction receiverOnMessage(data) {\n  this[kWebSocket].emit('message', data);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","module.exports = {\n\tEventTarget : require('./lib/EventTarget'),\n\tEvent       : require('./lib/Event')\n};\n","/**\n * Expose the Event class.\n */\nmodule.exports = _Event;\n\n\nfunction _Event(type) {\n\tthis.type = type;\n\tthis.isTrusted = false;\n\n\t// Set a flag indicating this is not a DOM Event object\n\tthis._yaeti = true;\n}\n","/**\n * Expose the _EventTarget class.\n */\nmodule.exports = _EventTarget;\n\nfunction _EventTarget() {\n\t// Do nothing if called for a native EventTarget object..\n\tif (typeof this.addEventListener === 'function') {\n\t\treturn;\n\t}\n\n\tthis._listeners = {};\n\n\tthis.addEventListener = _addEventListener;\n\tthis.removeEventListener = _removeEventListener;\n\tthis.dispatchEvent = _dispatchEvent;\n}\n\nObject.defineProperties(_EventTarget.prototype, {\n\tlisteners: {\n\t\tget: function () {\n\t\t\treturn this._listeners;\n\t\t}\n\t}\n});\n\nfunction _addEventListener(type, newListener) {\n\tvar\n\t\tlistenersType,\n\t\ti, listener;\n\n\tif (!type || !newListener) {\n\t\treturn;\n\t}\n\n\tlistenersType = this._listeners[type];\n\tif (listenersType === undefined) {\n\t\tthis._listeners[type] = listenersType = [];\n\t}\n\n\tfor (i = 0; !!(listener = listenersType[i]); i++) {\n\t\tif (listener === newListener) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tlistenersType.push(newListener);\n}\n\nfunction _removeEventListener(type, oldListener) {\n\tvar\n\t\tlistenersType,\n\t\ti, listener;\n\n\tif (!type || !oldListener) {\n\t\treturn;\n\t}\n\n\tlistenersType = this._listeners[type];\n\tif (listenersType === undefined) {\n\t\treturn;\n\t}\n\n\tfor (i = 0; !!(listener = listenersType[i]); i++) {\n\t\tif (listener === oldListener) {\n\t\t\tlistenersType.splice(i, 1);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (listenersType.length === 0) {\n\t\tdelete this._listeners[type];\n\t}\n}\n\nfunction _dispatchEvent(event) {\n\tvar\n\t\ttype,\n\t\tlistenersType,\n\t\tdummyListener,\n\t\tstopImmediatePropagation = false,\n\t\ti, listener;\n\n\tif (!event || typeof event.type !== 'string') {\n\t\tthrow new Error('`event` must have a valid `type` property');\n\t}\n\n\t// Do some stuff to emulate DOM Event behavior (just if this is not a\n\t// DOM Event object)\n\tif (event._yaeti) {\n\t\tevent.target = this;\n\t\tevent.cancelable = true;\n\t}\n\n\t// Attempt to override the stopImmediatePropagation() method\n\ttry {\n\t\tevent.stopImmediatePropagation = function () {\n\t\t\tstopImmediatePropagation = true;\n\t\t};\n\t} catch (error) {}\n\n\ttype = event.type;\n\tlistenersType = (this._listeners[type] || []);\n\n\tdummyListener = this['on' + type];\n\tif (typeof dummyListener === 'function') {\n\t\tdummyListener.call(this, event);\n\t}\n\n\tfor (i = 0; !!(listener = listenersType[i]); i++) {\n\t\tif (stopImmediatePropagation) {\n\t\t\tbreak;\n\t\t}\n\n\t\tlistener.call(this, event);\n\t}\n\n\treturn !event.defaultPrevented;\n}\n","const Discord = require('discord.js')\r\nconst path = require('path')\r\n\r\nconst locale = require('./localeUtil')\r\nconst pageMeta = require('./pages_meta.json')\r\n\r\nconst maxEntries = 5\r\n\r\nfunction getButtons(config) {\r\n  if (Object.keys(config.buttons).length === 0) {\r\n    return\r\n  }\r\n  const row = new Discord.MessageActionRow()\r\n  \r\n  for (const index in config.buttons) {\r\n    const buttonMeta = config.buttons[index]\r\n    const button = new Discord.MessageButton()\r\n      .setCustomId(buttonMeta.id)\r\n      .setLabel(locale.buttons[buttonMeta.id])\r\n      .setStyle(buttonMeta.style)\r\n\r\n    if(buttonMeta.emoji !== '') { \r\n      button.setEmoji(buttonMeta.emoji)\r\n    }\r\n    row.addComponents(button)\r\n  }\r\n  return row\r\n}\r\n\r\nmodule.exports = {}\r\n\r\nmodule.exports.getButtons = (config) => { return getButtons(config) }\r\n\r\nmodule.exports.getWaitEmbed = (user, relation, icon) => {\r\n\r\n  const title = locale.misc.wait_related\r\n    .replace(/(\\${relation})/g, relation)\r\n\r\n\r\n\r\n  const imgPath = path.resolve(__dirname, `../assets/images/${icon}`)\r\n  const thumbnail = new Discord.MessageAttachment(imgPath, icon)\r\n\r\n  const waitEmbed = new Discord.MessageEmbed()\r\n    .setColor('#c90000')\r\n    .setDescription(`🕐 ${locale.misc.please_wait}`)\r\n  \r\n  if (typeof (user) !== 'undefined') {\r\n    waitEmbed\r\n      .setTimestamp()\r\n      .setFooter(user.tag, user.avatarURL())\r\n  }\r\n\r\n  if (typeof (icon) !== 'undefined') {\r\n    waitEmbed\r\n      .setAuthor(title, `attachment://${icon}`)\r\n  }\r\n  \r\n  return { embeds: [waitEmbed], components: [], files: [thumbnail] }\r\n}\r\nmodule.exports.hasMessageEmbed = (message) => {\r\n  if (message.channel.type !== 'text' && message.channel.type !== 'dm') {\r\n    return false\r\n  }\r\n  if (message.embeds.length === 0) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\nmodule.exports.generateWarnEmbed = (title, description) => {\r\n  const embed = new Discord.MessageEmbed()\r\n    .setColor('#fcad03')\r\n    .setTitle(title)\r\n    .setThumbnail('attachment://warning.png')\r\n    .setTimestamp()\r\n    .setDescription(description)\r\n  \r\n  const icon = new Discord.MessageAttachment(path.resolve(__dirname, '../assets/images/warning.png'), 'warning.png')\r\n  \r\n  return { embeds: [embed], files: [icon] }\r\n}\r\nmodule.exports.retrieveCurrentPage = (embed) => {\r\n  const pages = embed.author.name\r\n  const currentPageString = pages.replace('Page ', '').split('/')[0]\r\n  return Number.parseInt(currentPageString) - 1\r\n}\r\nmodule.exports.generatePageEmbed = (pageUp, currentPage, data, title, icon, addFile) => {\r\n  let newpage = currentPage\r\n  const maxpage = Math.floor(data.length / maxEntries)\r\n  const selectRow = new Discord.MessageActionRow()\r\n  const selectList = new Discord.MessageSelectMenu()\r\n    .setCustomId('view_printjob')\r\n    .setPlaceholder(locale.selection.printlist_more_details.placeholder)\r\n\r\n  if (pageUp) {\r\n    if (currentPage !== maxpage - 1) {\r\n      newpage = currentPage + 1\r\n    }\r\n  } else {\r\n    if (currentPage !== 0) {\r\n      newpage = currentPage - 1\r\n    }\r\n  }\r\n  let entries = '\\n'\r\n  const convertedMaxEntries = maxEntries - 1\r\n  for (let i = (newpage * convertedMaxEntries) + newpage;\r\n    i <= convertedMaxEntries + (newpage * convertedMaxEntries) + newpage;\r\n    i++) {\r\n    if (i < data.length) {\r\n      entries = entries.concat(`${data[i].path}\\n`)\r\n      selectList.addOptions([{\r\n\t\t\t\t\t\t\tlabel: data[i].path,\r\n\t\t\t\t\t\t\tdescription: locale.selection.printlist_more_details.description\r\n                .replace(/(\\${gcode_file})/g, data[i].path),\r\n\t\t\t\t\t\t\tvalue: data[i].path,\r\n      }])\r\n    }\r\n  }\r\n\r\n  selectRow.addComponents(selectList)\r\n\r\n  const imgPath = path.resolve(__dirname, `../assets/images/${icon}`)\r\n  const thumbnail = new Discord.MessageAttachment(imgPath, icon)\r\n\r\n  const components = []\r\n  const files = []\r\n\r\n  if(addFile) { files.push(thumbnail) }\r\n\r\n  const buttons = getButtons(pageMeta)\r\n\r\n  components.push(selectRow, buttons)\r\n\r\n  const pageEmbed = new Discord.MessageEmbed()\r\n    .setColor('#0099ff')\r\n    .setTitle(title)\r\n    .setAuthor(`Page ${newpage + 1}/${maxpage}`)\r\n    .setDescription(entries)\r\n    .setThumbnail(`attachment://${icon}`)\r\n\r\n  return { embeds: [pageEmbed], files, components }\r\n}\r\n","const databasepath = '../database.json'\r\nconst fs = require('fs')\r\nconst logSymbols = require('log-symbols')\r\nconst path = require('path')\r\n\r\nconst ramDatabase = {\r\n  \"cooldown\": 0\r\n}\r\n\r\nmodule.exports = {}\r\n\r\nfunction updateNotifyData(data) {\r\n  const database = require(databasepath)\r\n  database.notify = data\r\n  saveDatabase(database)\r\n}\r\n\r\nfunction getRamDatabase(key) {\r\n  if(typeof(key) === 'undefined')\r\n    {return ramDatabase} \r\n\r\n  return ramDatabase[key]\r\n}\r\n\r\nfunction updateRamDatabase(key, value) {\r\n  ramDatabase[key] = value\r\n}\r\n\r\nfunction getNotifyData() {\r\n  const database = require(databasepath)\r\n  if (typeof (database.notify) === 'undefined') {\r\n    updateNotifyData([])\r\n    return []\r\n  }\r\n  return database.notify\r\n}\r\nfunction saveDatabase(databasedata) {\r\n  fs.writeFile(path.resolve(__dirname, databasepath), JSON.stringify(databasedata), (err) => {\r\n    if (err) { throw err }\r\n    console.log(logSymbols.info, 'The Database has been saved!'.database)\r\n  })\r\n}\r\nmodule.exports.updateNotify = function (user) {\r\n  const notifylist = getNotifyData()\r\n  if (notifylist.includes(user.id)) {\r\n    const index = notifylist.indexOf(user.id)\r\n    if (index > -1) {\r\n      notifylist.splice(index, 1)\r\n    }\r\n    updateNotifyData(notifylist)\r\n    return false\r\n  }\r\n  notifylist.push(user.id)\r\n  updateNotifyData(notifylist)\r\n  return true\r\n}\r\nmodule.exports.getNotifyList = function () {\r\n  return getNotifyData()\r\n}\r\nmodule.exports.getGuildDatabase = function (guild) {\r\n  const database = require(databasepath)\r\n  if (typeof database.guilds[guild.id] === 'undefined') {\r\n    console.log(logSymbols.info, `No Database for ${guild.name} found!\\nGenerate base config!`.database)\r\n    return {\r\n      broadcastchannels: [],\r\n      adminusers: [],\r\n      adminroles: []\r\n    }\r\n  }\r\n  return database.guilds[guild.id]\r\n}\r\nmodule.exports.getDatabase = function () {\r\n  return require(databasepath)\r\n}\r\nmodule.exports.updateDatabase = function (data, guild) {\r\n  const database = require(databasepath)\r\n  database.guilds[guild.id] = data\r\n  saveDatabase(database)\r\n}\r\nmodule.exports.getRamDatabase = () => { return getRamDatabase() }\r\nmodule.exports.updateRamDatabase = (key, value) => { updateRamDatabase(key, value) }\r\n","const Discord = require('discord.js')\r\n\r\nconst chatUtil = require('./chatUtil')\r\nconst metaData = require('./handler_meta.json')\r\nconst locale = require('./localeUtil')\r\nconst thumbnail = require('./thumbnailUtil')\r\nconst variables = require('./variablesUtil')\r\n\r\n\r\nmodule.exports = {}\r\nmodule.exports.printFileHandler = async (message, title, color) => {\r\n    return await printFileHandler(message, title, color)\r\n}\r\nasync function printFileHandler (message, title, color) {\r\n    const messageJson = JSON.parse(message.utf8Data)\r\n  let commandFeedback\r\n\r\n  if (typeof (messageJson.error) !== 'undefined') {\r\n      commandFeedback = `Not Found!`\r\n      return commandFeedback\r\n  }\r\n  if (typeof (messageJson.result) === 'undefined') { return }\r\n  if (typeof (messageJson.result.filename) === 'undefined') { return }\r\n    const description = ''\r\n        .concat(`${locale.fileinfo.print_time}: ${variables.formatTime(messageJson.result.estimated_time)}\\n`)\r\n        .concat(`${locale.fileinfo.slicer}: ${messageJson.result.slicer}\\n`)\r\n        .concat(`${locale.fileinfo.slicer_version}: ${messageJson.result.slicer_version}\\n`)\r\n        .concat(`${locale.fileinfo.height}: ${messageJson.result.object_height}mm`)\r\n\r\n    commandFeedback = new Discord.MessageEmbed()\r\n        .setColor(color)\r\n        .setTitle(title)\r\n        .setAuthor(messageJson.result.filename)\r\n        .setDescription(description)\r\n    let path\r\n    if (typeof (messageJson.result.thumbnails) !== 'undefined') {\r\n        path = messageJson.result.thumbnails[1].relative_path\r\n    }\r\n    const parsedThumbnail = await thumbnail.buildThumbnail(path)\r\n\r\n    const buttons = chatUtil.getButtons(metaData.file_info)\r\n\r\n    commandFeedback\r\n        .setThumbnail(`attachment://${parsedThumbnail.name}`)\r\n    return { embeds: [commandFeedback], files: [parsedThumbnail], components: [buttons] }\r\n}","const si = require('systeminformation')\r\n\r\nconst loadUtil = require('../loadUtil')\r\nconst locale = require('../localeUtil')\r\n\r\nmodule.exports = {}\r\nmodule.exports.getTitle = () => { return locale.loadinfo.cpu.title }\r\nmodule.exports.getFields = async () => {\r\n    const usageData = loadUtil.getUsageData()\r\n    const cpu = await si.cpu()\r\n    const cpuFreq = await si.cpuCurrentSpeed()\r\n    \r\n    return [{\r\n        name: locale.loadinfo.cpu.model,\r\n        value: cpu.brand,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.cpu.manufacturer,\r\n        value: cpu.manufacturer,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.cpu.usage,\r\n        value: `${usageData.cpu.load.currentLoad.toFixed(2)}%`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.cpu.cores,\r\n        value: `${cpu.physicalCores}`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.cpu.threads,\r\n        value: ` ${cpu.cores}`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.cpu.temperature,\r\n        value: `${usageData.cpu.temp.main.toFixed(2)}°C`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.cpu.frequency,\r\n        value: `${cpuFreq.avg}GHz`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.cpu.max_frequency,\r\n        value: `${cpuFreq.max}GHz`,\r\n        inline: true\r\n    }]\r\n}","const si = require('systeminformation')\r\n\r\nconst locale = require('../localeUtil')\r\n\r\nconst template = {\r\n    \"name\": {\r\n        \"title\": locale.loadinfo.disk.name,\r\n        \"value\":  \"${disk.device}\"\r\n    },\r\n    \"type\": {\r\n        \"title\": locale.loadinfo.disk.type,\r\n        \"value\":  \"${disk.type}\"\r\n    },\r\n    \"model\": {\r\n        \"title\": locale.loadinfo.disk.model,\r\n        \"value\":  \"${disk.name}\"\r\n    },\r\n    \"vendor\": {\r\n        \"title\": locale.loadinfo.disk.vendor,\r\n        \"value\":  \"${disk.vendor}\"\r\n    },\r\n    \"used\": {\r\n        \"title\": locale.loadinfo.disk.size,\r\n        \"value\":  \"${disk.size}\"\r\n    },\r\n}\r\n\r\nmodule.exports = {}\r\nmodule.exports.getTitle = () => { return locale.loadinfo.disk.title }\r\nmodule.exports.getFields = async () => {\r\n    const disks = await si.diskLayout()\r\n    \r\n    const fields = []\r\n\r\n    for (const diskindex in disks) {\r\n        \r\n        const disk = disks[diskindex]\r\n\r\n        if (String(disk.device).includes('/dev/ram')) { return }\r\n\r\n        const stringTemplate = JSON.stringify(template)\r\n\r\n        const translatedTemplate = stringTemplate\r\n            .replace(/(\\${disk_index})/g, diskindex)\r\n            .replace(/(\\${disk.device})/g, disk.device)\r\n            .replace(/(\\${disk.type})/g, disk.type)\r\n            .replace(/(\\${disk.name})/g, disk.name)\r\n            .replace(/(\\${disk.vendor})/g, disk.vendor)\r\n            .replace(/(\\${disk.size})/g, `${(disk.size / (1024 ** 3)).toFixed(2)}GB`)\r\n        \r\n        const translatedJSONTemplate = JSON.parse(translatedTemplate)\r\n        \r\n        for (const index in translatedJSONTemplate) {\r\n            fields.push({\r\n                name: translatedJSONTemplate[index].title,\r\n                value: translatedJSONTemplate[index].value,\r\n                inline: true\r\n            })\r\n        }\r\n    }\r\n    return fields\r\n}","const locale = require('../localeUtil')\r\n\r\nconst syntaxLocale = locale.syntaxlocale\r\n\r\nmodule.exports.components = {\r\n  cpu: require('./cpu'),\r\n  ram: require('./ram'),\r\n  disk: require('./disk'),\r\n  partitions: require('./partitions'),\r\n  os: require('./os'),\r\n}\r\n\r\nmodule.exports.choices = () => {\r\n    return [\r\n        {\r\n            name: syntaxLocale.loadinfo.cpu.title,\r\n            value: 'cpu'\r\n        },\r\n        {\r\n            name: syntaxLocale.loadinfo.ram.title,\r\n            value: 'ram'\r\n        },\r\n        {\r\n            name: syntaxLocale.loadinfo.disk.title,\r\n            value: 'disk'\r\n        },\r\n        {\r\n            name: syntaxLocale.loadinfo.partitions.title,\r\n            value: 'partitions'\r\n        },\r\n        {\r\n            name: syntaxLocale.loadinfo.os.title,\r\n            value: 'os'\r\n        },\r\n    ]\r\n}\r\n","const si = require('systeminformation')\r\n\r\nconst locale = require('../localeUtil')\r\n\r\nmodule.exports = {}\r\nmodule.exports.getTitle = () => { return locale.loadinfo.os.title }\r\nmodule.exports.getFields = async () => {\r\n  const os = await si.osInfo()\r\n    \r\n    return [{\r\n        name: locale.loadinfo.os.platform,\r\n        value:`${os.platform}`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.os.logofile,\r\n        value:`${os.logofile}`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.os.distro,\r\n        value:`${os.distro}`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.os.release,\r\n        value:`${os.release}`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.os.kernel,\r\n        value:`${os.kernel}`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.os.arch,\r\n        value:`${os.arch}`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.os.hostname,\r\n        value:`${os.hostname}`,\r\n        inline: true\r\n    }]\r\n}","const si = require('systeminformation')\r\n\r\nconst locale = require('../localeUtil')\r\n\r\nconst template = {\r\n    \"name\": {\r\n        \"title\": locale.loadinfo.partitions.name,\r\n        \"value\":  \"${partition.fs}\"\r\n    },\r\n    \"type\": {\r\n        \"title\": locale.loadinfo.partitions.type,\r\n        \"value\":  \"${partition.type}\"\r\n    },\r\n    \"mount\": {\r\n        \"title\": locale.loadinfo.partitions.mount,\r\n        \"value\":  \"${partition.mount}\"\r\n    },\r\n    \"size\": {\r\n        \"title\": locale.loadinfo.partitions.size,\r\n        \"value\":  \"${partition.size}\"\r\n    },\r\n    \"used\": {\r\n        \"title\": locale.loadinfo.partitions.used,\r\n        \"value\":  \"${partition.used}\"\r\n    },\r\n}\r\n\r\nmodule.exports = {}\r\nmodule.exports.getTitle = () => { return locale.loadinfo.partitions.title }\r\nmodule.exports.getFields = async () => {\r\n    const partitions = await si.fsSize()\r\n    \r\n    const fields = []\r\n\r\n    for (const partitionindex in partitions) {\r\n        \r\n        const partition = partitions[partitionindex]\r\n\r\n        const stringTemplate = JSON.stringify(template)\r\n\r\n        const translatedTemplate = stringTemplate\r\n            .replace(/(\\${partition_index})/g, partitionindex)\r\n            .replace(/(\\${partition.fs})/g, partition.fs)\r\n            .replace(/(\\${partition.type})/g, partition.type)\r\n            .replace(/(\\${partition.mount})/g, partition.mount)\r\n            .replace(/(\\${partition.size})/g, `${(partition.size / (1024 ** 3)).toFixed(2)}GB`)\r\n            .replace(/(\\${partition.used})/g, `${(partition.used / (1024 ** 3)).toFixed(2)}GB`)\r\n        \r\n        const translatedJSONTemplate = JSON.parse(translatedTemplate)\r\n        \r\n        for (const index in translatedJSONTemplate) {\r\n            fields.push({\r\n                name: translatedJSONTemplate[index].title,\r\n                value: translatedJSONTemplate[index].value,\r\n                inline: true\r\n            })\r\n        }\r\n    }\r\n    return fields\r\n}","const si = require('systeminformation')\r\n\r\nconst locale = require('../localeUtil')\r\n\r\nmodule.exports = {}\r\nmodule.exports.getTitle = () => { return locale.loadinfo.ram.title }\r\nmodule.exports.getFields = async () => {\r\n    const ram = await si.mem()\r\n    \r\n    return [{\r\n        name: locale.loadinfo.ram.total,\r\n        value:`${(ram.total / (1024 ** 3)).toFixed(2)}GB`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.ram.used,\r\n        value:`${(ram.used / (1024 ** 3)).toFixed(2)}GB`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.ram.swap_total,\r\n        value:`${(ram.swaptotal / (1024 ** 3)).toFixed(2)}GB`,\r\n        inline: true\r\n    },{\r\n        name: locale.loadinfo.ram.swap_used,\r\n        value:`${(ram.swapused / (1024 ** 3)).toFixed(2)}GB`,\r\n        inline: true\r\n    }]\r\n}","const args = process.argv.slice(2)\r\n\r\nconst { waitUntil } = require('async-wait-until')\r\nconst Discord = require('discord.js')\r\nconst fs = require('fs')\r\nconst logSymbols = require('log-symbols')\r\nconst path = require('path')\r\nconst si = require('systeminformation')\r\n\r\nconst variablesUtil = require('./variablesUtil')\r\nconst chatUtil = require('./chatUtil')\r\nconst database = require('./databaseUtil')\r\nconst componentHandler = require('./hsComponents')\r\nconst locale = require('./localeUtil')\r\nconst status = require('./statusUtil')\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\n\r\nconst usageData = {\r\n  'cpu': {\r\n    'load': 0,\r\n    'temp': 0\r\n  }\r\n}\r\n\r\nlet throttleCoolDown = 0\r\n\r\nlet dcClient\r\n\r\nmodule.exports.getComponents = () => { \r\n  const components = componentHandler.choices() \r\n  \r\n  const mculist = variablesUtil.getMCUList()\r\n  Object.keys(mculist).forEach(key => {\r\n      components.push({name: key.toUpperCase(), value: key})\r\n  })\r\n\r\n  return components\r\n}\r\n\r\nmodule.exports.getUsageData = () => { return usageData }\r\n\r\nmodule.exports.getDefaultEmbed = (img, title) => {\r\n  const image = getImage(img)\r\n  const embed = getDefaultEmbed(image, title)\r\n  return { embeds: [embed], files: [image] }\r\n}\r\n\r\nmodule.exports.getInformation = async function (component) {\r\n  const image = getImage(component)\r\n  const componentData = componentHandler.components[component]\r\n  const fields = await componentData.getFields()\r\n  const embed = getDefaultEmbed(image, componentData.getTitle())\r\n  if (fields.length > 0) {\r\n    for (const fieldindex in fields) {\r\n      const field = fields[fieldindex]\r\n      embed.addField(field.name, field.value, field.inline)\r\n    }\r\n  } else {\r\n    const description = locale.errors.no_data\r\n      .replace(/(\\${component})/g, `\\`${componentData.getTitle()}\\``)\r\n    \r\n    embed.setColor('#c90000')\r\n    embed.setDescription(description)\r\n  }\r\n  return { embeds: [embed], files: [image] }\r\n}\r\n\r\nmodule.exports.init = (discordClient) => {\r\n\r\n  dcClient = discordClient\r\n\r\n  setInterval(async () => {\r\n    const ram = await si.mem()\r\n    const partitions = await si.fsSize()\r\n\r\n    let throttled = false\r\n\r\n    usageData.cpu.load = await si.currentLoad()\r\n    usageData.cpu.temp = await si.cpuTemperature()\r\n    \r\n    if (!config.system_notifications.system_warns) { return }\r\n\r\n    if (throttleCoolDown > 0) { return }\r\n    \r\n    if (isCPUOverloaded()) { throttled = true }\r\n    if (isCPUOverheating()) { throttled = true }\r\n    if (isRAMFull(ram)) { throttled = true }\r\n    if (isPartitionsFull(partitions)) { throttled = true }\r\n    \r\n    if (throttled) {\r\n      throttleCoolDown = 60\r\n    }\r\n  }, 1000)\r\n}\r\n\r\nfunction isCPUOverloaded() {\r\n  if (usageData.cpu.load.currentLoad > 95) {\r\n    postThrottle('high_cpu_load')\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nfunction isCPUOverheating() {\r\n  if (usageData.cpu.temp.main > 80) {\r\n    postThrottle('high_cpu_temp')\r\n    return true\r\n  }\r\n  return false\r\n}\r\nfunction isRAMFull(ram) {\r\n  if (ram.free < Number.parseInt('100_000_000')) {\r\n    postThrottle('high_ram_usage')\r\n    return true\r\n  }\r\n  return false\r\n}\r\nfunction isPartitionsFull(partitions) {\r\n  let anyFull = false\r\n  for (const index in partitions) {\r\n    const partition = partitions[index]\r\n    if (partition.aviable < Number.parseInt('100_000_000')) {\r\n      postThrottle('high_partition_usage', partition.mount)\r\n      anyFull = true\r\n    }\r\n  }\r\n  return anyFull\r\n}\r\n\r\nfunction getImage(component) {\r\n  const imgPath = path.resolve(__dirname, `../assets/images/${component}.png`)\r\n  const imgBuffer = fs.readFileSync(imgPath)\r\n\r\n  return new Discord.MessageAttachment(imgBuffer, `${component}.png`)\r\n}\r\n\r\nasync function postThrottle(component, section) {\r\n  if(typeof(section) === 'undefined') { section = '' }\r\n\r\n  await waitUntil(() => dcClient.user !== null, { timeout: Number.POSITIVE_INFINITY, intervalBetweenAttempts: 1000 })\r\n  \r\n  const sentence = locale.loadthrottle.sentence\r\n    .replace(/(\\${reason})/g, `\\`${locale.loadthrottle[component].name}\\``)\r\n  const suggestion = locale.loadthrottle[component].suggestion\r\n    .replace(/(\\${component_section})/g, `\\`${section}\\``)\r\n  \r\n  console.log(logSymbols.warning, `A System Warn occured: ${component}!`.throttlewarn)\r\n  \r\n  const throttleEmbed = chatUtil.generateWarnEmbed(\r\n    locale.loadthrottle.title,\r\n    `${sentence}\r\n  ${suggestion}`)\r\n  \r\n  status.postBroadcastMessage(throttleEmbed, dcClient, database)\r\n}\r\n\r\nfunction getDefaultEmbed(image, title) {\r\n  return new Discord.MessageEmbed()\r\n    .setColor('#0099ff')\r\n    .setTitle(title)\r\n    .setThumbnail(`attachment://${image.name}`)\r\n}\r\n","const args = process.argv.slice(2)\r\nconst config = require(`${args[0]}/mooncord.json`)\r\nconst locale = require(`../locales/${config.language.messages}.json`)\r\nconst syntaxlocale = require(`../locales/${config.language.command_syntax}.json`)\r\n\r\nmodule.exports = locale\r\nmodule.exports.syntaxlocale = syntaxlocale\r\nmodule.exports.getAdminOnlyError = (username) => {\r\n    return locale.errors.admin_only.replace(/(\\${username})/g, username)\r\n}\r\nmodule.exports.getControllerOnlyError = (username) => {\r\n    return locale.errors.controller_only.replace(/(\\${username})/g, username)\r\n}\r\nmodule.exports.getGuildOnlyError = (username) => {\r\n    return locale.errors.guild_only.replace(/(\\${username})/g, username)\r\n}\r\nmodule.exports.getCommandNotReadyError = (username) => {\r\n    return locale.errors.not_ready.replace(/(\\${username})/g, username)\r\n}","const args = process.argv.slice(2)\r\n\r\nconst fs = require('fs')\r\nconst logSymbols = require('log-symbols')\r\nconst path = require('path')\r\nconst util = require('util')\r\n\r\nconst writeFile = util.promisify(fs.writeFile)\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\n\r\nmodule.exports.migrate = async () => {\r\n  let modified = false\r\n  if (typeof (config.connection.moonraker_token) === 'undefined') {\r\n    config.connection.moonraker_token = \"\"\r\n    modified = true\r\n  }\r\n  if (typeof (config.timelapse.ffmpeg_arguments) === 'undefined') {\r\n    config.timelapse.ffmpeg_arguments = [\r\n      '-pix_fmt yuv420p',\r\n      '-preset slower',\r\n      '-crf 30'\r\n    ]\r\n    modified = true\r\n  }\r\n  if (typeof (config.timelapse.ffmpeg_codec) === 'undefined') {\r\n    config.timelapse.ffmpeg_codec = 'libx264' \r\n    modified = true\r\n  }\r\n  if (modified) { await saveData() }\r\n}\r\n\r\nasync function saveData() {\r\n    await writeFile(path.resolve(`${args[0]}/mooncord.json`), JSON.stringify(config, null, 4), 'utf8')\r\n    console.log(logSymbols.info, `The Config got updated!`.database)\r\n}","const args = process.argv.slice(2)\r\n\r\nconst statusconfig = require(`${args[0]}/mooncord.json`)\r\nconst database = require('./databaseUtil')\r\n\r\nmodule.exports.init = () => {\r\n  if (statusconfig.status.use_percent) {\r\n    setInterval(() => {\r\n      const ramDatabase = database.getRamDatabase()\r\n      const currentTime = ramDatabase.cooldown\r\n      if (currentTime > 0) {\r\n        database.updateRamDatabase(\"cooldown\", currentTime - 1)\r\n      }\r\n    }, 1000)\r\n  }\r\n}","const args = process.argv.slice(2)\r\n\r\nconst discordClient = require('../clients/discordClient')\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\nconst database = require('./databaseUtil')\r\n\r\nmodule.exports.hasAdmin = async function (user, guildid, altdiscordClient) {\r\n  if (config.permission.controller.includes(user.id)) {\r\n    return true\r\n  }\r\n  if (typeof (guildid) === 'undefined') {\r\n    return false\r\n  }\r\n  let client\r\n  if (typeof (altdiscordClient) !== 'undefined') {\r\n    client = altdiscordClient\r\n  } else {\r\n    client = discordClient.getClient\r\n  }\r\n  let guild = guildid\r\n  if (typeof (guildid) === 'string') {\r\n    guild = await client.guilds.fetch(guildid)\r\n  }\r\n  const guilddatabase = database.getGuildDatabase(guild)\r\n  if (guilddatabase.adminusers.includes(user.id)) {\r\n    return true\r\n  }\r\n  const member = await guild.members.fetch(user.id)\r\n  if (config.permission.guild_admin_as_bot_admin &&\r\n    guilddatabase.adminroles.some(role => member.roles.cache.has(role))) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nmodule.exports.hasController = function (user) {\r\n  return config.permission.controller.includes(user.id)\r\n}\r\n","const { waitUntil } = require('async-wait-until')\r\nconst logSymbols = require('log-symbols')\r\nconst Discord = require('discord.js')\r\n\r\nconst args = process.argv.slice(2)\r\n \r\nconst config = require(`${args[0]}/mooncord.json`)\r\nconst database = require('./databaseUtil')\r\nconst locale = require('./localeUtil')\r\nconst metadata = require('./status_meta_data.json')\r\nconst thumbnail = require('./thumbnailUtil')\r\nconst variables = require('./variablesUtil')\r\nconst webcam = require('./webcamUtil')\r\nconst chatUtil = require('./chatUtil')\r\n\r\nconst statusWaitList = []\r\n\r\nlet currentStatus = \"startup\"\r\n\r\nasync function changeStatus(discordClient, newStatus) {\r\n  const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n  const currentStatusMeta = metadata[currentStatus].meta_data\r\n  const newStatusMeta = metadata[newStatus].meta_data\r\n\r\n  if(!currentStatusMeta.allow_same && currentStatus === newStatus) { return false }\r\n  if(currentStatusMeta.prevent.includes(newStatus)) { return false }\r\n  if(currentStatusMeta.order_id > 0 && \r\n    newStatusMeta.order_id > 0 && \r\n    currentStatusMeta.order_id > newStatusMeta.order_id) { return false }\r\n\r\n  statusWaitList.push(id)\r\n\r\n  currentStatus = newStatus\r\n\r\n  await waitUntil(() => statusWaitList[0] === id, { timeout: Number.POSITIVE_INFINITY, intervalBetweenAttempts: 2000 })\r\n\r\n  await waitUntil(() => discordClient.user !== null, { timeout: Number.POSITIVE_INFINITY, intervalBetweenAttempts: 1500 })\r\n\r\n  console.log(logSymbols.info, `Printer Status: ${newStatus}`.printstatus)\r\n  \r\n  const parsedConfig = parseConfig(newStatus)\r\n\r\n  if (typeof (parsedConfig.activity) !== 'undefined') {\r\n    discordClient.user.setActivity(\r\n      parsedConfig.activity.text,\r\n      { type: parsedConfig.activity.type }\r\n    )\r\n  }\r\n\r\n  if (onCooldown(config, currentStatusMeta.allow_same)) { return }\r\n\r\n  const embed = await generateStatusEmbed(parsedConfig)\r\n\r\n  broadcastMessage(embed, discordClient)\r\n\r\n  statusWaitList.shift()\r\n  return true\r\n}\r\n\r\nfunction onCooldown(config, isSame) {\r\n  if (!config.status.use_percent) { return false }\r\n  if (!isSame) { return false }\r\n  if (database.getRamDatabase().cooldown === 0) { return false }\r\n  return true\r\n}\r\n\r\nasync function removeOldStatus(channel, discordClient) {\r\n  if (typeof(channel) === 'undefined') { return }\r\n  \r\n  if (typeof(channel.username) === 'string') { \r\n    const user = await discordClient.users.fetch(channel.id)\r\n    channel = user.dmChannel\r\n  }\r\n\r\n  if (channel === null) { return }\r\n\r\n  let lastMessage = await channel.messages.fetch({ limit: 1 })\r\n  lastMessage = lastMessage.first()\r\n\r\n  if (lastMessage.author.id !== discordClient.user.id) { return }\r\n  if (lastMessage.deleted) { return }\r\n  if (lastMessage.embeds.size === 0) { return }\r\n  if (typeof(lastMessage.embeds[0]) === 'undefined') { return }\r\n  if (lastMessage.embeds[0].title !== locale.status.printing.title) { return }\r\n\r\n  try {\r\n    await lastMessage.delete()\r\n  } catch { }\r\n}\r\n\r\nasync function broadcastSection(list, section, discordClient, message) {\r\n  for (const index in list) {\r\n    const id = list[index]\r\n\r\n    if (section === 'guilds') {\r\n      broadcastSection(list[index].broadcastchannels, 'channels', discordClient, message)\r\n      return\r\n    }\r\n\r\n    const channel = await discordClient[section].fetch(id)\r\n    await removeOldStatus(channel, discordClient)\r\n    channel.send(message)\r\n  }\r\n}\r\n\r\nfunction broadcastMessage(message, discordClient) {\r\n  const guildDatabase = database.getDatabase().guilds\r\n  const notifyList = database.getNotifyList()\r\n\r\n  if(typeof(message) === 'undefined') { return }\r\n\r\n  broadcastSection(guildDatabase, 'guilds', discordClient, message)\r\n  broadcastSection(notifyList, 'users', discordClient, message)\r\n}\r\n\r\nfunction parseConfig(status) {\r\n  const config = metadata[status]\r\n  const localeConfig = locale.status[status]\r\n  const parsedConfig = JSON.stringify(config) \r\n    .replace(/(\\${locale.title})/g, localeConfig.title)\r\n    .replace(/(\\${locale.activity})/g, localeConfig.activity)\r\n    .replace(/(\\${locale.print_time})/g, locale.status.fields.print_time)\r\n    .replace(/(\\${locale.print_layers})/g, locale.status.fields.print_layers)\r\n    .replace(/(\\${locale.eta_print_time})/g, locale.status.fields.eta_print_time)\r\n    .replace(/(\\${locale.print_progress})/g, locale.status.fields.print_progress)\r\n    .replace(/(\\${gcode_file})/g, variables.getCurrentPrintJob())\r\n    .replace(/(\\${value_print_time})/g, variables.formatTime(variables.getTimes().duration))\r\n    .replace(/(\\${value_eta_print_time})/g, variables.formatTime(variables.getTimes().left))\r\n    .replace(/(\\${value_print_progress})/g, variables.getProgress())\r\n    .replace(/(\\${value_current_layer})/g, variables.getCurrentLayer())\r\n    .replace(/(\\${value_max_layer})/g, variables.getMaxLayers())\r\n  return JSON.parse(parsedConfig)\r\n}\r\n\r\nasync function generateStatusEmbed(config) {\r\n  const snapshot = await webcam.retrieveWebcam()\r\n\r\n  const files = []\r\n\r\n  const components = []\r\n\r\n  files.push(snapshot)\r\n  \r\n  const embed = new Discord.MessageEmbed()\r\n    .setColor(config.color)\r\n    .setTitle(config.title)\r\n    .setImage(`attachment://${snapshot.name}`)\r\n  \r\n  if (typeof (config.author) !== 'undefined') {\r\n    embed.setAuthor(config.author)\r\n  }\r\n  \r\n  if (config.thumbnail) {\r\n    const thumbnailpic = await thumbnail.retrieveThumbnail()\r\n    files.push(thumbnailpic)\r\n    embed\r\n      .setThumbnail(`attachment://${thumbnailpic.name}`)\r\n  }\r\n\r\n  if (typeof (config.fields) !== 'undefined') {\r\n    for (const index in config.fields) {\r\n      embed.addField(config.fields[index].name, config.fields[index].value, true)\r\n    }\r\n  }\r\n  if (config.versions) {\r\n    const currentVersions = variables.getVersions()\r\n    for (const component in currentVersions) {\r\n      if (component !== 'system') {\r\n        const componentdata = currentVersions[component]\r\n        let {version} = componentdata\r\n        if (version !== componentdata.remote_version) {\r\n          version = version.concat(` **(${componentdata.remote_version})**`)\r\n        }\r\n        embed.addField(component, version, true)\r\n      }\r\n    }\r\n  }\r\n  \r\n  embed.setTimestamp()\r\n\r\n  const buttons = chatUtil.getButtons(config)\r\n\r\n  if(typeof(buttons) !== 'undefined') {\r\n    components.push(buttons)\r\n  }\r\n  \r\n  return { embeds: [embed], files, components }\r\n}\r\n\r\nmodule.exports.changeStatus = async (discordClient, newStatus) => {\r\n  return await changeStatus(discordClient, newStatus)\r\n}\r\n\r\nmodule.exports.getManualStatusEmbed = async (channel, discordClient) => {\r\n  await removeOldStatus(channel, discordClient)\r\n  const parsedConfig = parseConfig(currentStatus)\r\n  return await generateStatusEmbed(parsedConfig)\r\n}\r\n\r\nmodule.exports.postBroadcastMessage = async (message, discordClient) => {\r\n  await waitUntil(() => discordClient.user !== null, { timeout: Number.POSITIVE_INFINITY, intervalBetweenAttempts: 1500 })\r\n  broadcastMessage(message, discordClient)\r\n}\r\n\r\nmodule.exports.getStatus = () => { return currentStatus }","const args = process.argv.slice(2)\r\n\r\nconst statusconfig = require(`${args[0]}/mooncord.json`)\r\n\r\nconst variables = require('./variablesUtil')\r\n\r\nconst Discord = require('discord.js')\r\nconst fs = require('fs').promises\r\nconst axios = require('axios')\r\nconst path = require('path')\r\n\r\nasync function retrieveThumbnail (url) {\r\n  let thumbnail\r\n\r\n  await getBase64(`${statusconfig.connection.moonraker_url}/server/files/gcodes/${url}`)\r\n    .then((buffer) => {\r\n      thumbnail = buffer\r\n    })\r\n    .catch(() => {\r\n      \r\n    })\r\n\r\n  if (typeof (thumbnail) === 'undefined' || thumbnail === '') {\r\n    return new Discord.MessageAttachment(await fs.readFile(path.resolve(__dirname, '../assets/images/thumbnail_not_found.png')), 'thumbnail.png')\r\n  }\r\n  \r\n  const buffer = Buffer.from(thumbnail, 'base64')\r\n  return new Discord.MessageAttachment(buffer, 'thumbnail.png')\r\n}\r\n\r\nfunction getBase64(url) {\r\n  return axios\r\n    .get(url, {\r\n      responseType: 'arraybuffer'\r\n    })\r\n    .then(response => Buffer.from(response.data, 'binary').toString('base64'))\r\n}\r\n\r\nmodule.exports.retrieveThumbnail = async function () {\r\n  return await retrieveThumbnail(variables.getThumbnailPath())\r\n}\r\nmodule.exports.buildThumbnail = async function (path) {\r\n  return await retrieveThumbnail(path)\r\n}\r\n","const args = process.argv.slice(2)\r\n\r\nconst { waitUntil } = require('async-wait-until')\r\nconst Discord = require('discord.js')\r\n//const ffmpeg = require('fluent-ffmpeg')\r\nconst fs = require('fs')\r\nconst logSymbols = require('log-symbols')\r\n//const ffmpegPath = require('@ffmpeg-installer/ffmpeg').path\r\nconst path = require('path')\r\n\r\nconst locale = require('./localeUtil')\r\nconst statusUtil = require('./statusUtil')\r\nconst variablesUtil = require('./variablesUtil')\r\nconst webcamUtil = require('./webcamUtil')\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\n\r\n//const conv = ffmpeg()\r\n\r\nlet running = false\r\nlet framecount = 1\r\nlet lastLayer = 0\r\nlet lastPercent = 0\r\n\r\n//ffmpeg.setFfmpegPath(ffmpegPath)\r\n\r\nfunction checkForFrames() {\r\n    const pattern = /^frame-+/\r\n    return fs.readdirSync(path.resolve(__dirname,'../temp/timelapse'), (err, fileNames) => {\r\n        if (err) { return false }\r\n\r\n        for (const name of fileNames) {\r\n            if (pattern.test(name)) {\r\n                return true\r\n            }\r\n        }\r\n    });\r\n}\r\nasync function render() {\r\n    if (!running) { return }\r\n    \r\n    console.log(logSymbols.info, 'Starting Timelapse Render'.printstatus)\r\n    let renderdone = false\r\n\r\n    const hasFrames = checkForFrames()\r\n\r\n    if (!hasFrames) { return }\r\n    \r\n //   conv\r\n //       .addInput(path.resolve(__dirname,\r\n //           '../temp/timelapse/frame-%d.png'))\r\n //       .inputFPS(config.timelapse.framerate)\r\n //       .output(path.resolve(__dirname, '../temp/timelapse/timelapse.mp4'))\r\n //       .outputFPS(config.timelapse.framerate)\r\n //       .outputOptions(config.timelapse.ffmpeg_arguments)\r\n //       .noAudio()\r\n //       .videoCodec(config.timelapse.ffmpeg_codec)\r\n //       .on('end', async (stdout, stderr) => {\r\n //          renderdone = true\r\n //       })\r\n //   console.log(conv)\r\n //   conv.run()\r\n //   await waitUntil(() => renderdone === true, { timeout: Number.POSITIVE_INFINITY })\r\n}\r\n\r\nasync function makeFrame() {\r\n    if (!running) {\r\n        return\r\n    }\r\n    const snapshot = await webcamUtil.retrieveWebcam()\r\n    const frame = await fs.writeFileSync(path.resolve(__dirname,\r\n        `../temp/timelapse/frame-${framecount}.png`),\r\n        snapshot.attachment, 'base64')\r\n    framecount ++\r\n}\r\n\r\nfunction getTimelapse() {\r\n    if (!running) {\r\n        return\r\n    }\r\n    try {\r\n        const data = fs.readFileSync(path.resolve(__dirname, '../temp/timelapse/timelapse.mp4'))\r\n        return new Discord.MessageAttachment(data, 'timelapse.mp4')\r\n    } catch (error) {\r\n        console.log(logSymbols.error, `Timelapse Util: ${error}`.error)\r\n    }\r\n}\r\n\r\nfunction generateLayerFrame() {\r\n    if (variablesUtil.getCurrentLayer() === lastLayer) { return }\r\n    makeFrame()\r\n    lastLayer = variablesUtil.getCurrentLayer()\r\n}\r\nfunction generatePercentFrame() {\r\n    if (variablesUtil.getProgress() === lastPercent) { return }\r\n    makeFrame()\r\n    lastPercent = variablesUtil.getProgress()\r\n}\r\n\r\nmodule.exports.init = (dcClient, mrClient) => {\r\n    running = true\r\n    discordClient = dcClient\r\n    moonrakerClient = mrClient\r\n    if (config.timelapse.frame_every_layer ||\r\n        config.timelapse.frame_every_percent) {\r\n        setInterval(() => {\r\n            if (statusUtil.getStatus() !== 'printing') { return }\r\n\r\n            generateLayerFrame()\r\n            generatePercentFrame()\r\n        }, 500)\r\n    }\r\n}\r\nmodule.exports.isRunning = () => { return running }\r\nmodule.exports.makeFrame = () => { makeFrame() }\r\nmodule.exports.render = async () => { await render() }\r\nmodule.exports.getTimelapse = () => { return getTimelapse() }\r\nmodule.exports.getEmbed = () => {\r\n    if (!running) {\r\n        return\r\n    }\r\n    const timelapse = getTimelapse()\r\n    const description = locale.timelapse.for_gcode\r\n        .replace(/(\\${gcode_file})/g, variablesUtil.getLastPrintJob())\r\n    const embed =  new Discord.MessageEmbed()\r\n        .setDescription(description)\r\n    return { embeds: [embed], files: [timelapse] }\r\n}\r\nmodule.exports.start = () => {\r\n    fs.unlink(path.resolve(__dirname, '../temp/timelapse/timelapse.mp4'), (err) => {\r\n        if (err) {}\r\n    })\r\n    lastHeight = 0\r\n    framecount = 1\r\n    const pattern = /^frame-+/\r\n    fs.readdir(path.resolve(__dirname,'../temp/timelapse'), (err, fileNames) => {\r\n        if (err) { return }\r\n\r\n        for (const name of fileNames) {\r\n\r\n            if (pattern.test(name)) {\r\n\r\n                fs.unlink(path.resolve(__dirname,`../temp/timelapse/${name}`), (err) => {\r\n                    if (err) {}\r\n                });\r\n            }\r\n        }\r\n    });\r\n}","const rawData = {\r\n  \"layer\": {\r\n    \"current\": 0,\r\n    \"layer_height\": 0,\r\n    \"object_height\": 0,\r\n    \"first_layer_height\": 0\r\n  },\r\n  \"mcu_list\": {},\r\n  \"invite_url\": \"\",\r\n  \"update_timer\": 0,\r\n  \"moonraker_versions\": {},\r\n  \"print_job\": {\r\n    \"job_id\": \"\",\r\n    \"current_file\": \"\",\r\n    \"last_file\": \"\",\r\n    \"start_byte\": 0,\r\n    \"end_byte\": 0,\r\n    \"thumbnail\": \"\",\r\n    \"progress\": 0,\r\n    \"times\": {\r\n      \"multiplier\": 0,\r\n      \"duration\": 0,\r\n      \"file_total_duration\": 0,\r\n      \"slicer_total_duration\": 0\r\n    }\r\n  },\r\n  \"temperatures\": {}\r\n}\r\n\r\nconst data = { ...rawData}\r\n\r\nmodule.exports.dump = data\r\nmodule.exports.dumpRaw = rawData\r\n\r\nmodule.exports.setCurrentLayer = (z) => { data.layer.current = z }\r\nmodule.exports.setLayerHeights = (layerHeight, objectHeight, firstLayerHeight) => {\r\n  data.layer.layer_height = layerHeight\r\n  data.layer.object_height = objectHeight\r\n  data.layer.first_layer_height = firstLayerHeight\r\n}\r\n\r\nmodule.exports.addToMCUList = (mcu) => { data.mcu_list[mcu] = null }\r\nmodule.exports.updateMCUStatus = (mcu, status) => { data.mcu_list[mcu] = status }\r\nmodule.exports.clearMCUList = () => { data.mcu_list = {} }\r\n\r\nmodule.exports.setInviteUrl = (url) => { data.invite_url = url }\r\nmodule.exports.setUpdateTimer = (newUpdateTimer) => { data.update_timer = newUpdateTimer }\r\n\r\nmodule.exports.setVersions = (currentVersions) => { data.moonraker_versions = currentVersions }\r\n\r\nmodule.exports.setCurrentPrintJob = (currentFile) => { data.print_job.current_file = currentFile }\r\nmodule.exports.setStartByte = (startByte) => { data.print_job.start_byte = startByte }\r\nmodule.exports.setEndByte = (endByte) => { data.print_job.end_byte = endByte }\r\nmodule.exports.setThumbnailPath = (thumbnail) => { data.print_job.thumbnail = thumbnail }\r\nmodule.exports.setProgress = (progress) => { data.print_job.progress = progress }\r\nmodule.exports.setJobID = (id) => { data.print_job.job_id = id }\r\nmodule.exports.updateTimeData = (key, times) => { data.print_job.times[key] = times }\r\nmodule.exports.updateLastPrintJob = () => {\r\n  data.print_job.last_file = data.print_job.current_file\r\n  data.print_job.current_file = ''\r\n}\r\n\r\nmodule.exports.setTemperature = (key, temperature) => { rawData.temperatures[key] = temperature }\r\n\r\nmodule.exports.getMaxLayers = () => {\r\n  const max = Math.ceil((data.layer.object_height - data.layer.first_layer_height) / data.layer.layer_height + 1)\r\n  return max > 0 ? max : 0\r\n}\r\nmodule.exports.getCurrentLayer = () => {\r\n  let current_layer = Math.ceil((data.layer.current - data.layer.first_layer_height) / data.layer.layer_height + 1)\r\n  current_layer = (current_layer <= this.getMaxLayers()) ? current_layer : this.getMaxLayers()\r\n  return current_layer > 0 ? current_layer : 0\r\n}\r\nmodule.exports.getLayerHeight = () => { return data.layer.layer_height }\r\nmodule.exports.getObjectHeight = () => { return data.layer.object_height }\r\nmodule.exports.getFirstLayerHeight = () => { return data.layer.first_layer_height }\r\n\r\nmodule.exports.getMCUList = () => { return data.mcu_list }\r\n\r\nmodule.exports.getConfigPath = () => {\r\n  const args = process.argv.slice(2)\r\n  return args[0]\r\n}\r\n\r\nmodule.exports.getInviteUrl = function() { return data.invite_url }\r\nmodule.exports.getUpdateTimer = () => { return data.update_timer }\r\n\r\nmodule.exports.getVersions = () => { return data.moonraker_versions }\r\n\r\nmodule.exports.getThumbnailPath = () => { return data.print_job.thumbnail }\r\nmodule.exports.getCurrentPrintJob = () => { return data.print_job.current_file }\r\nmodule.exports.getLastPrintJob = () => { return data.print_job.last_file }\r\nmodule.exports.getProgress = () => { return data.print_job.progress }\r\nmodule.exports.getStartByte = () => { return data.print_job.start_byte }\r\nmodule.exports.getEndByte = () => { return data.print_job.end_byte }\r\nmodule.exports.getJobID = () => { return data.print_job.job_id }\r\nmodule.exports.getTimes = () => {\r\n  const endTime = Math.floor(Date.now() / 1000)\r\n  const {duration} = data.print_job.times\r\n\r\n  let total = data.print_job.times.file_total_duration\r\n\r\n  if (total === 0 ||\r\n    isNaN(total) ||\r\n    !isFinite(total)) {\r\n    total = data.print_job.times.slicer_total_duration\r\n  }\r\n  \r\n  const left = (total - duration) / data.print_job.times.multiplier\r\n  const end = endTime + (total - duration)\r\n\r\n  return {\r\n    total,\r\n    duration,\r\n    left,\r\n    end\r\n  }\r\n}\r\n\r\nmodule.exports.getTemperatures = () => { return rawData.temperatures }\r\n\r\nmodule.exports.formatTime = (time) => { return formatTime(time) }\r\n\r\nfunction formatTime(seconds) {\r\n  if (isNaN(Number(seconds)) || !isFinite(seconds)) {seconds = 0}\r\n  let isNeg = false\r\n  if (seconds < 0) {\r\n    seconds = Math.abs(seconds)\r\n    isNeg = true\r\n  }\r\n  const h = Math.floor(seconds / 3600)\r\n  const m = Math.floor(seconds % 3600 / 60)\r\n  const s = Math.floor(seconds % 3600 % 60)\r\n\r\n  let r = `${s  }s` // always show seconds\r\n  r = `${m  }m ${  r}` // always show minutes\r\n  if (h > 0) {r = `${h  }h ${  r}`} // only show hours if relevent\r\n\r\n  return (isNeg) ? `-${  r}` : r\r\n}\r\n","const Discord = require(\"discord.js\")\r\nconst logSymbols = require(\"log-symbols\")\r\nconst fs = require(\"fs\").promises\r\nconst fetch = require(\"node-fetch\")\r\nconst path = require(\"path\")\r\nconst axios = require(\"axios\")\r\nconst sharp = require(\"sharp\")\r\n\r\nconst args = process.argv.slice(2)\r\n\r\nconst moonrakerClient = require(\"../clients/moonrakerClient\")\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\n\r\nasync function retrieveWebcam() {\r\n  const { webcam } = config\r\n  const {\r\n    brightness,\r\n    contrast,\r\n    greyscale,\r\n    horizontal_mirror,\r\n    quality,\r\n    rotation,\r\n    sepia,\r\n    vertical_mirror,\r\n  } = webcam\r\n\r\n  const beforeStatus = config.status.before\r\n  const afterStatus = config.status.after\r\n\r\n  await executePostProcess(beforeStatus)\r\n\r\n  try {\r\n    // @ts-ignore\r\n    const res = await fetch(webcam.url)\r\n    const buffer = await res.buffer()\r\n\r\n    // Only run Jimp if they want the image modifed\r\n    if (\r\n      brightness ||\r\n      contrast ||\r\n      greyscale ||\r\n      horizontal_mirror ||\r\n      rotation ||\r\n      sepia ||\r\n      vertical_mirror\r\n    ) {\r\n      const image = await sharp(buffer)\r\n\r\n      image\r\n        .rotate(rotation)\r\n        .flip(vertical_mirror)\r\n        .flop(horizontal_mirror)\r\n        .greyscale(greyscale)\r\n\r\n      if(brightness) {\r\n        image.modulate({ \r\n          brightness: (brightness + 1)\r\n        })\r\n      }\r\n\r\n      if(contrast) {\r\n        image.linear(contrast + 1, -(128 * (contrast + 1)) + 128)\r\n      } \r\n\r\n      if (sepia) {\r\n        image.recomb([\r\n         [0.3588, 0.7044, 0.1368],\r\n         [0.299, 0.587, 0.114],\r\n         [0.2392, 0.4696, 0.0912],\r\n        ])\r\n      }\r\n\r\n      image.png({\r\n        quality\r\n      })\r\n\r\n      const editBuffer = await image.toBuffer()\r\n\r\n      await executePostProcess(afterStatus)\r\n\r\n      return new Discord.MessageAttachment(editBuffer, \"snapshot.png\")\r\n    }\r\n\r\n    // Else just send the normal images\r\n    await executePostProcess(afterStatus)\r\n\r\n    return new Discord.MessageAttachment(buffer, \"snapshot.png\")\r\n  } catch (error) {\r\n    if (error) {\r\n      console.log(logSymbols.error, `Webcam Util: ${error}`)\r\n\r\n      return new Discord.MessageAttachment(\r\n        await fs.readFile(\r\n          path.resolve(__dirname, \"../assets/images/snapshot-error.png\")\r\n        ),\r\n        \"snapshot-error.png\"\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nasync function executePostProcess(config) {\r\n  if (!config.enable || config.execute.length === 0) {\r\n    return\r\n  }\r\n\r\n  await sleep(config.delay)\r\n\r\n  let index = 0\r\n\r\n  while (index < config.execute.length) {\r\n    const execute = config.execute[index]\r\n    if (execute.startsWith(\"gcode:\")) {\r\n      const gcode = execute.replace(\"gcode:\", \"\")\r\n      const id = Math.floor(Math.random() * Number.parseInt(\"10_000\")) + 1\r\n      moonrakerClient\r\n        .getConnection()\r\n        .send(\r\n          `{\"jsonrpc\": \"2.0\", \"method\": \"printer.gcode.script\", \"params\": {\"script\": \"${gcode}\"}, \"id\": ${id}}`\r\n        )\r\n    }\r\n    if (execute.startsWith(\"website_post:\")) {\r\n      const url = execute.replace(\"website_post:\", \"\")\r\n      triggerWebsite(url, true)\r\n    }\r\n    if (execute.startsWith(\"website:\")) {\r\n      const url = execute.replace(\"website:\", \"\")\r\n      triggerWebsite(url, false)\r\n    }\r\n    await sleep(config.delay)\r\n    index++\r\n  }\r\n\r\n  await sleep(config.delay)\r\n}\r\n\r\nasync function triggerWebsite(url, post) {\r\n  if (post) {\r\n    await axios.post(url)\r\n    return\r\n  }\r\n  await axios.get(url)\r\n}\r\n\r\nasync function sleep(delay) {\r\n  return await new Promise((r) => setTimeout(r, delay))\r\n}\r\n\r\nmodule.exports.retrieveWebcam = function () {\r\n  return retrieveWebcam()\r\n}\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 49540;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 54951;\nmodule.exports = webpackEmptyContext;","const Discord = require('discord.js')\r\nconst path = require('path')\r\n\r\nconst status = require('../utils/statusUtil')\r\nconst timelapseUtil = require('../utils/timelapseUtil')\r\nconst variables = require('../utils/variablesUtil')\r\n\r\nconst event = (message, connection, discordClient, database) => {\r\n  if (message.type !== 'utf8') { return }\r\n\r\n  const messageJson = JSON.parse(message.utf8Data)\r\n  const methode = messageJson.method\r\n  \r\n  if (typeof (methode) !== 'undefined' && methode === 'notify_gcode_response') {\r\n    const { params } = messageJson\r\n    if(params[0].startsWith(\"mooncord.broadcast\")) {\r\n      const message = params[0].replace(\"mooncord.broadcast \", \"\")\r\n      const attachment = new Discord.MessageAttachment()\r\n      const broadcastembed = new Discord.MessageEmbed(path.resolve(__dirname, '../assets/images/notification.png'))\r\n        .setColor('#03f4fc')\r\n        .setTitle('Message')\r\n        .setThumbnail('attachment://notification.png')\r\n        .setTimestamp()\r\n        .setDescription(message)\r\n      status.postBroadcastMessage({embeds: [broadcastembed], files: [attachment]}\r\n        , discordClient, database)\r\n    }\r\n    if(params[0].startsWith(\"mooncord.invite\")) {\r\n      const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n      connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"printer.gcode.script\", \"params\": {\"script\": \"RESPOND PREFIX=mooncord.response MSG=${variables.getInviteUrl()}\"}, \"id\": ${id}}`)\r\n    }\r\n    if (params[0].startsWith(\"timelapse photo\")) {\r\n      timelapseUtil.makeFrame()\r\n    }\r\n  }\r\n}\r\nmodule.exports = event\r\n","const variables = require('../utils/variablesUtil')\r\n\r\nconst event = (message) => {\r\n  if (message.type !== 'utf8') { return }\r\n  \r\n  const messageJson = JSON.parse(message.utf8Data)\r\n  const { result } = messageJson\r\n\r\n  if (typeof (result) === 'undefined') { return }\r\n  if (typeof (result.gcode_start_byte) === 'undefined') { return }\r\n\r\n  variables.setStartByte(result.gcode_start_byte)\r\n  variables.setEndByte(result.gcode_end_byte)\r\n  variables.setJobID(result.job_id)\r\n  variables.updateTimeData('slicer_total_duration', result.estimated_time)\r\n  variables.setLayerHeights(result.layer_height,\r\n    result.object_height, result.first_layer_height)\r\n  \r\n  if (typeof (result.thumbnails) !== 'undefined') {\r\n    const thumbnail = result.thumbnails[result.thumbnails.length - 1];\r\n    variables.setThumbnailPath(thumbnail.relative_path)\r\n  }\r\n}\r\nmodule.exports = event\r\n","const variables = require('../utils/variablesUtil')\r\n\r\nconst event = async (message, connection, discordClient) => {\r\n  const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n  if (message.type !== 'utf8') { return }\r\n  \r\n  const messageJson = JSON.parse(message.utf8Data)\r\n  const methode = messageJson.method\r\n  let timer\r\n  if (typeof (methode) !== 'undefined' && methode === 'notify_gcode_response') {\r\n    const { params } = messageJson\r\n    if (params[0].startsWith('File opened')) {\r\n      const removeSize = params[0].slice(0, Math.max(0, params[0].indexOf(' Size')))\r\n      const removeFileTag = removeSize.slice(12)\r\n      const printfile = removeFileTag\r\n\r\n      variables.updateTimeData('duration', 0)\r\n\r\n      connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"server.files.metadata\", \"params\": {\"filename\": \"${printfile}\"}, \"id\": ${id}}`)\r\n\r\n      variables.setCurrentPrintJob(printfile)\r\n    }\r\n  }\r\n}\r\nmodule.exports = event\r\n","module.exports = {\r\n  gcodeMetaData: require('./gcodeMetaData'),\r\n  gcodeCommands: require('./gcodeCommands'),\r\n  gcodeResponse: require('./gcodeResponse'),\r\n  klipperState: require('./klipperState'),\r\n  klipperStates: require('./klipperStates'),\r\n  moonrakerThrottle: require('./moonrakerThrottle'),\r\n  moonrakerUpdate: require('./moonrakerUpdate'),\r\n  versions: require('./versions'),\r\n  subscribeRespond: require('./subscribeRespond'),\r\n  subscribeNotification: require('./subscribeNotification')\r\n}\r\n","const status = require('../utils/statusUtil')\r\n\r\nconst event = (message, connection, discordClient) => {\r\n  if (message.type !== 'utf8') { return }\r\n  \r\n  const messageJson = JSON.parse(message.utf8Data)\r\n  const { result } = messageJson\r\n\r\n  if(typeof (result) === 'undefined') { return }\r\n  if (typeof (result.klippy_state) === 'undefined') { return }\r\n  \r\n  const currentStatus = result.klippy_state\r\n\r\n  status.changeStatus(discordClient, currentStatus)\r\n}\r\nmodule.exports = event\r\n","const args = process.argv.slice(2)\r\n\r\nconst status = require('../utils/statusUtil')\r\nconst timelapseUtil = require('../utils/timelapseUtil')\r\nconst variables = require('../utils/variablesUtil')\r\nconst states = require('./klipper_states.json')\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\n\r\nconst event = async (message, connection, discordClient) => {\r\n  if (message.type !== 'utf8') { return }\r\n\r\n  const messageJson = JSON.parse(message.utf8Data)\r\n  const methode = messageJson.method\r\n  const { params } = messageJson\r\n  if (typeof (methode) === 'undefined') { return }\r\n  if (!Object.keys(states).includes(methode)) { return }\r\n  \r\n  if (typeof (states[methode].required_params) !== 'undefined') {\r\n    if (typeof (params) === 'undefined') { return }\r\n    if (!states[methode].required_params.some(param => params.includes(param))) { return }\r\n  }\r\n\r\n  if (typeof (states[methode].timed_status) !== 'undefined') {\r\n    changeStatusLater(states[methode].timed_status, discordClient)\r\n  }\r\n\r\n  variables.updateLastPrintJob()\r\n  if(!await status.changeStatus(discordClient, states[methode].status)) { return }\r\n\r\n  if(typeof(states[methode].render) === 'undefined') { return }\r\n\r\n  if (states[methode].render) {\r\n    await timelapseUtil.render()\r\n    if (config.timelapse.post_at_print_end) {\r\n      status.postBroadcastMessage(timelapseUtil.getEmbed(), discordClient)\r\n    }\r\n  }\r\n}\r\n\r\nfunction changeStatusLater(state, discordClient) {\r\n  setTimeout(() => {\r\n    status.changeStatus(discordClient, state)\r\n  }, 2000)\r\n}\r\nmodule.exports = event\r\n","const args = process.argv.slice(2)\r\n\r\nconst logSymbols = require('log-symbols')\r\n\r\nconst chatUtil = require('../utils/chatUtil')\r\nconst locale = require('../utils/localeUtil')\r\nconst status = require('../utils/statusUtil')\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\n\r\nlet posted = []\r\nlet notThrottledCounter = 30\r\n\r\nconst validFlags = new Set([\r\n  'Frequency Capped',\r\n  'Under-Voltage Detected',\r\n  'Temperature Limit Active'\r\n])\r\n\r\nconst event = (message, connection, discordClient, database) => {\r\n  if (message.type !== 'utf8') { return }\r\n  \r\n  const messageJson = JSON.parse(message.utf8Data)\r\n  \r\n  if (typeof (messageJson.method) === 'undefined') { return }\r\n  if (messageJson.method !== 'notify_cpu_throttled') { return }\r\n\r\n  if (typeof (messageJson.params) === 'undefined') { return }\r\n  if (typeof (messageJson.params[0].throttled_state) !== 'undefined') {\r\n    retrieveStats(messageJson.params[0].throttled_state)\r\n  }\r\n  if (!config.system_notifications.moonraker_throttle) { return }\r\n  if (typeof (messageJson.params[0].throttled_state) !== 'undefined') {\r\n    retrieveThrottle(messageJson.params[0].throttled_state, discordClient, database)\r\n  }\r\n}\r\nfunction retrieveStats(result) {\r\n  // console.log(result)\r\n}\r\nfunction retrieveThrottle(result, discordClient, database) {\r\n  const { flags } = result\r\n  if (!flags.includes('Currently Throttled')) {\r\n    if (notThrottledCounter === 0) {\r\n      posted = []\r\n      return\r\n    }\r\n    notThrottledCounter--\r\n    return\r\n  }\r\n  for (const index in flags) {\r\n    const flag = flags[index]\r\n    if (validFlags.has(flag)) {\r\n\r\n      notThrottledCounter = 30\r\n\r\n      if (!posted.includes(flag)) {\r\n        posted.push(flag)\r\n        postThrottle(flag, discordClient, database)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nasync function postThrottle(throttle, discordClient, database) {\r\n  const key = throttle\r\n    .toLowerCase()\r\n    .replace(' ', '_')\r\n    .replace('-', '_')\r\n  \r\n  const sentence = locale.throttle.sentence\r\n    .replace(/(\\${reason})/g, `\\`${locale.throttle.reasons[key].name}\\``)\r\n  const {suggestion} = locale.throttle.reasons[key]\r\n  \r\n  console.log(logSymbols.warning, `A Throttle occured: ${throttle}!`.throttlewarn)\r\n  \r\n  const throttleEmbed = chatUtil.generateWarnEmbed(\r\n    locale.throttle.title,\r\n    `${sentence}\r\n  ${suggestion}`)\r\n  \r\n  await status.postBroadcastMessage(throttleEmbed, discordClient, database)\r\n}\r\nmodule.exports = event","const Discord = require('discord.js')\r\nconst logSymbols = require('log-symbols')\r\nconst path = require('path')\r\n\r\nconst locale = require('../utils/localeUtil')\r\nconst status = require('../utils/statusUtil')\r\nconst variables = require('../utils/variablesUtil')\r\n\r\nmodule.exports = async (message) => {\r\n  if (message.type !== 'utf8') { return }\r\n  const messageJson = JSON.parse(message.utf8Data)\r\n\r\n  if (typeof (messageJson.method) === 'undefined') { return }\r\n  if (messageJson.method !== 'notify_status_update') { return }\r\n\r\n  if (typeof (messageJson.params) === 'undefined') { return }\r\n\r\n  retrieveSoftwareVersion(messageJson.params[0])\r\n}\r\n\r\nfunction retrieveSoftwareVersion(result) {\r\n  if (typeof (result) === 'undefined') { return }\r\n  if (typeof (result.version_info) === 'undefined') { return }\r\n\r\n  variables.setVersions(result.version_info)\r\n  postUpdate(result.version_info, discordClient, database)\r\n}\r\n\r\nasync function postUpdate(updateData, discordClient, database) {\r\n  if (Object.keys(updateData).length === 0) { return }\r\n\r\n  console.log(logSymbols.info, `There are some Updates!`.printstatus)\r\n\r\n  const notifyEmbed = new Discord.MessageEmbed()\r\n    .setColor('#fcf803')\r\n    .setTitle(locale.update.title)\r\n    .setThumbnail('attachment://update.png')\r\n    .setTimestamp()\r\n  \r\n  const icon = new Discord.MessageAttachment(path.resolve(__dirname, '../assets/images/update.png'))\r\n\r\n  for (const software in updateData) {\r\n    if (software === 'system') {\r\n      notifyEmbed.addField(locale.update.system, `${locale.update.packages}: ${updateData[software].package_count}`, true)\r\n    } else {\r\n      notifyEmbed.addField(software, `${updateData[software].version} \\n🆕 ${updateData[software].remote_version}`, true)\r\n    }\r\n  }\r\n  \r\n  const row = new Discord.MessageActionRow()\r\n  \r\n  const button = new Discord.MessageButton()\r\n    .setCustomId('update_system')\r\n    .setLabel(locale.buttons.update_system)\r\n    .setStyle('SECONDARY')\r\n  \r\n  row.addComponents(button)\r\n\r\n  status.postBroadcastMessage({ embeds: [notifyEmbed], files:[icon], components:[row] }, discordClient, database)\r\n}\r\n","const args = process.argv.slice(2)\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\nconst variables = require('../../utils/variablesUtil')\r\nconst statusUtil = require('../../utils/statusUtil')\r\nconst locale = require('../../utils/localeUtil')\r\n\r\nmodule.exports = (data, connection, discordClient, database) => {\r\n    if(typeof(data.display_status) === 'undefined') { return }\r\n\r\n    const {progress} = data.display_status\r\n\r\n    variables.updateTimeData('file_total_duration', variables.getTimes().duration / progress)\r\n\r\n    if(variables.getProgress() === (progress * 100).toFixed(0)) { return }\r\n  \r\n    postProgress(discordClient, (progress * 100).toFixed(0))\r\n    \r\n    variables.setProgress((progress * 100).toFixed(0))\r\n}\r\n\r\nfunction postProgress(discordClient, progress) {\r\n  if (statusUtil.getStatus() !== 'printing') { return }\r\n  \r\n  discordClient.user.setActivity(\r\n    locale.status.printing.activity.replace(/(\\${value_print_progress})/g, progress)\r\n    , { type: 'WATCHING' })\r\n\r\n  if (config.status.update_interval &&\r\n    progress % config.status.update_interval === 0 &&\r\n    progress !== 0) {\r\n      statusUtil.changeStatus(discordClient, 'printing')\r\n  }\r\n}","const variables = require('../../utils/variablesUtil')\r\n\r\nmodule.exports = (data, connection, discordClient, database) => {\r\n    if (typeof (data.gcode_move) === 'undefined') { return }\r\n    \r\n    retrieveSpeedFactor(data.gcode_move)\r\n    retrieveCurrentLayer(data.gcode_move)\r\n}\r\n\r\nfunction retrieveSpeedFactor(gcodeMoveData) {\r\n    if (typeof (gcodeMoveData.speed_factor) === 'undefined') { return }\r\n    variables.updateTimeData('multiplier', gcodeMoveData.speed_factor || 1)\r\n}\r\n\r\nfunction retrieveCurrentLayer(gcodeMoveData) {\r\n    if (typeof (gcodeMoveData.gcode_position) === 'undefined') { return }\r\n    variables.setCurrentLayer(gcodeMoveData.gcode_position[2])\r\n}","module.exports = {\r\n    displayStatus: require('./displayStatus'),\r\n    gcodeMove: require('./gcodeMove'),\r\n    mcu: require('./mcu'),\r\n    printStats: require('./printStats'),\r\n    temp: require('./temp')\r\n}","const variables = require('../../utils/variablesUtil')\r\n\r\nmodule.exports = (data, connection, discordClient, database) => {\r\n    if(!/(mcu)/g.test(JSON.stringify(data))) { return }\r\n    loopMCUs(data)\r\n}\r\n\r\nfunction loopMCUs(data) {\r\n    Object.keys(data).forEach(mcu => {\r\n      if (!/(temp)/g.test(mcu) && \r\n          /(mcu)/g.test(mcu)) {\r\n          updateMCU(mcu, data[mcu])\r\n      }\r\n    })\r\n}\r\n\r\nfunction updateMCU(mcu, data) {\r\n    if(typeof(variables.getMCUList()[mcu]) === 'undefined') {\r\n        variables.updateMCUStatus(mcu, data)\r\n        return\r\n    }\r\n\r\n    const oldMcuData = variables.getMCUList()[mcu]\r\n\r\n    oldMcuData.last_stats.mcu_task_avg = data.last_stats.mcu_task_avg\r\n    oldMcuData.last_stats.mcu_awake = data.last_stats.mcu_awake\r\n    oldMcuData.last_stats.freq = data.last_stats.freq\r\n\r\n    variables.updateMCUStatus(mcu, oldMcuData)\r\n}","const args = process.argv.slice(2)\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\nconst status = require('../../utils/statusUtil')\r\nconst timelapseUtil = require('../../utils/timelapseUtil')\r\nconst variables = require('../../utils/variablesUtil')\r\n\r\nmodule.exports = async (data, connection, discordClient, database) => {\r\n    if (typeof (data.print_stats) === 'undefined') { return }\r\n\r\n    const id = Math.floor(Math.random() * Number.parseInt('10_000')) + 1\r\n    const stats = data.print_stats\r\n\r\n    retrieveFilename(stats)\r\n    retrieveDuration(stats)\r\n    \r\n    if (typeof (stats.state) === 'undefined') { return }\r\n    \r\n    if (stats.state === 'paused') {  \r\n      \r\n      await status.changeStatus(discordClient, 'pause')\r\n      \r\n      clearInterval(variables.getUpdateTimer())\r\n    }\r\n    if (stats.state === 'printing' &&\r\n        (typeof (variables.getCurrentPrintJob()) !== 'undefined' ||\r\n        variables.getCurrentPrintJob() !== '')) {\r\n      \r\n      if (status.getStatus() === 'printing' ||\r\n        status.getStatus() === 'start') { return }\r\n        \r\n      connection.send(`{\"jsonrpc\": \"2.0\", \"method\": \"server.files.metadata\", \"params\": {\"filename\": \"${variables.getCurrentPrintJob()}\"}, \"id\": ${id}}`)\r\n      \r\n      timelapseUtil.start()\r\n      \r\n      await status.changeStatus(discordClient, 'start')\r\n      await status.changeStatus(discordClient, 'printing')\r\n\r\n      if (config.status.use_percent) { return }\r\n\r\n      const timer = setInterval(() => {\r\n        status.changeStatus(discordClient, 'printing')\r\n      }, 1000 * config.status.update_interval)\r\n      variables.setUpdateTimer(timer)\r\n    }\r\n    if (stats.state === 'complete' && status.getStatus() !== 'ready') {\r\n\r\n      timelapseUtil.render()\r\n      variables.updateLastPrintJob()\r\n      await status.changeStatus(discordClient, 'done')\r\n      if (config.timelapse.post_at_print_end) {\r\n        status.postBroadcastMessage(timelapseUtil.getEmbed(), discordClient)\r\n      }\r\n      \r\n      clearInterval(variables.getUpdateTimer())\r\n\r\n      setTimeout(() => {\r\n        status.changeStatus(discordClient, 'ready')\r\n      }, 1000)\r\n    }\r\n}\r\n\r\nfunction retrieveFilename(stats) {\r\n    if (typeof (stats.filename) === 'undefined') { return }\r\n\r\n    variables.setCurrentPrintJob(stats.filename)\r\n}\r\n\r\nfunction retrieveDuration(stats) {\r\n    if (typeof (stats.print_duration) === 'undefined') { return }\r\n\r\n    variables.updateTimeData('duration', stats.print_duration)\r\n}","const variables = require('../../utils/variablesUtil')\r\n\r\nmodule.exports = (data, connection, discordClient, database) => {\r\n  if(!/(temp)/g.test(JSON.stringify(data))) { return }\r\n  loopTempSensors(data)\r\n}\r\n\r\nfunction loopTempSensors(data) {\r\n    Object.keys(data).forEach(tempSensor => {\r\n      if (typeof(data[tempSensor].temperature) !== 'undefined') {\r\n            updateTempSensor(tempSensor, data[tempSensor])\r\n      }\r\n    })\r\n}\r\n\r\nfunction updateTempSensor(tempSensor, data) {\r\n    if(typeof(variables.getTemperatures()[tempSensor]) === 'undefined') {\r\n        variables.setTemperature(tempSensor, data)\r\n        return\r\n    }\r\n\r\n    const oldTempData = variables.getTemperatures()[tempSensor]\r\n\r\n    for(const index in data) {\r\n      oldTempData[index] = data[index]\r\n    }\r\n\r\n    variables.setTemperature(tempSensor, oldTempData)\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 93530;\nmodule.exports = webpackEmptyContext;","const objects = require('./objectHandlers')\r\n\r\nmodule.exports = (message, connection, discordClient, database) => {\r\n  if (message.type !== 'utf8') { return }\r\n  \r\n  const messageJson = JSON.parse(message.utf8Data)\r\n\r\n  if (typeof (messageJson.method) === 'undefined') { return }\r\n  if (messageJson.method !== 'notify_status_update') { return }\r\n\r\n  if (typeof (messageJson.params) === 'undefined') { return }\r\n\r\n  const status = messageJson.params[0]\r\n\r\n  for (const object in objects) {\r\n    objects[object](status, connection, discordClient, database)\r\n  }\r\n}","const objects = require('./objectHandlers')\r\n\r\nmodule.exports = (message, connection, discordClient, database) => {\r\n  if (message.type !== 'utf8') { return }\r\n\r\n  const messageJson = JSON.parse(message.utf8Data)\r\n\r\n  if (typeof(messageJson.result) === 'undefined') { return }\r\n  if (typeof(messageJson.result.status) === 'undefined') { return }\r\n\r\n  const status = messageJson.result.status\r\n\r\n  if (typeof(status.configfile) === 'undefined') { return }\r\n\r\n  for (const object in objects) {\r\n    objects[object](status, connection, discordClient, database)\r\n  }\r\n}","const variables = require('../utils/variablesUtil')\r\n\r\nconst event = (message) => {\r\n  if (message.type !== 'utf8') { return }\r\n  \r\n  const messageJson = JSON.parse(message.utf8Data)\r\n  const { result } = messageJson\r\n  if (typeof (result) !== 'undefined' && typeof (result.version_info) !== 'undefined') {\r\n    variables.setVersions(result.version_info)\r\n  }\r\n}\r\nmodule.exports = event\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 81409;\nmodule.exports = webpackEmptyContext;","var map = {\n\t\"./scripts/mooncord.json\": 98254\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 96880;","module.exports = require(\"sharp\");","module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","'use strict'\r\nconst args = process.argv.slice(2)\r\n\r\nconst config = require(`${args[0]}/mooncord.json`)\r\nconst colors = require('colors')\r\nconst systemInfo = require('systeminformation')\r\n\r\nconst discordClient = require('./clients/discordClient')\r\nconst moonrakerClient = require('./clients/moonrakerClient')\r\nconst pjson = require('./package.json')\r\nconst loadUtil = require('./utils/loadUtil')\r\nconst migrationUtil = require('./utils/migrationUtil')\r\nconst miscUtil = require('./utils/miscUtil')\r\nconst timelapseUtil = require('./utils/timelapseUtil')\r\n\r\ncolors.setTheme({\r\n  database: 'grey',\r\n  commandload: 'grey',\r\n  upload: 'grey',\r\n  uploadsuccess: 'green',\r\n  statustitle: 'cyan',\r\n  throttlewarn: 'yellow',\r\n  statusmessage: 'brightCyan',\r\n  successvalue: 'green',\r\n  successname: 'brightGreen',\r\n  success: 'brightGreen',\r\n  printstatus: 'white',\r\n  error: 'brightRed'\r\n})\r\n\r\nsystemInfo.osInfo()\r\n  .then(async data => {\r\n    console.log(`\\n\r\n     __  __                     ${'____              _'.statustitle}\r\n    |  \\\\/  | ___   ___  _ __   ${'/ ___|___  _ __ __| |'.statustitle}\r\n    | |\\\\/| |/ _ \\\\ / _ \\\\| '_ \\\\ ${'| |   / _ \\\\| \\'__/ _\\` |'.statustitle}\r\n    | |  | | (_) | (_) | | | |${'| |__| (_) | | | (_| |'.statustitle}\r\n    |_|  |_|\\\\___/ \\\\___/|_| |_| ${'\\\\____\\\\___/|_|  \\\\__,_|'.statustitle}\r\n                                                      \r\n    Version: ${(pjson.version).statustitle}\r\n    Configpath: ${args[0].statustitle}\r\n    Locale: ${(config.language.messages).statustitle}\r\n    Author: ${(pjson.author).statustitle}\r\n    Homepage: ${(pjson.homepage).statustitle}\r\n    OS: ${(data.platform).statustitle}\r\n    Distro: ${(data.distro).statustitle}\r\n    Kernel: ${( data.kernel).statustitle}\r\n    Arch: ${(data.arch).statustitle}`)\r\n    const ram = await systemInfo.mem()\r\n\r\n    if (ram.free <= Number.parseInt('4_194_304')) {\r\n      console.log(\r\n        `${\r\n        `${'     _  _____ _____ _____ _   _ _____ ___ ___  _   _ \\n' +\r\n        '    / \\\\|_   _|_   _| ____| \\\\ | |_   _|_ _/ _ \\\\| \\\\ | |\\n' +\r\n        '   / _ \\\\ | |   | | |  _| |  \\\\| | | |  | | | | |  \\\\| |\\n' +\r\n        '  / ___ \\\\| |   | | | |___| |\\\\  | | |  | | |_| | |\\\\  |\\n' +\r\n        ' /_/   \\\\_\\\\_|   |_| |_____|_| \\\\_| |_| |___\\\\___/|_| \\\\_|\\n' +\r\n        '                                                  \\n' +\r\n        'There might be to few free memory! Mooncord need atleast 40MB RAM\\n'}${ \r\n        'Current free Ram: '.error}`}${(ram.used / (1024 ** 2)).toFixed(2)}MB`)\r\n      process.exit(5)\r\n    }\r\n\r\n    await migrationUtil.migrate()\r\n\r\n    await moonrakerClient.init(discordClient,\r\n      config.connection.moonraker_socket_url,\r\n      config.connection.moonraker_url,\r\n      config.connection.moonraker_token)\r\n    \r\n    await loadUtil.init(discordClient.getClient)\r\n    \r\n    miscUtil.init()\r\n    \r\n    if (config.timelapse.enable) {\r\n      timelapseUtil.init(discordClient, moonrakerClient)\r\n    }\r\n\r\n    await discordClient.init(config.connection.bot_token,\r\n      config.connection.bot_application_id,\r\n      config.connection.bot_application_key)\r\n  })\r\n  .catch(error => {\r\n    console.log('Mooncord couldnt start'.error)\r\n    console.log(`Reason: ${error}`.error)\r\n})"],"names":["waitUntil","Discord","commands","events","variables","discordClient","Client","intents","Intents","FLAGS","DIRECT_MESSAGES","DIRECT_MESSAGE_REACTIONS","GUILDS","GUILD_MESSAGES","GUILD_MESSAGE_REACTIONS","GUILD_INTEGRATIONS","token","connected","module","exports","init","async","discordToken","dump","dumpRaw","timeout","Number","POSITIVE_INFINITY","intervalBetweenAttempts","Object","keys","getMCUList","length","console","log","statustitle","statusmessage","login","on","setInviteUrl","user","id","success","successname","successvalue","getInviteUrl","loadSlashCommands","addCommandEvents","isConnected","getClient","WebSocketClient","axios","logSymbols","database","status","client","wsUrl","url","oneShotToken","WSconnection","getOneShotToken","get","headers","data","result","handleSubscription","message","type","Math","floor","random","parseInt","messageJson","JSON","parse","utf8Data","objects","index","send","stringify","removeListener","moonrakerWSUrl","moonrakerUrl","moonrakerToken","connect","error","changeStatus","setTimeout","process","exit","connection","event","setInterval","getCurrentPrintJob","enableEvents","getConnection","klipperRestart","listFiles","printJob","printJobStart","toPrintList","updateSystem","button","moonrakerClient","locale","permission","customId","guildId","hasAdmin","reply","channel","getAdminOnlyError","username","update","components","chatUtil","metaData","commandlocale","listfiles","commandFeedback","pageUp","page","handler","test","generatePageEmbed","embed","title","includes","getCommandNotReadyError","embeds","page_up","retrieveCurrentPage","removeAttachments","getWaitEmbed","feedbackInterval","edit","undefined","clearInterval","content","errors","no_files_found","executeMessage","statusUtil","messageLocale","printjob","currentStatus","getStatus","buttonMeta","langButtonMeta","answer","replace","updateMessage","getManualStatusEmbed","status_same","required_status","status_not_valid","macro","handlers","postStart","buttons","getButtons","getAbortEmbed","currentMessage","currentEmbed","abortMessage","abort","MessageEmbed","setColor","setAuthor","author","name","setThumbnail","setDescription","getStartEmbed","startMessage","executed","printFileHandler","gcodefile","feedbackHandler","files","file_not_found","command_timeout","startPrintJob","gcodeFile","startPrint","lastid","timeoutEmbed","admin","syntaxLocale","syntaxlocale","interaction","getGuildOnlyError","hasController","getControllerOnlyError","isRole","adminid","options","getSubcommand","role","getRole","getUser","guildid","guild","guilds","fetch","guilddatabase","getGuildDatabase","adminarray","indexOf","splice","updateDatabase","push","editAdmin","answermention","added","removed","command_failed","editchannel","editChannel","channelid","channels","broadcastchannels","channelresult","getChannel","channelId","not_textchannel","activated","deactivated","emergency_stop","deferReply","editReply","execute","method","command","params","unknown","gcode","getString","fileinfo","file","endsWith","args","argv","slice","config","metadata","get_log","service","log_file","request","responseType","moonraker_url","moonraker_token","Buffer","byteLength","too_large","MessageAttachment","retrieved","not_found","get_user_id","own_id","other_id","tag","loadUtil","commandOptions","optionTypes","buildSlashCommand","builder","description","buildCommandOption","meta","option","syntaxMeta","messageMeta","optionMeta","optionBuilder","required","choices","getComponents","isCommand","commandIndex","commandName","commandEvent","commandList","application","set","info","loadinfo","notify","temp","timelapse","path","pjson","version","homepage","logopath","resolve","__dirname","icon","infoEmbed","setTitle","variablesUtil","generateMCUNoData","mcu","no_data","component","startsWith","template","getDefaultEmbed","mcudata","mcuload","last_stats","mcu_task_avg","mcu_task_stddev","mcuawake","mcu_awake","mcufreq","freq","addField","load","toFixed","awake","frequency","chipset","mcu_constants","MCU","mcu_version","retrieveMCUComponent","getInformation","updateNotify","commandContext","subcommand","key","object","value","find","subcommandmeta","lang_command_meta","requiredStatus","status_valid","start","calculatePercent","input","temps","getTemperatures","iconAttachment","tempEmbed","currentTemp","temperature","targetTemp","target","power","fields","current_temp","target_temp","current_power","speed","current_speed","buildEmbed","timelapseUtil","enable","command_disabled","getLastPrintJob","no_timelapse","timelapseEmbed","getEmbed","webpackEmptyContext","req","e","Error","code","isButton","buttonClick","selectClick","upload","isSelectMenu","FormData","fs","https","uploadList","uploadWaitTimer","uploadInProgress","uploadNext","attachments","array","formData","tempFile","createWriteStream","loadingReaction","react","append","createReadStream","post","then","uploadsuccess","users","remove","unlink","catch","check_console","error2","response","pipe","uploadFile","dcClient","msg","timer","viewPrintJob","selection","values","fileNotFoundEmbed","map","webpackContext","webpackContextResolve","__webpack_require__","o","defineProperty","SlashCommandAssertions","tslib_1","__exportStar","__importStar","assertReturnOfBuilder","validateMaxChoicesLength","validateMaxOptionsLength","validateDescription","validateName","validateRequiredParameters","is_1","__importDefault","ow_1","namePredicate","default","string","lowercase","minLength","maxLength","addValidator","label","validator","descriptionPredicate","maxArrayLengthPredicate","ExpectedInstanceOf","instanceName","nullOrUndefined","TypeError","primitive","casted","constructorName","function_","constructor","stringTag","Reflect","Symbol","toStringTag","SlashCommandBuilder","ts_mixer_1","Assertions_1","NameAndDescription_1","CommandOptions_1","SlashCommandSubcommands_1","this","enumerable","configurable","writable","toJSON","addSubcommandGroup","some","item","SlashCommandSubcommandBuilder","RangeError","SlashCommandSubcommandGroupBuilder","addSubcommand","__decorate","mix","SharedSlashCommandOptions","SharedNameAndDescription","SlashCommandOptionBase","super","setRequired","boolean","ApplicationCommandOptionWithChoicesBase","CommandOptionBase_1","stringPredicate","integerPredicate","number","finite","choicesPredicate","ofType","exactShape","any","arguments","addChoice","addChoices","boolean_1","channel_1","integer_1","mentionable_1","role_1","string_1","user_1","addBooleanOption","_sharedAddOptionMethod","SlashCommandBooleanOption","addUserOption","SlashCommandUserOption","addChannelOption","SlashCommandChannelOption","addRoleOption","SlashCommandRoleOption","addMentionableOption","SlashCommandMentionableOption","addStringOption","SlashCommandStringOption","addIntegerOption","SlashCommandIntegerOption","Instance","setName","CommandOptionWithChoices_1","Faces","TimestampStyles","time","formatEmoji","roleMention","channelMention","memberNicknameMention","userMention","spoiler","hyperlink","hideLinkEmbed","blockQuote","quote","strikethrough","underscore","bold","italic","inlineCode","codeBlock","language","userId","memberId","roleId","emojiId","animated","timeOrSeconds","style","getTime","Date","now","ShortTime","LongTime","ShortDate","LongDate","ShortDateTime","LongDateTime","RelativeTime","Collection","Map","has","delete","clear","hasAll","every","k","hasAny","first","amount","next","last","min","size","iter","Array","from","firstKey","lastKey","arr","randomKey","fn","thisArg","bind","val","findKey","sweep","previousSize","filter","results","species","partition","flatMap","collections","concat","entries","mapValues","coll","reduce","initialValue","accumulator","each","forEach","tap","clone","newColl","equals","collection","sort","compareFunction","defaultSort","a","b","v","intersect","other","difference","sorted","av","bv","ak","bk","static","firstValue","secondValue","CombinedStream","util","http","parseUrl","Stream","mime","asynckit","populate","_overheadLength","_valueLength","_valuesToMeasure","call","inherits","LINE_BREAK","DEFAULT_CONTENT_TYPE","prototype","field","filename","isArray","_error","header","_multiPartHeader","footer","_multiPartFooter","_trackLength","valueLength","knownLength","isBuffer","readable","hasOwnProperty","_lengthRetriever","callback","end","Infinity","stat","err","fileSize","pause","resume","contentDisposition","_getContentDisposition","contentType","_getContentType","contents","prop","join","getBoundary","filepath","normalize","basename","_httpMessage","lookup","_streams","_lastBoundary","getHeaders","userHeaders","formHeaders","toLowerCase","_boundary","_generateBoundary","getBuffer","dataBuffer","alloc","boundary","i","len","substring","toString","getLengthSync","hasKnownLength","getLength","cb","parallel","nextTick","submit","defaults","port","pathname","host","hostname","protocol","setHeader","onResponse","responce","emit","dst","src","AsyncQueue","remaining","promises","wait","promise","Promise","res","shift","deferred","typedArrayTypeNames","objectTypeNames","primitiveTypeNames","isOfType","getObjectType","objectTypeName","is","domElement","isObjectOfType","observable","buffer","tagType","String","Boolean","isNumberType","nan","bigint","null_","class_","symbol","numericString","emptyStringOrWhitespace","isNaN","assertion","_a","_b","_c","_d","iterable","iterator","asyncIterable","asyncIterator","generator","throw","asyncGenerator","nativePromise","hasPromiseAPI","generatorFunction","asyncGeneratorFunction","asyncFunction","boundFunction","regExp","date","weakMap","weakSet","int8Array","uint8Array","uint8ClampedArray","int16Array","uint16Array","int32Array","uint32Array","float32Array","float64Array","bigInt64Array","bigUint64Array","arrayBuffer","sharedArrayBuffer","dataView","directInstanceOf","instance","getPrototypeOf","urlInstance","urlString","URL","truthy","falsy","integer","isInteger","safeInteger","isSafeInteger","plainObject","typedArray","isTypedArrayName","arrayLike","isValidLength","inRange","range","max","DOM_PROPERTIES_TO_CHECK","nodeType","nodeName","property","nodeStream","infinite","isAbsoluteMod2","remainder","abs","evenInteger","oddInteger","emptyArray","nonEmptyArray","emptyString","nonEmptyString","isWhiteSpaceString","emptyObject","nonEmptyObject","emptySet","nonEmptySet","emptyMap","nonEmptyMap","propertyKey","urlSearchParams","predicateOnArray","predicate","singlePredicate","all","assertType","condition","multipleValues","valuesMessage","Set","singleValue","assert","defineProperties","class","function","null","wrapAnsi16","offset","wrapAnsi256","wrapAnsi16m","rgb","ansi2ansi","n","rgb2rgb","r","g","setLazyProperty","colorConvert","makeDynamicStyles","wrap","targetSpace","identity","isBackground","styles","sourceSpace","suite","codes","modifier","reset","dim","underline","inverse","hidden","color","black","red","green","yellow","blue","magenta","cyan","white","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgColor","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","gray","bgGray","grey","bgGrey","groupName","group","styleName","open","close","t","setPrototypeOf","schedule","clearTimeout","cancel","c","l","u","s","m","d","h","race","serial","serialOrdered","clean","jobs","state","defer","isAsync","setImmediate","list","runJob","output","sortMethod","isNamedList","initState","keyedList","iterate","terminator","ascending","iteratorHandler","descending","utils","settle","buildFullPath","buildURL","httpFollow","httpsFollow","zlib","pkg","createError","enhanceError","isHttps","setProxy","proxy","location","auth","base64","password","beforeRedirect","redirection","href","resolvePromise","rejectPromise","reject","isStream","isArrayBuffer","Uint8Array","isString","fullPath","baseURL","parsed","urlAuth","split","Authorization","isHttpsRequest","agent","httpsAgent","httpAgent","paramsSerializer","toUpperCase","agents","socketPath","transport","proxyEnv","proxyUrl","env","parsedProxyUrl","noProxyEnv","no_proxy","NO_PROXY","shouldProxy","trim","proxyElement","substr","proxyUrlAuth","isHttpsProxy","maxRedirects","maxBodyLength","aborted","stream","lastRequest","statusCode","decompress","createUnzip","statusText","statusMessage","responseBuffer","totalResponseBytes","chunk","maxContentLength","destroy","responseData","responseEncoding","stripBOM","transitional","clarifyTimeoutError","cancelToken","cookies","parseHeaders","isURLSameOrigin","requestData","requestHeaders","isFormData","XMLHttpRequest","unescape","encodeURIComponent","btoa","onloadend","responseHeaders","getAllResponseHeaders","responseText","onreadystatechange","readyState","responseURL","onabort","onerror","ontimeout","timeoutErrorMessage","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","Axios","mergeConfig","createInstance","defaultConfig","context","extend","create","instanceConfig","Cancel","CancelToken","isCancel","spread","isAxiosError","__CANCEL__","executor","reason","throwIfRequested","source","InterceptorManager","dispatchRequest","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","apply","newConfig","onFulfilled","onRejected","getUri","use","eject","isAbsoluteURL","combineURLs","requestedURL","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","fileName","lineNumber","columnNumber","stack","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","mergeDeepProperties","axiosKeys","otherKeys","validateStatus","fns","normalizeHeaderName","setContentTypeIfUnset","isFile","isBlob","isArrayBufferView","isURLSearchParams","isObject","rawValue","parser","encoder","stringifySafely","strictJSONParsing","encode","serializedParams","parts","isDate","toISOString","hashmarkIndex","relativeURL","write","expires","domain","secure","cookie","isNumber","toGMTString","document","match","RegExp","decodeURIComponent","payload","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","setAttribute","search","hash","charAt","window","requestURL","normalizedName","ignoreDuplicateOf","line","thing","deprecatedWarnings","currentVerArr","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","warn","schema","allowUnknown","isFunction","obj","ArrayBuffer","isView","URLSearchParams","product","assignValue","str","charCodeAt","mask","unmask","callsites","_prepareStackTrace","prepareStackTrace","_","ansiStyles","stdout","stdoutColor","stderr","stderrColor","stringReplaceAll","stringEncaseCRLFWithFirstIndex","levelMapping","ChalkClass","chalkFactory","chalk","level","colorLevel","applyOptions","arguments_","chalkTag","Chalk","createBuilder","createStyler","_styler","_isEmpty","visible","usedModels","model","styler","proto","_generator","parent","openAll","closeAll","self","raw","applyStyle","lfIndex","strings","firstString","supportsColor","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","bracket","fromCharCode","fromCodePoint","parseArguments","chunks","matches","escape","character","parseStyle","lastIndex","exec","buildStyle","enabled","layer","current","temporary","escapeCharacter","pop","errMessage","replacer","substringLength","endIndex","returnValue","prefix","postfix","gotCR","cssKeywords","reverseKeywords","convert","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","delta","rdif","gdif","bdif","diff","diffc","w","reversed","currentClosestKeyword","currentClosestDistance","distance","y","x","z","t2","t3","t1","smin","lmin","hi","f","p","q","vmin","sl","wh","bl","ratio","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","saturation","round","ansi","mult","rem","colorString","char","chroma","grayscale","hue","pure","mg","conversions","route","fromModel","routes","toModel","wrappedFn","arg0","conversion","wrapRounded","wrapRaw","link","to","wrapConversion","graph","cur","models","buildGraph","queue","adjacents","adjacent","node","deriveBFS","colors","themes","defineProps","newLineRegex","disable","stripColors","strip","stylize","styleMap","matchOperatorsRe","build","_styles","__proto__","ret","closeRe","escapeStringRegexp","arg","inspect","newLinesPresent","nestedStyles","setTheme","theme","out","sequencer","exploded","trap","zalgo","maps","america","zebra","rainbow","text","j","chars","rand","soul","up","down","mid","randomNumber","isChar","bool","counts","heComes","addProperty","func","__defineGetter__","stringPrototypeBlacklist","themePropApplicator","applyTheme","letter","rainbowColors","available","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","bgBrightRed","bgBrightGreen","bgBrightYellow","bgBrightBlue","bgBrightMagenta","bgBrightCyan","bgBrightWhite","blackBG","redBG","greenBG","yellowBG","blueBG","magentaBG","cyanBG","whiteBG","flag","terminatorPos","pos","os","hasFlag","forceColor","getSupportLevel","isTTY","platform","osRelease","release","versions","sign","CI_NAME","TEAMCITY_VERSION","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","hasBasic","has256","has16m","translateLevel","FORCE_COLOR","DelayedStream","dataSize","maxDataSize","pauseStreams","_released","_currentStream","_insideLoop","_pendingNext","combinedStream","isStreamLike","newStream","pauseStream","_checkDataSize","_handleErrors","dest","_getNext","_realGetNext","_pipeNext","_emitError","_reset","_updateDataSize","formatArgs","useColors","namespace","humanize","lastC","save","namespaces","storage","setItem","removeItem","getItem","DEBUG","__nwjs","documentElement","WebkitAppearance","firebug","exception","table","$1","localStorage","localstorage","warned","debug","formatters","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","curr","ms","prev","coerce","format","formatter","selectColor","delimiter","newDebug","toNamespace","regexp","names","skips","browser","tty","inspectOpts","colorCode","hideDate","isatty","fd","deprecate","O","_maxDataSizeExceeded","_bufferedEvents","delayedStream","realEmit","_handleEmit","setEncoding","_checkIfMaxDataSizeExceeded","GatewayDispatchEvents","GatewayIntentBits","GatewayCloseCodes","GatewayOpcodes","__createBinding","k2","GatewayVersion","FormattingPatterns","User","UserWithNickname","UserWithOptionalNickname","Channel","Role","Emoji","AnimatedEmoji","StaticEmoji","Timestamp","DefaultStyledTimestamp","StyledTimestamp","freeze","InteractionResponseType","InteractionType","ApplicationCommandPermissionType","ApplicationCommandOptionType","ApplicationFlags","AuditLogOptionsType","AuditLogEvent","ButtonStyle","ComponentType","AllowedMentionsTypes","EmbedType","ThreadAutoArchiveDuration","OverwriteType","MessageFlags","MessageActivityType","MessageType","VideoQualityMode","ChannelType","ThreadMemberFlags","ActivityFlags","ActivityType","ActivityPlatform","PresenceUpdateStatus","GuildWidgetStyle","IntegrationExpireBehavior","GuildFeature","GuildSystemChannelFlags","GuildPremiumTier","GuildVerificationLevel","GuildNSFWLevel","GuildMFALevel","GuildExplicitContentFilter","GuildDefaultMessageNotifications","MembershipScreeningFieldType","InviteTargetType","OAuth2Scopes","PermissionFlagsBits","CreateInstantInvite","KickMembers","BanMembers","Administrator","ManageChannels","ManageGuild","AddReactions","ViewAuditLog","PrioritySpeaker","ViewChannel","SendMessages","SendTTSMessages","ManageMessages","EmbedLinks","AttachFiles","ReadMessageHistory","MentionEveryone","UseExternalEmojis","ViewGuildInsights","Connect","Speak","MuteMembers","DeafenMembers","MoveMembers","UseVAD","ChangeNickname","ManageNicknames","ManageRoles","ManageWebhooks","ManageEmojisAndStickers","UseSlashCommands","RequestToSpeak","ManageThreads","UsePublicThreads","UsePrivateThreads","UseExternalStickers","StageInstancePrivacyLevel","StickerFormatType","StickerType","TeamMemberMembershipState","ConnectionVisibility","UserPremiumType","UserFlags","WebhookType","RESTJSONErrorCodes","OAuth2Routes","RouteBases","Routes","APIVersion","guildAuditLog","channelMessages","channelMessage","messageId","channelMessageCrosspost","channelMessageOwnReaction","emoji","channelMessageUserReaction","channelMessageReaction","channelMessageAllReactions","channelBulkDelete","channelPermission","overwriteId","channelInvites","channelFollowers","channelTyping","channelPins","channelPin","channelRecipient","guildEmojis","guildEmoji","guildPreview","guildChannels","guildMember","guildMembers","guildMembersSearch","guildCurrentMemberNickname","guildMemberRole","guildBans","guildBan","guildRoles","guildRole","guildPrune","guildVoiceRegions","guildInvites","guildIntegrations","guildIntegration","integrationId","guildWidgetSettings","guildWidgetJSON","guildVanityUrl","guildWidgetImage","invite","guildTemplates","guildTemplate","threads","parentId","guildActiveThreads","channelThreads","archived","channelJoinedArchivedThreads","threadMembers","threadId","userGuilds","userGuild","userChannels","userConnections","voiceRegions","channelWebhooks","guildWebhooks","webhook","webhookId","webhookToken","webhookMessage","webhookPlatform","gateway","gatewayBot","oauth2CurrentApplication","oauth2CurrentAuthorization","applicationCommands","applicationId","applicationCommand","commandId","applicationGuildCommands","applicationGuildCommand","interactionCallback","interactionId","interactionToken","guildMemberVerification","guildVoiceState","guildApplicationCommandsPermissions","applicationCommandPermissions","guildWelcomeScreen","stageInstances","stageInstance","sticker","stickerId","nitroStickerPacks","guildStickers","guildSticker","api","cdn","gift","authorizationURL","tokenURL","tokenRevocationURL","RPCCloseEventCodes","RPCErrorCodes","isDMInteraction","isGuildInteraction","isInteractionButton","isLinkButton","isMessageComponentGuildInteraction","isMessageComponentDMInteraction","isApplicationCommandGuildInteraction","isApplicationCommandDMInteraction","Utils","erlpack","pack","WebSocket","ab","TextDecoder","encoding","unpack","decode","query","EventEmitter","RESTManager","Options","Util","mergeDefault","createDefault","rest","_tokenType","sweepInterval","incrementMaxListeners","maxListeners","getMaxListeners","setMaxListeners","decrementMaxListeners","props","flatten","BaseClient","ActionsManager","ClientVoiceManager","WebSocketManager","BaseGuildEmojiManager","ChannelManager","GuildManager","UserManager","ShardClientUtil","ClientPresence","GuildPreview","GuildTemplate","Invite","Sticker","StickerPack","VoiceRegion","Webhook","Widget","DataResolver","Permissions","assign","shards","SHARDS","shardCount","SHARD_COUNT","typeofShards","_validateOptions","_cleanups","_finalizers","FinalizationRegistry","_finalize","ws","actions","voice","shard","SHARDING_MANAGER","singleton","SHARDING_MANAGER_MODE","presence","DISCORD_TOKEN","readyAt","messageSweepInterval","emitWarning","sweepMessageInterval","sweepMessages","unref","emojis","cache","readyTimestamp","uptime","Events","_parse","isReady","Status","READY","resolveInviteCode","invites","with_counts","with_expiration","resolveGuildTemplateCode","templates","webhooks","apiRegions","regions","region","stickers","sticker_packs","cleanup","lifetime","messageCacheLifetime","lifetimeMs","messages","editedTimestamp","createdTimestamp","resolveId","preview","generateInvite","client_id","scopes","scope","invalidScope","InviteScopes","permissions","disableGuildSelect","oauth2","authorize","_eval","script","eval","makeCache","invalidRequestWarningInterval","partials","restWsBridgeTimeout","restRequestTimeout","restGlobalRateLimit","restSweepInterval","retryLimit","failIfNotExists","userAgentSuffix","rejectOnRateLimit","WebhookClient","sendSlackMessage","fetchMessage","editMessage","deleteMessage","createdAt","applyToClass","PartialTypes","handle","getPayload","manager","partialType","existing","_add","channel_id","guild_id","recipients","user_id","CHANNEL","getMessage","message_id","MESSAGE","getReaction","count","partial","me","reactions","REACTION","getMember","members","GUILD_MEMBER","USER","getUserFromMember","member","readdirSync","register","Action","CHANNEL_CREATE","DMChannel","deleted","_remove","CHANNEL_DELETE","ChannelTypes","old","_update","newChannel","updated","GUILD_BAN_ADD","bans","GuildBan","ban","GUILD_BAN_REMOVE","partialChannel","rawPosition","position","unavailable","GUILD_UNAVAILABLE","adapters","GUILD_DELETE","scheduleForDeletion","createdEmoji","already","GUILD_EMOJI_CREATE","GUILD_EMOJI_DELETE","GUILD_EMOJI_UPDATE","deletions","cachedEmoji","GuildEmojiUpdate","GuildEmojiCreate","GuildEmojiDelete","GUILD_INTEGRATIONS_UPDATE","memberCount","GUILD_MEMBER_REMOVE","voiceStates","UserUpdate","GUILD_MEMBER_UPDATE","newMember","GUILD_MEMBER_AVAILABLE","roles","GUILD_ROLE_CREATE","role_id","GUILD_ROLE_DELETE","GUILD_ROLE_UPDATE","partialRole","createdSticker","GUILD_STICKER_CREATE","GUILD_STICKER_DELETE","GUILD_STICKER_UPDATE","cachedSticker","GuildStickerUpdate","GuildStickerCreate","GuildStickerDelete","GUILD_UPDATE","ButtonInteraction","CommandInteraction","ContextMenuInteraction","SelectMenuInteraction","InteractionTypes","MessageComponentTypes","ApplicationCommandTypes","deprecationEmitted","APPLICATION_COMMAND","CHAT_INPUT","MESSAGE_COMPONENT","component_type","BUTTON","SELECT_MENU","INTERACTION_CREATE","inviteData","INVITE_CREATE","INVITE_DELETE","lastMessageId","MESSAGE_CREATE","MESSAGE_DELETE","ids","MESSAGE_BULK_DELETE","VoiceBasedChannelTypes","reaction","MESSAGE_REACTION_ADD","MESSAGE_REACTION_REMOVE","MESSAGE_REACTION_REMOVE_ALL","MESSAGE_REACTION_REMOVE_EMOJI","timestamp","oldPresence","presences","_clone","deaf","mute","newPresence","listenerCount","PRESENCE_UPDATE","STAGE_INSTANCE_CREATE","STAGE_INSTANCE_DELETE","oldStageInstance","newStageInstance","STAGE_INSTANCE_UPDATE","thread","THREAD_CREATE","THREAD_DELETE","channel_ids","removeStale","syncedThreads","rawThread","rawMember","THREAD_LIST_SYNC","THREAD_MEMBER_UPDATE","member_count","added_members","removed_member_ids","THREAD_MEMBERS_UPDATE","Typing","TextBasedChannelTypes","WARN","TYPING_START","newUser","oldUser","USER_UPDATE","VoiceState","oldState","newState","_patch","joined_at","onVoiceStateUpdate","VOICE_STATE_UPDATE","WEBHOOKS_UPDATE","SHARD_DISCONNECT","shardId","onVoiceServer","onVoiceServerUpdate","session_id","WebSocketShard","PacketHandlers","ShardEvents","WSCodes","WSEvents","BeforeReadyWhitelist","RESUMED","GUILD_CREATE","GUILD_MEMBERS_CHUNK","GUILD_MEMBER_ADD","UNRECOVERABLE_CLOSE_CODES","UNRESUMABLE_CLOSE_CODES","totalShards","IDLE","destroyed","reconnecting","ping","invalidToken","gatewayURL","recommendedShards","session_start_limit","sessionStartLimit","bot","httpStatus","total","shardQueue","createShards","eventsAttached","ALL_READY","unavailableGuilds","SHARD_READY","checkShardsReady","CLOSE","sessionId","SHARD_RECONNECTING","add","reconnect","INVALID_SESSION","DESTROYED","delayFor","INVALIDATED","broadcast","packet","closeCode","handlePacket","packetQueue","triggerClientReady","CLIENT_READY","Opcodes","STATUS_KEYS","CONNECTION_STATE","sequence","closeSequence","lastPingTimestamp","lastHeartbeatAcked","OPEN","onClose","onReady","onResumed","onInvalidOrDestroyed","once","identify","wsQuery","inflate","Inflate","chunkSize","flush","Z_SYNC_FLUSH","compress","DISCONNECTED","RECONNECTING","CONNECTING","setHelloTimeout","connectedAt","onopen","onOpen","onmessage","onMessage","onError","onclose","NEARLY","SHARD_ERROR","RAW","op","DISPATCH","onPacket","wasClean","setHeartbeatTimer","_cleanupConnection","expectedGuilds","WAITING_FOR_GUILDS","sendHeartbeat","replayed","HELLO","heartbeat_interval","RECONNECT","identifyResume","HEARTBEAT_ACK","ackHeartbeat","HEARTBEAT","checkReady","readyTimeout","hasGuildsIntent","helloTimeout","heartbeatInterval","ignoreHeartbeatAck","IDENTIFYING","RESUMING","latency","identifyNew","IDENTIFY","seq","RESUME","important","ratelimit","processQueue","_send","_emitDestroyed","commandManager","application_id","APPLICATION_COMMAND_CREATE","isOwn","APPLICATION_COMMAND_DELETE","oldCommand","newCommand","APPLICATION_COMMAND_UPDATE","ChannelCreate","ChannelDelete","last_pin_timestamp","lastPinTimestamp","CHANNEL_PINS_UPDATE","ChannelUpdate","CHANNEL_UPDATE","GuildBanAdd","GuildBanRemove","GuildDelete","GuildEmojisUpdate","GuildIntegrationsUpdate","chunk_count","chunk_index","nonce","GuildMemberRemove","GuildMemberUpdate","GuildRoleCreate","GuildRoleDelete","GuildRoleUpdate","GuildStickersUpdate","GuildUpdate","InteractionCreate","InviteCreate","InviteDelete","MessageCreate","MessageDelete","MessageDeleteBulk","MessageReactionAdd","MessageReactionRemove","MessageReactionRemoveAll","MessageReactionRemoveEmoji","MessageUpdate","MESSAGE_UPDATE","PresenceUpdate","ClientApplication","ClientUser","SHARD_RESUME","StageInstanceCreate","StageInstanceDelete","StageInstanceUpdate","ThreadCreate","ThreadDelete","ThreadListSync","ThreadMembersUpdate","ThreadMemberUpdate","THREAD_UPDATE","TypingStart","VoiceStateUpdate","WebhooksUpdate","kCode","makeDiscordjsError","Base","DiscordjsError","captureStackTrace","sym","Messages","CLIENT_INVALID_OPTION","must","CLIENT_INVALID_PROVIDED_SHARDS","CLIENT_MISSING_INTENTS","CLIENT_NOT_READY","action","TOKEN_INVALID","TOKEN_MISSING","WS_CLOSE_REQUESTED","WS_CONNECTION_EXISTS","WS_NOT_OPEN","MANAGER_DESTROYED","BITFIELD_INVALID","bit","SHARDING_INVALID","SHARDING_REQUIRED","INVALID_INTENTS","DISALLOWED_INTENTS","SHARDING_NO_SHARDS","SHARDING_IN_PROCESS","SHARDING_INVALID_EVAL_BROADCAST","SHARDING_SHARD_NOT_FOUND","SHARDING_ALREADY_SPAWNED","SHARDING_PROCESS_EXISTS","SHARDING_WORKER_EXISTS","SHARDING_READY_TIMEOUT","SHARDING_READY_DISCONNECTED","SHARDING_READY_DIED","SHARDING_NO_CHILD_EXISTS","SHARDING_SHARD_MISCALCULATION","COLOR_RANGE","COLOR_CONVERT","EMBED_TITLE","EMBED_FIELD_NAME","EMBED_FIELD_VALUE","EMBED_FOOTER_TEXT","EMBED_DESCRIPTION","EMBED_AUTHOR_NAME","BUTTON_LABEL","BUTTON_URL","BUTTON_CUSTOM_ID","SELECT_MENU_CUSTOM_ID","SELECT_MENU_PLACEHOLDER","SELECT_OPTION_LABEL","SELECT_OPTION_VALUE","SELECT_OPTION_DESCRIPTION","INTERACTION_COLLECTOR_ERROR","FILE_NOT_FOUND","USER_NO_DMCHANNEL","VOICE_NOT_STAGE_CHANNEL","VOICE_STATE_UNCACHED_MEMBER","VOICE_STATE_NOT_OWN","VOICE_STATE_INVALID_TYPE","REQ_RESOURCE_TYPE","IMAGE_FORMAT","IMAGE_SIZE","MESSAGE_BULK_DELETE_TYPE","MESSAGE_NONCE_TYPE","MESSAGE_CONTENT_TYPE","SPLIT_MAX_LEN","BAN_RESOLVE_ID","FETCH_BAN_RESOLVE_ID","PRUNE_DAYS_TYPE","GUILD_CHANNEL_RESOLVE","GUILD_VOICE_CHANNEL_RESOLVE","GUILD_CHANNEL_ORPHAN","GUILD_CHANNEL_UNOWNED","GUILD_OWNED","GUILD_MEMBERS_TIMEOUT","GUILD_UNCACHED_ME","STAGE_CHANNEL_RESOLVE","INVALID_TYPE","expected","an","INVALID_ELEMENT","elem","MESSAGE_THREAD_PARENT","MESSAGE_EXISTING_THREAD","WEBHOOK_MESSAGE","WEBHOOK_TOKEN_UNAVAILABLE","WEBHOOK_URL_INVALID","MESSAGE_REFERENCE_MISSING","EMOJI_TYPE","EMOJI_MANAGED","MISSING_MANAGE_EMOJIS_AND_STICKERS_PERMISSION","NOT_GUILD_STICKER","REACTION_RESOLVE_USER","VANITY_URL","INVITE_RESOLVE_CODE","INVITE_NOT_FOUND","DELETE_GROUP_DM_CHANNEL","FETCH_GROUP_DM_CHANNEL","MEMBER_FETCH_NONCE_LENGTH","GLOBAL_COMMAND_PERMISSIONS","GUILD_UNCACHED_ROLE_RESOLVE","INTERACTION_ALREADY_REPLIED","INTERACTION_NOT_REPLIED","INTERACTION_EPHEMERAL_REPLIED","INTERACTION_FETCH_EPHEMERAL","COMMAND_INTERACTION_OPTION_NOT_FOUND","COMMAND_INTERACTION_OPTION_TYPE","COMMAND_INTERACTION_OPTION_EMPTY","COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND","COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND_GROUP","INVITE_MISSING_SCOPES","NOT_IMPLEMENTED","what","SWEEP_FILTER_RETURN","Shard","ShardingManager","BaseManager","BitField","Constants","DiscordAPIError","Formatters","HTTPError","LimitedCollection","RateLimitError","SnowflakeUtil","SystemChannelFlags","ApplicationCommandManager","ApplicationCommandPermissionsManager","CachedManager","DataManager","GuildApplicationCommandManager","GuildBanManager","GuildChannelManager","GuildEmojiManager","GuildEmojiRoleManager","GuildInviteManager","GuildMemberManager","GuildMemberRoleManager","GuildStickerManager","MessageManager","PermissionOverwriteManager","PresenceManager","ReactionManager","ReactionUserManager","RoleManager","StageInstanceManager","ThreadManager","ThreadMemberManager","VoiceStateManager","Activity","AnonymousGuild","Application","ApplicationCommand","BaseGuild","BaseGuildEmoji","BaseGuildVoiceChannel","BaseMessageComponent","CategoryChannel","Collector","CommandInteractionOptionResolver","Guild","GuildAuditLogs","GuildAuditLogsEntry","GuildChannel","GuildEmoji","GuildMember","GuildPreviewEmoji","Integration","IntegrationApplication","Interaction","InteractionCollector","InteractionWebhook","InviteStageInstance","InviteGuild","Message","MessageActionRow","MessageButton","MessageCollector","MessageComponentInteraction","MessageMentions","MessagePayload","MessageReaction","MessageSelectMenu","NewsChannel","OAuth2Guild","PartialGroupDMChannel","PermissionOverwrites","Presence","ReactionCollector","ReactionEmoji","RichPresenceAssets","StageChannel","StageInstance","StoreChannel","Team","TeamMember","TextChannel","ThreadChannel","ThreadMember","VoiceChannel","WidgetMember","WelcomeChannel","WelcomeScreen","extras","commandPath","applications","force","transformCommand","put","patched","patch","cached","transformOption","default_permission","defaultPermission","ApplicationCommandPermissionTypes","APIErrors","permissionsPath","perm","transformPermissions","fullPermissions","APIPermissions","UNKNOWN_APPLICATION_COMMAND_PERMISSIONS","newPermissions","resolvedIds","permissionId","resolvedId","received","parseEmoji","resolveIdentifier","emojiResolvable","identifier","_cleanupSymbol","holds","_cache","entry","ThreadChannelTypes","cacheWarningEmitted","defaultCaching","maxSize","sweepFilter","isDefault","allowUnknownGuild","fromInteraction","idOrInstance","valueOf","_fetchMany","_fetchSingle","col","days","delete_message_days","_user","channelCountWithoutThreads","acc","topic","nsfw","bitrate","userLimit","permissionOverwrites","rateLimitPerUser","GUILD_TEXT","user_limit","parent_id","permission_overwrites","rate_limit_per_user","active","_mapThreads","attachment","resolveImage","image","resolvedRole","_roles","roleOrRoles","resolvedRoles","newRoles","resolvedRoleIds","_fetchChannelMany","maxAge","maxUses","unique","targetUser","targetApplication","targetType","max_age","max_uses","target_user_id","target_application_id","target_type","VerificationLevels","DefaultMessageNotificationLevels","ExplicitContentFilterLevels","resolveColor","afkChannelId","afkTimeout","defaultMessageNotifications","explicitContentFilter","systemChannelId","systemChannelFlags","verificationLevel","overwrite","allow","deny","verification_level","default_message_notifications","explicit_content_filter","afk_channel_id","afk_timeout","system_channel_id","system_channel_flags","handleGuild","withCounts","memberResolvable","userResolvable","cachedUser","resolvedOptions","access_token","accessToken","nick","fetchWhenExisting","limit","withPresences","after","_data","endpoint","dry","compute_prune_count","include_roles","prune","pruned","unban","user_ids","generate","REQUEST_GUILD_MEMBERS","fetchedMembers","refresh","fetched","everyone","hoist","hoistedRoles","comparePositionTo","coloredRoles","highest","premiumSubscriberRole","tags","botRole","botId","resolveFile","dontUsePayloadJSON","_fetchId","pins","resolveData","resolveFiles","crosspost","OverwriteTypes","overwrites","userOrRole","overwriteOptions","userOrRoleId","resolveOverwriteOptions","upsert","presenceResolvable","UserResolvable","rawUser","setPosition","mentionable","updatedRoles","_sortedRoles","GuildRolesPositionUpdate","botRoleFor","PrivacyLevels","privacyLevel","privacy_level","autoArchiveDuration","resolvedType","GUILD_NEWS_THREAD","GUILD_PUBLIC_THREAD","startMessageId","features","auto_archive_duration","fetchActive","fetchArchived","fetchAll","before","archivedAt","rawThreads","hasMore","has_more","UserAgent","Agent","keepAlive","retries","fullUserAgent","queryString","make","versioned","body","getAuth","controller","AbortController","signal","finally","noop","methods","reflectors","toPrimitive","for","routeBucket","Proxy","flattened","flattenErrors","json","newKey","_errors","APIRequest","routeBuilder","RequestHandler","Endpoints","tokenPrefix","globalLimit","globalRemaining","globalReset","globalDelay","_inactive","CDN","apiRequest","global","RATE_LIMIT","INVALID_REQUEST_WARNING","parseResponse","getAPIOffset","serverDate","invalidCount","invalidCountResetTime","globalLimited","localLimited","limited","globalDelayFor","isGlobal","rateLimitData","delayPromise","restTimeOffset","onRateLimit","sublimitTimeout","resetAfter","calculateReset","retryAfter","remainingTime","ok","childProcess","Worker","mode","shardArgs","execArgv","ready","worker","_evals","_fetches","_exitListener","_handleExit","spawn","fork","_handleMessage","workerData","child","spawnTimeoutTimer","off","onDisconnect","onDeath","kill","terminate","delay","postMessage","fetchClientValue","listener","_fetchProp","_result","makeError","_ready","_disconnect","_reconnecting","_sFetchProp","resp","_sFetchPropShard","fetchClientValues","makePlainError","_sEval","_sEvalShard","_performOnShards","_sRespawnAll","shardDelay","respawnDelay","respawnAll","respawn","parentPort","broadcastEval","_respond","ERROR","_singleton","BigInt","isAbsolute","cwd","statSync","shardList","createShard","fetchRecommendedShards","sh","NSFWLevels","immediatePatch","splash","banner","vanityURLCode","vanity_url_code","nsfwLevel","nsfw_level","bannerURL","Banner","splashURL","Splash","ApplicationCommandOptionTypes","deconstruct","stringType","InteractionResponses","BaseCommandInteraction","replied","ephemeral","transformResolved","resolved","fetchReply","deleteReply","followUp","nameAcronym","partnered","verified","iconURL","dynamic","Icon","requiresColons","managed","require_colons","TextBasedChannel","BaseGuildTextChannel","last_message_id","defaultAutoArchiveDuration","default_auto_archive_duration","setDefaultAutoArchiveDuration","setNSFW","setType","hooks","hook","avatar","setTopic","createInvite","fetchInvites","lastMessage","lastPinAt","sendTyping","createMessageCollector","awaitMessages","createMessageComponentCollector","awaitMessageComponent","bulkDelete","rtcRegion","rtc_region","full","joinable","viewable","permissionsFor","CONNECT","setRTCRegion","resolveType","ACTION_ROW","children","isText","isVoice","isThread","GUILD_VOICE","GUILD_CATEGORY","GUILD_NEWS","GUILD_STORE","GUILD_STAGE_VOICE","GUILD_PRIVATE_THREAD","GROUP_DM","DM","flags","cover","cover_image","rpcOrigins","rpc_origins","botRequireCodeGrant","bot_require_code_grant","botPublic","bot_public","owner","team","app","ActivityTypes","STATUS_UPDATE","since","afk","activities","activity","mfaEnabled","mfa_enabled","newData","setUsername","setPresence","setStatus","setActivity","setAFK","_group","_subcommand","_hoistedOptions","_getTypedOption","properties","getSubcommandGroup","getBoolean","getInteger","getNumber","getMentionable","resolveContextMenuOptions","targetId","target_id","recipient","createDM","MFALevels","PremiumTiers","discoverySplash","discovery_splash","large","premiumTier","premium_tier","premium_subscription_count","premiumSubscriptionCount","widget_enabled","widgetEnabled","widget_channel_id","widgetChannelId","mfaLevel","mfa_level","joinedTimestamp","max_members","maximumMembers","max_presences","maximumPresences","approximate_member_count","approximateMemberCount","approximate_presence_count","approximatePresenceCount","vanityURLUses","rulesChannelId","rules_channel_id","publicUpdatesChannelId","public_updates_channel_id","preferredLocale","preferred_locale","rawChannel","guildUser","owner_id","ownerId","stage_instances","voice_states","voiceState","joinedAt","discoverySplashURL","DiscoverySplash","fetchOwner","afkChannel","systemChannel","widgetChannel","rulesChannel","publicUpdatesChannel","integrations","integration","uses","apiHooks","fetchWidget","fetchGuildWidget","widget","Entry","Actions","action_type","welcomeChannels","welcome_channels","welcomeChannelData","emoji_id","emoji_name","patchData","setExplicitContentFilter","setDefaultMessageNotifications","setSystemChannelFlags","setVerificationLevel","setAFKChannel","setSystemChannel","setAFKTimeout","setOwner","setRulesChannel","setPublicUpdatesChannel","setPreferredLocale","channelPositions","updatedChannels","lock_permissions","lockPermissions","GuildChannelsPositionUpdate","rolePositions","settings","feat","voiceAdapterCreator","sendPayload","discordSort","_sortedChannels","category","Targets","ALL","GUILD","ROLE","INVITE","WEBHOOK","EMOJI","INTEGRATION","STAGE_INSTANCE","STICKER","THREAD","UNKNOWN","CHANNEL_OVERWRITE_CREATE","CHANNEL_OVERWRITE_UPDATE","CHANNEL_OVERWRITE_DELETE","MEMBER_KICK","MEMBER_PRUNE","MEMBER_BAN_ADD","MEMBER_BAN_REMOVE","MEMBER_UPDATE","MEMBER_ROLE_UPDATE","MEMBER_MOVE","MEMBER_DISCONNECT","BOT_ADD","ROLE_CREATE","ROLE_UPDATE","ROLE_DELETE","INVITE_UPDATE","WEBHOOK_CREATE","WEBHOOK_UPDATE","WEBHOOK_DELETE","EMOJI_CREATE","EMOJI_UPDATE","EMOJI_DELETE","MESSAGE_PIN","MESSAGE_UNPIN","INTEGRATION_CREATE","INTEGRATION_UPDATE","INTEGRATION_DELETE","STICKER_CREATE","STICKER_UPDATE","STICKER_DELETE","audit_log_entries","logs","actionType","changes","old_value","new","new_value","extra","members_removed","delete_member_days","role_name","MANAGE_GUILD","change","permissionsLocked","channelVal","parentVal","bitfield","defaultBit","memberOrRole","memberPermissions","rolePermissions","overwritesFor","roleOverwrites","memberOverwrites","everyoneOverwrites","ADMINISTRATOR","VIEW_CHANNEL","newParent","setParent","relative","equal","deletable","MANAGE_CHANNELS","manageable","MANAGE_EMOJIS_AND_STICKERS","premiumSinceTimestamp","nickname","pending","premium_since","premiumSince","displayColor","displayHexColor","hexColor","displayName","kickable","KICK_MEMBERS","bannable","BAN_MEMBERS","permissionsIn","setNickname","deleteDM","kick","usageCount","usage_count","creatorId","creator_id","creator","created_at","updatedAt","updated_at","source_guild_id","serializedGuild","serialized_source_guild","unSynced","is_dirty","resolveGuild","updatedTimestamp","GUILD_TEMPLATES_PATTERN","syncing","account","syncedAt","synced_at","expireBehavior","expire_behavior","expireGracePeriod","expire_grace_period","termsOfServiceURL","terms_of_service_url","privacyPolicyURL","privacy_policy_url","summary","verifyKey","verify_key","inGuild","isContextMenu","isMessageComponent","componentType","interactionType","empty","_handleMessageDeletion","_handleChannelDeletion","_handleGuildDeletion","handleCollect","collect","dispose","collected","checkEnd","endReason","maxComponents","maxUsers","stop","presenceCount","inviter","target_user","target_application","_expiresTimestamp","expires_at","stage_instance","expiresTimestamp","expiresAt","INVITES_PATTERN","welcomeScreen","welcome_screen","participantCount","participant_count","speakerCount","speaker_count","Embed","Mentions","MessageTypes","SystemMessageTypes","system","webhook_id","pinned","tts","attachemnts","sticker_items","edited_timestamp","mentions","mention_roles","mention_everyone","mention_channels","crosspostedChannels","referenced_message","repliedUser","groupActivityApplication","partyId","party_id","reference","message_reference","editedAt","hasThread","HAS_THREAD","cleanContent","createReactionCollector","awaitReactions","_options","interactions","editable","MANAGE_MESSAGES","pinnable","crosspostable","CROSSPOSTED","SEND_MESSAGES","pin","unpin","messageReference","startThread","fetchWebhook","suppressEmbeds","suppress","SUPPRESS_EMBEDS","rawData","addComponents","flat","spliceComponents","deleteCount","setFile","proxyURL","proxy_url","height","width","content_type","MessageButtonStyles","setup","custom_id","resolveStyle","resolvePartialEmoji","disabled","setCustomId","verifyString","setDisabled","setEmoji","setLabel","setStyle","setURL","bulkDeleteListener","handleDispose","maxProcessed","row","deferUpdate","skipValidation","cloneObject","normalizeFields","thumbnail","video","icon_url","proxyIconURL","proxy_icon_url","provider","padStart","inline","addFields","spliceFields","setFields","setFooter","setImage","setTimestamp","normalizeField","mention","_members","_channels","channelTypes","CHANNELS_PATTERN","_content","chan","ignoreDirect","ignoreRoles","ignoreEveryone","EVERYONE_PATTERN","USERS_PATTERN","ROLES_PATTERN","isWebhook","isUser","isMessage","isMessageManager","isInteraction","makeContent","avatarURL","EPHEMERAL","allowedMentions","replied_user","fail_if_not_exists","avatar_url","allowed_mentions","sticker_ids","fileLike","findName","_emoji","placeholder","minValues","min_values","maxValues","max_values","normalizeOptions","setMaxValues","setMinValues","setPlaceholder","addOptions","spliceOptions","normalizeOption","followers","webhook_channel_id","GDMIcon","details","timestamps","syncId","sync_id","party","assets","largeText","large_text","smallText","small_text","largeImage","large_image","smallImage","small_image","smallImageURL","AppAsset","largeImageURL","clientStatus","client_status","web","mobile","desktop","maxEmojis","bot_id","integration_id","clientMember","MANAGE_ROLES","comparePositions","setHoist","setPermissions","setMentionable","role1","role2","createStageInstance","discoverableDisabled","discoverable_disabled","StickerFormatTypes","StickerTypes","format_type","packId","pack_id","sortValue","sort_value","fetchPremiumStickerPacks","skuId","sku_id","coverStickerId","cover_sticker_id","bannerId","banner_asset_id","coverSticker","StickerPackBanner","owner_user_id","memberData","TeamIcon","MembershipStates","membershipState","membership_state","setRateLimitPerUser","locked","thread_metadata","archiveTimestamp","archive_timestamp","messageCount","message_count","setArchived","setAutoArchiveDuration","setLocked","joined","MANAGE_THREADS","sendable","USE_PRIVATE_THREADS","USE_PUBLIC_THREADS","unarchivable","join_timestamp","startedTimestamp","startedAt","discriminator","public_flags","Avatar","defaultAvatarURL","DefaultAvatar","displayAvatarURL","dmChannel","recipient_id","MOVE_MEMBERS","speakable","SPEAK","setBitrate","setUserLimit","vip","deprecated","optimal","custom","serverDeaf","serverMute","selfDeaf","self_deaf","selfMute","self_mute","selfVideo","self_video","streaming","self_stream","requestToSpeakTimestamp","request_to_speak_timestamp","setMute","setDeaf","disconnect","setChannel","suppressed","WebhookTypes","sourceGuild","source_guild","sourceChannel","source_channel","messagePayload","thread_id","slack","messageManager","structure","ignore","getOwnPropertyDescriptor","welcomeChannel","instantInvite","instant_invite","presence_count","ClientApplicationAssetTypes","AssetTypes","AppIcon","coverURL","ended","_timeout","_idletimeout","idle","onCollect","onEnd","resetTimer","tick","InteractionResponseTypes","DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE","CHANNEL_MESSAGE_WITH_SOURCE","DEFERRED_MESSAGE_UPDATE","UPDATE_MESSAGE","typing","filterOld","messageIds","msgs","INSTANCE","JOIN","SPECTATE","JOIN_REQUEST","SYNC","PLAY","GATEWAY_PRESENCE","GATEWAY_PRESENCE_LIMITED","GATEWAY_GUILD_MEMBERS","GATEWAY_GUILD_MEMBERS_LIMITED","VERIFICATION_PENDING_GUILD_LIMIT","EMBEDDED","bits","missing","hasParams","toArray","isFrozen","serialize","serialized","Package","AllowedImageFormats","AllowedImageSizes","makeImageUrl","root","keyMirror","tmp","createEnum","Asset","appId","teamId","stickerFormat","botGateway","VOICE_GUILD_PING","VOICE_SERVER_UPDATE","fill","SMALL","BIG","Colors","DEFAULT","WHITE","AQUA","GREEN","BLUE","YELLOW","PURPLE","LUMINOUS_VIVID_PINK","FUCHSIA","GOLD","ORANGE","RED","GREY","NAVY","DARK_AQUA","DARK_GREEN","DARK_BLUE","DARK_PURPLE","DARK_VIVID_PINK","DARK_GOLD","DARK_ORANGE","DARK_RED","DARK_GREY","DARKER_GREY","LIGHT_GREY","DARK_NAVY","BLURPLE","GREYPLE","DARK_BUT_NOT_BLACK","NOT_QUITE_BLACK","UNKNOWN_ACCOUNT","UNKNOWN_APPLICATION","UNKNOWN_CHANNEL","UNKNOWN_GUILD","UNKNOWN_INTEGRATION","UNKNOWN_INVITE","UNKNOWN_MEMBER","UNKNOWN_MESSAGE","UNKNOWN_OVERWRITE","UNKNOWN_PROVIDER","UNKNOWN_ROLE","UNKNOWN_TOKEN","UNKNOWN_USER","UNKNOWN_EMOJI","UNKNOWN_WEBHOOK","UNKNOWN_WEBHOOK_SERVICE","UNKNOWN_SESSION","UNKNOWN_BAN","UNKNOWN_SKU","UNKNOWN_STORE_LISTING","UNKNOWN_ENTITLEMENT","UNKNOWN_BUILD","UNKNOWN_LOBBY","UNKNOWN_BRANCH","UNKNOWN_STORE_DIRECTORY_LAYOUT","UNKNOWN_REDISTRIBUTABLE","UNKNOWN_GIFT_CODE","UNKNOWN_STREAM","UNKNOWN_PREMIUM_SERVER_SUBSCRIBE_COOLDOWN","UNKNOWN_GUILD_TEMPLATE","UNKNOWN_DISCOVERABLE_SERVER_CATEGORY","UNKNOWN_STICKER","UNKNOWN_INTERACTION","UNKNOWN_APPLICATION_COMMAND","UNKNOWN_STAGE_INSTANCE","UNKNOWN_GUILD_MEMBER_VERIFICATION_FORM","UNKNOWN_GUILD_WELCOME_SCREEN","UNKNOWN_GUILD_SCHEDULED_EVENT","UNKNOWN_GUILD_SCHEDULED_EVENT_USER","BOT_PROHIBITED_ENDPOINT","BOT_ONLY_ENDPOINT","CANNOT_SEND_EXPLICIT_CONTENT","NOT_AUTHORIZED","SLOWMODE_RATE_LIMIT","ACCOUNT_OWNER_ONLY","ANNOUNCEMENT_EDIT_LIMIT_EXCEEDED","CHANNEL_HIT_WRITE_RATELIMIT","CONTENT_NOT_ALLOWED","GUILD_PREMIUM_LEVEL_TOO_LOW","MAXIMUM_GUILDS","MAXIMUM_FRIENDS","MAXIMUM_PINS","MAXIMUM_RECIPIENTS","MAXIMUM_ROLES","MAXIMUM_WEBHOOKS","MAXIMUM_EMOJIS","MAXIMUM_REACTIONS","MAXIMUM_CHANNELS","MAXIMUM_ATTACHMENTS","MAXIMUM_INVITES","MAXIMUM_ANIMATED_EMOJIS","MAXIMUM_SERVER_MEMBERS","MAXIMUM_NUMBER_OF_SERVER_CATEGORIES","GUILD_ALREADY_HAS_TEMPLATE","MAXIMUM_THREAD_PARTICIPANTS","MAXIMUM_NON_GUILD_MEMBERS_BANS","MAXIMUM_BAN_FETCHES","MAXIMUM_NUMBER_OF_STICKERS_REACHED","UNAUTHORIZED","ACCOUNT_VERIFICATION_REQUIRED","DIRECT_MESSAGES_TOO_FAST","REQUEST_ENTITY_TOO_LARGE","FEATURE_TEMPORARILY_DISABLED","USER_BANNED","TARGET_USER_NOT_CONNECTED_TO_VOICE","ALREADY_CROSSPOSTED","MISSING_ACCESS","INVALID_ACCOUNT_TYPE","CANNOT_EXECUTE_ON_DM","EMBED_DISABLED","CANNOT_EDIT_MESSAGE_BY_OTHER","CANNOT_SEND_EMPTY_MESSAGE","CANNOT_MESSAGE_USER","CANNOT_SEND_MESSAGES_IN_VOICE_CHANNEL","CHANNEL_VERIFICATION_LEVEL_TOO_HIGH","OAUTH2_APPLICATION_BOT_ABSENT","MAXIMUM_OAUTH2_APPLICATIONS","INVALID_OAUTH_STATE","MISSING_PERMISSIONS","INVALID_AUTHENTICATION_TOKEN","NOTE_TOO_LONG","INVALID_BULK_DELETE_QUANTITY","CANNOT_PIN_MESSAGE_IN_OTHER_CHANNEL","INVALID_OR_TAKEN_INVITE_CODE","CANNOT_EXECUTE_ON_SYSTEM_MESSAGE","CANNOT_EXECUTE_ON_CHANNEL_TYPE","INVALID_OAUTH_TOKEN","MISSING_OAUTH_SCOPE","INVALID_WEBHOOK_TOKEN","INVALID_ROLE","INVALID_RECIPIENTS","BULK_DELETE_MESSAGE_TOO_OLD","INVALID_FORM_BODY","INVITE_ACCEPTED_TO_GUILD_NOT_CONTAINING_BOT","INVALID_API_VERSION","FILE_UPLOADED_EXCEEDS_MAXIMUM_SIZE","INVALID_FILE_UPLOADED","CANNOT_SELF_REDEEM_GIFT","PAYMENT_SOURCE_REQUIRED","CANNOT_DELETE_COMMUNITY_REQUIRED_CHANNEL","INVALID_STICKER_SENT","INVALID_OPERATION_ON_ARCHIVED_THREAD","INVALID_THREAD_NOTIFICATION_SETTINGS","PARAMETER_EARLIER_THAN_CREATION","GUILD_NOT_AVAILABLE_IN_LOCATION","GUILD_MONETIZATION_REQUIRED","TWO_FACTOR_REQUIRED","NO_USERS_WITH_DISCORDTAG_EXIST","REACTION_BLOCKED","RESOURCE_OVERLOADED","STAGE_ALREADY_OPEN","MESSAGE_ALREADY_HAS_THREAD","THREAD_LOCKED","MAXIMUM_ACTIVE_THREADS","MAXIMUM_ACTIVE_ANNOUNCEMENT_THREADS","INVALID_JSON_FOR_UPLOADED_LOTTIE_FILE","UPLOADED_LOTTIES_CANNOT_CONTAIN_RASTERIZED_IMAGES","STICKER_MAXIMUM_FRAMERATE_EXCEEDED","STICKER_FRAME_COUNT_EXCEEDS_MAXIMUM_OF_1000_FRAMES","LOTTIE_ANIMATION_MAXIMUM_DIMENSIONS_EXCEEDED","STICKER_FRAME_RATE_IS_TOO_SMALL_OR_TOO_LARGE","STICKER_ANIMATION_DURATION_EXCEEDS_MAXIMUM_OF_5_SECONDS","DiscordError","regex","matchAll","resolveCode","resolveFileAsBuffer","resolveBase64","resource","Readable","stats","buffers","GUILD_MEMBERS","GUILD_BANS","GUILD_EMOJIS_AND_STICKERS","GUILD_WEBHOOKS","GUILD_INVITES","GUILD_VOICE_STATES","GUILD_PRESENCES","GUILD_MESSAGE_TYPING","DIRECT_MESSAGE_TYPING","keepOverLimit","interval","sweepFn","getComparisonTimestamp","excludeFromSweep","comparisonTimestamp","IS_CROSSPOST","SOURCE_MESSAGE_DELETED","URGENT","LOADING","cacheWithLimits","defaultMakeCacheSettings","large_threshold","$os","$browser","$device","setting","noSweeping","noLimit","checkAdmin","CREATE_INSTANT_INVITE","ADD_REACTIONS","VIEW_AUDIT_LOG","PRIORITY_SPEAKER","STREAM","SEND_TTS_MESSAGES","EMBED_LINKS","ATTACH_FILES","READ_MESSAGE_HISTORY","MENTION_EVERYONE","USE_EXTERNAL_EMOJIS","VIEW_GUILD_INSIGHTS","MUTE_MEMBERS","DEAFEN_MEMBERS","USE_VAD","CHANGE_NICKNAME","MANAGE_NICKNAMES","MANAGE_WEBHOOKS","USE_APPLICATION_COMMANDS","REQUEST_TO_SPEAK","USE_EXTERNAL_STICKERS","STAGE_MODERATOR","EPOCH","INCREMENT","BINARY","binaryToId","snowflake","idToBinary","workerId","processId","increment","binary","SUPPRESS_JOIN_NOTIFICATIONS","SUPPRESS_PREMIUM_SUBSCRIPTIONS","SUPPRESS_GUILD_REMINDER_NOTIFICATIONS","DISCORD_EMPLOYEE","PARTNERED_SERVER_OWNER","HYPESQUAD_EVENTS","BUGHUNTER_LEVEL_1","HOUSE_BRAVERY","HOUSE_BRILLIANCE","HOUSE_BALANCE","EARLY_SUPPORTER","TEAM_USER","BUGHUNTER_LEVEL_2","VERIFIED_BOT","EARLY_VERIFIED_BOT_DEVELOPER","DISCORD_CERTIFIED_MODERATOR","objProps","newProp","element","elemIsObj","prepend","splitText","currentChar","codeBlockContent","inlineCodeContent","escapeInlineCode","escapeCodeBlock","escapeItalic","escapeBold","escapeUnderline","escapeStrikethrough","escapeSpoiler","subString","escapeMarkdown","guildsPerShard","multipleOf","ceil","def","given","newIndex","removedElement","errorMessage","allowEmpty","updatedItems","moveElementInArray","ext","base","num","bin","high","low","dec","removeMentions","mentionedChannel","isObj","disallowedKeys","getPathSegments","pathArray","segment","Writable","eventHandlers","arg1","arg2","arg3","_redirectable","RedirectionError","createErrorType","TooManyRedirectsError","MaxBodyLengthExceededError","WriteAfterEndError","RedirectableRequest","responseCallback","_sanitizeOptions","_ended","_ending","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","_onNativeResponse","_processResponse","_performRequest","protocols","nativeProtocols","scheme","nativeProtocol","wrappedProtocol","urlStr","urlToOptions","wrappedRequest","urlObject","removeMatchingHeaders","lastValue","defaultMessage","CustomError","abortRequest","_currentRequest","currentRequest","removeHeader","msecs","destroyOnTimeout","socket","addListener","startTimer","clearTimer","searchPos","_currentUrl","_isRedirect","writeNext","finished","trackRedirects","followRedirects","previousHostName","redirectUrl","redirectUrlParts","responseDetails","cause","responseUrl","redirects","setBoundary","terminatorPosition","isTypedArray","strict","isStrictTypedArray","loose","isLooseTypedArray","Int8Array","Int16Array","Int32Array","Uint8ClampedArray","Uint16Array","Uint32Array","Float32Array","Float64Array","CI","WT_SESSION","HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","weakMapTag","arrayBufferTag","dataViewTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","freeSelf","Function","freeExports","freeModule","moduleExports","freeProcess","nodeUtil","binding","nodeIsTypedArray","arraySome","mapToArray","setToArray","uid","transform","arrayProto","funcProto","objectProto","coreJsData","funcToString","maskSrcKey","IE_PROTO","nativeObjectToString","reIsNative","propertyIsEnumerable","symToStringTag","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","nativeKeys","DataView","getNative","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","Hash","ListCache","MapCache","SetCache","__data__","Stack","assocIndexOf","eq","baseGetTag","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsEqual","bitmask","customizer","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","byteOffset","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","getAllKeys","objLength","skipCtor","objValue","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","arrLength","othLength","seen","arrValue","othIndex","keysFunc","symbolsFunc","arrayPush","baseGetAllKeys","getSymbols","getMapData","getValue","isMasked","baseIsNative","pairs","LARGE_ARRAY_SIZE","resIndex","arrayFilter","isIndex","Ctor","ctorString","isArguments","isLength","baseUnary","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","baseTimes","arrayLikeKeys","baseKeys","isUnicodeSupported","main","warning","fallback","extensions","types","preference","db","extname","EXTRACT_TYPE_REGEXP","TEXT_TYPE_REGEXP","charset","charsets","extension","exts","plural","msAbs","isPlural","parseFloat","isFinite","long","fmtShort","runtimeRequire","vars","prebuildsOnly","PREBUILDS_ONLY","abi","modules","runtime","electron","ELECTRON_RUN_AS_NODE","arch","libc","LIBC","existsSync","isAlpine","armv","ARM_VERSION","arm_version","uv","dir","getFirst","matchBuild","parseTuple","architectures","matchTuple","tuple","compareTuples","parseTags","specificity","napi","matchTags","runtimeAgnostic","compareTags","prebuild","nearby","dirname","execPath","prebuilds","winner","ArgumentError","generate_stack_1","generateStackTrace","validationErrors","Predicate","callsites_1","infer_label_1","predicate_1","base_predicate_1","modifiers_1","predicates_1","test_1","ow","labelOrPredicate","isPredicate","stackFrames","inferLabel","isValid","_ow","argument_error_1","optional","not","random_id_1","originalAddValidator","negatedMessage","validatorSymbol","AnyPredicate","DataViewPredicate","ArrayBufferPredicate","TypedArrayPredicate","WeakSetPredicate","SetPredicate","WeakMapPredicate","MapPredicate","ErrorPredicate","DatePredicate","ObjectPredicate","ArrayPredicate","BooleanPredicate","BigIntPredicate","NumberPredicate","StringPredicate","number_1","bigint_1","array_1","object_1","date_1","error_1","map_1","weak_map_1","set_1","weak_set_1","typed_array_1","array_buffer_1","data_view_1","any_1","predicates","generate_argument_error_message_1","testSymbol","idLabel","alreadyPresent","generateArgumentErrorMessage","minByteLength","maxByteLength","isEqual","match_shape_1","of_type_1","searchElement","searchElements","includesAny","nonEmpty","deepEqual","shape","exact","true","false","messageIncludes","hasKeys","instanceOf","typeError","evalError","EvalError","rangeError","referenceError","ReferenceError","syntaxError","SyntaxError","uriError","URIError","has_items_1","minSize","missingKeys","hasAnyKeys","hasValues","missingValues","hasAnyValues","valueSet","keysOfType","valuesOfType","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","oneOf","printedList","overflow","positive","negative","integerOrInfinite","uint8","uint16","uint32","int8","int16","int32","dotProp","of_type_deep_1","plain","deepValuesOfType","partialShape","not_1","typeString","label2","labelWithTick","label_","mapKey","currentErrors","validate","customValidator","newMessage","items","missingItems","valiDate","searchString","alphanumeric","alphabetical","numeric","uppercase","isAny","errorArray","anyErrorWithoutOneItemOnly","returnedErrors","is_valid_identifier_1","is_node_1","labelRegex","functionCallStackFrame","getFileName","getLineNumber","getColumnNumber","readFileSync","groups","identifierRegex","reservedSet","objectKeys","ofTypeDeep","haveStream","streamIsTTY","COLORTERM","execSync","_platform","_linux","_darwin","_windows","_freebsd","_openbsd","_netbsd","_sunos","parseAudioType","parseLinuxAudioPciMM","lines","audioPCI","slotId","pciMatch","manufacturer","revision","driver","in","parseDarwinAudio","audioObject","channelStr","coreaudio_device_transport","_name","coreaudio_device_manufacturer","coreaudio_default_audio_input_device","coreaudio_default_audio_output_device","parseDarwinChannel","coreaudio_device_input","coreaudio_device_output","parseWindowsAudio","audio","getLinuxAudioPci","outObj","SPAudioDataType","wmic","parseWinBatteryPart","designedCapacity","fullChargeCapacity","statusValue","hasBattery","maxCapacity","voltage","capacityUnit","percent","currentCapacity","isCharging","acConnected","ischarging","cycleCount","timeRemaining","battery_path","acPath","readFile","desingedMinVoltage","energy","batteries","parts2","workload","powerShell","promiseAll","hasValue","designCapacities","fullChargeCapacities","additionalBatteries","toInt","parseBluetoothTyoe","parseLinuxBluetoothInfo","macAddr1","macAddr2","macDevice","macHost","batteryPercent","parseDarwinBluetoothDevices","bluetoothObject","typeStr","device_minorClassOfDevice_string","device_majorClassOfDevice_string","device_name","device","device_services","device_manufacturer","device_addr","device_batteryPercent","device_isconnected","parseWindowsBluetooth","bluetoothDevices","btFiles","getFilesInPath","pathParts","infoFile","hdicon","SPBluetoothDataType","local_device_title","general_address","objKey","innerObject","bluetoothDevice","_cpu_speed","_current_cpu","nice","irq","currentLoad","currentLoadUser","currentLoadSystem","currentLoadNice","currentLoadIdle","currentLoadIrq","rawCurrentLoad","rawCurrentLoadUser","rawCurrentLoadSystem","rawCurrentLoadNice","rawCurrentLoadIdle","rawCurrentLoadIrq","_cpus","_corecount","AMDBaseFrequencies","socketTypes","cpuBrandManufacturer","brand","getAMDSpeed","found","getCpuCurrentSpeedSync","cpus","minFreq","maxFreq","avgFreq","cores","avg","cpuFlags","execOptsWin","flag_hex","flag_bin_unpadded","flag_bin","repeat","all_flags","cpuCache","l1d","l1i","l2","l3","cacheType","sizeParts","unit","idx","cpu","vendor","family","stepping","speedMin","speedMax","governor","physicalCores","processors","virtualization","modellineParts","tbFrequency","countProcessors","countCores","countThreads","clusters","efficiencyCores","performanceCores","modelline","threadsPerCore","threadsPerCoreInt","processorsInt","linesRpi","rPIRevision","decodePiCpuinfo","processor","revisionCode","lines2","stdout2","sig","threadCount","coreCount","socketId","countLines","hyperv","cpuCurrentSpeed","currCpuSpeed","cpuTemperature","cmd","maxtmp","tdieTemp","newSectionStarts","section","firstPart","er","sum","osxTemp","loads","loadavg","avgLoad","totalUser","totalSystem","totalNice","totalIrq","totalIdle","times","sys","tmpTick","totalTick","tmpLoad","totalLoad","tmpUser","tmpSystem","tmpNice","tmpIdle","tmpIrq","currentTick","loadUser","loadSystem","loadNice","loadIdle","loadIrq","rawLoad","rawLoadUser","rawLoadSystem","rawLoadNice","rawLoadIdle","rawLoadIrq","currentload","currentloadUser","currentloadSystem","currentloadNice","currentloadIdle","currentloadIrq","rawCurrentload","rawCurrentloadUser","rawCurrentloadSystem","rawCurrentloadNice","rawCurrentloadIdle","rawCurrentloadIrq","fullLoad","totalTicks","DockerSocket","_docker_socket","_docker_container_stats","_docker_last_read","dockerContainers","inContainers","containers","Id","listContainers","docker_containers","containerID","Names","Name","containerIdSanitized","isPrototypePolluted","sanitizeShellString","getInspect","Image","imageID","ImageID","Command","created","Created","started","State","StartedAt","FinishedAt","finishedAt","restartCount","RestartCount","Platform","Driver","ports","Ports","mounts","Mounts","dockerContainerStats","containerIDs","containerArray","containerIDsSanitized","stringToLower","stringReplace","stringTrim","mathMin","allContainers","container","dockerContainerStatsSingle","memUsage","memLimit","memPercent","cpuPercent","pids","netIO","rx","wx","blockIO","dataInspect","getStats","memory_stats","usage","cpu_stats","precpu_stats","nanoSecNow","nanoSeconds","possIntervals","intervalsUsed","cpu_usage","total_usage","cpuDelta","systemDelta","system_cpu_usage","percpu_usage","docker_calcCPUPercent","pids_stats","networks","rx_bytes","tx_bytes","docker_calcNetworkIO","blkio_stats","io_service_bytes_recursive","docker_calcBlockIO","cpuStats","precpuStats","memoryStats","dockerContainerProcesses","getProcesses","Titles","Processes","titles","pos_pid","pos_ppid","pos_pgid","pos_vsz","pos_time","pos_elapsed","pos_ni","pos_ruser","pos_user","pos_rgroup","pos_group","pos_stat","pos_rss","pos_command","pidHost","ppid","pgid","ruser","rgroup","elapsed","rss","vsz","dockerInfo","getInfo","ID","Containers","containersRunning","ContainersRunning","containersPaused","ContainersPaused","containersStopped","ContainersStopped","images","Images","memoryLimit","MemoryLimit","swapLimit","SwapLimit","kernelMemory","KernelMemory","cpuCfsPeriod","CpuCfsPeriod","cpuCfsQuota","CpuCfsQuota","cpuShares","CPUShares","cpuSet","CPUSet","ipv4Forwarding","IPv4Forwarding","bridgeNfIptables","BridgeNfIptables","bridgeNfIp6tables","BridgeNfIp6tables","Debug","nfd","NFd","oomKillDisable","OomKillDisable","ngoroutines","NGoroutines","systemTime","SystemTime","loggingDriver","LoggingDriver","cgroupDriver","CgroupDriver","nEventsListener","NEventsListener","kernelVersion","KernelVersion","operatingSystem","OperatingSystem","osType","OSType","architecture","Architecture","ncpu","NCPU","memTotal","MemTotal","dockerRootDir","DockerRootDir","httpProxy","HttpProxy","httpsProxy","HttpsProxy","noProxy","NoProxy","Labels","experimentalBuild","ExperimentalBuild","serverVersion","ServerVersion","clusterStore","ClusterStore","clusterAdvertise","ClusterAdvertise","defaultRuntime","DefaultRuntime","liveRestoreEnabled","LiveRestoreEnabled","isolation","Isolation","initBinary","InitBinary","productLicense","ProductLicense","dockerImages","listImages","imageIDSanitized","inspectImage","Container","comment","Comment","Os","Parent","dockerVersion","DockerVersion","Size","sharedSize","SharedSize","virtualSize","VirtualSize","Author","containerConfig","ContainerConfig","graphDriver","GraphDriver","repoDigests","RepoDigests","repoTags","RepoTags","Config","rootFS","RootFS","dockerVolumes","listVolumes","Volumes","mountpoint","Mountpoint","Scope","CreatedAt","dockerAll","processes","net","createConnection","alldata","startbody","execPromiseSave","promisifySave","_fs_speed","_disk_io","parseBlk","disk","fsType","rota","uuid","rm","tran","sortByKey","blkStdoutToObject","calcFsSpeed","tx","rx_sec","wx_sec","tx_sec","bytes_read","bytes_write","bytes_overall","last_ms","calcDiskIO","rIO","wIO","rWaitTime","wWaitTime","tWaitTime","tIO","rIO_sec","wIO_sec","tIO_sec","rWaitPercent","wWaitPercent","tWaitPercent","fsSize","macOsDisks","parseDf","fsShort","macOsDisksSingle","getmacOsFsType","used","mount","el","maxBuffer","fsOpenFiles","allocated","blockDevices","devices","physical","removable","parseDevices","drivetypes","drivetype","fsStats","fs_filter","disksIO","diskLayout","getVendorFromModel","pattern","commitResult","BSDName","cmdFullSmart","outJSON","blockdevices","parttype","mediumType","logical","interfaceType","bytesPerSector","totalCylinders","totalHeads","totalSectors","totalTracks","tracksPerCylinder","sectorsPerTrack","firmwareRevision","rev","serialNum","smartStatus","diskBSDName","smartctl","smart_status","passed","smartData","linesSATA","linesNVMe","linesUSB","dataType","sizeStr","sizeValue","smartStatusString","linkWidth","replaceAll","smartMonToolsInstalled","smartDev","dev","mediaType","findObjectByKey","smartStr","serial_number","_nvidiaSmiPath","_resolutionX","_resolutionY","_pixelDepth","_refreshRate","videoTypes","vendorToId","graphics","nvidiaDevices","safeParseNumber","nvidiaSmiExe","basePath","WINDIR","targetDir","prevDir","currentDir","previousNvidiaSmi","currentNvidiaSmi","ctimeMs","getNvidiaSmi","nvidiaSmi","gpu","splittedData","driverVersion","subDeviceId","pciBus","fanSpeed","memoryTotal","memoryUsed","memoryFree","utilizationGpu","utilizationMemory","temperatureGpu","temperatureMemory","powerDraw","powerLimit","clockCore","clockMemory","mergeControllerNvidia","nvidia","vram","vramDynamic","parseLinesLinuxEdid","edid","deviceName","builtin","sizeX","sizeY","pixelDepth","resolutionX","resolutionY","currentResX","currentResY","positionX","positionY","currentRefreshRate","model_raw","controllers","displays","graphicsArr","bus","sppci_bus","spdisplays_vram","vramDyn","spdisplays_vram_shared","metalVersion","spdisplays_metal","spdisplays_metalfamily","spdisplays_vendor","sppci_model","deviceId","vendorId","external","sppci_device_type","spdisplays_ndrvs","displayItem","connectionType","currentResolutionParts","currentResolution","pixelParts","pixelDepthString","productionYear","displayId","parseLinesDarwin","plistParser","_items","isRaspberry","isRaspbian","currentController","busAddress","pciID","isGraphicsController","pciIDs","isExternal","vgapos","_3dcontrollerpos","pciIDCandidate","endpos","memparts","parseLinesLinuxControllers","nvidiaData","contr","fieldPattern","bdf","slot","memory","parseLinesLinuxClinfo","depth","currentDisplay","is_edid","is_current","edid_raw","edid_decoded","parts1","resParts","parseLinesLinuxDisplays","csections","vsections","sections","vections","memorySizes","EOL","matchingDeviceId","quadWordmemorySize","pnpDeviceId","memorySize","parseLinesWindowsControllers","windowsSubDeviceId","nvidiaSubDeviceIdParts","nvidiaSubDeviceId","lengthDifference","dsections","msections","ssections","tsections","isections","instanceId","deviceID","linesDisplay","linesScreen","linesMonitor","linesConnection","bitsPerPixel","bounds","primary","videoOutputTechnology","displayVendor","displayModel","parseLinesWindowsDisplaysPowershell","refreshRate","lib_version","osInfo","battery","filesystem","network","wifi","internet","docker","vbox","printer","usb","bluetooth","getStaticData","bios","baseboard","chassis","networkInterfaces","memLayout","getDynamicData","srv","iface","getDefaultNetworkInterface","functionProcessed","totalFunctions","v8","networkStats","networkConnections","mem","services","wifiNetworks","inetLatency","valueObject","allPromises","lastIndexOf","funcWithoutParams","filterParts","partialArray","partialRes","getCodepage","shell","networkInterfaceDefault","networkGatewayDefault","wifiInterfaces","wifiConnections","processLoad","inetChecksite","vboxInfo","getAllData","observe","urlSanitized","stringStartWith","execSafe","hostSanitized","filt","OSX_RAM_manufacturers","LINUX_RAM_manufacturers","totalmem","free","freemem","slab","buffcache","swaptotal","swapused","swapfree","pagesize","inactive","getManufacturerLinux","manId","manIdSearch","sizeString","totalWidth","dataWidth","bank","ecc","clockSpeed","formFactor","partNum","voltageConfigured","voltageMin","voltageMax","allLines","eccStatus","hasBank","memoryTypes","FormFactors","pathToIp","_network","_default_iface","_ifaces","_dhcpNics","_networkInterfaces","_mac","ifacename","ifacenameFirst","ifaces","scopeid","internal","defaultIp","address","getMacAddresses","mac","nextline","getWindowsIfaceDNSsuffix","dnsSuffix","interfaceName","connectionDnsSuffix","getWindowsIEEE8021x","i8021x","arrayIface8021xInfo","state8021x","protocol8021x","i8021xState","i8021xProtocol","SSID","getWindowsWirelessIfaceSSID","splitSectionsNics","getLinuxIfaceConnectionName","connectionName","checkLinuxDCHPInterfaces","getLinuxDHCPNics","nic","getLinuxIfaceDHCPstatus","DHCPNics","getDarwinIfaceDHCPstatus","getLinuxIfaceDNSsuffix","getLinuxIfaceIEEE8021xAuth","authenticationProtocol","testVirtualNic","ifaceName","rescan","nics","dnsSuffixes","nics8021xInfo","mtu","ip6","ip4","operstate","duplex","getDarwinNics","ip4subnet","netmask","ip6subnet","virtual","dhcp","ieee8021xAuth","ieee8021xState","carrierChanges","getWmic","cmdnicconfig","nconfigsections","linesNicConfig","netEnabled","adapterType","getWindowsNics","getWindowsWiredProfilesInformation","primaryDNS","exitCode","longPrimaryDNS","connectionSpecificDNS","getWindowsDNSsuffixes","nodeMainVersion","myspeed","wirelessspeed","foundFirst","detail","IEEE8021x","calcNetworkSpeed","rx_dropped","rx_errors","tx_dropped","tx_errors","networkStatsSingle","ifaceSanitized","perfData","psections","parseLinesWindowsPerfData","interfaces","det","ifacesArray","allIFaces","localip","localport","localaddress","peerip","peerport","peeraddress","connstate","proc","localAddress","localPort","peerAddress","peerPort","pid","getLogoFile","distro","getFQDN","fqdn","getUniqueMacAdresses","macs","hardware","jsonObj","SPHardwareDataType","spHardware","platform_UUID","sysdir","timezone","timezoneName","codename","kernel","codepage","logofile","servicepack","uefi","releaseVersion","VERSION","DISTRIB_CODENAME","VERSION_CODENAME","DISTRIB_ID","NAME","DISTRIB_RELEASE","VERSION_ID","BUILD_ID","hypervisor","term","remoteSession","apps","versionObject","openssl","systemOpenssl","systemOpensslLib","npm","yarn","pm2","gulp","grunt","git","tsc","mysql","redis","mongodb","apache","nginx","php","postgresql","perl","python","python3","pip","pip3","java","gcc","virtualbox","bash","zsh","fish","powershell","dotnet","appsObj","counter","checkVersionParam","gitHomebrewExists","darwinXcodeExists","postgresqlBin","serviceSections","srvCaption","getVboxmanage","winPrinterStatus","parseLinuxCupsPrinter","printerId","uri","local","shared","parseLinuxLpstatPrinter","parseDarwinPrinters","printerObject","uriParts","printserver","parseWindowsPrinters","printerHeader","cupsVersion","parseLinuxCupsHeader","printers","engine","engineVersion","SPPrintersDataType","_processes_cpu","all_utime","all_stime","_services_cpu","_process_cpu","_winStatusValues","parseProcStat","calcProcStatLinux","_cpu_old","statparts","utime","stime","cutime","cstime","cpuu","calcProcStatWin","procStat","srvString","srvs","dataSrv","tmpsrv","srvStr","ps","running","startmode","pv","cv","curr_processes","list_new","resultProcess","listPos","srvName","startMode","parsedhead","getName","blocked","sleeping","head","parseHead","offset2","checkColumn","priority","parseTimeUnix","cmdPath","fullcommand","firstParamPos","firstParamPathPos","firstPos","tmpCommand","tmpParams","lastSlashPos","parentPid","memVsz","memRss","parseLine","pmem","elapsed_parts","month","getMonth","getFullYear","getDay","getHours","getMinutes","getSeconds","formatDateTime","parseProcesses2","processSections","procs","procStats","allcpuu","allcpus","commandLine","memw","processesString","pname","inList","processFound","procName","resultItemId","execPromise","promisify","sku","virtualHost","disksById","linuxVersion","versionStr","procLines","raspberry","releaseDate","datetime","parseDateTime","feature","hardwareData","bootRomVersion","boot_rom_version","assetTag","memMax","memSlots","rpi","chassisTypes","ctype","parseLinuxUsb","idVendor","vendorParts","idProduct","productParts","interfaceClassParts","usbType","iManufacturerParts","getLinuxUsbType","maxPower","serialNumber","parseDarwinUsb","usbObj","removableDrive","getDarwinUsbType","parseWindowsUsb","creationclass","getWindowsUsbTypeCreation","_winDateFormat","dateFormat","dateSeperator","timeFormat","timeSeperator","amDesignator","pmDesignator","parseUsersLinux","phase","result_who","result_w","w_first","w_header","w_pos","who_line","is_whopart","ip","parseUsersDarwin","culture","headerDelimiter","nextSpace","dateTime","parseUsersWin","_cores","wmicPath","_smartMonToolsInstalled","windowsHide","_extend","LANG","stringToString","stringSubstr","separator","trimmed","lineMatch","wmicPathArray","execWin","functionToCheck","uniques","decodeEscapeSequence","dt","dtparts","hour","splitter","seperator","part","detectSplit","isPM","parseTime","rights","space","cap","stdin","cmdLineToolsExists","xcodeAppExists","xcodeExists","VBOX_INSTALL_PATH","VBOX_MSI_INSTALL_PATH","stdio","hrtime","countUniqueLines","startingWith","uniqueLines","cpuinfo","osrelease","notPolluted","st","rs","rs2","qs","qs2","stm","sto","stl","s1","s2","s1l","oldRevisionCodes","processorList","manufacturerList","typeList","memSizeCode","typeCode","pow","resolvingPromises","nodeStyleFunction","xmlStr","getNextTagPos","ii","getNextClosingTagPos","parseXmlTree","closingTag","cpos","valueStr","nextTagPos","nextClosePos","lstatSync","isDirectory","getFilesRecursively","dirs","getDirectories","getFiles","runningSinceString","runningSince","sinceDateObj","getTimezoneOffset","stoppedSinceString","stoppedSince","stopped","guestOS","hardwareUUID","cpuExepCap","cpuProfile","firmware","pageFusion","configFile","snapshotFolder","logFolder","hpet","pae","longMode","tripleFaultReset","apic","x2Apic","acpi","ioApic","biosApicMode","bootMenuMode","bootDevice1","bootDevice2","bootDevice3","bootDevice4","timeOffset","rtc","wifiDBFromQuality","quality","wifiQualityFromDB","_wifi_frequencies","wifiFrequencyFromChannel","wifiChannelFromFrequencs","ifaceListLinux","ifaceDetails","nmiDeviceLinux","ssid","getWifiNetworkListNmi","security","wpaFlags","rsnFlags","bssid","signalLevel","getWifiNetworkListIw","iwlistParts","dbParts","isWpa","isWpa2","wpaFlag","iwconfigParts","securityAll","securitySingle","ssidParts","ssidPart","ssidLines","bssidsParts","bssidPart","bssidLines","bssidLine","networkList","ifaceDetail","nmiDetails","wpaDetails","wpaConnectionLinux","nw","nmiConnection","autoconnect","nmiConnectionLinux","txRate","macParts","getVendor","copyProps","exclude","getOwnPropertyDescriptors","protoChain","currentChain","hardMixProtos","ingredients","objs","commonProto","protoChains","protos","potentialCommonProto","nearestCommonProto","mixedProto","visitedProtos","newProto","getIngredientWithProp","ingredient","protoDepth","protosAreLeftToSearch","searchTarget","proxyMix","ingredientWithProp","deleteProperty","ownKeys","getOwnPropertyNames","initFunction","staticsStrategy","prototypeStrategy","decoratorInheritance","mixins","getMixinsForClass","clazz","hasMixin","mixin","visited","frontier","newFrontier","itemConstituents","constituent","mergeObjectsOfDecorators","o1","o2","allKeys","mergedObject","mergePropertyAndMethodDecorators","d1","d2","mergeDecorators","_e","_f","decorators","getDecoratorsForClass","decoratorsForClass","decorate","decorator","classDecorators","decorateClass","otherArgs","decoratorTargetType","decoratorType","decoratorsForTargetType","decoratorsForType","decoratorsForKey","decorateMember","Mixin","constructors","prototypes","initFunctionName","initFunctions","extraProto","MixedClass","DecoratedMixedClass","classes","decoratorsForClassChain","allClasses","newClasses","newClass","findAllConstituentClasses","deepDecoratorSearch","directDecoratorSearch","applyPropAndMethodDecorators","mixedClass","constituents","propAndMethodDecorators","propDecorators","methodDecorators","decoratedClass","extendStatics","__extends","__","__assign","__rest","__param","paramIndex","__metadata","metadataKey","metadataValue","__awaiter","_arguments","P","step","done","__generator","sent","trys","ops","verb","__values","__read","ar","__spread","__spreadArrays","il","jl","__spreadArray","__await","__asyncGenerator","fulfill","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__setModuleDefault","mod","__esModule","__classPrivateFieldGet","receiver","kind","__classPrivateFieldSet","buf","Deprecation","disableWarnings","deprecationWarningMap","deprecationName","toBuffer","yaeti","CLOSING","CLOSED","W3CWebSocket","origin","requestOptions","clientConfig","EventTarget","assembleFragments","_url","_readyState","_protocol","_extensions","_bufferedAmount","_binaryType","_connection","_client","onConnect","onConnectFailed","createCloseEvent","Event","createMessageEvent","dispatchEvent","binaryData","binaryType","arraybuffer","view","removeAllListeners","bufferedAmount","sendUTF","sendBytes","crypto","WebSocketConnection","bufferAllocUnsafe","protocolSeparators","excludedTlsOptions","tlsOptions","maxReceivedFrameSize","maxReceivedMessageSize","fragmentOutgoingMessages","fragmentationThreshold","webSocketVersion","disableNagleAlgorithm","closeTimeout","_req","requestUrl","extraRequestOptions","charCode","base64nonce","hostHeaderValue","pathAndQuery","reqHeaders","handleRequestError","Host","firstDataChunk","validateHandshake","eventEmitterListenerCount","headerDumpParts","headerName","failHandshake","toLocaleLowerCase","sha1","createHash","expectedKey","digest","succeedHandshake","errorDescription","_addSocketEventListeners","handleSocketData","WebSocketFrame","BufferList","isValidUTF8","bufferFromString","STATE_OPEN","STATE_PEER_REQUESTED_CLOSE","STATE_ENDING","STATE_CLOSED","setImmediateImpl","idCounter","maskOutgoingPackets","_debug","BufferingLogger","originalSocketEmit","original","instrumentSocketForDebugging","_pingListenerCount","ev","remoteAddress","closeReasonCode","closeDescription","closeEventEmitted","maskBytes","frameHeader","bufferList","currentFrame","fragmentationSize","frameQueue","waitingForCloseResponse","receivedEnd","outputBufferFull","inputPaused","receivedDataHandler","processReceivedData","_closeTimerHandler","handleCloseTimer","setNoDelay","keepalive","useNativeKeepalive","_keepaliveTimerHandler","handleKeepaliveTimer","setKeepaliveTimer","dropConnectionOnKeepaliveTimeout","_gracePeriodTimerHandler","handleGracePeriodTimer","setKeepAlive","keepaliveInterval","validateCloseReason","CLOSE_REASON_NORMAL","CLOSE_REASON_GOING_AWAY","CLOSE_REASON_PROTOCOL_ERROR","CLOSE_REASON_UNPROCESSABLE_INPUT","CLOSE_REASON_RESERVED","CLOSE_REASON_NOT_PROVIDED","CLOSE_REASON_ABNORMAL","CLOSE_REASON_INVALID_DATA","CLOSE_REASON_POLICY_VIOLATION","CLOSE_REASON_MESSAGE_TOO_BIG","CLOSE_REASON_EXTENSION_REQUIRED","CLOSE_REASON_INTERNAL_SERVER_ERROR","CLOSE_REASON_TLS_HANDSHAKE_FAILED","CLOSE_DESCRIPTIONS","handleSocketError","handleSocketEnd","handleSocketClose","handleSocketDrain","handleSocketPause","handleSocketResume","clearKeepaliveTimer","clearGracePeriodTimer","_keepaliveTimeoutID","setGracePeriodTimer","_gracePeriodTimeoutID","keepaliveGracePeriod","drop","frame","addData","protocolError","dropReason","frameTooLarge","rsv1","rsv2","rsv3","processFrame","syscall","printOutput","hadError","socketHadError","clearCloseTimer","reasonCode","setCloseTimer","sendCloseFrame","skipCloseFrame","closeTimer","opcode","fin","binaryPayload","bytesCopied","copy","cancelled","pong","respondCloseReasonCode","invalidCloseFrameLength","closeStatus","fragmentAndSend","sendFrame","threshold","numFragments","sentFragments","sentCallback","currentLength","sliceStart","flushed","bufferUtil","parseState","joinInto","advance","firstByte","secondByte","readUInt16BE","lengthPair","readUInt32BE","take","throwAwayPayload","nullMask","maskKey","outputPos","headerLength","writeUInt16BE","writeUInt32BE","headerValueSplitRegExp","headerParamSplitRegExp","headerSanitizeRegExp","xForwardedForSeparatorRegExp","separators","controlChars","cookieNameValidateRegEx","cookieValueValidateRegEx","cookieValueDQuoteValidateRegEx","controlCharsAndSemicolonRegEx","cookieSeparatorRegEx","httpStatusDescriptions","WebSocketRequest","httpRequest","serverConfig","remoteAddresses","_socketIsClosing","_socketCloseHandler","_handleSocketCloseBeforeAccept","_resolved","cleanupFailedConnection","readHandshake","resourceURL","httpCode","protocolString","protocolFullCaseMap","requestedProtocols","lcProtocol","ignoreXForwardedFor","immediatePeerIP","parseExtensions","extensionsString","requestedExtensions","parseCookies","cookieString","extensionName","extensionParams","rawParam","pair","eq_idx","accept","acceptedProtocol","allowedOrigin","protocolFullCase","_verifyResolution","seenCookies","invalidChar","cookieParts","maxage","httponly","_removeSocketCloseListeners","extraHeaders","sanitizedValue","WebSocketRouterRequest","WebSocketRouter","server","_requestHandler","handleRequest","attachServer","detachServer","pathToRegExp","pathString","findHandlerIndex","unmount","requestedProtocol","routerRequest","webSocketRequest","resolvedProtocol","WebSocketServer","_handlers","upgrade","handleUpgrade","requestAccepted","handleRequestAccepted","requestResolved","handleRequestResolved","connections","pendingRequests","httpServer","autoAcceptConnections","upgradeHandler","closeAllConnections","broadcastBytes","broadcastUTF","utfData","shutDown","wsRequest","closeReason","handleConnectionClose","uniqueID","logFunction","emitter","listeners","allocUnsafe","logger","toLocaleString","formatString","chrome","logFn","toUTCString","DEBUG_FD","guessHandleType","WriteStream","_type","_handle","SyncWriteStream","autoClose","Socket","_isStdio","createWritableStdioStream","big","ix","targetBuffer","targetStart","sourceStart","sourceEnd","createWebSocketStream","Server","Receiver","Sender","EMPTY_BUFFER","totalLength","_mask","_unmask","toArrayBuffer","readOnly","bu","BufferUtil","BINARY_TYPES","GUID","kStatusCode","kWebSocket","NOOP","MessageEvent","CloseEvent","_closeFrameReceived","_closeFrameSent","OpenEvent","ErrorEvent","_listener","removeEventListener","tokenChars","configurations","offers","paramName","mustUnescape","isEscaping","inQuotes","kDone","kRun","concurrency","job","Limiter","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","deflateOnData","inflateOnData","_maxPayload","inflateOnError","_inflate","isServer","maxPayload","_threshold","_isServer","_deflate","concurrencyLimit","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","normalizeParams","acceptAsServer","acceptAsClient","accepted","_decompress","_compress","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","_readableState","endEmitted","createDeflateRaw","zlibDeflateOptions","PerMessageDeflate","isValidStatusCode","ErrorCtor","errorCode","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","_write","startLoop","consume","getPayloadLength16","getPayloadLength64","getMask","getData","compressed","haveLength","controlMessage","dataMessage","messageLength","fragments","randomFillSync","applyMask","_socket","_firstFragment","_deflating","_queue","payloadLength","enqueue","doClose","doPing","doPong","perMessageDeflate","dispatch","dequeue","cork","uncork","Duplex","emitClose","duplexOnEnd","_writableState","duplexOnError","resumeOnReceiverDrain","terminateOnDestroy","receiverOnDrain","_receiver","autoDestroy","objectMode","writableObjectMode","_destroy","called","_final","_read","needDrain","_isValidUTF8","Validation","keyRegex","socketOnError","abortHandshake","STATUS_CODES","Connection","handleProtocols","clientTracking","verifyClient","noServer","backlog","_server","createServer","writeHead","listen","emitConnection","_removeListeners","addListeners","listening","clients","shouldHandle","authorized","encrypted","completeUpgrade","setSocket","tls","randomBytes","readyStates","protocolVersions","_closeCode","_closeMessage","_closeTimer","_sender","initAsClient","receiverOnConclude","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","socketOnClose","socketOnData","socketOnEnd","errorEmitted","sendAfterClose","websocket","protocolVersion","parsedUrl","isUnixSocket","isSecure","defaultPort","tlsConnect","netConnect","Upgrade","handshakeTimeout","Origin","addr","serverProt","protList","protError","secWebSocketExtensions","extensionNames","servername","isIP","receiverOnFinish","isTrusted","_yaeti","_EventTarget","_listeners","_addEventListener","_removeEventListener","_dispatchEvent","newListener","listenersType","oldListener","dummyListener","stopImmediatePropagation","cancelable","defaultPrevented","pageMeta","relation","misc","wait_related","imgPath","waitEmbed","please_wait","hasMessageEmbed","generateWarnEmbed","currentPageString","currentPage","addFile","newpage","maxpage","selectRow","selectList","printlist_more_details","maxEntries","databasepath","ramDatabase","updateNotifyData","saveDatabase","getNotifyData","databasedata","writeFile","notifylist","getNotifyList","adminusers","adminroles","getDatabase","getRamDatabase","updateRamDatabase","print_time","formatTime","estimated_time","slicer","slicer_version","object_height","thumbnails","relative_path","parsedThumbnail","buildThumbnail","file_info","si","getTitle","getFields","usageData","getUsageData","cpuFreq","max_frequency","disks","diskindex","translatedTemplate","translatedJSONTemplate","ram","partitions","partitionindex","swap_total","swap_used","componentHandler","throttleCoolDown","getImage","imgBuffer","postThrottle","sentence","loadthrottle","suggestion","throttlewarn","throttleEmbed","postBroadcastMessage","mculist","img","componentData","fieldindex","throttled","system_notifications","system_warns","isRAMFull","anyFull","aviable","isPartitionsFull","command_syntax","admin_only","controller_only","guild_only","not_ready","migrate","modified","ffmpeg_arguments","ffmpeg_codec","saveData","statusconfig","use_percent","currentTime","cooldown","altdiscordClient","guild_admin_as_bot_admin","webcam","statusWaitList","removeOldStatus","printing","broadcastSection","broadcastMessage","guildDatabase","notifyList","parseConfig","localeConfig","parsedConfig","print_layers","eta_print_time","print_progress","getTimes","duration","left","getProgress","getCurrentLayer","getMaxLayers","generateStatusEmbed","snapshot","retrieveWebcam","thumbnailpic","retrieveThumbnail","currentVersions","getVersions","componentdata","remote_version","newStatus","currentStatusMeta","meta_data","newStatusMeta","allow_same","prevent","order_id","printstatus","isSame","onCooldown","getBase64","getThumbnailPath","webcamUtil","framecount","lastLayer","lastPercent","makeFrame","writeFileSync","getTimelapse","mrClient","frame_every_layer","frame_every_percent","isRunning","render","fileNames","checkForFrames","for_gcode","lastHeight","readdir","setCurrentLayer","setLayerHeights","layerHeight","objectHeight","firstLayerHeight","layer_height","first_layer_height","addToMCUList","mcu_list","updateMCUStatus","clearMCUList","invite_url","setUpdateTimer","newUpdateTimer","update_timer","setVersions","moonraker_versions","setCurrentPrintJob","currentFile","print_job","current_file","setStartByte","startByte","start_byte","setEndByte","endByte","end_byte","setThumbnailPath","setProgress","progress","setJobID","job_id","updateTimeData","updateLastPrintJob","last_file","setTemperature","temperatures","current_layer","getLayerHeight","getObjectHeight","getFirstLayerHeight","getConfigPath","getUpdateTimer","getStartByte","getEndByte","getJobID","endTime","file_total_duration","slicer_total_duration","multiplier","seconds","isNeg","sharp","executePostProcess","sleep","triggerWebsite","brightness","contrast","greyscale","horizontal_mirror","rotation","sepia","vertical_mirror","beforeStatus","afterStatus","rotate","flip","flop","modulate","linear","recomb","png","editBuffer","methode","broadcastembed","gcode_start_byte","gcode_end_byte","printfile","gcodeMetaData","gcodeCommands","gcodeResponse","klipperState","klipperStates","moonrakerThrottle","moonrakerUpdate","subscribeRespond","subscribeNotification","klippy_state","states","required_params","param","changeStatusLater","timed_status","post_at_print_end","posted","notThrottledCounter","validFlags","throttle","reasons","throttled_state","moonraker_throttle","retrieveThrottle","version_info","updateData","notifyEmbed","software","packages","package_count","update_system","postUpdate","display_status","update_interval","postProgress","gcodeMoveData","gcode_move","speed_factor","gcode_position","retrieveCurrentLayer","displayStatus","gcodeMove","printStats","oldMcuData","updateMCU","loopMCUs","print_stats","retrieveFilename","print_duration","retrieveDuration","tempSensor","oldTempData","updateTempSensor","loopTempSensors","require","BUFFER","TYPE","Blob","blobParts","relativeStart","relativeEnd","span","slicedBuffer","blob","FetchError","systemError","errno","INTERNALS","PassThrough","Body","_this","_ref","_ref$size","_ref$timeout","disturbed","consumeBody","_this4","accum","accumBytes","resTimeout","getAll","p1","p2","bodyUsed","extractContentType","getTotalBytes","_lengthRetrievers","ct","_this2","textConverted","_this3","convertBody","mixIn","invalidTokenRegex","invalidHeaderCharRegex","validateValue","MAP","Headers","rawHeaders","headerNames","_pairs$i","createHeadersIterator","INTERNAL","HeadersIteratorPrototype","_INTERNAL","exportNodeCompatibleHeaders","hostHeaderKey","INTERNALS$1","Response","redirected","INTERNALS$2","parse_url","format_url","streamDestructionSupported","isRequest","Request","parsedURL","inputBody","isAbortSignal","redirect","follow","AbortError","PassThrough$1","resolve_url","contentLengthValue","totalBytes","getNodeRequestOptions","abortAndFinalize","finalize","reqTimeout","createHeadersLenient","isRedirect","locationURL","requestOpts","response_options","codings","zlibOptions","finishFlush","writeToStream","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","definition","nmd","paths","systemInfo","migrationUtil","miscUtil","commandload","moonraker_socket_url","bot_token","bot_application_id","bot_application_key"],"sourceRoot":""}