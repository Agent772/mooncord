{"version":3,"file":"mooncord.js","mappings":";;;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,sDAAU;AACnC,cAAc;AACd,eAAe,yCAAyC;AACxD,cAAc,yCAAyC;AACvD,cAAc,yCAAyC;AACvD,cAAc,yCAAyC;AACvD,eAAe,yCAAyC;AACxD,cAAc,yCAAyC;AACvD,iBAAiB,yCAAyC;AAC1D,aAAa,yCAAyC;AACtD,eAAe,yCAAyC;AACxD,gBAAgB,yCAAyC;AACzD,aAAa,yCAAyC;AACtD,YAAY,yCAAyC;AACrD,YAAY,wCAAwC;AACpD,YAAY,yCAAyC;AACrD,WAAW,wCAAwC;AACnD,YAAY,yCAAyC;AACrD,aAAa,yCAAyC;AACtD,YAAY,yCAAyC;AACrD,cAAc,wCAAwC;AACtD,eAAe,wCAAwC;AACvD,cAAc,wCAAwC;AACtD,eAAe,yCAAyC;AACxD,WAAW,yCAAyC;AACpD,aAAa,uCAAuC;AACpD,qBAAqB,wCAAwC;AAC7D,iBAAiB,wCAAwC;AACzD,aAAa,yCAAyC;AACtD,cAAc,yCAAyC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kBAAe;AACf;AACA;AACA;AACA,YAAY;AACZ;;;;;;;;;;;AClNa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,mBAAO,CAAC,sDAAU;AACnC;AACA,iEAAiE,+BAA+B;AAChG;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;AChDY;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,mBAAO,CAAC,wBAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;;;;;;;ACpC0C;AACF;AACtD,iBAAiB,gEAAa;AAC9B;AACA;AACA,0BAA0B,8DAAY;AACtC;AACA;AACA;AACA,CAAC;AAC0B;;;;;;;;;;;;;;;;;ACVO;AAClC;AACA;AACA;AACA;AACA,yBAAyB,gDAAY,oBAAoB,kBAAkB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;;;;;;;;;;;;;;;;AC5EI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACwB;;;;;;;;;;;ACxBzB;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNiD;AACM;AACK;AAC5D,iBAAiB,gEAAa;AAC9B,gCAAgC,+CAAkB,SAAS,kDAAqB;AAChF;AACA,0BAA0B,qEAAe","sources":["webpack://mooncord/./node_modules/colorts/lib/colors.js","webpack://mooncord/./node_modules/colorts/lib/string.js","webpack://mooncord/./node_modules/colorts/lib/system.js","webpack://mooncord/./src/clients/MoonrakerClient.ts","webpack://mooncord/./src/helper/ConfigHelper.ts","webpack://mooncord/./src/helper/ConsoleLogger.ts","webpack://mooncord/external node-commonjs \"fs\"","webpack://mooncord/external node-commonjs \"process\"","webpack://mooncord/webpack/bootstrap","webpack://mooncord/webpack/runtime/compat get default export","webpack://mooncord/webpack/runtime/define property getters","webpack://mooncord/webpack/runtime/hasOwnProperty shorthand","webpack://mooncord/webpack/runtime/make namespace object","webpack://mooncord/./src/Application.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n\n The MIT License (MIT)\n\n Original Library\n - Copyright (c) Marak Squires\n - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\n Additional Functionality\n - Copyright (c) Shadrack Ndacayisenga <shaselloiel@gmail.com> (shaselekings.com)\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\nconst system_1 = require(\"./system\");\nexports.styles = {\n    bgBlack: { open: \"\\u001b[40m\", close: \"\\u001b[49m\" },\n    bgBlue: { open: \"\\u001b[44m\", close: \"\\u001b[49m\" },\n    bgCyan: { open: \"\\u001b[46m\", close: \"\\u001b[49m\" },\n    bgGray: { open: \"\\u001b[90m\", close: \"\\u001b[49m\" },\n    bgGreen: { open: \"\\u001b[42m\", close: \"\\u001b[49m\" },\n    bgGrey: { open: \"\\u001b[90m\", close: \"\\u001b[49m\" },\n    bgMagenta: { open: \"\\u001b[45m\", close: \"\\u001b[49m\" },\n    bgRed: { open: \"\\u001b[41m\", close: \"\\u001b[49m\" },\n    bgWhite: { open: \"\\u001b[47m\", close: \"\\u001b[49m\" },\n    bgYellow: { open: \"\\u001b[43m\", close: \"\\u001b[49m\" },\n    black: { open: \"\\u001b[30m\", close: \"\\u001b[39m\" },\n    blue: { open: \"\\u001b[34m\", close: \"\\u001b[39m\" },\n    bold: { open: \"\\u001b[1m\", close: \"\\u001b[22m\" },\n    cyan: { open: \"\\u001b[36m\", close: \"\\u001b[39m\" },\n    dim: { open: \"\\u001b[2m\", close: \"\\u001b[22m\" },\n    gray: { open: \"\\u001b[90m\", close: \"\\u001b[39m\" },\n    green: { open: \"\\u001b[32m\", close: \"\\u001b[39m\" },\n    grey: { open: \"\\u001b[90m\", close: \"\\u001b[39m\" },\n    hidden: { open: \"\\u001b[8m\", close: \"\\u001b[28m\" },\n    inverse: { open: \"\\u001b[7m\", close: \"\\u001b[27m\" },\n    italic: { open: \"\\u001b[3m\", close: \"\\u001b[23m\" },\n    magenta: { open: \"\\u001b[35m\", close: \"\\u001b[39m\" },\n    red: { open: \"\\u001b[31m\", close: \"\\u001b[39m\" },\n    reset: { open: \"\\u001b[0m\", close: \"\\u001b[0m\" },\n    strikethrough: { open: \"\\u001b[9m\", close: \"\\u001b[29m\" },\n    underline: { open: \"\\u001b[4m\", close: \"\\u001b[24m\" },\n    white: { open: \"\\u001b[37m\", close: \"\\u001b[39m\" },\n    yellow: { open: \"\\u001b[33m\", close: \"\\u001b[39m\" },\n};\nclass Colors {\n    constructor(str = \"\") {\n        this.str = str;\n        this.styles = exports.styles;\n        this.init();\n    }\n    get bgBlack() {\n        this.stylize(\"bgBlack\");\n        return this;\n    }\n    get bgBlue() {\n        this.stylize(\"bgBlue\");\n        return this;\n    }\n    get bgCyan() {\n        this.stylize(\"bgCyan\");\n        return this;\n    }\n    get bgGray() {\n        this.stylize(\"bgGray\");\n        return this;\n    }\n    get bgGreen() {\n        this.stylize(\"bgGreen\");\n        return this;\n    }\n    get bgGrey() {\n        this.stylize(\"bgGrey\");\n        return this;\n    }\n    get bgMagenta() {\n        this.stylize(\"bgMagenta\");\n        return this;\n    }\n    get bgRed() {\n        this.stylize(\"bgRed\");\n        return this;\n    }\n    get bgWhite() {\n        this.stylize(\"bgWhite\");\n        return this;\n    }\n    get bgYellow() {\n        this.stylize(\"bgYellow\");\n        return this;\n    }\n    get black() {\n        this.stylize(\"black\");\n        return this;\n    }\n    get blue() {\n        this.stylize(\"blue\");\n        return this;\n    }\n    get bold() {\n        this.stylize(\"bold\");\n        return this;\n    }\n    get cyan() {\n        this.stylize(\"cyan\");\n        return this;\n    }\n    get dim() {\n        this.stylize(\"dim\");\n        return this;\n    }\n    get gray() {\n        this.stylize(\"gray\");\n        return this;\n    }\n    get green() {\n        this.stylize(\"green\");\n        return this;\n    }\n    get grey() {\n        this.stylize(\"grey\");\n        return this;\n    }\n    get inverse() {\n        this.stylize(\"inverse\");\n        return this;\n    }\n    get italic() {\n        this.stylize(\"italic\");\n        return this;\n    }\n    get magenta() {\n        this.stylize(\"magenta\");\n        return this;\n    }\n    get red() {\n        this.stylize(\"red\");\n        return this;\n    }\n    get strikethrough() {\n        this.stylize(\"strikethrough\");\n        return this;\n    }\n    get underline() {\n        this.stylize(\"underline\");\n        return this;\n    }\n    get yellow() {\n        this.stylize(\"yellow\");\n        return this;\n    }\n    get strip() {\n        this.str = (`${this.str}`).replace(/\\x1B\\[\\d+m/g, \"\");\n        return this;\n    }\n    get white() {\n        this.stylize(\"white\");\n        return this;\n    }\n    stylize(style) {\n        const code = this.styles[style];\n        if (this.enabled) {\n            this.str = code.open + this.str.replace(code.closeRe, code.open) + code.close;\n        }\n        return this.str;\n    }\n    toString() {\n        return this.str;\n    }\n    init() {\n        this.enabled = system_1.System.colorSupported();\n        this.styleKeys = Object.keys(this.styles);\n        this.styleKeys.forEach((key) => {\n            this.styles[key].closeRe = new RegExp(this.escapeStringRegexp(this.styles[key].close), \"g\");\n        });\n    }\n    // noinspection JSMethodCanBeStatic\n    escapeStringRegexp(str) {\n        if (typeof str !== \"string\") {\n            throw new TypeError(\"Expected a string.\");\n        }\n        return str.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\n    }\n}\nexports.Colors = Colors;\nfunction color(str) {\n    return (new Colors(str));\n}\nexports.default = color;\nfunction echo(colorSting) {\n    console.log(colorSting.toString());\n}\nexports.echo = echo;\n// print(colors(\"Shadrack\").bgGreen.white.bold.strikethrough);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst colors_1 = require(\"./colors\");\nfunction stringify(colorStyle, func) {\n    return Object.defineProperty(String.prototype, colorStyle, { get: func, configurable: true });\n}\nstringify(\"strip\", function () {\n    return (colors_1.default(this)).strip.toString();\n});\nstringify(\"capitalize\", function () {\n    return this[0].toUpperCase() + this.slice(1);\n});\nstringify(\"titleCase\", function () {\n    return this.split(\" \").map((value) => {\n        return value[0].toUpperCase() + value.slice(1).toLowerCase();\n    }).join(\" \");\n});\nstringify(\"upperCamelCase\", function () {\n    return this.titleCase.split(\" \").join(\"\");\n});\nstringify(\"lowerCamelCase\", function () {\n    const s = this.upperCamelCase;\n    return s[0].toLowerCase() + s.slice(1);\n});\nstringify(\"camelCase\", function () {\n    return this.lowerCamelCase;\n});\nstringify(\"snakeCase\", function () {\n    return this.toLowerCase().split(\" \").join(\"_\");\n});\nstringify(\"kebabCase\", function () {\n    return this.toLowerCase().split(\" \").join(\"-\");\n});\nstringify(\"studlyCaps\", function () {\n    const s = this.camelCase.replace(\" \", \"\");\n    return s.split(\"\").map((letter, index) => {\n        if (index % 2 !== 0) {\n            return letter.toLowerCase();\n        }\n        else {\n            return letter.toUpperCase();\n        }\n    }).join(\"\");\n});\nObject.keys(colors_1.styles).forEach((styleName) => {\n    stringify(styleName, function () {\n        return colors_1.default(this)[styleName].toString();\n    });\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst process_1 = require(\"process\");\nclass System {\n    static colorSupported() {\n        let supported = false;\n        if ((process_1.argv.indexOf(\"--no-color\") !== -1) ||\n            (process_1.argv.indexOf(\"--color=false\") !== -1) || process.env.TERM === \"dumb\") {\n            supported = false;\n        }\n        else if (System.colorEnabled() || System.colorAllowed()) {\n            supported = true;\n        }\n        else {\n            supported = /^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM);\n        }\n        return supported;\n    }\n    static isWin32() {\n        return process.platform === \"win32\";\n    }\n    static hasColorOutput() {\n        return (process.stdout && !process.stdout.isTTY);\n    }\n    static colorTermEnv() {\n        return (\"COLORTERM\" in process.env);\n    }\n    static colorAllowed() {\n        return process_1.argv.indexOf(\"--color\") !== -1 ||\n            process_1.argv.indexOf(\"--color=true\") !== -1 ||\n            process_1.argv.indexOf(\"--color=always\") !== -1;\n    }\n    static colorEnabled() {\n        return System.hasColorOutput() || System.isWin32() || System.colorTermEnv();\n    }\n}\nexports.System = System;\n","import { ConsoleLogger } from \"../helper/ConsoleLogger\";\r\nimport { ConfigHelper } from \"../helper/ConfigHelper\";\r\nvar logger = new ConsoleLogger();\r\nvar MoonrakerClient = /** @class */ (function () {\r\n    function MoonrakerClient() {\r\n        this.config = new ConfigHelper();\r\n        logger.logSuccess('connect to MoonRaker...');\r\n    }\r\n    return MoonrakerClient;\r\n}());\r\nexport { MoonrakerClient };\r\n","import { readFileSync } from 'fs';\r\nvar args = process.argv.slice(2);\r\nvar ConfigHelper = /** @class */ (function () {\r\n    function ConfigHelper() {\r\n        this.configPath = args[0] + \"/mooncord.json\";\r\n        this.configRaw = readFileSync(this.configPath, { encoding: 'utf8' });\r\n        this.config = JSON.parse(this.configRaw);\r\n    }\r\n    ConfigHelper.prototype.getMoonrakerSocketUrl = function () {\r\n        return this.config.connection.moonraker_socket_url;\r\n    };\r\n    ConfigHelper.prototype.getMoonrakerUrl = function () {\r\n        return this.config.connection.moonraker_url;\r\n    };\r\n    ConfigHelper.prototype.getMoonrakerApiKey = function () {\r\n        return this.config.connection.moonraker_token;\r\n    };\r\n    ConfigHelper.prototype.getDiscordToken = function () {\r\n        return this.config.connection.bot_token;\r\n    };\r\n    ConfigHelper.prototype.getStatusInterval = function () {\r\n        return this.config.status.update_interval;\r\n    };\r\n    ConfigHelper.prototype.getStatusMinInterval = function () {\r\n        return this.config.status.min_interval;\r\n    };\r\n    ConfigHelper.prototype.isStatusPerPercent = function () {\r\n        return this.config.status.use_percent;\r\n    };\r\n    ConfigHelper.prototype.getStatusBeforeTasks = function () {\r\n        return this.config.status.before;\r\n    };\r\n    ConfigHelper.prototype.getStatusAfterTasks = function () {\r\n        return this.config.status.before;\r\n    };\r\n    ConfigHelper.prototype.getLanguage = function () {\r\n        return this.config.language.messages;\r\n    };\r\n    ConfigHelper.prototype.getSyntaxLanguage = function () {\r\n        return this.config.language.command_syntax;\r\n    };\r\n    ConfigHelper.prototype.getController = function () {\r\n        return this.config.permission.controller;\r\n    };\r\n    ConfigHelper.prototype.isGuildAdminAsBotAdmin = function () {\r\n        return this.config.permission.guild_admin_as_bot_admin;\r\n    };\r\n    ConfigHelper.prototype.getWebcamUrl = function () {\r\n        return this.config.webcam.url;\r\n    };\r\n    ConfigHelper.prototype.getWebcamQuality = function () {\r\n        return this.config.webcam.quality;\r\n    };\r\n    ConfigHelper.prototype.getWebcamBrightness = function () {\r\n        return this.config.webcam.brightness;\r\n    };\r\n    ConfigHelper.prototype.getWebcamContrast = function () {\r\n        return this.config.webcam.contrast;\r\n    };\r\n    ConfigHelper.prototype.isWebcamVerticalMirrored = function () {\r\n        return this.config.webcam.vertical_mirror;\r\n    };\r\n    ConfigHelper.prototype.isWebcamHorizontalMirrored = function () {\r\n        return this.config.webcam.horizontal_mirror;\r\n    };\r\n    ConfigHelper.prototype.isWebcamGreyscale = function () {\r\n        return this.config.webcam.greyscale;\r\n    };\r\n    ConfigHelper.prototype.isWebcamSepia = function () {\r\n        return this.config.webcam.sepia;\r\n    };\r\n    ConfigHelper.prototype.notifyOnMoonrakerThrottle = function () {\r\n        return this.config.system_notifications.moonraker_throttle;\r\n    };\r\n    return ConfigHelper;\r\n}());\r\nexport { ConfigHelper };\r\n","import 'colorts/lib/string';\r\nvar ConsoleLogger = /** @class */ (function () {\r\n    function ConsoleLogger() {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\r\n        this.logError = function (message) {\r\n            console.log(_this.getTimeStamp(), message.red);\r\n        };\r\n        // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\r\n        this.logSuccess = function (message) {\r\n            console.log(_this.getTimeStamp(), message.green);\r\n        };\r\n        // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\r\n        this.logRegular = function (message) {\r\n            console.log(_this.getTimeStamp(), message.white);\r\n        };\r\n        this.logEmpty = function () { console.log(''); };\r\n    }\r\n    ConsoleLogger.prototype.getTimeStamp = function () {\r\n        var date = new Date();\r\n        return (\"[\" + date.toISOString() + \"]\").grey;\r\n    };\r\n    return ConsoleLogger;\r\n}());\r\nexport { ConsoleLogger };\r\n","module.exports = require(\"fs\");","module.exports = require(\"process\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as packageConfig from '../package.json';\r\nimport { ConsoleLogger } from \"./helper/ConsoleLogger\";\r\nimport { MoonrakerClient } from \"./clients/MoonrakerClient\";\r\nvar logger = new ConsoleLogger();\r\nlogger.logSuccess(\"starting \" + packageConfig.name + \" \" + packageConfig.version + \"...\");\r\nlogger.logEmpty();\r\nvar moonrakerClient = new MoonrakerClient();\r\n"],"names":[],"sourceRoot":""}